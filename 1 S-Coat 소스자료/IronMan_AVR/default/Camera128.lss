
Camera128.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ae  00800100  000059b2  00005a46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000059b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  008001ae  008001ae  00005af4  2**0
                  ALLOC
  3 .debug_aranges 00000160  00000000  00000000  00005af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000027d  00000000  00000000  00005c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003141  00000000  00000000  00005ed1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000010e9  00000000  00000000  00009012  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002959  00000000  00000000  0000a0fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002a0  00000000  00000000  0000ca54  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d7  00000000  00000000  0000ccf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  0000d0cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000d899  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 c5 21 	jmp	0x438a	; 0x438a <__vector_18>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 17 22 	jmp	0x442e	; 0x442e <__vector_30>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 eb       	ldi	r30, 0xB2	; 178
      a0:	f9 e5       	ldi	r31, 0x59	; 89
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 3a       	cpi	r26, 0xAE	; 174
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	11 e0       	ldi	r17, 0x01	; 1
      b4:	ae ea       	ldi	r26, 0xAE	; 174
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ae 3c       	cpi	r26, 0xCE	; 206
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 b8 21 	call	0x4370	; 0x4370 <main>
      c6:	0c 94 d7 2c 	jmp	0x59ae	; 0x59ae <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <port_init>:
unsigned buff[9];
int cnt;
int callflag;
 
void port_init(void)
{}
      ce:	df 93       	push	r29
      d0:	cf 93       	push	r28
      d2:	cd b7       	in	r28, 0x3d	; 61
      d4:	de b7       	in	r29, 0x3e	; 62
      d6:	cf 91       	pop	r28
      d8:	df 91       	pop	r29
      da:	08 95       	ret

000000dc <Putchar>:
 
static int Putchar(char c, FILE *stream)//FILE 사용안함, 송신, avr->컴퓨터
{
      dc:	df 93       	push	r29
      de:	cf 93       	push	r28
      e0:	00 d0       	rcall	.+0      	; 0xe2 <Putchar+0x6>
      e2:	0f 92       	push	r0
      e4:	cd b7       	in	r28, 0x3d	; 61
      e6:	de b7       	in	r29, 0x3e	; 62
      e8:	89 83       	std	Y+1, r24	; 0x01
      ea:	7b 83       	std	Y+3, r23	; 0x03
      ec:	6a 83       	std	Y+2, r22	; 0x02
 if(c == '\n')
      ee:	89 81       	ldd	r24, Y+1	; 0x01
      f0:	8a 30       	cpi	r24, 0x0A	; 10
      f2:	29 f4       	brne	.+10     	; 0xfe <Putchar+0x22>
  Putchar('\r', 0); 
      f4:	8d e0       	ldi	r24, 0x0D	; 13
      f6:	60 e0       	ldi	r22, 0x00	; 0
      f8:	70 e0       	ldi	r23, 0x00	; 0
      fa:	0e 94 6e 00 	call	0xdc	; 0xdc <Putchar>

 while(!(UCSR1A & 0x20)); // UDRE, data register empty        
      fe:	eb e9       	ldi	r30, 0x9B	; 155
     100:	f0 e0       	ldi	r31, 0x00	; 0
     102:	80 81       	ld	r24, Z
     104:	88 2f       	mov	r24, r24
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	80 72       	andi	r24, 0x20	; 32
     10a:	90 70       	andi	r25, 0x00	; 0
     10c:	00 97       	sbiw	r24, 0x00	; 0
     10e:	b9 f3       	breq	.-18     	; 0xfe <Putchar+0x22>
   UDR1 = c;
     110:	ec e9       	ldi	r30, 0x9C	; 156
     112:	f0 e0       	ldi	r31, 0x00	; 0
     114:	89 81       	ldd	r24, Y+1	; 0x01
     116:	80 83       	st	Z, r24
 return 0;
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	90 e0       	ldi	r25, 0x00	; 0
      
}
     11c:	0f 90       	pop	r0
     11e:	0f 90       	pop	r0
     120:	0f 90       	pop	r0
     122:	cf 91       	pop	r28
     124:	df 91       	pop	r29
     126:	08 95       	ret

00000128 <Getchar>:
 
static int Getchar(FILE *stream)//수신, 컴퓨터->avr
{
     128:	df 93       	push	r29
     12a:	cf 93       	push	r28
     12c:	00 d0       	rcall	.+0      	; 0x12e <Getchar+0x6>
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
     132:	9a 83       	std	Y+2, r25	; 0x02
     134:	89 83       	std	Y+1, r24	; 0x01
 while(!(UCSR1A & 0x80));
     136:	eb e9       	ldi	r30, 0x9B	; 155
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	80 81       	ld	r24, Z
     13c:	88 23       	and	r24, r24
     13e:	dc f7       	brge	.-10     	; 0x136 <Getchar+0xe>
 return UDR1;
     140:	ec e9       	ldi	r30, 0x9C	; 156
     142:	f0 e0       	ldi	r31, 0x00	; 0
     144:	80 81       	ld	r24, Z
     146:	88 2f       	mov	r24, r24
     148:	90 e0       	ldi	r25, 0x00	; 0
}
     14a:	0f 90       	pop	r0
     14c:	0f 90       	pop	r0
     14e:	cf 91       	pop	r28
     150:	df 91       	pop	r29
     152:	08 95       	ret

00000154 <reset>:

void reset(){
     154:	df 93       	push	r29
     156:	cf 93       	push	r28
     158:	cd b7       	in	r28, 0x3d	; 61
     15a:	de b7       	in	r29, 0x3e	; 62
     15c:	aa 97       	sbiw	r28, 0x2a	; 42
     15e:	0f b6       	in	r0, 0x3f	; 63
     160:	f8 94       	cli
     162:	de bf       	out	0x3e, r29	; 62
     164:	0f be       	out	0x3f, r0	; 63
     166:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nRESET  ");
     168:	00 d0       	rcall	.+0      	; 0x16a <reset+0x16>
     16a:	ed b7       	in	r30, 0x3d	; 61
     16c:	fe b7       	in	r31, 0x3e	; 62
     16e:	31 96       	adiw	r30, 0x01	; 1
     170:	80 e0       	ldi	r24, 0x00	; 0
     172:	91 e0       	ldi	r25, 0x01	; 1
     174:	91 83       	std	Z+1, r25	; 0x01
     176:	80 83       	st	Z, r24
     178:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
     17c:	0f 90       	pop	r0
     17e:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
     180:	ec e2       	ldi	r30, 0x2C	; 44
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	86 e5       	ldi	r24, 0x56	; 86
     186:	80 83       	st	Z, r24
     188:	80 e0       	ldi	r24, 0x00	; 0
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	a0 e8       	ldi	r26, 0x80	; 128
     18e:	bf e3       	ldi	r27, 0x3F	; 63
     190:	8f a3       	std	Y+39, r24	; 0x27
     192:	98 a7       	std	Y+40, r25	; 0x28
     194:	a9 a7       	std	Y+41, r26	; 0x29
     196:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     198:	6f a1       	ldd	r22, Y+39	; 0x27
     19a:	78 a5       	ldd	r23, Y+40	; 0x28
     19c:	89 a5       	ldd	r24, Y+41	; 0x29
     19e:	9a a5       	ldd	r25, Y+42	; 0x2a
     1a0:	20 e0       	ldi	r18, 0x00	; 0
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	4a e7       	ldi	r20, 0x7A	; 122
     1a6:	55 e4       	ldi	r21, 0x45	; 69
     1a8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     1ac:	dc 01       	movw	r26, r24
     1ae:	cb 01       	movw	r24, r22
     1b0:	8b a3       	std	Y+35, r24	; 0x23
     1b2:	9c a3       	std	Y+36, r25	; 0x24
     1b4:	ad a3       	std	Y+37, r26	; 0x25
     1b6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     1b8:	6b a1       	ldd	r22, Y+35	; 0x23
     1ba:	7c a1       	ldd	r23, Y+36	; 0x24
     1bc:	8d a1       	ldd	r24, Y+37	; 0x25
     1be:	9e a1       	ldd	r25, Y+38	; 0x26
     1c0:	20 e0       	ldi	r18, 0x00	; 0
     1c2:	30 e0       	ldi	r19, 0x00	; 0
     1c4:	40 e8       	ldi	r20, 0x80	; 128
     1c6:	5f e3       	ldi	r21, 0x3F	; 63
     1c8:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     1cc:	88 23       	and	r24, r24
     1ce:	2c f4       	brge	.+10     	; 0x1da <reset+0x86>
		__ticks = 1;
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	9a a3       	std	Y+34, r25	; 0x22
     1d6:	89 a3       	std	Y+33, r24	; 0x21
     1d8:	3f c0       	rjmp	.+126    	; 0x258 <reset+0x104>
	else if (__tmp > 65535)
     1da:	6b a1       	ldd	r22, Y+35	; 0x23
     1dc:	7c a1       	ldd	r23, Y+36	; 0x24
     1de:	8d a1       	ldd	r24, Y+37	; 0x25
     1e0:	9e a1       	ldd	r25, Y+38	; 0x26
     1e2:	20 e0       	ldi	r18, 0x00	; 0
     1e4:	3f ef       	ldi	r19, 0xFF	; 255
     1e6:	4f e7       	ldi	r20, 0x7F	; 127
     1e8:	57 e4       	ldi	r21, 0x47	; 71
     1ea:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     1ee:	18 16       	cp	r1, r24
     1f0:	4c f5       	brge	.+82     	; 0x244 <reset+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1f2:	6f a1       	ldd	r22, Y+39	; 0x27
     1f4:	78 a5       	ldd	r23, Y+40	; 0x28
     1f6:	89 a5       	ldd	r24, Y+41	; 0x29
     1f8:	9a a5       	ldd	r25, Y+42	; 0x2a
     1fa:	20 e0       	ldi	r18, 0x00	; 0
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	40 e2       	ldi	r20, 0x20	; 32
     200:	51 e4       	ldi	r21, 0x41	; 65
     202:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     206:	dc 01       	movw	r26, r24
     208:	cb 01       	movw	r24, r22
     20a:	bc 01       	movw	r22, r24
     20c:	cd 01       	movw	r24, r26
     20e:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     212:	dc 01       	movw	r26, r24
     214:	cb 01       	movw	r24, r22
     216:	9a a3       	std	Y+34, r25	; 0x22
     218:	89 a3       	std	Y+33, r24	; 0x21
     21a:	0f c0       	rjmp	.+30     	; 0x23a <reset+0xe6>
     21c:	80 e9       	ldi	r24, 0x90	; 144
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	98 a3       	std	Y+32, r25	; 0x20
     222:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     224:	8f 8d       	ldd	r24, Y+31	; 0x1f
     226:	98 a1       	ldd	r25, Y+32	; 0x20
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <reset+0xd4>
     22c:	98 a3       	std	Y+32, r25	; 0x20
     22e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     230:	89 a1       	ldd	r24, Y+33	; 0x21
     232:	9a a1       	ldd	r25, Y+34	; 0x22
     234:	01 97       	sbiw	r24, 0x01	; 1
     236:	9a a3       	std	Y+34, r25	; 0x22
     238:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     23a:	89 a1       	ldd	r24, Y+33	; 0x21
     23c:	9a a1       	ldd	r25, Y+34	; 0x22
     23e:	00 97       	sbiw	r24, 0x00	; 0
     240:	69 f7       	brne	.-38     	; 0x21c <reset+0xc8>
     242:	14 c0       	rjmp	.+40     	; 0x26c <reset+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     244:	6b a1       	ldd	r22, Y+35	; 0x23
     246:	7c a1       	ldd	r23, Y+36	; 0x24
     248:	8d a1       	ldd	r24, Y+37	; 0x25
     24a:	9e a1       	ldd	r25, Y+38	; 0x26
     24c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     250:	dc 01       	movw	r26, r24
     252:	cb 01       	movw	r24, r22
     254:	9a a3       	std	Y+34, r25	; 0x22
     256:	89 a3       	std	Y+33, r24	; 0x21
     258:	89 a1       	ldd	r24, Y+33	; 0x21
     25a:	9a a1       	ldd	r25, Y+34	; 0x22
     25c:	9e 8f       	std	Y+30, r25	; 0x1e
     25e:	8d 8f       	std	Y+29, r24	; 0x1d
     260:	8d 8d       	ldd	r24, Y+29	; 0x1d
     262:	9e 8d       	ldd	r25, Y+30	; 0x1e
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <reset+0x110>
     268:	9e 8f       	std	Y+30, r25	; 0x1e
     26a:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x00; _delay_ms(1);
     26c:	ec e2       	ldi	r30, 0x2C	; 44
     26e:	f0 e0       	ldi	r31, 0x00	; 0
     270:	10 82       	st	Z, r1
     272:	80 e0       	ldi	r24, 0x00	; 0
     274:	90 e0       	ldi	r25, 0x00	; 0
     276:	a0 e8       	ldi	r26, 0x80	; 128
     278:	bf e3       	ldi	r27, 0x3F	; 63
     27a:	89 8f       	std	Y+25, r24	; 0x19
     27c:	9a 8f       	std	Y+26, r25	; 0x1a
     27e:	ab 8f       	std	Y+27, r26	; 0x1b
     280:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     282:	69 8d       	ldd	r22, Y+25	; 0x19
     284:	7a 8d       	ldd	r23, Y+26	; 0x1a
     286:	8b 8d       	ldd	r24, Y+27	; 0x1b
     288:	9c 8d       	ldd	r25, Y+28	; 0x1c
     28a:	20 e0       	ldi	r18, 0x00	; 0
     28c:	30 e0       	ldi	r19, 0x00	; 0
     28e:	4a e7       	ldi	r20, 0x7A	; 122
     290:	55 e4       	ldi	r21, 0x45	; 69
     292:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     296:	dc 01       	movw	r26, r24
     298:	cb 01       	movw	r24, r22
     29a:	8d 8b       	std	Y+21, r24	; 0x15
     29c:	9e 8b       	std	Y+22, r25	; 0x16
     29e:	af 8b       	std	Y+23, r26	; 0x17
     2a0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     2a2:	6d 89       	ldd	r22, Y+21	; 0x15
     2a4:	7e 89       	ldd	r23, Y+22	; 0x16
     2a6:	8f 89       	ldd	r24, Y+23	; 0x17
     2a8:	98 8d       	ldd	r25, Y+24	; 0x18
     2aa:	20 e0       	ldi	r18, 0x00	; 0
     2ac:	30 e0       	ldi	r19, 0x00	; 0
     2ae:	40 e8       	ldi	r20, 0x80	; 128
     2b0:	5f e3       	ldi	r21, 0x3F	; 63
     2b2:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     2b6:	88 23       	and	r24, r24
     2b8:	2c f4       	brge	.+10     	; 0x2c4 <reset+0x170>
		__ticks = 1;
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	90 e0       	ldi	r25, 0x00	; 0
     2be:	9c 8b       	std	Y+20, r25	; 0x14
     2c0:	8b 8b       	std	Y+19, r24	; 0x13
     2c2:	3f c0       	rjmp	.+126    	; 0x342 <reset+0x1ee>
	else if (__tmp > 65535)
     2c4:	6d 89       	ldd	r22, Y+21	; 0x15
     2c6:	7e 89       	ldd	r23, Y+22	; 0x16
     2c8:	8f 89       	ldd	r24, Y+23	; 0x17
     2ca:	98 8d       	ldd	r25, Y+24	; 0x18
     2cc:	20 e0       	ldi	r18, 0x00	; 0
     2ce:	3f ef       	ldi	r19, 0xFF	; 255
     2d0:	4f e7       	ldi	r20, 0x7F	; 127
     2d2:	57 e4       	ldi	r21, 0x47	; 71
     2d4:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     2d8:	18 16       	cp	r1, r24
     2da:	4c f5       	brge	.+82     	; 0x32e <reset+0x1da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2dc:	69 8d       	ldd	r22, Y+25	; 0x19
     2de:	7a 8d       	ldd	r23, Y+26	; 0x1a
     2e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2e4:	20 e0       	ldi	r18, 0x00	; 0
     2e6:	30 e0       	ldi	r19, 0x00	; 0
     2e8:	40 e2       	ldi	r20, 0x20	; 32
     2ea:	51 e4       	ldi	r21, 0x41	; 65
     2ec:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     2f0:	dc 01       	movw	r26, r24
     2f2:	cb 01       	movw	r24, r22
     2f4:	bc 01       	movw	r22, r24
     2f6:	cd 01       	movw	r24, r26
     2f8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     2fc:	dc 01       	movw	r26, r24
     2fe:	cb 01       	movw	r24, r22
     300:	9c 8b       	std	Y+20, r25	; 0x14
     302:	8b 8b       	std	Y+19, r24	; 0x13
     304:	0f c0       	rjmp	.+30     	; 0x324 <reset+0x1d0>
     306:	80 e9       	ldi	r24, 0x90	; 144
     308:	91 e0       	ldi	r25, 0x01	; 1
     30a:	9a 8b       	std	Y+18, r25	; 0x12
     30c:	89 8b       	std	Y+17, r24	; 0x11
     30e:	89 89       	ldd	r24, Y+17	; 0x11
     310:	9a 89       	ldd	r25, Y+18	; 0x12
     312:	01 97       	sbiw	r24, 0x01	; 1
     314:	f1 f7       	brne	.-4      	; 0x312 <reset+0x1be>
     316:	9a 8b       	std	Y+18, r25	; 0x12
     318:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     31a:	8b 89       	ldd	r24, Y+19	; 0x13
     31c:	9c 89       	ldd	r25, Y+20	; 0x14
     31e:	01 97       	sbiw	r24, 0x01	; 1
     320:	9c 8b       	std	Y+20, r25	; 0x14
     322:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     324:	8b 89       	ldd	r24, Y+19	; 0x13
     326:	9c 89       	ldd	r25, Y+20	; 0x14
     328:	00 97       	sbiw	r24, 0x00	; 0
     32a:	69 f7       	brne	.-38     	; 0x306 <reset+0x1b2>
     32c:	14 c0       	rjmp	.+40     	; 0x356 <reset+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     32e:	6d 89       	ldd	r22, Y+21	; 0x15
     330:	7e 89       	ldd	r23, Y+22	; 0x16
     332:	8f 89       	ldd	r24, Y+23	; 0x17
     334:	98 8d       	ldd	r25, Y+24	; 0x18
     336:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     33a:	dc 01       	movw	r26, r24
     33c:	cb 01       	movw	r24, r22
     33e:	9c 8b       	std	Y+20, r25	; 0x14
     340:	8b 8b       	std	Y+19, r24	; 0x13
     342:	8b 89       	ldd	r24, Y+19	; 0x13
     344:	9c 89       	ldd	r25, Y+20	; 0x14
     346:	98 8b       	std	Y+16, r25	; 0x10
     348:	8f 87       	std	Y+15, r24	; 0x0f
     34a:	8f 85       	ldd	r24, Y+15	; 0x0f
     34c:	98 89       	ldd	r25, Y+16	; 0x10
     34e:	01 97       	sbiw	r24, 0x01	; 1
     350:	f1 f7       	brne	.-4      	; 0x34e <reset+0x1fa>
     352:	98 8b       	std	Y+16, r25	; 0x10
     354:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x26; _delay_ms(1);
     356:	ec e2       	ldi	r30, 0x2C	; 44
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	86 e2       	ldi	r24, 0x26	; 38
     35c:	80 83       	st	Z, r24
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	a0 e8       	ldi	r26, 0x80	; 128
     364:	bf e3       	ldi	r27, 0x3F	; 63
     366:	8b 87       	std	Y+11, r24	; 0x0b
     368:	9c 87       	std	Y+12, r25	; 0x0c
     36a:	ad 87       	std	Y+13, r26	; 0x0d
     36c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     36e:	6b 85       	ldd	r22, Y+11	; 0x0b
     370:	7c 85       	ldd	r23, Y+12	; 0x0c
     372:	8d 85       	ldd	r24, Y+13	; 0x0d
     374:	9e 85       	ldd	r25, Y+14	; 0x0e
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	4a e7       	ldi	r20, 0x7A	; 122
     37c:	55 e4       	ldi	r21, 0x45	; 69
     37e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     382:	dc 01       	movw	r26, r24
     384:	cb 01       	movw	r24, r22
     386:	8f 83       	std	Y+7, r24	; 0x07
     388:	98 87       	std	Y+8, r25	; 0x08
     38a:	a9 87       	std	Y+9, r26	; 0x09
     38c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     38e:	6f 81       	ldd	r22, Y+7	; 0x07
     390:	78 85       	ldd	r23, Y+8	; 0x08
     392:	89 85       	ldd	r24, Y+9	; 0x09
     394:	9a 85       	ldd	r25, Y+10	; 0x0a
     396:	20 e0       	ldi	r18, 0x00	; 0
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	40 e8       	ldi	r20, 0x80	; 128
     39c:	5f e3       	ldi	r21, 0x3F	; 63
     39e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     3a2:	88 23       	and	r24, r24
     3a4:	2c f4       	brge	.+10     	; 0x3b0 <reset+0x25c>
		__ticks = 1;
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	9e 83       	std	Y+6, r25	; 0x06
     3ac:	8d 83       	std	Y+5, r24	; 0x05
     3ae:	3f c0       	rjmp	.+126    	; 0x42e <reset+0x2da>
	else if (__tmp > 65535)
     3b0:	6f 81       	ldd	r22, Y+7	; 0x07
     3b2:	78 85       	ldd	r23, Y+8	; 0x08
     3b4:	89 85       	ldd	r24, Y+9	; 0x09
     3b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	3f ef       	ldi	r19, 0xFF	; 255
     3bc:	4f e7       	ldi	r20, 0x7F	; 127
     3be:	57 e4       	ldi	r21, 0x47	; 71
     3c0:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     3c4:	18 16       	cp	r1, r24
     3c6:	4c f5       	brge	.+82     	; 0x41a <reset+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3c8:	6b 85       	ldd	r22, Y+11	; 0x0b
     3ca:	7c 85       	ldd	r23, Y+12	; 0x0c
     3cc:	8d 85       	ldd	r24, Y+13	; 0x0d
     3ce:	9e 85       	ldd	r25, Y+14	; 0x0e
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	30 e0       	ldi	r19, 0x00	; 0
     3d4:	40 e2       	ldi	r20, 0x20	; 32
     3d6:	51 e4       	ldi	r21, 0x41	; 65
     3d8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     3dc:	dc 01       	movw	r26, r24
     3de:	cb 01       	movw	r24, r22
     3e0:	bc 01       	movw	r22, r24
     3e2:	cd 01       	movw	r24, r26
     3e4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     3e8:	dc 01       	movw	r26, r24
     3ea:	cb 01       	movw	r24, r22
     3ec:	9e 83       	std	Y+6, r25	; 0x06
     3ee:	8d 83       	std	Y+5, r24	; 0x05
     3f0:	0f c0       	rjmp	.+30     	; 0x410 <reset+0x2bc>
     3f2:	80 e9       	ldi	r24, 0x90	; 144
     3f4:	91 e0       	ldi	r25, 0x01	; 1
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	8b 83       	std	Y+3, r24	; 0x03
     3fa:	8b 81       	ldd	r24, Y+3	; 0x03
     3fc:	9c 81       	ldd	r25, Y+4	; 0x04
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	f1 f7       	brne	.-4      	; 0x3fe <reset+0x2aa>
     402:	9c 83       	std	Y+4, r25	; 0x04
     404:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     406:	8d 81       	ldd	r24, Y+5	; 0x05
     408:	9e 81       	ldd	r25, Y+6	; 0x06
     40a:	01 97       	sbiw	r24, 0x01	; 1
     40c:	9e 83       	std	Y+6, r25	; 0x06
     40e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     410:	8d 81       	ldd	r24, Y+5	; 0x05
     412:	9e 81       	ldd	r25, Y+6	; 0x06
     414:	00 97       	sbiw	r24, 0x00	; 0
     416:	69 f7       	brne	.-38     	; 0x3f2 <reset+0x29e>
     418:	14 c0       	rjmp	.+40     	; 0x442 <reset+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     41a:	6f 81       	ldd	r22, Y+7	; 0x07
     41c:	78 85       	ldd	r23, Y+8	; 0x08
     41e:	89 85       	ldd	r24, Y+9	; 0x09
     420:	9a 85       	ldd	r25, Y+10	; 0x0a
     422:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     426:	dc 01       	movw	r26, r24
     428:	cb 01       	movw	r24, r22
     42a:	9e 83       	std	Y+6, r25	; 0x06
     42c:	8d 83       	std	Y+5, r24	; 0x05
     42e:	8d 81       	ldd	r24, Y+5	; 0x05
     430:	9e 81       	ldd	r25, Y+6	; 0x06
     432:	9a 83       	std	Y+2, r25	; 0x02
     434:	89 83       	std	Y+1, r24	; 0x01
     436:	89 81       	ldd	r24, Y+1	; 0x01
     438:	9a 81       	ldd	r25, Y+2	; 0x02
     43a:	01 97       	sbiw	r24, 0x01	; 1
     43c:	f1 f7       	brne	.-4      	; 0x43a <reset+0x2e6>
     43e:	9a 83       	std	Y+2, r25	; 0x02
     440:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x00;
     442:	ec e2       	ldi	r30, 0x2C	; 44
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	10 82       	st	Z, r1
}
     448:	aa 96       	adiw	r28, 0x2a	; 42
     44a:	0f b6       	in	r0, 0x3f	; 63
     44c:	f8 94       	cli
     44e:	de bf       	out	0x3e, r29	; 62
     450:	0f be       	out	0x3f, r0	; 63
     452:	cd bf       	out	0x3d, r28	; 61
     454:	cf 91       	pop	r28
     456:	df 91       	pop	r29
     458:	08 95       	ret

0000045a <resize>:
 
void resize(){
     45a:	0f 93       	push	r16
     45c:	1f 93       	push	r17
     45e:	df 93       	push	r29
     460:	cf 93       	push	r28
     462:	cd b7       	in	r28, 0x3d	; 61
     464:	de b7       	in	r29, 0x3e	; 62
     466:	c0 57       	subi	r28, 0x70	; 112
     468:	d0 40       	sbci	r29, 0x00	; 0
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	f8 94       	cli
     46e:	de bf       	out	0x3e, r29	; 62
     470:	0f be       	out	0x3f, r0	; 63
     472:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nRESIZE  ");
     474:	00 d0       	rcall	.+0      	; 0x476 <resize+0x1c>
     476:	ed b7       	in	r30, 0x3d	; 61
     478:	fe b7       	in	r31, 0x3e	; 62
     47a:	31 96       	adiw	r30, 0x01	; 1
     47c:	8a e0       	ldi	r24, 0x0A	; 10
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	91 83       	std	Z+1, r25	; 0x01
     482:	80 83       	st	Z, r24
     484:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
     48c:	ec e2       	ldi	r30, 0x2C	; 44
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	86 e5       	ldi	r24, 0x56	; 86
     492:	80 83       	st	Z, r24
     494:	fe 01       	movw	r30, r28
     496:	e3 59       	subi	r30, 0x93	; 147
     498:	ff 4f       	sbci	r31, 0xFF	; 255
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	a0 e8       	ldi	r26, 0x80	; 128
     4a0:	bf e3       	ldi	r27, 0x3F	; 63
     4a2:	80 83       	st	Z, r24
     4a4:	91 83       	std	Z+1, r25	; 0x01
     4a6:	a2 83       	std	Z+2, r26	; 0x02
     4a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     4aa:	8e 01       	movw	r16, r28
     4ac:	07 59       	subi	r16, 0x97	; 151
     4ae:	1f 4f       	sbci	r17, 0xFF	; 255
     4b0:	fe 01       	movw	r30, r28
     4b2:	e3 59       	subi	r30, 0x93	; 147
     4b4:	ff 4f       	sbci	r31, 0xFF	; 255
     4b6:	60 81       	ld	r22, Z
     4b8:	71 81       	ldd	r23, Z+1	; 0x01
     4ba:	82 81       	ldd	r24, Z+2	; 0x02
     4bc:	93 81       	ldd	r25, Z+3	; 0x03
     4be:	20 e0       	ldi	r18, 0x00	; 0
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	4a e7       	ldi	r20, 0x7A	; 122
     4c4:	55 e4       	ldi	r21, 0x45	; 69
     4c6:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     4ca:	dc 01       	movw	r26, r24
     4cc:	cb 01       	movw	r24, r22
     4ce:	f8 01       	movw	r30, r16
     4d0:	80 83       	st	Z, r24
     4d2:	91 83       	std	Z+1, r25	; 0x01
     4d4:	a2 83       	std	Z+2, r26	; 0x02
     4d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     4d8:	fe 01       	movw	r30, r28
     4da:	e7 59       	subi	r30, 0x97	; 151
     4dc:	ff 4f       	sbci	r31, 0xFF	; 255
     4de:	60 81       	ld	r22, Z
     4e0:	71 81       	ldd	r23, Z+1	; 0x01
     4e2:	82 81       	ldd	r24, Z+2	; 0x02
     4e4:	93 81       	ldd	r25, Z+3	; 0x03
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	40 e8       	ldi	r20, 0x80	; 128
     4ec:	5f e3       	ldi	r21, 0x3F	; 63
     4ee:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     4f2:	88 23       	and	r24, r24
     4f4:	44 f4       	brge	.+16     	; 0x506 <resize+0xac>
		__ticks = 1;
     4f6:	fe 01       	movw	r30, r28
     4f8:	e9 59       	subi	r30, 0x99	; 153
     4fa:	ff 4f       	sbci	r31, 0xFF	; 255
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	91 83       	std	Z+1, r25	; 0x01
     502:	80 83       	st	Z, r24
     504:	64 c0       	rjmp	.+200    	; 0x5ce <resize+0x174>
	else if (__tmp > 65535)
     506:	fe 01       	movw	r30, r28
     508:	e7 59       	subi	r30, 0x97	; 151
     50a:	ff 4f       	sbci	r31, 0xFF	; 255
     50c:	60 81       	ld	r22, Z
     50e:	71 81       	ldd	r23, Z+1	; 0x01
     510:	82 81       	ldd	r24, Z+2	; 0x02
     512:	93 81       	ldd	r25, Z+3	; 0x03
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	3f ef       	ldi	r19, 0xFF	; 255
     518:	4f e7       	ldi	r20, 0x7F	; 127
     51a:	57 e4       	ldi	r21, 0x47	; 71
     51c:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     520:	18 16       	cp	r1, r24
     522:	0c f0       	brlt	.+2      	; 0x526 <resize+0xcc>
     524:	43 c0       	rjmp	.+134    	; 0x5ac <resize+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     526:	fe 01       	movw	r30, r28
     528:	e3 59       	subi	r30, 0x93	; 147
     52a:	ff 4f       	sbci	r31, 0xFF	; 255
     52c:	60 81       	ld	r22, Z
     52e:	71 81       	ldd	r23, Z+1	; 0x01
     530:	82 81       	ldd	r24, Z+2	; 0x02
     532:	93 81       	ldd	r25, Z+3	; 0x03
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	40 e2       	ldi	r20, 0x20	; 32
     53a:	51 e4       	ldi	r21, 0x41	; 65
     53c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     540:	dc 01       	movw	r26, r24
     542:	cb 01       	movw	r24, r22
     544:	8e 01       	movw	r16, r28
     546:	09 59       	subi	r16, 0x99	; 153
     548:	1f 4f       	sbci	r17, 0xFF	; 255
     54a:	bc 01       	movw	r22, r24
     54c:	cd 01       	movw	r24, r26
     54e:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     552:	dc 01       	movw	r26, r24
     554:	cb 01       	movw	r24, r22
     556:	f8 01       	movw	r30, r16
     558:	91 83       	std	Z+1, r25	; 0x01
     55a:	80 83       	st	Z, r24
     55c:	1f c0       	rjmp	.+62     	; 0x59c <resize+0x142>
     55e:	fe 01       	movw	r30, r28
     560:	eb 59       	subi	r30, 0x9B	; 155
     562:	ff 4f       	sbci	r31, 0xFF	; 255
     564:	80 e9       	ldi	r24, 0x90	; 144
     566:	91 e0       	ldi	r25, 0x01	; 1
     568:	91 83       	std	Z+1, r25	; 0x01
     56a:	80 83       	st	Z, r24
     56c:	fe 01       	movw	r30, r28
     56e:	eb 59       	subi	r30, 0x9B	; 155
     570:	ff 4f       	sbci	r31, 0xFF	; 255
     572:	80 81       	ld	r24, Z
     574:	91 81       	ldd	r25, Z+1	; 0x01
     576:	01 97       	sbiw	r24, 0x01	; 1
     578:	f1 f7       	brne	.-4      	; 0x576 <resize+0x11c>
     57a:	fe 01       	movw	r30, r28
     57c:	eb 59       	subi	r30, 0x9B	; 155
     57e:	ff 4f       	sbci	r31, 0xFF	; 255
     580:	91 83       	std	Z+1, r25	; 0x01
     582:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     584:	de 01       	movw	r26, r28
     586:	a9 59       	subi	r26, 0x99	; 153
     588:	bf 4f       	sbci	r27, 0xFF	; 255
     58a:	fe 01       	movw	r30, r28
     58c:	e9 59       	subi	r30, 0x99	; 153
     58e:	ff 4f       	sbci	r31, 0xFF	; 255
     590:	80 81       	ld	r24, Z
     592:	91 81       	ldd	r25, Z+1	; 0x01
     594:	01 97       	sbiw	r24, 0x01	; 1
     596:	11 96       	adiw	r26, 0x01	; 1
     598:	9c 93       	st	X, r25
     59a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     59c:	fe 01       	movw	r30, r28
     59e:	e9 59       	subi	r30, 0x99	; 153
     5a0:	ff 4f       	sbci	r31, 0xFF	; 255
     5a2:	80 81       	ld	r24, Z
     5a4:	91 81       	ldd	r25, Z+1	; 0x01
     5a6:	00 97       	sbiw	r24, 0x00	; 0
     5a8:	d1 f6       	brne	.-76     	; 0x55e <resize+0x104>
     5aa:	27 c0       	rjmp	.+78     	; 0x5fa <resize+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     5ac:	8e 01       	movw	r16, r28
     5ae:	09 59       	subi	r16, 0x99	; 153
     5b0:	1f 4f       	sbci	r17, 0xFF	; 255
     5b2:	fe 01       	movw	r30, r28
     5b4:	e7 59       	subi	r30, 0x97	; 151
     5b6:	ff 4f       	sbci	r31, 0xFF	; 255
     5b8:	60 81       	ld	r22, Z
     5ba:	71 81       	ldd	r23, Z+1	; 0x01
     5bc:	82 81       	ldd	r24, Z+2	; 0x02
     5be:	93 81       	ldd	r25, Z+3	; 0x03
     5c0:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     5c4:	dc 01       	movw	r26, r24
     5c6:	cb 01       	movw	r24, r22
     5c8:	f8 01       	movw	r30, r16
     5ca:	91 83       	std	Z+1, r25	; 0x01
     5cc:	80 83       	st	Z, r24
     5ce:	de 01       	movw	r26, r28
     5d0:	ad 59       	subi	r26, 0x9D	; 157
     5d2:	bf 4f       	sbci	r27, 0xFF	; 255
     5d4:	fe 01       	movw	r30, r28
     5d6:	e9 59       	subi	r30, 0x99	; 153
     5d8:	ff 4f       	sbci	r31, 0xFF	; 255
     5da:	80 81       	ld	r24, Z
     5dc:	91 81       	ldd	r25, Z+1	; 0x01
     5de:	8d 93       	st	X+, r24
     5e0:	9c 93       	st	X, r25
     5e2:	fe 01       	movw	r30, r28
     5e4:	ed 59       	subi	r30, 0x9D	; 157
     5e6:	ff 4f       	sbci	r31, 0xFF	; 255
     5e8:	80 81       	ld	r24, Z
     5ea:	91 81       	ldd	r25, Z+1	; 0x01
     5ec:	01 97       	sbiw	r24, 0x01	; 1
     5ee:	f1 f7       	brne	.-4      	; 0x5ec <resize+0x192>
     5f0:	fe 01       	movw	r30, r28
     5f2:	ed 59       	subi	r30, 0x9D	; 157
     5f4:	ff 4f       	sbci	r31, 0xFF	; 255
     5f6:	91 83       	std	Z+1, r25	; 0x01
     5f8:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
     5fa:	ec e2       	ldi	r30, 0x2C	; 44
     5fc:	f0 e0       	ldi	r31, 0x00	; 0
     5fe:	10 82       	st	Z, r1
     600:	fe 01       	movw	r30, r28
     602:	e1 5a       	subi	r30, 0xA1	; 161
     604:	ff 4f       	sbci	r31, 0xFF	; 255
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	a0 e8       	ldi	r26, 0x80	; 128
     60c:	bf e3       	ldi	r27, 0x3F	; 63
     60e:	80 83       	st	Z, r24
     610:	91 83       	std	Z+1, r25	; 0x01
     612:	a2 83       	std	Z+2, r26	; 0x02
     614:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     616:	8e 01       	movw	r16, r28
     618:	05 5a       	subi	r16, 0xA5	; 165
     61a:	1f 4f       	sbci	r17, 0xFF	; 255
     61c:	fe 01       	movw	r30, r28
     61e:	e1 5a       	subi	r30, 0xA1	; 161
     620:	ff 4f       	sbci	r31, 0xFF	; 255
     622:	60 81       	ld	r22, Z
     624:	71 81       	ldd	r23, Z+1	; 0x01
     626:	82 81       	ldd	r24, Z+2	; 0x02
     628:	93 81       	ldd	r25, Z+3	; 0x03
     62a:	20 e0       	ldi	r18, 0x00	; 0
     62c:	30 e0       	ldi	r19, 0x00	; 0
     62e:	4a e7       	ldi	r20, 0x7A	; 122
     630:	55 e4       	ldi	r21, 0x45	; 69
     632:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     636:	dc 01       	movw	r26, r24
     638:	cb 01       	movw	r24, r22
     63a:	f8 01       	movw	r30, r16
     63c:	80 83       	st	Z, r24
     63e:	91 83       	std	Z+1, r25	; 0x01
     640:	a2 83       	std	Z+2, r26	; 0x02
     642:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     644:	fe 01       	movw	r30, r28
     646:	e5 5a       	subi	r30, 0xA5	; 165
     648:	ff 4f       	sbci	r31, 0xFF	; 255
     64a:	60 81       	ld	r22, Z
     64c:	71 81       	ldd	r23, Z+1	; 0x01
     64e:	82 81       	ldd	r24, Z+2	; 0x02
     650:	93 81       	ldd	r25, Z+3	; 0x03
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	40 e8       	ldi	r20, 0x80	; 128
     658:	5f e3       	ldi	r21, 0x3F	; 63
     65a:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     65e:	88 23       	and	r24, r24
     660:	44 f4       	brge	.+16     	; 0x672 <resize+0x218>
		__ticks = 1;
     662:	fe 01       	movw	r30, r28
     664:	e7 5a       	subi	r30, 0xA7	; 167
     666:	ff 4f       	sbci	r31, 0xFF	; 255
     668:	81 e0       	ldi	r24, 0x01	; 1
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	91 83       	std	Z+1, r25	; 0x01
     66e:	80 83       	st	Z, r24
     670:	64 c0       	rjmp	.+200    	; 0x73a <resize+0x2e0>
	else if (__tmp > 65535)
     672:	fe 01       	movw	r30, r28
     674:	e5 5a       	subi	r30, 0xA5	; 165
     676:	ff 4f       	sbci	r31, 0xFF	; 255
     678:	60 81       	ld	r22, Z
     67a:	71 81       	ldd	r23, Z+1	; 0x01
     67c:	82 81       	ldd	r24, Z+2	; 0x02
     67e:	93 81       	ldd	r25, Z+3	; 0x03
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	3f ef       	ldi	r19, 0xFF	; 255
     684:	4f e7       	ldi	r20, 0x7F	; 127
     686:	57 e4       	ldi	r21, 0x47	; 71
     688:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     68c:	18 16       	cp	r1, r24
     68e:	0c f0       	brlt	.+2      	; 0x692 <resize+0x238>
     690:	43 c0       	rjmp	.+134    	; 0x718 <resize+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     692:	fe 01       	movw	r30, r28
     694:	e1 5a       	subi	r30, 0xA1	; 161
     696:	ff 4f       	sbci	r31, 0xFF	; 255
     698:	60 81       	ld	r22, Z
     69a:	71 81       	ldd	r23, Z+1	; 0x01
     69c:	82 81       	ldd	r24, Z+2	; 0x02
     69e:	93 81       	ldd	r25, Z+3	; 0x03
     6a0:	20 e0       	ldi	r18, 0x00	; 0
     6a2:	30 e0       	ldi	r19, 0x00	; 0
     6a4:	40 e2       	ldi	r20, 0x20	; 32
     6a6:	51 e4       	ldi	r21, 0x41	; 65
     6a8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     6ac:	dc 01       	movw	r26, r24
     6ae:	cb 01       	movw	r24, r22
     6b0:	8e 01       	movw	r16, r28
     6b2:	07 5a       	subi	r16, 0xA7	; 167
     6b4:	1f 4f       	sbci	r17, 0xFF	; 255
     6b6:	bc 01       	movw	r22, r24
     6b8:	cd 01       	movw	r24, r26
     6ba:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     6be:	dc 01       	movw	r26, r24
     6c0:	cb 01       	movw	r24, r22
     6c2:	f8 01       	movw	r30, r16
     6c4:	91 83       	std	Z+1, r25	; 0x01
     6c6:	80 83       	st	Z, r24
     6c8:	1f c0       	rjmp	.+62     	; 0x708 <resize+0x2ae>
     6ca:	fe 01       	movw	r30, r28
     6cc:	e9 5a       	subi	r30, 0xA9	; 169
     6ce:	ff 4f       	sbci	r31, 0xFF	; 255
     6d0:	80 e9       	ldi	r24, 0x90	; 144
     6d2:	91 e0       	ldi	r25, 0x01	; 1
     6d4:	91 83       	std	Z+1, r25	; 0x01
     6d6:	80 83       	st	Z, r24
     6d8:	fe 01       	movw	r30, r28
     6da:	e9 5a       	subi	r30, 0xA9	; 169
     6dc:	ff 4f       	sbci	r31, 0xFF	; 255
     6de:	80 81       	ld	r24, Z
     6e0:	91 81       	ldd	r25, Z+1	; 0x01
     6e2:	01 97       	sbiw	r24, 0x01	; 1
     6e4:	f1 f7       	brne	.-4      	; 0x6e2 <resize+0x288>
     6e6:	fe 01       	movw	r30, r28
     6e8:	e9 5a       	subi	r30, 0xA9	; 169
     6ea:	ff 4f       	sbci	r31, 0xFF	; 255
     6ec:	91 83       	std	Z+1, r25	; 0x01
     6ee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6f0:	de 01       	movw	r26, r28
     6f2:	a7 5a       	subi	r26, 0xA7	; 167
     6f4:	bf 4f       	sbci	r27, 0xFF	; 255
     6f6:	fe 01       	movw	r30, r28
     6f8:	e7 5a       	subi	r30, 0xA7	; 167
     6fa:	ff 4f       	sbci	r31, 0xFF	; 255
     6fc:	80 81       	ld	r24, Z
     6fe:	91 81       	ldd	r25, Z+1	; 0x01
     700:	01 97       	sbiw	r24, 0x01	; 1
     702:	11 96       	adiw	r26, 0x01	; 1
     704:	9c 93       	st	X, r25
     706:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     708:	fe 01       	movw	r30, r28
     70a:	e7 5a       	subi	r30, 0xA7	; 167
     70c:	ff 4f       	sbci	r31, 0xFF	; 255
     70e:	80 81       	ld	r24, Z
     710:	91 81       	ldd	r25, Z+1	; 0x01
     712:	00 97       	sbiw	r24, 0x00	; 0
     714:	d1 f6       	brne	.-76     	; 0x6ca <resize+0x270>
     716:	27 c0       	rjmp	.+78     	; 0x766 <resize+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     718:	8e 01       	movw	r16, r28
     71a:	07 5a       	subi	r16, 0xA7	; 167
     71c:	1f 4f       	sbci	r17, 0xFF	; 255
     71e:	fe 01       	movw	r30, r28
     720:	e5 5a       	subi	r30, 0xA5	; 165
     722:	ff 4f       	sbci	r31, 0xFF	; 255
     724:	60 81       	ld	r22, Z
     726:	71 81       	ldd	r23, Z+1	; 0x01
     728:	82 81       	ldd	r24, Z+2	; 0x02
     72a:	93 81       	ldd	r25, Z+3	; 0x03
     72c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     730:	dc 01       	movw	r26, r24
     732:	cb 01       	movw	r24, r22
     734:	f8 01       	movw	r30, r16
     736:	91 83       	std	Z+1, r25	; 0x01
     738:	80 83       	st	Z, r24
     73a:	de 01       	movw	r26, r28
     73c:	ab 5a       	subi	r26, 0xAB	; 171
     73e:	bf 4f       	sbci	r27, 0xFF	; 255
     740:	fe 01       	movw	r30, r28
     742:	e7 5a       	subi	r30, 0xA7	; 167
     744:	ff 4f       	sbci	r31, 0xFF	; 255
     746:	80 81       	ld	r24, Z
     748:	91 81       	ldd	r25, Z+1	; 0x01
     74a:	8d 93       	st	X+, r24
     74c:	9c 93       	st	X, r25
     74e:	fe 01       	movw	r30, r28
     750:	eb 5a       	subi	r30, 0xAB	; 171
     752:	ff 4f       	sbci	r31, 0xFF	; 255
     754:	80 81       	ld	r24, Z
     756:	91 81       	ldd	r25, Z+1	; 0x01
     758:	01 97       	sbiw	r24, 0x01	; 1
     75a:	f1 f7       	brne	.-4      	; 0x758 <resize+0x2fe>
     75c:	fe 01       	movw	r30, r28
     75e:	eb 5a       	subi	r30, 0xAB	; 171
     760:	ff 4f       	sbci	r31, 0xFF	; 255
     762:	91 83       	std	Z+1, r25	; 0x01
     764:	80 83       	st	Z, r24
 UDR0=0x31; _delay_ms(1);
     766:	ec e2       	ldi	r30, 0x2C	; 44
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	81 e3       	ldi	r24, 0x31	; 49
     76c:	80 83       	st	Z, r24
     76e:	fe 01       	movw	r30, r28
     770:	ef 5a       	subi	r30, 0xAF	; 175
     772:	ff 4f       	sbci	r31, 0xFF	; 255
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	90 e0       	ldi	r25, 0x00	; 0
     778:	a0 e8       	ldi	r26, 0x80	; 128
     77a:	bf e3       	ldi	r27, 0x3F	; 63
     77c:	80 83       	st	Z, r24
     77e:	91 83       	std	Z+1, r25	; 0x01
     780:	a2 83       	std	Z+2, r26	; 0x02
     782:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     784:	8e 01       	movw	r16, r28
     786:	03 5b       	subi	r16, 0xB3	; 179
     788:	1f 4f       	sbci	r17, 0xFF	; 255
     78a:	fe 01       	movw	r30, r28
     78c:	ef 5a       	subi	r30, 0xAF	; 175
     78e:	ff 4f       	sbci	r31, 0xFF	; 255
     790:	60 81       	ld	r22, Z
     792:	71 81       	ldd	r23, Z+1	; 0x01
     794:	82 81       	ldd	r24, Z+2	; 0x02
     796:	93 81       	ldd	r25, Z+3	; 0x03
     798:	20 e0       	ldi	r18, 0x00	; 0
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	4a e7       	ldi	r20, 0x7A	; 122
     79e:	55 e4       	ldi	r21, 0x45	; 69
     7a0:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     7a4:	dc 01       	movw	r26, r24
     7a6:	cb 01       	movw	r24, r22
     7a8:	f8 01       	movw	r30, r16
     7aa:	80 83       	st	Z, r24
     7ac:	91 83       	std	Z+1, r25	; 0x01
     7ae:	a2 83       	std	Z+2, r26	; 0x02
     7b0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     7b2:	fe 01       	movw	r30, r28
     7b4:	e3 5b       	subi	r30, 0xB3	; 179
     7b6:	ff 4f       	sbci	r31, 0xFF	; 255
     7b8:	60 81       	ld	r22, Z
     7ba:	71 81       	ldd	r23, Z+1	; 0x01
     7bc:	82 81       	ldd	r24, Z+2	; 0x02
     7be:	93 81       	ldd	r25, Z+3	; 0x03
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	40 e8       	ldi	r20, 0x80	; 128
     7c6:	5f e3       	ldi	r21, 0x3F	; 63
     7c8:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     7cc:	88 23       	and	r24, r24
     7ce:	44 f4       	brge	.+16     	; 0x7e0 <resize+0x386>
		__ticks = 1;
     7d0:	fe 01       	movw	r30, r28
     7d2:	e5 5b       	subi	r30, 0xB5	; 181
     7d4:	ff 4f       	sbci	r31, 0xFF	; 255
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	91 83       	std	Z+1, r25	; 0x01
     7dc:	80 83       	st	Z, r24
     7de:	64 c0       	rjmp	.+200    	; 0x8a8 <resize+0x44e>
	else if (__tmp > 65535)
     7e0:	fe 01       	movw	r30, r28
     7e2:	e3 5b       	subi	r30, 0xB3	; 179
     7e4:	ff 4f       	sbci	r31, 0xFF	; 255
     7e6:	60 81       	ld	r22, Z
     7e8:	71 81       	ldd	r23, Z+1	; 0x01
     7ea:	82 81       	ldd	r24, Z+2	; 0x02
     7ec:	93 81       	ldd	r25, Z+3	; 0x03
     7ee:	20 e0       	ldi	r18, 0x00	; 0
     7f0:	3f ef       	ldi	r19, 0xFF	; 255
     7f2:	4f e7       	ldi	r20, 0x7F	; 127
     7f4:	57 e4       	ldi	r21, 0x47	; 71
     7f6:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     7fa:	18 16       	cp	r1, r24
     7fc:	0c f0       	brlt	.+2      	; 0x800 <resize+0x3a6>
     7fe:	43 c0       	rjmp	.+134    	; 0x886 <resize+0x42c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     800:	fe 01       	movw	r30, r28
     802:	ef 5a       	subi	r30, 0xAF	; 175
     804:	ff 4f       	sbci	r31, 0xFF	; 255
     806:	60 81       	ld	r22, Z
     808:	71 81       	ldd	r23, Z+1	; 0x01
     80a:	82 81       	ldd	r24, Z+2	; 0x02
     80c:	93 81       	ldd	r25, Z+3	; 0x03
     80e:	20 e0       	ldi	r18, 0x00	; 0
     810:	30 e0       	ldi	r19, 0x00	; 0
     812:	40 e2       	ldi	r20, 0x20	; 32
     814:	51 e4       	ldi	r21, 0x41	; 65
     816:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     81a:	dc 01       	movw	r26, r24
     81c:	cb 01       	movw	r24, r22
     81e:	8e 01       	movw	r16, r28
     820:	05 5b       	subi	r16, 0xB5	; 181
     822:	1f 4f       	sbci	r17, 0xFF	; 255
     824:	bc 01       	movw	r22, r24
     826:	cd 01       	movw	r24, r26
     828:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     82c:	dc 01       	movw	r26, r24
     82e:	cb 01       	movw	r24, r22
     830:	f8 01       	movw	r30, r16
     832:	91 83       	std	Z+1, r25	; 0x01
     834:	80 83       	st	Z, r24
     836:	1f c0       	rjmp	.+62     	; 0x876 <resize+0x41c>
     838:	fe 01       	movw	r30, r28
     83a:	e7 5b       	subi	r30, 0xB7	; 183
     83c:	ff 4f       	sbci	r31, 0xFF	; 255
     83e:	80 e9       	ldi	r24, 0x90	; 144
     840:	91 e0       	ldi	r25, 0x01	; 1
     842:	91 83       	std	Z+1, r25	; 0x01
     844:	80 83       	st	Z, r24
     846:	fe 01       	movw	r30, r28
     848:	e7 5b       	subi	r30, 0xB7	; 183
     84a:	ff 4f       	sbci	r31, 0xFF	; 255
     84c:	80 81       	ld	r24, Z
     84e:	91 81       	ldd	r25, Z+1	; 0x01
     850:	01 97       	sbiw	r24, 0x01	; 1
     852:	f1 f7       	brne	.-4      	; 0x850 <resize+0x3f6>
     854:	fe 01       	movw	r30, r28
     856:	e7 5b       	subi	r30, 0xB7	; 183
     858:	ff 4f       	sbci	r31, 0xFF	; 255
     85a:	91 83       	std	Z+1, r25	; 0x01
     85c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     85e:	de 01       	movw	r26, r28
     860:	a5 5b       	subi	r26, 0xB5	; 181
     862:	bf 4f       	sbci	r27, 0xFF	; 255
     864:	fe 01       	movw	r30, r28
     866:	e5 5b       	subi	r30, 0xB5	; 181
     868:	ff 4f       	sbci	r31, 0xFF	; 255
     86a:	80 81       	ld	r24, Z
     86c:	91 81       	ldd	r25, Z+1	; 0x01
     86e:	01 97       	sbiw	r24, 0x01	; 1
     870:	11 96       	adiw	r26, 0x01	; 1
     872:	9c 93       	st	X, r25
     874:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     876:	fe 01       	movw	r30, r28
     878:	e5 5b       	subi	r30, 0xB5	; 181
     87a:	ff 4f       	sbci	r31, 0xFF	; 255
     87c:	80 81       	ld	r24, Z
     87e:	91 81       	ldd	r25, Z+1	; 0x01
     880:	00 97       	sbiw	r24, 0x00	; 0
     882:	d1 f6       	brne	.-76     	; 0x838 <resize+0x3de>
     884:	27 c0       	rjmp	.+78     	; 0x8d4 <resize+0x47a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     886:	8e 01       	movw	r16, r28
     888:	05 5b       	subi	r16, 0xB5	; 181
     88a:	1f 4f       	sbci	r17, 0xFF	; 255
     88c:	fe 01       	movw	r30, r28
     88e:	e3 5b       	subi	r30, 0xB3	; 179
     890:	ff 4f       	sbci	r31, 0xFF	; 255
     892:	60 81       	ld	r22, Z
     894:	71 81       	ldd	r23, Z+1	; 0x01
     896:	82 81       	ldd	r24, Z+2	; 0x02
     898:	93 81       	ldd	r25, Z+3	; 0x03
     89a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     89e:	dc 01       	movw	r26, r24
     8a0:	cb 01       	movw	r24, r22
     8a2:	f8 01       	movw	r30, r16
     8a4:	91 83       	std	Z+1, r25	; 0x01
     8a6:	80 83       	st	Z, r24
     8a8:	de 01       	movw	r26, r28
     8aa:	a9 5b       	subi	r26, 0xB9	; 185
     8ac:	bf 4f       	sbci	r27, 0xFF	; 255
     8ae:	fe 01       	movw	r30, r28
     8b0:	e5 5b       	subi	r30, 0xB5	; 181
     8b2:	ff 4f       	sbci	r31, 0xFF	; 255
     8b4:	80 81       	ld	r24, Z
     8b6:	91 81       	ldd	r25, Z+1	; 0x01
     8b8:	8d 93       	st	X+, r24
     8ba:	9c 93       	st	X, r25
     8bc:	fe 01       	movw	r30, r28
     8be:	e9 5b       	subi	r30, 0xB9	; 185
     8c0:	ff 4f       	sbci	r31, 0xFF	; 255
     8c2:	80 81       	ld	r24, Z
     8c4:	91 81       	ldd	r25, Z+1	; 0x01
     8c6:	01 97       	sbiw	r24, 0x01	; 1
     8c8:	f1 f7       	brne	.-4      	; 0x8c6 <resize+0x46c>
     8ca:	fe 01       	movw	r30, r28
     8cc:	e9 5b       	subi	r30, 0xB9	; 185
     8ce:	ff 4f       	sbci	r31, 0xFF	; 255
     8d0:	91 83       	std	Z+1, r25	; 0x01
     8d2:	80 83       	st	Z, r24
 UDR0=0x05; _delay_ms(1);
     8d4:	ec e2       	ldi	r30, 0x2C	; 44
     8d6:	f0 e0       	ldi	r31, 0x00	; 0
     8d8:	85 e0       	ldi	r24, 0x05	; 5
     8da:	80 83       	st	Z, r24
     8dc:	fe 01       	movw	r30, r28
     8de:	ed 5b       	subi	r30, 0xBD	; 189
     8e0:	ff 4f       	sbci	r31, 0xFF	; 255
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	a0 e8       	ldi	r26, 0x80	; 128
     8e8:	bf e3       	ldi	r27, 0x3F	; 63
     8ea:	80 83       	st	Z, r24
     8ec:	91 83       	std	Z+1, r25	; 0x01
     8ee:	a2 83       	std	Z+2, r26	; 0x02
     8f0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     8f2:	8e 01       	movw	r16, r28
     8f4:	01 5c       	subi	r16, 0xC1	; 193
     8f6:	1f 4f       	sbci	r17, 0xFF	; 255
     8f8:	fe 01       	movw	r30, r28
     8fa:	ed 5b       	subi	r30, 0xBD	; 189
     8fc:	ff 4f       	sbci	r31, 0xFF	; 255
     8fe:	60 81       	ld	r22, Z
     900:	71 81       	ldd	r23, Z+1	; 0x01
     902:	82 81       	ldd	r24, Z+2	; 0x02
     904:	93 81       	ldd	r25, Z+3	; 0x03
     906:	20 e0       	ldi	r18, 0x00	; 0
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	4a e7       	ldi	r20, 0x7A	; 122
     90c:	55 e4       	ldi	r21, 0x45	; 69
     90e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     912:	dc 01       	movw	r26, r24
     914:	cb 01       	movw	r24, r22
     916:	f8 01       	movw	r30, r16
     918:	80 83       	st	Z, r24
     91a:	91 83       	std	Z+1, r25	; 0x01
     91c:	a2 83       	std	Z+2, r26	; 0x02
     91e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     920:	fe 01       	movw	r30, r28
     922:	ff 96       	adiw	r30, 0x3f	; 63
     924:	60 81       	ld	r22, Z
     926:	71 81       	ldd	r23, Z+1	; 0x01
     928:	82 81       	ldd	r24, Z+2	; 0x02
     92a:	93 81       	ldd	r25, Z+3	; 0x03
     92c:	20 e0       	ldi	r18, 0x00	; 0
     92e:	30 e0       	ldi	r19, 0x00	; 0
     930:	40 e8       	ldi	r20, 0x80	; 128
     932:	5f e3       	ldi	r21, 0x3F	; 63
     934:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     938:	88 23       	and	r24, r24
     93a:	2c f4       	brge	.+10     	; 0x946 <resize+0x4ec>
		__ticks = 1;
     93c:	81 e0       	ldi	r24, 0x01	; 1
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	9e af       	std	Y+62, r25	; 0x3e
     942:	8d af       	std	Y+61, r24	; 0x3d
     944:	46 c0       	rjmp	.+140    	; 0x9d2 <resize+0x578>
	else if (__tmp > 65535)
     946:	fe 01       	movw	r30, r28
     948:	ff 96       	adiw	r30, 0x3f	; 63
     94a:	60 81       	ld	r22, Z
     94c:	71 81       	ldd	r23, Z+1	; 0x01
     94e:	82 81       	ldd	r24, Z+2	; 0x02
     950:	93 81       	ldd	r25, Z+3	; 0x03
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	3f ef       	ldi	r19, 0xFF	; 255
     956:	4f e7       	ldi	r20, 0x7F	; 127
     958:	57 e4       	ldi	r21, 0x47	; 71
     95a:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     95e:	18 16       	cp	r1, r24
     960:	64 f5       	brge	.+88     	; 0x9ba <resize+0x560>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     962:	fe 01       	movw	r30, r28
     964:	ed 5b       	subi	r30, 0xBD	; 189
     966:	ff 4f       	sbci	r31, 0xFF	; 255
     968:	60 81       	ld	r22, Z
     96a:	71 81       	ldd	r23, Z+1	; 0x01
     96c:	82 81       	ldd	r24, Z+2	; 0x02
     96e:	93 81       	ldd	r25, Z+3	; 0x03
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	40 e2       	ldi	r20, 0x20	; 32
     976:	51 e4       	ldi	r21, 0x41	; 65
     978:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     97c:	dc 01       	movw	r26, r24
     97e:	cb 01       	movw	r24, r22
     980:	bc 01       	movw	r22, r24
     982:	cd 01       	movw	r24, r26
     984:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     988:	dc 01       	movw	r26, r24
     98a:	cb 01       	movw	r24, r22
     98c:	9e af       	std	Y+62, r25	; 0x3e
     98e:	8d af       	std	Y+61, r24	; 0x3d
     990:	0f c0       	rjmp	.+30     	; 0x9b0 <resize+0x556>
     992:	80 e9       	ldi	r24, 0x90	; 144
     994:	91 e0       	ldi	r25, 0x01	; 1
     996:	9c af       	std	Y+60, r25	; 0x3c
     998:	8b af       	std	Y+59, r24	; 0x3b
     99a:	8b ad       	ldd	r24, Y+59	; 0x3b
     99c:	9c ad       	ldd	r25, Y+60	; 0x3c
     99e:	01 97       	sbiw	r24, 0x01	; 1
     9a0:	f1 f7       	brne	.-4      	; 0x99e <resize+0x544>
     9a2:	9c af       	std	Y+60, r25	; 0x3c
     9a4:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9a6:	8d ad       	ldd	r24, Y+61	; 0x3d
     9a8:	9e ad       	ldd	r25, Y+62	; 0x3e
     9aa:	01 97       	sbiw	r24, 0x01	; 1
     9ac:	9e af       	std	Y+62, r25	; 0x3e
     9ae:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9b0:	8d ad       	ldd	r24, Y+61	; 0x3d
     9b2:	9e ad       	ldd	r25, Y+62	; 0x3e
     9b4:	00 97       	sbiw	r24, 0x00	; 0
     9b6:	69 f7       	brne	.-38     	; 0x992 <resize+0x538>
     9b8:	16 c0       	rjmp	.+44     	; 0x9e6 <resize+0x58c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9ba:	fe 01       	movw	r30, r28
     9bc:	ff 96       	adiw	r30, 0x3f	; 63
     9be:	60 81       	ld	r22, Z
     9c0:	71 81       	ldd	r23, Z+1	; 0x01
     9c2:	82 81       	ldd	r24, Z+2	; 0x02
     9c4:	93 81       	ldd	r25, Z+3	; 0x03
     9c6:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     9ca:	dc 01       	movw	r26, r24
     9cc:	cb 01       	movw	r24, r22
     9ce:	9e af       	std	Y+62, r25	; 0x3e
     9d0:	8d af       	std	Y+61, r24	; 0x3d
     9d2:	8d ad       	ldd	r24, Y+61	; 0x3d
     9d4:	9e ad       	ldd	r25, Y+62	; 0x3e
     9d6:	9a af       	std	Y+58, r25	; 0x3a
     9d8:	89 af       	std	Y+57, r24	; 0x39
     9da:	89 ad       	ldd	r24, Y+57	; 0x39
     9dc:	9a ad       	ldd	r25, Y+58	; 0x3a
     9de:	01 97       	sbiw	r24, 0x01	; 1
     9e0:	f1 f7       	brne	.-4      	; 0x9de <resize+0x584>
     9e2:	9a af       	std	Y+58, r25	; 0x3a
     9e4:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x04; _delay_ms(1);
     9e6:	ec e2       	ldi	r30, 0x2C	; 44
     9e8:	f0 e0       	ldi	r31, 0x00	; 0
     9ea:	84 e0       	ldi	r24, 0x04	; 4
     9ec:	80 83       	st	Z, r24
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	a0 e8       	ldi	r26, 0x80	; 128
     9f4:	bf e3       	ldi	r27, 0x3F	; 63
     9f6:	8d ab       	std	Y+53, r24	; 0x35
     9f8:	9e ab       	std	Y+54, r25	; 0x36
     9fa:	af ab       	std	Y+55, r26	; 0x37
     9fc:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9fe:	6d a9       	ldd	r22, Y+53	; 0x35
     a00:	7e a9       	ldd	r23, Y+54	; 0x36
     a02:	8f a9       	ldd	r24, Y+55	; 0x37
     a04:	98 ad       	ldd	r25, Y+56	; 0x38
     a06:	20 e0       	ldi	r18, 0x00	; 0
     a08:	30 e0       	ldi	r19, 0x00	; 0
     a0a:	4a e7       	ldi	r20, 0x7A	; 122
     a0c:	55 e4       	ldi	r21, 0x45	; 69
     a0e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     a12:	dc 01       	movw	r26, r24
     a14:	cb 01       	movw	r24, r22
     a16:	89 ab       	std	Y+49, r24	; 0x31
     a18:	9a ab       	std	Y+50, r25	; 0x32
     a1a:	ab ab       	std	Y+51, r26	; 0x33
     a1c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     a1e:	69 a9       	ldd	r22, Y+49	; 0x31
     a20:	7a a9       	ldd	r23, Y+50	; 0x32
     a22:	8b a9       	ldd	r24, Y+51	; 0x33
     a24:	9c a9       	ldd	r25, Y+52	; 0x34
     a26:	20 e0       	ldi	r18, 0x00	; 0
     a28:	30 e0       	ldi	r19, 0x00	; 0
     a2a:	40 e8       	ldi	r20, 0x80	; 128
     a2c:	5f e3       	ldi	r21, 0x3F	; 63
     a2e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     a32:	88 23       	and	r24, r24
     a34:	2c f4       	brge	.+10     	; 0xa40 <resize+0x5e6>
		__ticks = 1;
     a36:	81 e0       	ldi	r24, 0x01	; 1
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	98 ab       	std	Y+48, r25	; 0x30
     a3c:	8f a7       	std	Y+47, r24	; 0x2f
     a3e:	3f c0       	rjmp	.+126    	; 0xabe <resize+0x664>
	else if (__tmp > 65535)
     a40:	69 a9       	ldd	r22, Y+49	; 0x31
     a42:	7a a9       	ldd	r23, Y+50	; 0x32
     a44:	8b a9       	ldd	r24, Y+51	; 0x33
     a46:	9c a9       	ldd	r25, Y+52	; 0x34
     a48:	20 e0       	ldi	r18, 0x00	; 0
     a4a:	3f ef       	ldi	r19, 0xFF	; 255
     a4c:	4f e7       	ldi	r20, 0x7F	; 127
     a4e:	57 e4       	ldi	r21, 0x47	; 71
     a50:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     a54:	18 16       	cp	r1, r24
     a56:	4c f5       	brge	.+82     	; 0xaaa <resize+0x650>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a58:	6d a9       	ldd	r22, Y+53	; 0x35
     a5a:	7e a9       	ldd	r23, Y+54	; 0x36
     a5c:	8f a9       	ldd	r24, Y+55	; 0x37
     a5e:	98 ad       	ldd	r25, Y+56	; 0x38
     a60:	20 e0       	ldi	r18, 0x00	; 0
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	40 e2       	ldi	r20, 0x20	; 32
     a66:	51 e4       	ldi	r21, 0x41	; 65
     a68:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     a6c:	dc 01       	movw	r26, r24
     a6e:	cb 01       	movw	r24, r22
     a70:	bc 01       	movw	r22, r24
     a72:	cd 01       	movw	r24, r26
     a74:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     a78:	dc 01       	movw	r26, r24
     a7a:	cb 01       	movw	r24, r22
     a7c:	98 ab       	std	Y+48, r25	; 0x30
     a7e:	8f a7       	std	Y+47, r24	; 0x2f
     a80:	0f c0       	rjmp	.+30     	; 0xaa0 <resize+0x646>
     a82:	80 e9       	ldi	r24, 0x90	; 144
     a84:	91 e0       	ldi	r25, 0x01	; 1
     a86:	9e a7       	std	Y+46, r25	; 0x2e
     a88:	8d a7       	std	Y+45, r24	; 0x2d
     a8a:	8d a5       	ldd	r24, Y+45	; 0x2d
     a8c:	9e a5       	ldd	r25, Y+46	; 0x2e
     a8e:	01 97       	sbiw	r24, 0x01	; 1
     a90:	f1 f7       	brne	.-4      	; 0xa8e <resize+0x634>
     a92:	9e a7       	std	Y+46, r25	; 0x2e
     a94:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a96:	8f a5       	ldd	r24, Y+47	; 0x2f
     a98:	98 a9       	ldd	r25, Y+48	; 0x30
     a9a:	01 97       	sbiw	r24, 0x01	; 1
     a9c:	98 ab       	std	Y+48, r25	; 0x30
     a9e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     aa0:	8f a5       	ldd	r24, Y+47	; 0x2f
     aa2:	98 a9       	ldd	r25, Y+48	; 0x30
     aa4:	00 97       	sbiw	r24, 0x00	; 0
     aa6:	69 f7       	brne	.-38     	; 0xa82 <resize+0x628>
     aa8:	14 c0       	rjmp	.+40     	; 0xad2 <resize+0x678>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     aaa:	69 a9       	ldd	r22, Y+49	; 0x31
     aac:	7a a9       	ldd	r23, Y+50	; 0x32
     aae:	8b a9       	ldd	r24, Y+51	; 0x33
     ab0:	9c a9       	ldd	r25, Y+52	; 0x34
     ab2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     ab6:	dc 01       	movw	r26, r24
     ab8:	cb 01       	movw	r24, r22
     aba:	98 ab       	std	Y+48, r25	; 0x30
     abc:	8f a7       	std	Y+47, r24	; 0x2f
     abe:	8f a5       	ldd	r24, Y+47	; 0x2f
     ac0:	98 a9       	ldd	r25, Y+48	; 0x30
     ac2:	9c a7       	std	Y+44, r25	; 0x2c
     ac4:	8b a7       	std	Y+43, r24	; 0x2b
     ac6:	8b a5       	ldd	r24, Y+43	; 0x2b
     ac8:	9c a5       	ldd	r25, Y+44	; 0x2c
     aca:	01 97       	sbiw	r24, 0x01	; 1
     acc:	f1 f7       	brne	.-4      	; 0xaca <resize+0x670>
     ace:	9c a7       	std	Y+44, r25	; 0x2c
     ad0:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x01; _delay_ms(1);
     ad2:	ec e2       	ldi	r30, 0x2C	; 44
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	80 83       	st	Z, r24
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	90 e0       	ldi	r25, 0x00	; 0
     ade:	a0 e8       	ldi	r26, 0x80	; 128
     ae0:	bf e3       	ldi	r27, 0x3F	; 63
     ae2:	8f a3       	std	Y+39, r24	; 0x27
     ae4:	98 a7       	std	Y+40, r25	; 0x28
     ae6:	a9 a7       	std	Y+41, r26	; 0x29
     ae8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     aea:	6f a1       	ldd	r22, Y+39	; 0x27
     aec:	78 a5       	ldd	r23, Y+40	; 0x28
     aee:	89 a5       	ldd	r24, Y+41	; 0x29
     af0:	9a a5       	ldd	r25, Y+42	; 0x2a
     af2:	20 e0       	ldi	r18, 0x00	; 0
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	4a e7       	ldi	r20, 0x7A	; 122
     af8:	55 e4       	ldi	r21, 0x45	; 69
     afa:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     afe:	dc 01       	movw	r26, r24
     b00:	cb 01       	movw	r24, r22
     b02:	8b a3       	std	Y+35, r24	; 0x23
     b04:	9c a3       	std	Y+36, r25	; 0x24
     b06:	ad a3       	std	Y+37, r26	; 0x25
     b08:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     b0a:	6b a1       	ldd	r22, Y+35	; 0x23
     b0c:	7c a1       	ldd	r23, Y+36	; 0x24
     b0e:	8d a1       	ldd	r24, Y+37	; 0x25
     b10:	9e a1       	ldd	r25, Y+38	; 0x26
     b12:	20 e0       	ldi	r18, 0x00	; 0
     b14:	30 e0       	ldi	r19, 0x00	; 0
     b16:	40 e8       	ldi	r20, 0x80	; 128
     b18:	5f e3       	ldi	r21, 0x3F	; 63
     b1a:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     b1e:	88 23       	and	r24, r24
     b20:	2c f4       	brge	.+10     	; 0xb2c <resize+0x6d2>
		__ticks = 1;
     b22:	81 e0       	ldi	r24, 0x01	; 1
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	9a a3       	std	Y+34, r25	; 0x22
     b28:	89 a3       	std	Y+33, r24	; 0x21
     b2a:	3f c0       	rjmp	.+126    	; 0xbaa <resize+0x750>
	else if (__tmp > 65535)
     b2c:	6b a1       	ldd	r22, Y+35	; 0x23
     b2e:	7c a1       	ldd	r23, Y+36	; 0x24
     b30:	8d a1       	ldd	r24, Y+37	; 0x25
     b32:	9e a1       	ldd	r25, Y+38	; 0x26
     b34:	20 e0       	ldi	r18, 0x00	; 0
     b36:	3f ef       	ldi	r19, 0xFF	; 255
     b38:	4f e7       	ldi	r20, 0x7F	; 127
     b3a:	57 e4       	ldi	r21, 0x47	; 71
     b3c:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     b40:	18 16       	cp	r1, r24
     b42:	4c f5       	brge	.+82     	; 0xb96 <resize+0x73c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b44:	6f a1       	ldd	r22, Y+39	; 0x27
     b46:	78 a5       	ldd	r23, Y+40	; 0x28
     b48:	89 a5       	ldd	r24, Y+41	; 0x29
     b4a:	9a a5       	ldd	r25, Y+42	; 0x2a
     b4c:	20 e0       	ldi	r18, 0x00	; 0
     b4e:	30 e0       	ldi	r19, 0x00	; 0
     b50:	40 e2       	ldi	r20, 0x20	; 32
     b52:	51 e4       	ldi	r21, 0x41	; 65
     b54:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     b58:	dc 01       	movw	r26, r24
     b5a:	cb 01       	movw	r24, r22
     b5c:	bc 01       	movw	r22, r24
     b5e:	cd 01       	movw	r24, r26
     b60:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     b64:	dc 01       	movw	r26, r24
     b66:	cb 01       	movw	r24, r22
     b68:	9a a3       	std	Y+34, r25	; 0x22
     b6a:	89 a3       	std	Y+33, r24	; 0x21
     b6c:	0f c0       	rjmp	.+30     	; 0xb8c <resize+0x732>
     b6e:	80 e9       	ldi	r24, 0x90	; 144
     b70:	91 e0       	ldi	r25, 0x01	; 1
     b72:	98 a3       	std	Y+32, r25	; 0x20
     b74:	8f 8f       	std	Y+31, r24	; 0x1f
     b76:	8f 8d       	ldd	r24, Y+31	; 0x1f
     b78:	98 a1       	ldd	r25, Y+32	; 0x20
     b7a:	01 97       	sbiw	r24, 0x01	; 1
     b7c:	f1 f7       	brne	.-4      	; 0xb7a <resize+0x720>
     b7e:	98 a3       	std	Y+32, r25	; 0x20
     b80:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b82:	89 a1       	ldd	r24, Y+33	; 0x21
     b84:	9a a1       	ldd	r25, Y+34	; 0x22
     b86:	01 97       	sbiw	r24, 0x01	; 1
     b88:	9a a3       	std	Y+34, r25	; 0x22
     b8a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b8c:	89 a1       	ldd	r24, Y+33	; 0x21
     b8e:	9a a1       	ldd	r25, Y+34	; 0x22
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	69 f7       	brne	.-38     	; 0xb6e <resize+0x714>
     b94:	14 c0       	rjmp	.+40     	; 0xbbe <resize+0x764>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b96:	6b a1       	ldd	r22, Y+35	; 0x23
     b98:	7c a1       	ldd	r23, Y+36	; 0x24
     b9a:	8d a1       	ldd	r24, Y+37	; 0x25
     b9c:	9e a1       	ldd	r25, Y+38	; 0x26
     b9e:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     ba2:	dc 01       	movw	r26, r24
     ba4:	cb 01       	movw	r24, r22
     ba6:	9a a3       	std	Y+34, r25	; 0x22
     ba8:	89 a3       	std	Y+33, r24	; 0x21
     baa:	89 a1       	ldd	r24, Y+33	; 0x21
     bac:	9a a1       	ldd	r25, Y+34	; 0x22
     bae:	9e 8f       	std	Y+30, r25	; 0x1e
     bb0:	8d 8f       	std	Y+29, r24	; 0x1d
     bb2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     bb4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     bb6:	01 97       	sbiw	r24, 0x01	; 1
     bb8:	f1 f7       	brne	.-4      	; 0xbb6 <resize+0x75c>
     bba:	9e 8f       	std	Y+30, r25	; 0x1e
     bbc:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x00; _delay_ms(1);
     bbe:	ec e2       	ldi	r30, 0x2C	; 44
     bc0:	f0 e0       	ldi	r31, 0x00	; 0
     bc2:	10 82       	st	Z, r1
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	a0 e8       	ldi	r26, 0x80	; 128
     bca:	bf e3       	ldi	r27, 0x3F	; 63
     bcc:	89 8f       	std	Y+25, r24	; 0x19
     bce:	9a 8f       	std	Y+26, r25	; 0x1a
     bd0:	ab 8f       	std	Y+27, r26	; 0x1b
     bd2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     bd4:	69 8d       	ldd	r22, Y+25	; 0x19
     bd6:	7a 8d       	ldd	r23, Y+26	; 0x1a
     bd8:	8b 8d       	ldd	r24, Y+27	; 0x1b
     bda:	9c 8d       	ldd	r25, Y+28	; 0x1c
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	30 e0       	ldi	r19, 0x00	; 0
     be0:	4a e7       	ldi	r20, 0x7A	; 122
     be2:	55 e4       	ldi	r21, 0x45	; 69
     be4:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     be8:	dc 01       	movw	r26, r24
     bea:	cb 01       	movw	r24, r22
     bec:	8d 8b       	std	Y+21, r24	; 0x15
     bee:	9e 8b       	std	Y+22, r25	; 0x16
     bf0:	af 8b       	std	Y+23, r26	; 0x17
     bf2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     bf4:	6d 89       	ldd	r22, Y+21	; 0x15
     bf6:	7e 89       	ldd	r23, Y+22	; 0x16
     bf8:	8f 89       	ldd	r24, Y+23	; 0x17
     bfa:	98 8d       	ldd	r25, Y+24	; 0x18
     bfc:	20 e0       	ldi	r18, 0x00	; 0
     bfe:	30 e0       	ldi	r19, 0x00	; 0
     c00:	40 e8       	ldi	r20, 0x80	; 128
     c02:	5f e3       	ldi	r21, 0x3F	; 63
     c04:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     c08:	88 23       	and	r24, r24
     c0a:	2c f4       	brge	.+10     	; 0xc16 <resize+0x7bc>
		__ticks = 1;
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	9c 8b       	std	Y+20, r25	; 0x14
     c12:	8b 8b       	std	Y+19, r24	; 0x13
     c14:	3f c0       	rjmp	.+126    	; 0xc94 <resize+0x83a>
	else if (__tmp > 65535)
     c16:	6d 89       	ldd	r22, Y+21	; 0x15
     c18:	7e 89       	ldd	r23, Y+22	; 0x16
     c1a:	8f 89       	ldd	r24, Y+23	; 0x17
     c1c:	98 8d       	ldd	r25, Y+24	; 0x18
     c1e:	20 e0       	ldi	r18, 0x00	; 0
     c20:	3f ef       	ldi	r19, 0xFF	; 255
     c22:	4f e7       	ldi	r20, 0x7F	; 127
     c24:	57 e4       	ldi	r21, 0x47	; 71
     c26:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     c2a:	18 16       	cp	r1, r24
     c2c:	4c f5       	brge	.+82     	; 0xc80 <resize+0x826>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c2e:	69 8d       	ldd	r22, Y+25	; 0x19
     c30:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c32:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c34:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c36:	20 e0       	ldi	r18, 0x00	; 0
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	40 e2       	ldi	r20, 0x20	; 32
     c3c:	51 e4       	ldi	r21, 0x41	; 65
     c3e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     c42:	dc 01       	movw	r26, r24
     c44:	cb 01       	movw	r24, r22
     c46:	bc 01       	movw	r22, r24
     c48:	cd 01       	movw	r24, r26
     c4a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     c4e:	dc 01       	movw	r26, r24
     c50:	cb 01       	movw	r24, r22
     c52:	9c 8b       	std	Y+20, r25	; 0x14
     c54:	8b 8b       	std	Y+19, r24	; 0x13
     c56:	0f c0       	rjmp	.+30     	; 0xc76 <resize+0x81c>
     c58:	80 e9       	ldi	r24, 0x90	; 144
     c5a:	91 e0       	ldi	r25, 0x01	; 1
     c5c:	9a 8b       	std	Y+18, r25	; 0x12
     c5e:	89 8b       	std	Y+17, r24	; 0x11
     c60:	89 89       	ldd	r24, Y+17	; 0x11
     c62:	9a 89       	ldd	r25, Y+18	; 0x12
     c64:	01 97       	sbiw	r24, 0x01	; 1
     c66:	f1 f7       	brne	.-4      	; 0xc64 <resize+0x80a>
     c68:	9a 8b       	std	Y+18, r25	; 0x12
     c6a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c6c:	8b 89       	ldd	r24, Y+19	; 0x13
     c6e:	9c 89       	ldd	r25, Y+20	; 0x14
     c70:	01 97       	sbiw	r24, 0x01	; 1
     c72:	9c 8b       	std	Y+20, r25	; 0x14
     c74:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c76:	8b 89       	ldd	r24, Y+19	; 0x13
     c78:	9c 89       	ldd	r25, Y+20	; 0x14
     c7a:	00 97       	sbiw	r24, 0x00	; 0
     c7c:	69 f7       	brne	.-38     	; 0xc58 <resize+0x7fe>
     c7e:	14 c0       	rjmp	.+40     	; 0xca8 <resize+0x84e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c80:	6d 89       	ldd	r22, Y+21	; 0x15
     c82:	7e 89       	ldd	r23, Y+22	; 0x16
     c84:	8f 89       	ldd	r24, Y+23	; 0x17
     c86:	98 8d       	ldd	r25, Y+24	; 0x18
     c88:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     c8c:	dc 01       	movw	r26, r24
     c8e:	cb 01       	movw	r24, r22
     c90:	9c 8b       	std	Y+20, r25	; 0x14
     c92:	8b 8b       	std	Y+19, r24	; 0x13
     c94:	8b 89       	ldd	r24, Y+19	; 0x13
     c96:	9c 89       	ldd	r25, Y+20	; 0x14
     c98:	98 8b       	std	Y+16, r25	; 0x10
     c9a:	8f 87       	std	Y+15, r24	; 0x0f
     c9c:	8f 85       	ldd	r24, Y+15	; 0x0f
     c9e:	98 89       	ldd	r25, Y+16	; 0x10
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	f1 f7       	brne	.-4      	; 0xca0 <resize+0x846>
     ca4:	98 8b       	std	Y+16, r25	; 0x10
     ca6:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x19; _delay_ms(1);
     ca8:	ec e2       	ldi	r30, 0x2C	; 44
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	89 e1       	ldi	r24, 0x19	; 25
     cae:	80 83       	st	Z, r24
     cb0:	80 e0       	ldi	r24, 0x00	; 0
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	a0 e8       	ldi	r26, 0x80	; 128
     cb6:	bf e3       	ldi	r27, 0x3F	; 63
     cb8:	8b 87       	std	Y+11, r24	; 0x0b
     cba:	9c 87       	std	Y+12, r25	; 0x0c
     cbc:	ad 87       	std	Y+13, r26	; 0x0d
     cbe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cc0:	6b 85       	ldd	r22, Y+11	; 0x0b
     cc2:	7c 85       	ldd	r23, Y+12	; 0x0c
     cc4:	8d 85       	ldd	r24, Y+13	; 0x0d
     cc6:	9e 85       	ldd	r25, Y+14	; 0x0e
     cc8:	20 e0       	ldi	r18, 0x00	; 0
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	4a e7       	ldi	r20, 0x7A	; 122
     cce:	55 e4       	ldi	r21, 0x45	; 69
     cd0:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     cd4:	dc 01       	movw	r26, r24
     cd6:	cb 01       	movw	r24, r22
     cd8:	8f 83       	std	Y+7, r24	; 0x07
     cda:	98 87       	std	Y+8, r25	; 0x08
     cdc:	a9 87       	std	Y+9, r26	; 0x09
     cde:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     ce0:	6f 81       	ldd	r22, Y+7	; 0x07
     ce2:	78 85       	ldd	r23, Y+8	; 0x08
     ce4:	89 85       	ldd	r24, Y+9	; 0x09
     ce6:	9a 85       	ldd	r25, Y+10	; 0x0a
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	40 e8       	ldi	r20, 0x80	; 128
     cee:	5f e3       	ldi	r21, 0x3F	; 63
     cf0:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     cf4:	88 23       	and	r24, r24
     cf6:	2c f4       	brge	.+10     	; 0xd02 <resize+0x8a8>
		__ticks = 1;
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	9e 83       	std	Y+6, r25	; 0x06
     cfe:	8d 83       	std	Y+5, r24	; 0x05
     d00:	3f c0       	rjmp	.+126    	; 0xd80 <resize+0x926>
	else if (__tmp > 65535)
     d02:	6f 81       	ldd	r22, Y+7	; 0x07
     d04:	78 85       	ldd	r23, Y+8	; 0x08
     d06:	89 85       	ldd	r24, Y+9	; 0x09
     d08:	9a 85       	ldd	r25, Y+10	; 0x0a
     d0a:	20 e0       	ldi	r18, 0x00	; 0
     d0c:	3f ef       	ldi	r19, 0xFF	; 255
     d0e:	4f e7       	ldi	r20, 0x7F	; 127
     d10:	57 e4       	ldi	r21, 0x47	; 71
     d12:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     d16:	18 16       	cp	r1, r24
     d18:	4c f5       	brge	.+82     	; 0xd6c <resize+0x912>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d1a:	6b 85       	ldd	r22, Y+11	; 0x0b
     d1c:	7c 85       	ldd	r23, Y+12	; 0x0c
     d1e:	8d 85       	ldd	r24, Y+13	; 0x0d
     d20:	9e 85       	ldd	r25, Y+14	; 0x0e
     d22:	20 e0       	ldi	r18, 0x00	; 0
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	40 e2       	ldi	r20, 0x20	; 32
     d28:	51 e4       	ldi	r21, 0x41	; 65
     d2a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     d2e:	dc 01       	movw	r26, r24
     d30:	cb 01       	movw	r24, r22
     d32:	bc 01       	movw	r22, r24
     d34:	cd 01       	movw	r24, r26
     d36:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     d3a:	dc 01       	movw	r26, r24
     d3c:	cb 01       	movw	r24, r22
     d3e:	9e 83       	std	Y+6, r25	; 0x06
     d40:	8d 83       	std	Y+5, r24	; 0x05
     d42:	0f c0       	rjmp	.+30     	; 0xd62 <resize+0x908>
     d44:	80 e9       	ldi	r24, 0x90	; 144
     d46:	91 e0       	ldi	r25, 0x01	; 1
     d48:	9c 83       	std	Y+4, r25	; 0x04
     d4a:	8b 83       	std	Y+3, r24	; 0x03
     d4c:	8b 81       	ldd	r24, Y+3	; 0x03
     d4e:	9c 81       	ldd	r25, Y+4	; 0x04
     d50:	01 97       	sbiw	r24, 0x01	; 1
     d52:	f1 f7       	brne	.-4      	; 0xd50 <resize+0x8f6>
     d54:	9c 83       	std	Y+4, r25	; 0x04
     d56:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d58:	8d 81       	ldd	r24, Y+5	; 0x05
     d5a:	9e 81       	ldd	r25, Y+6	; 0x06
     d5c:	01 97       	sbiw	r24, 0x01	; 1
     d5e:	9e 83       	std	Y+6, r25	; 0x06
     d60:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d62:	8d 81       	ldd	r24, Y+5	; 0x05
     d64:	9e 81       	ldd	r25, Y+6	; 0x06
     d66:	00 97       	sbiw	r24, 0x00	; 0
     d68:	69 f7       	brne	.-38     	; 0xd44 <resize+0x8ea>
     d6a:	14 c0       	rjmp	.+40     	; 0xd94 <resize+0x93a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d6c:	6f 81       	ldd	r22, Y+7	; 0x07
     d6e:	78 85       	ldd	r23, Y+8	; 0x08
     d70:	89 85       	ldd	r24, Y+9	; 0x09
     d72:	9a 85       	ldd	r25, Y+10	; 0x0a
     d74:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     d78:	dc 01       	movw	r26, r24
     d7a:	cb 01       	movw	r24, r22
     d7c:	9e 83       	std	Y+6, r25	; 0x06
     d7e:	8d 83       	std	Y+5, r24	; 0x05
     d80:	8d 81       	ldd	r24, Y+5	; 0x05
     d82:	9e 81       	ldd	r25, Y+6	; 0x06
     d84:	9a 83       	std	Y+2, r25	; 0x02
     d86:	89 83       	std	Y+1, r24	; 0x01
     d88:	89 81       	ldd	r24, Y+1	; 0x01
     d8a:	9a 81       	ldd	r25, Y+2	; 0x02
     d8c:	01 97       	sbiw	r24, 0x01	; 1
     d8e:	f1 f7       	brne	.-4      	; 0xd8c <resize+0x932>
     d90:	9a 83       	std	Y+2, r25	; 0x02
     d92:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x11;
     d94:	ec e2       	ldi	r30, 0x2C	; 44
     d96:	f0 e0       	ldi	r31, 0x00	; 0
     d98:	81 e1       	ldi	r24, 0x11	; 17
     d9a:	80 83       	st	Z, r24
}
     d9c:	c0 59       	subi	r28, 0x90	; 144
     d9e:	df 4f       	sbci	r29, 0xFF	; 255
     da0:	0f b6       	in	r0, 0x3f	; 63
     da2:	f8 94       	cli
     da4:	de bf       	out	0x3e, r29	; 62
     da6:	0f be       	out	0x3f, r0	; 63
     da8:	cd bf       	out	0x3d, r28	; 61
     daa:	cf 91       	pop	r28
     dac:	df 91       	pop	r29
     dae:	1f 91       	pop	r17
     db0:	0f 91       	pop	r16
     db2:	08 95       	ret

00000db4 <set_rate>:
 
void set_rate(){
     db4:	0f 93       	push	r16
     db6:	1f 93       	push	r17
     db8:	df 93       	push	r29
     dba:	cf 93       	push	r28
     dbc:	cd b7       	in	r28, 0x3d	; 61
     dbe:	de b7       	in	r29, 0x3e	; 62
     dc0:	c4 55       	subi	r28, 0x54	; 84
     dc2:	d0 40       	sbci	r29, 0x00	; 0
     dc4:	0f b6       	in	r0, 0x3f	; 63
     dc6:	f8 94       	cli
     dc8:	de bf       	out	0x3e, r29	; 62
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nSET_RATE ");
     dce:	00 d0       	rcall	.+0      	; 0xdd0 <set_rate+0x1c>
     dd0:	ed b7       	in	r30, 0x3d	; 61
     dd2:	fe b7       	in	r31, 0x3e	; 62
     dd4:	31 96       	adiw	r30, 0x01	; 1
     dd6:	85 e1       	ldi	r24, 0x15	; 21
     dd8:	91 e0       	ldi	r25, 0x01	; 1
     dda:	91 83       	std	Z+1, r25	; 0x01
     ddc:	80 83       	st	Z, r24
     dde:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
     de2:	0f 90       	pop	r0
     de4:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
     de6:	ec e2       	ldi	r30, 0x2C	; 44
     de8:	f0 e0       	ldi	r31, 0x00	; 0
     dea:	86 e5       	ldi	r24, 0x56	; 86
     dec:	80 83       	st	Z, r24
     dee:	fe 01       	movw	r30, r28
     df0:	ef 5a       	subi	r30, 0xAF	; 175
     df2:	ff 4f       	sbci	r31, 0xFF	; 255
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	a0 e8       	ldi	r26, 0x80	; 128
     dfa:	bf e3       	ldi	r27, 0x3F	; 63
     dfc:	80 83       	st	Z, r24
     dfe:	91 83       	std	Z+1, r25	; 0x01
     e00:	a2 83       	std	Z+2, r26	; 0x02
     e02:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e04:	8e 01       	movw	r16, r28
     e06:	03 5b       	subi	r16, 0xB3	; 179
     e08:	1f 4f       	sbci	r17, 0xFF	; 255
     e0a:	fe 01       	movw	r30, r28
     e0c:	ef 5a       	subi	r30, 0xAF	; 175
     e0e:	ff 4f       	sbci	r31, 0xFF	; 255
     e10:	60 81       	ld	r22, Z
     e12:	71 81       	ldd	r23, Z+1	; 0x01
     e14:	82 81       	ldd	r24, Z+2	; 0x02
     e16:	93 81       	ldd	r25, Z+3	; 0x03
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	4a e7       	ldi	r20, 0x7A	; 122
     e1e:	55 e4       	ldi	r21, 0x45	; 69
     e20:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     e24:	dc 01       	movw	r26, r24
     e26:	cb 01       	movw	r24, r22
     e28:	f8 01       	movw	r30, r16
     e2a:	80 83       	st	Z, r24
     e2c:	91 83       	std	Z+1, r25	; 0x01
     e2e:	a2 83       	std	Z+2, r26	; 0x02
     e30:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e32:	fe 01       	movw	r30, r28
     e34:	e3 5b       	subi	r30, 0xB3	; 179
     e36:	ff 4f       	sbci	r31, 0xFF	; 255
     e38:	60 81       	ld	r22, Z
     e3a:	71 81       	ldd	r23, Z+1	; 0x01
     e3c:	82 81       	ldd	r24, Z+2	; 0x02
     e3e:	93 81       	ldd	r25, Z+3	; 0x03
     e40:	20 e0       	ldi	r18, 0x00	; 0
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	40 e8       	ldi	r20, 0x80	; 128
     e46:	5f e3       	ldi	r21, 0x3F	; 63
     e48:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     e4c:	88 23       	and	r24, r24
     e4e:	44 f4       	brge	.+16     	; 0xe60 <set_rate+0xac>
		__ticks = 1;
     e50:	fe 01       	movw	r30, r28
     e52:	e5 5b       	subi	r30, 0xB5	; 181
     e54:	ff 4f       	sbci	r31, 0xFF	; 255
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	91 83       	std	Z+1, r25	; 0x01
     e5c:	80 83       	st	Z, r24
     e5e:	64 c0       	rjmp	.+200    	; 0xf28 <set_rate+0x174>
	else if (__tmp > 65535)
     e60:	fe 01       	movw	r30, r28
     e62:	e3 5b       	subi	r30, 0xB3	; 179
     e64:	ff 4f       	sbci	r31, 0xFF	; 255
     e66:	60 81       	ld	r22, Z
     e68:	71 81       	ldd	r23, Z+1	; 0x01
     e6a:	82 81       	ldd	r24, Z+2	; 0x02
     e6c:	93 81       	ldd	r25, Z+3	; 0x03
     e6e:	20 e0       	ldi	r18, 0x00	; 0
     e70:	3f ef       	ldi	r19, 0xFF	; 255
     e72:	4f e7       	ldi	r20, 0x7F	; 127
     e74:	57 e4       	ldi	r21, 0x47	; 71
     e76:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     e7a:	18 16       	cp	r1, r24
     e7c:	0c f0       	brlt	.+2      	; 0xe80 <set_rate+0xcc>
     e7e:	43 c0       	rjmp	.+134    	; 0xf06 <set_rate+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e80:	fe 01       	movw	r30, r28
     e82:	ef 5a       	subi	r30, 0xAF	; 175
     e84:	ff 4f       	sbci	r31, 0xFF	; 255
     e86:	60 81       	ld	r22, Z
     e88:	71 81       	ldd	r23, Z+1	; 0x01
     e8a:	82 81       	ldd	r24, Z+2	; 0x02
     e8c:	93 81       	ldd	r25, Z+3	; 0x03
     e8e:	20 e0       	ldi	r18, 0x00	; 0
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	40 e2       	ldi	r20, 0x20	; 32
     e94:	51 e4       	ldi	r21, 0x41	; 65
     e96:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     e9a:	dc 01       	movw	r26, r24
     e9c:	cb 01       	movw	r24, r22
     e9e:	8e 01       	movw	r16, r28
     ea0:	05 5b       	subi	r16, 0xB5	; 181
     ea2:	1f 4f       	sbci	r17, 0xFF	; 255
     ea4:	bc 01       	movw	r22, r24
     ea6:	cd 01       	movw	r24, r26
     ea8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     eac:	dc 01       	movw	r26, r24
     eae:	cb 01       	movw	r24, r22
     eb0:	f8 01       	movw	r30, r16
     eb2:	91 83       	std	Z+1, r25	; 0x01
     eb4:	80 83       	st	Z, r24
     eb6:	1f c0       	rjmp	.+62     	; 0xef6 <set_rate+0x142>
     eb8:	fe 01       	movw	r30, r28
     eba:	e7 5b       	subi	r30, 0xB7	; 183
     ebc:	ff 4f       	sbci	r31, 0xFF	; 255
     ebe:	80 e9       	ldi	r24, 0x90	; 144
     ec0:	91 e0       	ldi	r25, 0x01	; 1
     ec2:	91 83       	std	Z+1, r25	; 0x01
     ec4:	80 83       	st	Z, r24
     ec6:	fe 01       	movw	r30, r28
     ec8:	e7 5b       	subi	r30, 0xB7	; 183
     eca:	ff 4f       	sbci	r31, 0xFF	; 255
     ecc:	80 81       	ld	r24, Z
     ece:	91 81       	ldd	r25, Z+1	; 0x01
     ed0:	01 97       	sbiw	r24, 0x01	; 1
     ed2:	f1 f7       	brne	.-4      	; 0xed0 <set_rate+0x11c>
     ed4:	fe 01       	movw	r30, r28
     ed6:	e7 5b       	subi	r30, 0xB7	; 183
     ed8:	ff 4f       	sbci	r31, 0xFF	; 255
     eda:	91 83       	std	Z+1, r25	; 0x01
     edc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ede:	de 01       	movw	r26, r28
     ee0:	a5 5b       	subi	r26, 0xB5	; 181
     ee2:	bf 4f       	sbci	r27, 0xFF	; 255
     ee4:	fe 01       	movw	r30, r28
     ee6:	e5 5b       	subi	r30, 0xB5	; 181
     ee8:	ff 4f       	sbci	r31, 0xFF	; 255
     eea:	80 81       	ld	r24, Z
     eec:	91 81       	ldd	r25, Z+1	; 0x01
     eee:	01 97       	sbiw	r24, 0x01	; 1
     ef0:	11 96       	adiw	r26, 0x01	; 1
     ef2:	9c 93       	st	X, r25
     ef4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ef6:	fe 01       	movw	r30, r28
     ef8:	e5 5b       	subi	r30, 0xB5	; 181
     efa:	ff 4f       	sbci	r31, 0xFF	; 255
     efc:	80 81       	ld	r24, Z
     efe:	91 81       	ldd	r25, Z+1	; 0x01
     f00:	00 97       	sbiw	r24, 0x00	; 0
     f02:	d1 f6       	brne	.-76     	; 0xeb8 <set_rate+0x104>
     f04:	27 c0       	rjmp	.+78     	; 0xf54 <set_rate+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f06:	8e 01       	movw	r16, r28
     f08:	05 5b       	subi	r16, 0xB5	; 181
     f0a:	1f 4f       	sbci	r17, 0xFF	; 255
     f0c:	fe 01       	movw	r30, r28
     f0e:	e3 5b       	subi	r30, 0xB3	; 179
     f10:	ff 4f       	sbci	r31, 0xFF	; 255
     f12:	60 81       	ld	r22, Z
     f14:	71 81       	ldd	r23, Z+1	; 0x01
     f16:	82 81       	ldd	r24, Z+2	; 0x02
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
     f1e:	dc 01       	movw	r26, r24
     f20:	cb 01       	movw	r24, r22
     f22:	f8 01       	movw	r30, r16
     f24:	91 83       	std	Z+1, r25	; 0x01
     f26:	80 83       	st	Z, r24
     f28:	de 01       	movw	r26, r28
     f2a:	a9 5b       	subi	r26, 0xB9	; 185
     f2c:	bf 4f       	sbci	r27, 0xFF	; 255
     f2e:	fe 01       	movw	r30, r28
     f30:	e5 5b       	subi	r30, 0xB5	; 181
     f32:	ff 4f       	sbci	r31, 0xFF	; 255
     f34:	80 81       	ld	r24, Z
     f36:	91 81       	ldd	r25, Z+1	; 0x01
     f38:	8d 93       	st	X+, r24
     f3a:	9c 93       	st	X, r25
     f3c:	fe 01       	movw	r30, r28
     f3e:	e9 5b       	subi	r30, 0xB9	; 185
     f40:	ff 4f       	sbci	r31, 0xFF	; 255
     f42:	80 81       	ld	r24, Z
     f44:	91 81       	ldd	r25, Z+1	; 0x01
     f46:	01 97       	sbiw	r24, 0x01	; 1
     f48:	f1 f7       	brne	.-4      	; 0xf46 <set_rate+0x192>
     f4a:	fe 01       	movw	r30, r28
     f4c:	e9 5b       	subi	r30, 0xB9	; 185
     f4e:	ff 4f       	sbci	r31, 0xFF	; 255
     f50:	91 83       	std	Z+1, r25	; 0x01
     f52:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
     f54:	ec e2       	ldi	r30, 0x2C	; 44
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	10 82       	st	Z, r1
     f5a:	fe 01       	movw	r30, r28
     f5c:	ed 5b       	subi	r30, 0xBD	; 189
     f5e:	ff 4f       	sbci	r31, 0xFF	; 255
     f60:	80 e0       	ldi	r24, 0x00	; 0
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	a0 e8       	ldi	r26, 0x80	; 128
     f66:	bf e3       	ldi	r27, 0x3F	; 63
     f68:	80 83       	st	Z, r24
     f6a:	91 83       	std	Z+1, r25	; 0x01
     f6c:	a2 83       	std	Z+2, r26	; 0x02
     f6e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f70:	8e 01       	movw	r16, r28
     f72:	01 5c       	subi	r16, 0xC1	; 193
     f74:	1f 4f       	sbci	r17, 0xFF	; 255
     f76:	fe 01       	movw	r30, r28
     f78:	ed 5b       	subi	r30, 0xBD	; 189
     f7a:	ff 4f       	sbci	r31, 0xFF	; 255
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	82 81       	ldd	r24, Z+2	; 0x02
     f82:	93 81       	ldd	r25, Z+3	; 0x03
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	4a e7       	ldi	r20, 0x7A	; 122
     f8a:	55 e4       	ldi	r21, 0x45	; 69
     f8c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     f90:	dc 01       	movw	r26, r24
     f92:	cb 01       	movw	r24, r22
     f94:	f8 01       	movw	r30, r16
     f96:	80 83       	st	Z, r24
     f98:	91 83       	std	Z+1, r25	; 0x01
     f9a:	a2 83       	std	Z+2, r26	; 0x02
     f9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f9e:	fe 01       	movw	r30, r28
     fa0:	ff 96       	adiw	r30, 0x3f	; 63
     fa2:	60 81       	ld	r22, Z
     fa4:	71 81       	ldd	r23, Z+1	; 0x01
     fa6:	82 81       	ldd	r24, Z+2	; 0x02
     fa8:	93 81       	ldd	r25, Z+3	; 0x03
     faa:	20 e0       	ldi	r18, 0x00	; 0
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	40 e8       	ldi	r20, 0x80	; 128
     fb0:	5f e3       	ldi	r21, 0x3F	; 63
     fb2:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
     fb6:	88 23       	and	r24, r24
     fb8:	2c f4       	brge	.+10     	; 0xfc4 <set_rate+0x210>
		__ticks = 1;
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	9e af       	std	Y+62, r25	; 0x3e
     fc0:	8d af       	std	Y+61, r24	; 0x3d
     fc2:	46 c0       	rjmp	.+140    	; 0x1050 <set_rate+0x29c>
	else if (__tmp > 65535)
     fc4:	fe 01       	movw	r30, r28
     fc6:	ff 96       	adiw	r30, 0x3f	; 63
     fc8:	60 81       	ld	r22, Z
     fca:	71 81       	ldd	r23, Z+1	; 0x01
     fcc:	82 81       	ldd	r24, Z+2	; 0x02
     fce:	93 81       	ldd	r25, Z+3	; 0x03
     fd0:	20 e0       	ldi	r18, 0x00	; 0
     fd2:	3f ef       	ldi	r19, 0xFF	; 255
     fd4:	4f e7       	ldi	r20, 0x7F	; 127
     fd6:	57 e4       	ldi	r21, 0x47	; 71
     fd8:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
     fdc:	18 16       	cp	r1, r24
     fde:	64 f5       	brge	.+88     	; 0x1038 <set_rate+0x284>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     fe0:	fe 01       	movw	r30, r28
     fe2:	ed 5b       	subi	r30, 0xBD	; 189
     fe4:	ff 4f       	sbci	r31, 0xFF	; 255
     fe6:	60 81       	ld	r22, Z
     fe8:	71 81       	ldd	r23, Z+1	; 0x01
     fea:	82 81       	ldd	r24, Z+2	; 0x02
     fec:	93 81       	ldd	r25, Z+3	; 0x03
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	40 e2       	ldi	r20, 0x20	; 32
     ff4:	51 e4       	ldi	r21, 0x41	; 65
     ff6:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
     ffa:	dc 01       	movw	r26, r24
     ffc:	cb 01       	movw	r24, r22
     ffe:	bc 01       	movw	r22, r24
    1000:	cd 01       	movw	r24, r26
    1002:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1006:	dc 01       	movw	r26, r24
    1008:	cb 01       	movw	r24, r22
    100a:	9e af       	std	Y+62, r25	; 0x3e
    100c:	8d af       	std	Y+61, r24	; 0x3d
    100e:	0f c0       	rjmp	.+30     	; 0x102e <set_rate+0x27a>
    1010:	80 e9       	ldi	r24, 0x90	; 144
    1012:	91 e0       	ldi	r25, 0x01	; 1
    1014:	9c af       	std	Y+60, r25	; 0x3c
    1016:	8b af       	std	Y+59, r24	; 0x3b
    1018:	8b ad       	ldd	r24, Y+59	; 0x3b
    101a:	9c ad       	ldd	r25, Y+60	; 0x3c
    101c:	01 97       	sbiw	r24, 0x01	; 1
    101e:	f1 f7       	brne	.-4      	; 0x101c <set_rate+0x268>
    1020:	9c af       	std	Y+60, r25	; 0x3c
    1022:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1024:	8d ad       	ldd	r24, Y+61	; 0x3d
    1026:	9e ad       	ldd	r25, Y+62	; 0x3e
    1028:	01 97       	sbiw	r24, 0x01	; 1
    102a:	9e af       	std	Y+62, r25	; 0x3e
    102c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    102e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1030:	9e ad       	ldd	r25, Y+62	; 0x3e
    1032:	00 97       	sbiw	r24, 0x00	; 0
    1034:	69 f7       	brne	.-38     	; 0x1010 <set_rate+0x25c>
    1036:	16 c0       	rjmp	.+44     	; 0x1064 <set_rate+0x2b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1038:	fe 01       	movw	r30, r28
    103a:	ff 96       	adiw	r30, 0x3f	; 63
    103c:	60 81       	ld	r22, Z
    103e:	71 81       	ldd	r23, Z+1	; 0x01
    1040:	82 81       	ldd	r24, Z+2	; 0x02
    1042:	93 81       	ldd	r25, Z+3	; 0x03
    1044:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1048:	dc 01       	movw	r26, r24
    104a:	cb 01       	movw	r24, r22
    104c:	9e af       	std	Y+62, r25	; 0x3e
    104e:	8d af       	std	Y+61, r24	; 0x3d
    1050:	8d ad       	ldd	r24, Y+61	; 0x3d
    1052:	9e ad       	ldd	r25, Y+62	; 0x3e
    1054:	9a af       	std	Y+58, r25	; 0x3a
    1056:	89 af       	std	Y+57, r24	; 0x39
    1058:	89 ad       	ldd	r24, Y+57	; 0x39
    105a:	9a ad       	ldd	r25, Y+58	; 0x3a
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	f1 f7       	brne	.-4      	; 0x105c <set_rate+0x2a8>
    1060:	9a af       	std	Y+58, r25	; 0x3a
    1062:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x24; _delay_ms(1);
    1064:	ec e2       	ldi	r30, 0x2C	; 44
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	84 e2       	ldi	r24, 0x24	; 36
    106a:	80 83       	st	Z, r24
    106c:	80 e0       	ldi	r24, 0x00	; 0
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	a0 e8       	ldi	r26, 0x80	; 128
    1072:	bf e3       	ldi	r27, 0x3F	; 63
    1074:	8d ab       	std	Y+53, r24	; 0x35
    1076:	9e ab       	std	Y+54, r25	; 0x36
    1078:	af ab       	std	Y+55, r26	; 0x37
    107a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    107c:	6d a9       	ldd	r22, Y+53	; 0x35
    107e:	7e a9       	ldd	r23, Y+54	; 0x36
    1080:	8f a9       	ldd	r24, Y+55	; 0x37
    1082:	98 ad       	ldd	r25, Y+56	; 0x38
    1084:	20 e0       	ldi	r18, 0x00	; 0
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	4a e7       	ldi	r20, 0x7A	; 122
    108a:	55 e4       	ldi	r21, 0x45	; 69
    108c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1090:	dc 01       	movw	r26, r24
    1092:	cb 01       	movw	r24, r22
    1094:	89 ab       	std	Y+49, r24	; 0x31
    1096:	9a ab       	std	Y+50, r25	; 0x32
    1098:	ab ab       	std	Y+51, r26	; 0x33
    109a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    109c:	69 a9       	ldd	r22, Y+49	; 0x31
    109e:	7a a9       	ldd	r23, Y+50	; 0x32
    10a0:	8b a9       	ldd	r24, Y+51	; 0x33
    10a2:	9c a9       	ldd	r25, Y+52	; 0x34
    10a4:	20 e0       	ldi	r18, 0x00	; 0
    10a6:	30 e0       	ldi	r19, 0x00	; 0
    10a8:	40 e8       	ldi	r20, 0x80	; 128
    10aa:	5f e3       	ldi	r21, 0x3F	; 63
    10ac:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    10b0:	88 23       	and	r24, r24
    10b2:	2c f4       	brge	.+10     	; 0x10be <set_rate+0x30a>
		__ticks = 1;
    10b4:	81 e0       	ldi	r24, 0x01	; 1
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	98 ab       	std	Y+48, r25	; 0x30
    10ba:	8f a7       	std	Y+47, r24	; 0x2f
    10bc:	3f c0       	rjmp	.+126    	; 0x113c <__stack+0x3d>
	else if (__tmp > 65535)
    10be:	69 a9       	ldd	r22, Y+49	; 0x31
    10c0:	7a a9       	ldd	r23, Y+50	; 0x32
    10c2:	8b a9       	ldd	r24, Y+51	; 0x33
    10c4:	9c a9       	ldd	r25, Y+52	; 0x34
    10c6:	20 e0       	ldi	r18, 0x00	; 0
    10c8:	3f ef       	ldi	r19, 0xFF	; 255
    10ca:	4f e7       	ldi	r20, 0x7F	; 127
    10cc:	57 e4       	ldi	r21, 0x47	; 71
    10ce:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    10d2:	18 16       	cp	r1, r24
    10d4:	4c f5       	brge	.+82     	; 0x1128 <__stack+0x29>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10d6:	6d a9       	ldd	r22, Y+53	; 0x35
    10d8:	7e a9       	ldd	r23, Y+54	; 0x36
    10da:	8f a9       	ldd	r24, Y+55	; 0x37
    10dc:	98 ad       	ldd	r25, Y+56	; 0x38
    10de:	20 e0       	ldi	r18, 0x00	; 0
    10e0:	30 e0       	ldi	r19, 0x00	; 0
    10e2:	40 e2       	ldi	r20, 0x20	; 32
    10e4:	51 e4       	ldi	r21, 0x41	; 65
    10e6:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    10ea:	dc 01       	movw	r26, r24
    10ec:	cb 01       	movw	r24, r22
    10ee:	bc 01       	movw	r22, r24
    10f0:	cd 01       	movw	r24, r26
    10f2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    10f6:	dc 01       	movw	r26, r24
    10f8:	cb 01       	movw	r24, r22
    10fa:	98 ab       	std	Y+48, r25	; 0x30
    10fc:	8f a7       	std	Y+47, r24	; 0x2f
    10fe:	0f c0       	rjmp	.+30     	; 0x111e <__stack+0x1f>
    1100:	80 e9       	ldi	r24, 0x90	; 144
    1102:	91 e0       	ldi	r25, 0x01	; 1
    1104:	9e a7       	std	Y+46, r25	; 0x2e
    1106:	8d a7       	std	Y+45, r24	; 0x2d
    1108:	8d a5       	ldd	r24, Y+45	; 0x2d
    110a:	9e a5       	ldd	r25, Y+46	; 0x2e
    110c:	01 97       	sbiw	r24, 0x01	; 1
    110e:	f1 f7       	brne	.-4      	; 0x110c <__stack+0xd>
    1110:	9e a7       	std	Y+46, r25	; 0x2e
    1112:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1114:	8f a5       	ldd	r24, Y+47	; 0x2f
    1116:	98 a9       	ldd	r25, Y+48	; 0x30
    1118:	01 97       	sbiw	r24, 0x01	; 1
    111a:	98 ab       	std	Y+48, r25	; 0x30
    111c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    111e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1120:	98 a9       	ldd	r25, Y+48	; 0x30
    1122:	00 97       	sbiw	r24, 0x00	; 0
    1124:	69 f7       	brne	.-38     	; 0x1100 <__stack+0x1>
    1126:	14 c0       	rjmp	.+40     	; 0x1150 <__stack+0x51>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1128:	69 a9       	ldd	r22, Y+49	; 0x31
    112a:	7a a9       	ldd	r23, Y+50	; 0x32
    112c:	8b a9       	ldd	r24, Y+51	; 0x33
    112e:	9c a9       	ldd	r25, Y+52	; 0x34
    1130:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22
    1138:	98 ab       	std	Y+48, r25	; 0x30
    113a:	8f a7       	std	Y+47, r24	; 0x2f
    113c:	8f a5       	ldd	r24, Y+47	; 0x2f
    113e:	98 a9       	ldd	r25, Y+48	; 0x30
    1140:	9c a7       	std	Y+44, r25	; 0x2c
    1142:	8b a7       	std	Y+43, r24	; 0x2b
    1144:	8b a5       	ldd	r24, Y+43	; 0x2b
    1146:	9c a5       	ldd	r25, Y+44	; 0x2c
    1148:	01 97       	sbiw	r24, 0x01	; 1
    114a:	f1 f7       	brne	.-4      	; 0x1148 <__stack+0x49>
    114c:	9c a7       	std	Y+44, r25	; 0x2c
    114e:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x03; _delay_ms(1);
    1150:	ec e2       	ldi	r30, 0x2C	; 44
    1152:	f0 e0       	ldi	r31, 0x00	; 0
    1154:	83 e0       	ldi	r24, 0x03	; 3
    1156:	80 83       	st	Z, r24
    1158:	80 e0       	ldi	r24, 0x00	; 0
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	a0 e8       	ldi	r26, 0x80	; 128
    115e:	bf e3       	ldi	r27, 0x3F	; 63
    1160:	8f a3       	std	Y+39, r24	; 0x27
    1162:	98 a7       	std	Y+40, r25	; 0x28
    1164:	a9 a7       	std	Y+41, r26	; 0x29
    1166:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1168:	6f a1       	ldd	r22, Y+39	; 0x27
    116a:	78 a5       	ldd	r23, Y+40	; 0x28
    116c:	89 a5       	ldd	r24, Y+41	; 0x29
    116e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1170:	20 e0       	ldi	r18, 0x00	; 0
    1172:	30 e0       	ldi	r19, 0x00	; 0
    1174:	4a e7       	ldi	r20, 0x7A	; 122
    1176:	55 e4       	ldi	r21, 0x45	; 69
    1178:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    117c:	dc 01       	movw	r26, r24
    117e:	cb 01       	movw	r24, r22
    1180:	8b a3       	std	Y+35, r24	; 0x23
    1182:	9c a3       	std	Y+36, r25	; 0x24
    1184:	ad a3       	std	Y+37, r26	; 0x25
    1186:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1188:	6b a1       	ldd	r22, Y+35	; 0x23
    118a:	7c a1       	ldd	r23, Y+36	; 0x24
    118c:	8d a1       	ldd	r24, Y+37	; 0x25
    118e:	9e a1       	ldd	r25, Y+38	; 0x26
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	40 e8       	ldi	r20, 0x80	; 128
    1196:	5f e3       	ldi	r21, 0x3F	; 63
    1198:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    119c:	88 23       	and	r24, r24
    119e:	2c f4       	brge	.+10     	; 0x11aa <__stack+0xab>
		__ticks = 1;
    11a0:	81 e0       	ldi	r24, 0x01	; 1
    11a2:	90 e0       	ldi	r25, 0x00	; 0
    11a4:	9a a3       	std	Y+34, r25	; 0x22
    11a6:	89 a3       	std	Y+33, r24	; 0x21
    11a8:	3f c0       	rjmp	.+126    	; 0x1228 <__stack+0x129>
	else if (__tmp > 65535)
    11aa:	6b a1       	ldd	r22, Y+35	; 0x23
    11ac:	7c a1       	ldd	r23, Y+36	; 0x24
    11ae:	8d a1       	ldd	r24, Y+37	; 0x25
    11b0:	9e a1       	ldd	r25, Y+38	; 0x26
    11b2:	20 e0       	ldi	r18, 0x00	; 0
    11b4:	3f ef       	ldi	r19, 0xFF	; 255
    11b6:	4f e7       	ldi	r20, 0x7F	; 127
    11b8:	57 e4       	ldi	r21, 0x47	; 71
    11ba:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    11be:	18 16       	cp	r1, r24
    11c0:	4c f5       	brge	.+82     	; 0x1214 <__stack+0x115>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11c2:	6f a1       	ldd	r22, Y+39	; 0x27
    11c4:	78 a5       	ldd	r23, Y+40	; 0x28
    11c6:	89 a5       	ldd	r24, Y+41	; 0x29
    11c8:	9a a5       	ldd	r25, Y+42	; 0x2a
    11ca:	20 e0       	ldi	r18, 0x00	; 0
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	40 e2       	ldi	r20, 0x20	; 32
    11d0:	51 e4       	ldi	r21, 0x41	; 65
    11d2:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	bc 01       	movw	r22, r24
    11dc:	cd 01       	movw	r24, r26
    11de:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    11e2:	dc 01       	movw	r26, r24
    11e4:	cb 01       	movw	r24, r22
    11e6:	9a a3       	std	Y+34, r25	; 0x22
    11e8:	89 a3       	std	Y+33, r24	; 0x21
    11ea:	0f c0       	rjmp	.+30     	; 0x120a <__stack+0x10b>
    11ec:	80 e9       	ldi	r24, 0x90	; 144
    11ee:	91 e0       	ldi	r25, 0x01	; 1
    11f0:	98 a3       	std	Y+32, r25	; 0x20
    11f2:	8f 8f       	std	Y+31, r24	; 0x1f
    11f4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    11f6:	98 a1       	ldd	r25, Y+32	; 0x20
    11f8:	01 97       	sbiw	r24, 0x01	; 1
    11fa:	f1 f7       	brne	.-4      	; 0x11f8 <__stack+0xf9>
    11fc:	98 a3       	std	Y+32, r25	; 0x20
    11fe:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1200:	89 a1       	ldd	r24, Y+33	; 0x21
    1202:	9a a1       	ldd	r25, Y+34	; 0x22
    1204:	01 97       	sbiw	r24, 0x01	; 1
    1206:	9a a3       	std	Y+34, r25	; 0x22
    1208:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    120a:	89 a1       	ldd	r24, Y+33	; 0x21
    120c:	9a a1       	ldd	r25, Y+34	; 0x22
    120e:	00 97       	sbiw	r24, 0x00	; 0
    1210:	69 f7       	brne	.-38     	; 0x11ec <__stack+0xed>
    1212:	14 c0       	rjmp	.+40     	; 0x123c <__stack+0x13d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1214:	6b a1       	ldd	r22, Y+35	; 0x23
    1216:	7c a1       	ldd	r23, Y+36	; 0x24
    1218:	8d a1       	ldd	r24, Y+37	; 0x25
    121a:	9e a1       	ldd	r25, Y+38	; 0x26
    121c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1220:	dc 01       	movw	r26, r24
    1222:	cb 01       	movw	r24, r22
    1224:	9a a3       	std	Y+34, r25	; 0x22
    1226:	89 a3       	std	Y+33, r24	; 0x21
    1228:	89 a1       	ldd	r24, Y+33	; 0x21
    122a:	9a a1       	ldd	r25, Y+34	; 0x22
    122c:	9e 8f       	std	Y+30, r25	; 0x1e
    122e:	8d 8f       	std	Y+29, r24	; 0x1d
    1230:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1232:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	f1 f7       	brne	.-4      	; 0x1234 <__stack+0x135>
    1238:	9e 8f       	std	Y+30, r25	; 0x1e
    123a:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x01; _delay_ms(1);
    123c:	ec e2       	ldi	r30, 0x2C	; 44
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	80 83       	st	Z, r24
    1244:	80 e0       	ldi	r24, 0x00	; 0
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	a0 e8       	ldi	r26, 0x80	; 128
    124a:	bf e3       	ldi	r27, 0x3F	; 63
    124c:	89 8f       	std	Y+25, r24	; 0x19
    124e:	9a 8f       	std	Y+26, r25	; 0x1a
    1250:	ab 8f       	std	Y+27, r26	; 0x1b
    1252:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1254:	69 8d       	ldd	r22, Y+25	; 0x19
    1256:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1258:	8b 8d       	ldd	r24, Y+27	; 0x1b
    125a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    125c:	20 e0       	ldi	r18, 0x00	; 0
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	4a e7       	ldi	r20, 0x7A	; 122
    1262:	55 e4       	ldi	r21, 0x45	; 69
    1264:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1268:	dc 01       	movw	r26, r24
    126a:	cb 01       	movw	r24, r22
    126c:	8d 8b       	std	Y+21, r24	; 0x15
    126e:	9e 8b       	std	Y+22, r25	; 0x16
    1270:	af 8b       	std	Y+23, r26	; 0x17
    1272:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1274:	6d 89       	ldd	r22, Y+21	; 0x15
    1276:	7e 89       	ldd	r23, Y+22	; 0x16
    1278:	8f 89       	ldd	r24, Y+23	; 0x17
    127a:	98 8d       	ldd	r25, Y+24	; 0x18
    127c:	20 e0       	ldi	r18, 0x00	; 0
    127e:	30 e0       	ldi	r19, 0x00	; 0
    1280:	40 e8       	ldi	r20, 0x80	; 128
    1282:	5f e3       	ldi	r21, 0x3F	; 63
    1284:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1288:	88 23       	and	r24, r24
    128a:	2c f4       	brge	.+10     	; 0x1296 <__stack+0x197>
		__ticks = 1;
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	9c 8b       	std	Y+20, r25	; 0x14
    1292:	8b 8b       	std	Y+19, r24	; 0x13
    1294:	3f c0       	rjmp	.+126    	; 0x1314 <__stack+0x215>
	else if (__tmp > 65535)
    1296:	6d 89       	ldd	r22, Y+21	; 0x15
    1298:	7e 89       	ldd	r23, Y+22	; 0x16
    129a:	8f 89       	ldd	r24, Y+23	; 0x17
    129c:	98 8d       	ldd	r25, Y+24	; 0x18
    129e:	20 e0       	ldi	r18, 0x00	; 0
    12a0:	3f ef       	ldi	r19, 0xFF	; 255
    12a2:	4f e7       	ldi	r20, 0x7F	; 127
    12a4:	57 e4       	ldi	r21, 0x47	; 71
    12a6:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    12aa:	18 16       	cp	r1, r24
    12ac:	4c f5       	brge	.+82     	; 0x1300 <__stack+0x201>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12ae:	69 8d       	ldd	r22, Y+25	; 0x19
    12b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12b6:	20 e0       	ldi	r18, 0x00	; 0
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	40 e2       	ldi	r20, 0x20	; 32
    12bc:	51 e4       	ldi	r21, 0x41	; 65
    12be:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    12c2:	dc 01       	movw	r26, r24
    12c4:	cb 01       	movw	r24, r22
    12c6:	bc 01       	movw	r22, r24
    12c8:	cd 01       	movw	r24, r26
    12ca:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    12ce:	dc 01       	movw	r26, r24
    12d0:	cb 01       	movw	r24, r22
    12d2:	9c 8b       	std	Y+20, r25	; 0x14
    12d4:	8b 8b       	std	Y+19, r24	; 0x13
    12d6:	0f c0       	rjmp	.+30     	; 0x12f6 <__stack+0x1f7>
    12d8:	80 e9       	ldi	r24, 0x90	; 144
    12da:	91 e0       	ldi	r25, 0x01	; 1
    12dc:	9a 8b       	std	Y+18, r25	; 0x12
    12de:	89 8b       	std	Y+17, r24	; 0x11
    12e0:	89 89       	ldd	r24, Y+17	; 0x11
    12e2:	9a 89       	ldd	r25, Y+18	; 0x12
    12e4:	01 97       	sbiw	r24, 0x01	; 1
    12e6:	f1 f7       	brne	.-4      	; 0x12e4 <__stack+0x1e5>
    12e8:	9a 8b       	std	Y+18, r25	; 0x12
    12ea:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12ec:	8b 89       	ldd	r24, Y+19	; 0x13
    12ee:	9c 89       	ldd	r25, Y+20	; 0x14
    12f0:	01 97       	sbiw	r24, 0x01	; 1
    12f2:	9c 8b       	std	Y+20, r25	; 0x14
    12f4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12f6:	8b 89       	ldd	r24, Y+19	; 0x13
    12f8:	9c 89       	ldd	r25, Y+20	; 0x14
    12fa:	00 97       	sbiw	r24, 0x00	; 0
    12fc:	69 f7       	brne	.-38     	; 0x12d8 <__stack+0x1d9>
    12fe:	14 c0       	rjmp	.+40     	; 0x1328 <__stack+0x229>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1300:	6d 89       	ldd	r22, Y+21	; 0x15
    1302:	7e 89       	ldd	r23, Y+22	; 0x16
    1304:	8f 89       	ldd	r24, Y+23	; 0x17
    1306:	98 8d       	ldd	r25, Y+24	; 0x18
    1308:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    130c:	dc 01       	movw	r26, r24
    130e:	cb 01       	movw	r24, r22
    1310:	9c 8b       	std	Y+20, r25	; 0x14
    1312:	8b 8b       	std	Y+19, r24	; 0x13
    1314:	8b 89       	ldd	r24, Y+19	; 0x13
    1316:	9c 89       	ldd	r25, Y+20	; 0x14
    1318:	98 8b       	std	Y+16, r25	; 0x10
    131a:	8f 87       	std	Y+15, r24	; 0x0f
    131c:	8f 85       	ldd	r24, Y+15	; 0x0f
    131e:	98 89       	ldd	r25, Y+16	; 0x10
    1320:	01 97       	sbiw	r24, 0x01	; 1
    1322:	f1 f7       	brne	.-4      	; 0x1320 <__stack+0x221>
    1324:	98 8b       	std	Y+16, r25	; 0x10
    1326:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x0D; _delay_ms(1);
    1328:	ec e2       	ldi	r30, 0x2C	; 44
    132a:	f0 e0       	ldi	r31, 0x00	; 0
    132c:	8d e0       	ldi	r24, 0x0D	; 13
    132e:	80 83       	st	Z, r24
    1330:	80 e0       	ldi	r24, 0x00	; 0
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	a0 e8       	ldi	r26, 0x80	; 128
    1336:	bf e3       	ldi	r27, 0x3F	; 63
    1338:	8b 87       	std	Y+11, r24	; 0x0b
    133a:	9c 87       	std	Y+12, r25	; 0x0c
    133c:	ad 87       	std	Y+13, r26	; 0x0d
    133e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1340:	6b 85       	ldd	r22, Y+11	; 0x0b
    1342:	7c 85       	ldd	r23, Y+12	; 0x0c
    1344:	8d 85       	ldd	r24, Y+13	; 0x0d
    1346:	9e 85       	ldd	r25, Y+14	; 0x0e
    1348:	20 e0       	ldi	r18, 0x00	; 0
    134a:	30 e0       	ldi	r19, 0x00	; 0
    134c:	4a e7       	ldi	r20, 0x7A	; 122
    134e:	55 e4       	ldi	r21, 0x45	; 69
    1350:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1354:	dc 01       	movw	r26, r24
    1356:	cb 01       	movw	r24, r22
    1358:	8f 83       	std	Y+7, r24	; 0x07
    135a:	98 87       	std	Y+8, r25	; 0x08
    135c:	a9 87       	std	Y+9, r26	; 0x09
    135e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1360:	6f 81       	ldd	r22, Y+7	; 0x07
    1362:	78 85       	ldd	r23, Y+8	; 0x08
    1364:	89 85       	ldd	r24, Y+9	; 0x09
    1366:	9a 85       	ldd	r25, Y+10	; 0x0a
    1368:	20 e0       	ldi	r18, 0x00	; 0
    136a:	30 e0       	ldi	r19, 0x00	; 0
    136c:	40 e8       	ldi	r20, 0x80	; 128
    136e:	5f e3       	ldi	r21, 0x3F	; 63
    1370:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1374:	88 23       	and	r24, r24
    1376:	2c f4       	brge	.+10     	; 0x1382 <__stack+0x283>
		__ticks = 1;
    1378:	81 e0       	ldi	r24, 0x01	; 1
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	9e 83       	std	Y+6, r25	; 0x06
    137e:	8d 83       	std	Y+5, r24	; 0x05
    1380:	3f c0       	rjmp	.+126    	; 0x1400 <__stack+0x301>
	else if (__tmp > 65535)
    1382:	6f 81       	ldd	r22, Y+7	; 0x07
    1384:	78 85       	ldd	r23, Y+8	; 0x08
    1386:	89 85       	ldd	r24, Y+9	; 0x09
    1388:	9a 85       	ldd	r25, Y+10	; 0x0a
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	3f ef       	ldi	r19, 0xFF	; 255
    138e:	4f e7       	ldi	r20, 0x7F	; 127
    1390:	57 e4       	ldi	r21, 0x47	; 71
    1392:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1396:	18 16       	cp	r1, r24
    1398:	4c f5       	brge	.+82     	; 0x13ec <__stack+0x2ed>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    139a:	6b 85       	ldd	r22, Y+11	; 0x0b
    139c:	7c 85       	ldd	r23, Y+12	; 0x0c
    139e:	8d 85       	ldd	r24, Y+13	; 0x0d
    13a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    13a2:	20 e0       	ldi	r18, 0x00	; 0
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	40 e2       	ldi	r20, 0x20	; 32
    13a8:	51 e4       	ldi	r21, 0x41	; 65
    13aa:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    13ae:	dc 01       	movw	r26, r24
    13b0:	cb 01       	movw	r24, r22
    13b2:	bc 01       	movw	r22, r24
    13b4:	cd 01       	movw	r24, r26
    13b6:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    13ba:	dc 01       	movw	r26, r24
    13bc:	cb 01       	movw	r24, r22
    13be:	9e 83       	std	Y+6, r25	; 0x06
    13c0:	8d 83       	std	Y+5, r24	; 0x05
    13c2:	0f c0       	rjmp	.+30     	; 0x13e2 <__stack+0x2e3>
    13c4:	80 e9       	ldi	r24, 0x90	; 144
    13c6:	91 e0       	ldi	r25, 0x01	; 1
    13c8:	9c 83       	std	Y+4, r25	; 0x04
    13ca:	8b 83       	std	Y+3, r24	; 0x03
    13cc:	8b 81       	ldd	r24, Y+3	; 0x03
    13ce:	9c 81       	ldd	r25, Y+4	; 0x04
    13d0:	01 97       	sbiw	r24, 0x01	; 1
    13d2:	f1 f7       	brne	.-4      	; 0x13d0 <__stack+0x2d1>
    13d4:	9c 83       	std	Y+4, r25	; 0x04
    13d6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13d8:	8d 81       	ldd	r24, Y+5	; 0x05
    13da:	9e 81       	ldd	r25, Y+6	; 0x06
    13dc:	01 97       	sbiw	r24, 0x01	; 1
    13de:	9e 83       	std	Y+6, r25	; 0x06
    13e0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13e2:	8d 81       	ldd	r24, Y+5	; 0x05
    13e4:	9e 81       	ldd	r25, Y+6	; 0x06
    13e6:	00 97       	sbiw	r24, 0x00	; 0
    13e8:	69 f7       	brne	.-38     	; 0x13c4 <__stack+0x2c5>
    13ea:	14 c0       	rjmp	.+40     	; 0x1414 <__stack+0x315>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13ec:	6f 81       	ldd	r22, Y+7	; 0x07
    13ee:	78 85       	ldd	r23, Y+8	; 0x08
    13f0:	89 85       	ldd	r24, Y+9	; 0x09
    13f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    13f4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    13f8:	dc 01       	movw	r26, r24
    13fa:	cb 01       	movw	r24, r22
    13fc:	9e 83       	std	Y+6, r25	; 0x06
    13fe:	8d 83       	std	Y+5, r24	; 0x05
    1400:	8d 81       	ldd	r24, Y+5	; 0x05
    1402:	9e 81       	ldd	r25, Y+6	; 0x06
    1404:	9a 83       	std	Y+2, r25	; 0x02
    1406:	89 83       	std	Y+1, r24	; 0x01
    1408:	89 81       	ldd	r24, Y+1	; 0x01
    140a:	9a 81       	ldd	r25, Y+2	; 0x02
    140c:	01 97       	sbiw	r24, 0x01	; 1
    140e:	f1 f7       	brne	.-4      	; 0x140c <__stack+0x30d>
    1410:	9a 83       	std	Y+2, r25	; 0x02
    1412:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0xA6;
    1414:	ec e2       	ldi	r30, 0x2C	; 44
    1416:	f0 e0       	ldi	r31, 0x00	; 0
    1418:	86 ea       	ldi	r24, 0xA6	; 166
    141a:	80 83       	st	Z, r24
}
    141c:	cc 5a       	subi	r28, 0xAC	; 172
    141e:	df 4f       	sbci	r29, 0xFF	; 255
    1420:	0f b6       	in	r0, 0x3f	; 63
    1422:	f8 94       	cli
    1424:	de bf       	out	0x3e, r29	; 62
    1426:	0f be       	out	0x3f, r0	; 63
    1428:	cd bf       	out	0x3d, r28	; 61
    142a:	cf 91       	pop	r28
    142c:	df 91       	pop	r29
    142e:	1f 91       	pop	r17
    1430:	0f 91       	pop	r16
    1432:	08 95       	ret

00001434 <idle>:
 
void idle(){
    1434:	df 93       	push	r29
    1436:	cf 93       	push	r28
    1438:	cd b7       	in	r28, 0x3d	; 61
    143a:	de b7       	in	r29, 0x3e	; 62
    143c:	e8 97       	sbiw	r28, 0x38	; 56
    143e:	0f b6       	in	r0, 0x3f	; 63
    1440:	f8 94       	cli
    1442:	de bf       	out	0x3e, r29	; 62
    1444:	0f be       	out	0x3f, r0	; 63
    1446:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nIDLE  ");
    1448:	00 d0       	rcall	.+0      	; 0x144a <idle+0x16>
    144a:	ed b7       	in	r30, 0x3d	; 61
    144c:	fe b7       	in	r31, 0x3e	; 62
    144e:	31 96       	adiw	r30, 0x01	; 1
    1450:	81 e2       	ldi	r24, 0x21	; 33
    1452:	91 e0       	ldi	r25, 0x01	; 1
    1454:	91 83       	std	Z+1, r25	; 0x01
    1456:	80 83       	st	Z, r24
    1458:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
    145c:	0f 90       	pop	r0
    145e:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    1460:	ec e2       	ldi	r30, 0x2C	; 44
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	86 e5       	ldi	r24, 0x56	; 86
    1466:	80 83       	st	Z, r24
    1468:	80 e0       	ldi	r24, 0x00	; 0
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	a0 e8       	ldi	r26, 0x80	; 128
    146e:	bf e3       	ldi	r27, 0x3F	; 63
    1470:	8d ab       	std	Y+53, r24	; 0x35
    1472:	9e ab       	std	Y+54, r25	; 0x36
    1474:	af ab       	std	Y+55, r26	; 0x37
    1476:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1478:	6d a9       	ldd	r22, Y+53	; 0x35
    147a:	7e a9       	ldd	r23, Y+54	; 0x36
    147c:	8f a9       	ldd	r24, Y+55	; 0x37
    147e:	98 ad       	ldd	r25, Y+56	; 0x38
    1480:	20 e0       	ldi	r18, 0x00	; 0
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	4a e7       	ldi	r20, 0x7A	; 122
    1486:	55 e4       	ldi	r21, 0x45	; 69
    1488:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    148c:	dc 01       	movw	r26, r24
    148e:	cb 01       	movw	r24, r22
    1490:	89 ab       	std	Y+49, r24	; 0x31
    1492:	9a ab       	std	Y+50, r25	; 0x32
    1494:	ab ab       	std	Y+51, r26	; 0x33
    1496:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1498:	69 a9       	ldd	r22, Y+49	; 0x31
    149a:	7a a9       	ldd	r23, Y+50	; 0x32
    149c:	8b a9       	ldd	r24, Y+51	; 0x33
    149e:	9c a9       	ldd	r25, Y+52	; 0x34
    14a0:	20 e0       	ldi	r18, 0x00	; 0
    14a2:	30 e0       	ldi	r19, 0x00	; 0
    14a4:	40 e8       	ldi	r20, 0x80	; 128
    14a6:	5f e3       	ldi	r21, 0x3F	; 63
    14a8:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    14ac:	88 23       	and	r24, r24
    14ae:	2c f4       	brge	.+10     	; 0x14ba <idle+0x86>
		__ticks = 1;
    14b0:	81 e0       	ldi	r24, 0x01	; 1
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	98 ab       	std	Y+48, r25	; 0x30
    14b6:	8f a7       	std	Y+47, r24	; 0x2f
    14b8:	3f c0       	rjmp	.+126    	; 0x1538 <idle+0x104>
	else if (__tmp > 65535)
    14ba:	69 a9       	ldd	r22, Y+49	; 0x31
    14bc:	7a a9       	ldd	r23, Y+50	; 0x32
    14be:	8b a9       	ldd	r24, Y+51	; 0x33
    14c0:	9c a9       	ldd	r25, Y+52	; 0x34
    14c2:	20 e0       	ldi	r18, 0x00	; 0
    14c4:	3f ef       	ldi	r19, 0xFF	; 255
    14c6:	4f e7       	ldi	r20, 0x7F	; 127
    14c8:	57 e4       	ldi	r21, 0x47	; 71
    14ca:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    14ce:	18 16       	cp	r1, r24
    14d0:	4c f5       	brge	.+82     	; 0x1524 <idle+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14d2:	6d a9       	ldd	r22, Y+53	; 0x35
    14d4:	7e a9       	ldd	r23, Y+54	; 0x36
    14d6:	8f a9       	ldd	r24, Y+55	; 0x37
    14d8:	98 ad       	ldd	r25, Y+56	; 0x38
    14da:	20 e0       	ldi	r18, 0x00	; 0
    14dc:	30 e0       	ldi	r19, 0x00	; 0
    14de:	40 e2       	ldi	r20, 0x20	; 32
    14e0:	51 e4       	ldi	r21, 0x41	; 65
    14e2:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    14e6:	dc 01       	movw	r26, r24
    14e8:	cb 01       	movw	r24, r22
    14ea:	bc 01       	movw	r22, r24
    14ec:	cd 01       	movw	r24, r26
    14ee:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    14f2:	dc 01       	movw	r26, r24
    14f4:	cb 01       	movw	r24, r22
    14f6:	98 ab       	std	Y+48, r25	; 0x30
    14f8:	8f a7       	std	Y+47, r24	; 0x2f
    14fa:	0f c0       	rjmp	.+30     	; 0x151a <idle+0xe6>
    14fc:	80 e9       	ldi	r24, 0x90	; 144
    14fe:	91 e0       	ldi	r25, 0x01	; 1
    1500:	9e a7       	std	Y+46, r25	; 0x2e
    1502:	8d a7       	std	Y+45, r24	; 0x2d
    1504:	8d a5       	ldd	r24, Y+45	; 0x2d
    1506:	9e a5       	ldd	r25, Y+46	; 0x2e
    1508:	01 97       	sbiw	r24, 0x01	; 1
    150a:	f1 f7       	brne	.-4      	; 0x1508 <idle+0xd4>
    150c:	9e a7       	std	Y+46, r25	; 0x2e
    150e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1510:	8f a5       	ldd	r24, Y+47	; 0x2f
    1512:	98 a9       	ldd	r25, Y+48	; 0x30
    1514:	01 97       	sbiw	r24, 0x01	; 1
    1516:	98 ab       	std	Y+48, r25	; 0x30
    1518:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    151a:	8f a5       	ldd	r24, Y+47	; 0x2f
    151c:	98 a9       	ldd	r25, Y+48	; 0x30
    151e:	00 97       	sbiw	r24, 0x00	; 0
    1520:	69 f7       	brne	.-38     	; 0x14fc <idle+0xc8>
    1522:	14 c0       	rjmp	.+40     	; 0x154c <idle+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1524:	69 a9       	ldd	r22, Y+49	; 0x31
    1526:	7a a9       	ldd	r23, Y+50	; 0x32
    1528:	8b a9       	ldd	r24, Y+51	; 0x33
    152a:	9c a9       	ldd	r25, Y+52	; 0x34
    152c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1530:	dc 01       	movw	r26, r24
    1532:	cb 01       	movw	r24, r22
    1534:	98 ab       	std	Y+48, r25	; 0x30
    1536:	8f a7       	std	Y+47, r24	; 0x2f
    1538:	8f a5       	ldd	r24, Y+47	; 0x2f
    153a:	98 a9       	ldd	r25, Y+48	; 0x30
    153c:	9c a7       	std	Y+44, r25	; 0x2c
    153e:	8b a7       	std	Y+43, r24	; 0x2b
    1540:	8b a5       	ldd	r24, Y+43	; 0x2b
    1542:	9c a5       	ldd	r25, Y+44	; 0x2c
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	f1 f7       	brne	.-4      	; 0x1544 <idle+0x110>
    1548:	9c a7       	std	Y+44, r25	; 0x2c
    154a:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x00; _delay_ms(1);
    154c:	ec e2       	ldi	r30, 0x2C	; 44
    154e:	f0 e0       	ldi	r31, 0x00	; 0
    1550:	10 82       	st	Z, r1
    1552:	80 e0       	ldi	r24, 0x00	; 0
    1554:	90 e0       	ldi	r25, 0x00	; 0
    1556:	a0 e8       	ldi	r26, 0x80	; 128
    1558:	bf e3       	ldi	r27, 0x3F	; 63
    155a:	8f a3       	std	Y+39, r24	; 0x27
    155c:	98 a7       	std	Y+40, r25	; 0x28
    155e:	a9 a7       	std	Y+41, r26	; 0x29
    1560:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1562:	6f a1       	ldd	r22, Y+39	; 0x27
    1564:	78 a5       	ldd	r23, Y+40	; 0x28
    1566:	89 a5       	ldd	r24, Y+41	; 0x29
    1568:	9a a5       	ldd	r25, Y+42	; 0x2a
    156a:	20 e0       	ldi	r18, 0x00	; 0
    156c:	30 e0       	ldi	r19, 0x00	; 0
    156e:	4a e7       	ldi	r20, 0x7A	; 122
    1570:	55 e4       	ldi	r21, 0x45	; 69
    1572:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1576:	dc 01       	movw	r26, r24
    1578:	cb 01       	movw	r24, r22
    157a:	8b a3       	std	Y+35, r24	; 0x23
    157c:	9c a3       	std	Y+36, r25	; 0x24
    157e:	ad a3       	std	Y+37, r26	; 0x25
    1580:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1582:	6b a1       	ldd	r22, Y+35	; 0x23
    1584:	7c a1       	ldd	r23, Y+36	; 0x24
    1586:	8d a1       	ldd	r24, Y+37	; 0x25
    1588:	9e a1       	ldd	r25, Y+38	; 0x26
    158a:	20 e0       	ldi	r18, 0x00	; 0
    158c:	30 e0       	ldi	r19, 0x00	; 0
    158e:	40 e8       	ldi	r20, 0x80	; 128
    1590:	5f e3       	ldi	r21, 0x3F	; 63
    1592:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1596:	88 23       	and	r24, r24
    1598:	2c f4       	brge	.+10     	; 0x15a4 <idle+0x170>
		__ticks = 1;
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	9a a3       	std	Y+34, r25	; 0x22
    15a0:	89 a3       	std	Y+33, r24	; 0x21
    15a2:	3f c0       	rjmp	.+126    	; 0x1622 <idle+0x1ee>
	else if (__tmp > 65535)
    15a4:	6b a1       	ldd	r22, Y+35	; 0x23
    15a6:	7c a1       	ldd	r23, Y+36	; 0x24
    15a8:	8d a1       	ldd	r24, Y+37	; 0x25
    15aa:	9e a1       	ldd	r25, Y+38	; 0x26
    15ac:	20 e0       	ldi	r18, 0x00	; 0
    15ae:	3f ef       	ldi	r19, 0xFF	; 255
    15b0:	4f e7       	ldi	r20, 0x7F	; 127
    15b2:	57 e4       	ldi	r21, 0x47	; 71
    15b4:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    15b8:	18 16       	cp	r1, r24
    15ba:	4c f5       	brge	.+82     	; 0x160e <idle+0x1da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15bc:	6f a1       	ldd	r22, Y+39	; 0x27
    15be:	78 a5       	ldd	r23, Y+40	; 0x28
    15c0:	89 a5       	ldd	r24, Y+41	; 0x29
    15c2:	9a a5       	ldd	r25, Y+42	; 0x2a
    15c4:	20 e0       	ldi	r18, 0x00	; 0
    15c6:	30 e0       	ldi	r19, 0x00	; 0
    15c8:	40 e2       	ldi	r20, 0x20	; 32
    15ca:	51 e4       	ldi	r21, 0x41	; 65
    15cc:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    15d0:	dc 01       	movw	r26, r24
    15d2:	cb 01       	movw	r24, r22
    15d4:	bc 01       	movw	r22, r24
    15d6:	cd 01       	movw	r24, r26
    15d8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    15dc:	dc 01       	movw	r26, r24
    15de:	cb 01       	movw	r24, r22
    15e0:	9a a3       	std	Y+34, r25	; 0x22
    15e2:	89 a3       	std	Y+33, r24	; 0x21
    15e4:	0f c0       	rjmp	.+30     	; 0x1604 <idle+0x1d0>
    15e6:	80 e9       	ldi	r24, 0x90	; 144
    15e8:	91 e0       	ldi	r25, 0x01	; 1
    15ea:	98 a3       	std	Y+32, r25	; 0x20
    15ec:	8f 8f       	std	Y+31, r24	; 0x1f
    15ee:	8f 8d       	ldd	r24, Y+31	; 0x1f
    15f0:	98 a1       	ldd	r25, Y+32	; 0x20
    15f2:	01 97       	sbiw	r24, 0x01	; 1
    15f4:	f1 f7       	brne	.-4      	; 0x15f2 <idle+0x1be>
    15f6:	98 a3       	std	Y+32, r25	; 0x20
    15f8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15fa:	89 a1       	ldd	r24, Y+33	; 0x21
    15fc:	9a a1       	ldd	r25, Y+34	; 0x22
    15fe:	01 97       	sbiw	r24, 0x01	; 1
    1600:	9a a3       	std	Y+34, r25	; 0x22
    1602:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1604:	89 a1       	ldd	r24, Y+33	; 0x21
    1606:	9a a1       	ldd	r25, Y+34	; 0x22
    1608:	00 97       	sbiw	r24, 0x00	; 0
    160a:	69 f7       	brne	.-38     	; 0x15e6 <idle+0x1b2>
    160c:	14 c0       	rjmp	.+40     	; 0x1636 <idle+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    160e:	6b a1       	ldd	r22, Y+35	; 0x23
    1610:	7c a1       	ldd	r23, Y+36	; 0x24
    1612:	8d a1       	ldd	r24, Y+37	; 0x25
    1614:	9e a1       	ldd	r25, Y+38	; 0x26
    1616:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    161a:	dc 01       	movw	r26, r24
    161c:	cb 01       	movw	r24, r22
    161e:	9a a3       	std	Y+34, r25	; 0x22
    1620:	89 a3       	std	Y+33, r24	; 0x21
    1622:	89 a1       	ldd	r24, Y+33	; 0x21
    1624:	9a a1       	ldd	r25, Y+34	; 0x22
    1626:	9e 8f       	std	Y+30, r25	; 0x1e
    1628:	8d 8f       	std	Y+29, r24	; 0x1d
    162a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    162c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    162e:	01 97       	sbiw	r24, 0x01	; 1
    1630:	f1 f7       	brne	.-4      	; 0x162e <idle+0x1fa>
    1632:	9e 8f       	std	Y+30, r25	; 0x1e
    1634:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x36; _delay_ms(1);
    1636:	ec e2       	ldi	r30, 0x2C	; 44
    1638:	f0 e0       	ldi	r31, 0x00	; 0
    163a:	86 e3       	ldi	r24, 0x36	; 54
    163c:	80 83       	st	Z, r24
    163e:	80 e0       	ldi	r24, 0x00	; 0
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	a0 e8       	ldi	r26, 0x80	; 128
    1644:	bf e3       	ldi	r27, 0x3F	; 63
    1646:	89 8f       	std	Y+25, r24	; 0x19
    1648:	9a 8f       	std	Y+26, r25	; 0x1a
    164a:	ab 8f       	std	Y+27, r26	; 0x1b
    164c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    164e:	69 8d       	ldd	r22, Y+25	; 0x19
    1650:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1652:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1654:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1656:	20 e0       	ldi	r18, 0x00	; 0
    1658:	30 e0       	ldi	r19, 0x00	; 0
    165a:	4a e7       	ldi	r20, 0x7A	; 122
    165c:	55 e4       	ldi	r21, 0x45	; 69
    165e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1662:	dc 01       	movw	r26, r24
    1664:	cb 01       	movw	r24, r22
    1666:	8d 8b       	std	Y+21, r24	; 0x15
    1668:	9e 8b       	std	Y+22, r25	; 0x16
    166a:	af 8b       	std	Y+23, r26	; 0x17
    166c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    166e:	6d 89       	ldd	r22, Y+21	; 0x15
    1670:	7e 89       	ldd	r23, Y+22	; 0x16
    1672:	8f 89       	ldd	r24, Y+23	; 0x17
    1674:	98 8d       	ldd	r25, Y+24	; 0x18
    1676:	20 e0       	ldi	r18, 0x00	; 0
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	40 e8       	ldi	r20, 0x80	; 128
    167c:	5f e3       	ldi	r21, 0x3F	; 63
    167e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1682:	88 23       	and	r24, r24
    1684:	2c f4       	brge	.+10     	; 0x1690 <idle+0x25c>
		__ticks = 1;
    1686:	81 e0       	ldi	r24, 0x01	; 1
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	9c 8b       	std	Y+20, r25	; 0x14
    168c:	8b 8b       	std	Y+19, r24	; 0x13
    168e:	3f c0       	rjmp	.+126    	; 0x170e <idle+0x2da>
	else if (__tmp > 65535)
    1690:	6d 89       	ldd	r22, Y+21	; 0x15
    1692:	7e 89       	ldd	r23, Y+22	; 0x16
    1694:	8f 89       	ldd	r24, Y+23	; 0x17
    1696:	98 8d       	ldd	r25, Y+24	; 0x18
    1698:	20 e0       	ldi	r18, 0x00	; 0
    169a:	3f ef       	ldi	r19, 0xFF	; 255
    169c:	4f e7       	ldi	r20, 0x7F	; 127
    169e:	57 e4       	ldi	r21, 0x47	; 71
    16a0:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    16a4:	18 16       	cp	r1, r24
    16a6:	4c f5       	brge	.+82     	; 0x16fa <idle+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a8:	69 8d       	ldd	r22, Y+25	; 0x19
    16aa:	7a 8d       	ldd	r23, Y+26	; 0x1a
    16ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
    16ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
    16b0:	20 e0       	ldi	r18, 0x00	; 0
    16b2:	30 e0       	ldi	r19, 0x00	; 0
    16b4:	40 e2       	ldi	r20, 0x20	; 32
    16b6:	51 e4       	ldi	r21, 0x41	; 65
    16b8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	bc 01       	movw	r22, r24
    16c2:	cd 01       	movw	r24, r26
    16c4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    16c8:	dc 01       	movw	r26, r24
    16ca:	cb 01       	movw	r24, r22
    16cc:	9c 8b       	std	Y+20, r25	; 0x14
    16ce:	8b 8b       	std	Y+19, r24	; 0x13
    16d0:	0f c0       	rjmp	.+30     	; 0x16f0 <idle+0x2bc>
    16d2:	80 e9       	ldi	r24, 0x90	; 144
    16d4:	91 e0       	ldi	r25, 0x01	; 1
    16d6:	9a 8b       	std	Y+18, r25	; 0x12
    16d8:	89 8b       	std	Y+17, r24	; 0x11
    16da:	89 89       	ldd	r24, Y+17	; 0x11
    16dc:	9a 89       	ldd	r25, Y+18	; 0x12
    16de:	01 97       	sbiw	r24, 0x01	; 1
    16e0:	f1 f7       	brne	.-4      	; 0x16de <idle+0x2aa>
    16e2:	9a 8b       	std	Y+18, r25	; 0x12
    16e4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16e6:	8b 89       	ldd	r24, Y+19	; 0x13
    16e8:	9c 89       	ldd	r25, Y+20	; 0x14
    16ea:	01 97       	sbiw	r24, 0x01	; 1
    16ec:	9c 8b       	std	Y+20, r25	; 0x14
    16ee:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16f0:	8b 89       	ldd	r24, Y+19	; 0x13
    16f2:	9c 89       	ldd	r25, Y+20	; 0x14
    16f4:	00 97       	sbiw	r24, 0x00	; 0
    16f6:	69 f7       	brne	.-38     	; 0x16d2 <idle+0x29e>
    16f8:	14 c0       	rjmp	.+40     	; 0x1722 <idle+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16fa:	6d 89       	ldd	r22, Y+21	; 0x15
    16fc:	7e 89       	ldd	r23, Y+22	; 0x16
    16fe:	8f 89       	ldd	r24, Y+23	; 0x17
    1700:	98 8d       	ldd	r25, Y+24	; 0x18
    1702:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1706:	dc 01       	movw	r26, r24
    1708:	cb 01       	movw	r24, r22
    170a:	9c 8b       	std	Y+20, r25	; 0x14
    170c:	8b 8b       	std	Y+19, r24	; 0x13
    170e:	8b 89       	ldd	r24, Y+19	; 0x13
    1710:	9c 89       	ldd	r25, Y+20	; 0x14
    1712:	98 8b       	std	Y+16, r25	; 0x10
    1714:	8f 87       	std	Y+15, r24	; 0x0f
    1716:	8f 85       	ldd	r24, Y+15	; 0x0f
    1718:	98 89       	ldd	r25, Y+16	; 0x10
    171a:	01 97       	sbiw	r24, 0x01	; 1
    171c:	f1 f7       	brne	.-4      	; 0x171a <idle+0x2e6>
    171e:	98 8b       	std	Y+16, r25	; 0x10
    1720:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x01; _delay_ms(1);
    1722:	ec e2       	ldi	r30, 0x2C	; 44
    1724:	f0 e0       	ldi	r31, 0x00	; 0
    1726:	81 e0       	ldi	r24, 0x01	; 1
    1728:	80 83       	st	Z, r24
    172a:	80 e0       	ldi	r24, 0x00	; 0
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	a0 e8       	ldi	r26, 0x80	; 128
    1730:	bf e3       	ldi	r27, 0x3F	; 63
    1732:	8b 87       	std	Y+11, r24	; 0x0b
    1734:	9c 87       	std	Y+12, r25	; 0x0c
    1736:	ad 87       	std	Y+13, r26	; 0x0d
    1738:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    173a:	6b 85       	ldd	r22, Y+11	; 0x0b
    173c:	7c 85       	ldd	r23, Y+12	; 0x0c
    173e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1740:	9e 85       	ldd	r25, Y+14	; 0x0e
    1742:	20 e0       	ldi	r18, 0x00	; 0
    1744:	30 e0       	ldi	r19, 0x00	; 0
    1746:	4a e7       	ldi	r20, 0x7A	; 122
    1748:	55 e4       	ldi	r21, 0x45	; 69
    174a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    174e:	dc 01       	movw	r26, r24
    1750:	cb 01       	movw	r24, r22
    1752:	8f 83       	std	Y+7, r24	; 0x07
    1754:	98 87       	std	Y+8, r25	; 0x08
    1756:	a9 87       	std	Y+9, r26	; 0x09
    1758:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    175a:	6f 81       	ldd	r22, Y+7	; 0x07
    175c:	78 85       	ldd	r23, Y+8	; 0x08
    175e:	89 85       	ldd	r24, Y+9	; 0x09
    1760:	9a 85       	ldd	r25, Y+10	; 0x0a
    1762:	20 e0       	ldi	r18, 0x00	; 0
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	40 e8       	ldi	r20, 0x80	; 128
    1768:	5f e3       	ldi	r21, 0x3F	; 63
    176a:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    176e:	88 23       	and	r24, r24
    1770:	2c f4       	brge	.+10     	; 0x177c <idle+0x348>
		__ticks = 1;
    1772:	81 e0       	ldi	r24, 0x01	; 1
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	9e 83       	std	Y+6, r25	; 0x06
    1778:	8d 83       	std	Y+5, r24	; 0x05
    177a:	3f c0       	rjmp	.+126    	; 0x17fa <idle+0x3c6>
	else if (__tmp > 65535)
    177c:	6f 81       	ldd	r22, Y+7	; 0x07
    177e:	78 85       	ldd	r23, Y+8	; 0x08
    1780:	89 85       	ldd	r24, Y+9	; 0x09
    1782:	9a 85       	ldd	r25, Y+10	; 0x0a
    1784:	20 e0       	ldi	r18, 0x00	; 0
    1786:	3f ef       	ldi	r19, 0xFF	; 255
    1788:	4f e7       	ldi	r20, 0x7F	; 127
    178a:	57 e4       	ldi	r21, 0x47	; 71
    178c:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1790:	18 16       	cp	r1, r24
    1792:	4c f5       	brge	.+82     	; 0x17e6 <idle+0x3b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1794:	6b 85       	ldd	r22, Y+11	; 0x0b
    1796:	7c 85       	ldd	r23, Y+12	; 0x0c
    1798:	8d 85       	ldd	r24, Y+13	; 0x0d
    179a:	9e 85       	ldd	r25, Y+14	; 0x0e
    179c:	20 e0       	ldi	r18, 0x00	; 0
    179e:	30 e0       	ldi	r19, 0x00	; 0
    17a0:	40 e2       	ldi	r20, 0x20	; 32
    17a2:	51 e4       	ldi	r21, 0x41	; 65
    17a4:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    17a8:	dc 01       	movw	r26, r24
    17aa:	cb 01       	movw	r24, r22
    17ac:	bc 01       	movw	r22, r24
    17ae:	cd 01       	movw	r24, r26
    17b0:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    17b4:	dc 01       	movw	r26, r24
    17b6:	cb 01       	movw	r24, r22
    17b8:	9e 83       	std	Y+6, r25	; 0x06
    17ba:	8d 83       	std	Y+5, r24	; 0x05
    17bc:	0f c0       	rjmp	.+30     	; 0x17dc <idle+0x3a8>
    17be:	80 e9       	ldi	r24, 0x90	; 144
    17c0:	91 e0       	ldi	r25, 0x01	; 1
    17c2:	9c 83       	std	Y+4, r25	; 0x04
    17c4:	8b 83       	std	Y+3, r24	; 0x03
    17c6:	8b 81       	ldd	r24, Y+3	; 0x03
    17c8:	9c 81       	ldd	r25, Y+4	; 0x04
    17ca:	01 97       	sbiw	r24, 0x01	; 1
    17cc:	f1 f7       	brne	.-4      	; 0x17ca <idle+0x396>
    17ce:	9c 83       	std	Y+4, r25	; 0x04
    17d0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17d2:	8d 81       	ldd	r24, Y+5	; 0x05
    17d4:	9e 81       	ldd	r25, Y+6	; 0x06
    17d6:	01 97       	sbiw	r24, 0x01	; 1
    17d8:	9e 83       	std	Y+6, r25	; 0x06
    17da:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17dc:	8d 81       	ldd	r24, Y+5	; 0x05
    17de:	9e 81       	ldd	r25, Y+6	; 0x06
    17e0:	00 97       	sbiw	r24, 0x00	; 0
    17e2:	69 f7       	brne	.-38     	; 0x17be <idle+0x38a>
    17e4:	14 c0       	rjmp	.+40     	; 0x180e <idle+0x3da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17e6:	6f 81       	ldd	r22, Y+7	; 0x07
    17e8:	78 85       	ldd	r23, Y+8	; 0x08
    17ea:	89 85       	ldd	r24, Y+9	; 0x09
    17ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    17ee:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    17f2:	dc 01       	movw	r26, r24
    17f4:	cb 01       	movw	r24, r22
    17f6:	9e 83       	std	Y+6, r25	; 0x06
    17f8:	8d 83       	std	Y+5, r24	; 0x05
    17fa:	8d 81       	ldd	r24, Y+5	; 0x05
    17fc:	9e 81       	ldd	r25, Y+6	; 0x06
    17fe:	9a 83       	std	Y+2, r25	; 0x02
    1800:	89 83       	std	Y+1, r24	; 0x01
    1802:	89 81       	ldd	r24, Y+1	; 0x01
    1804:	9a 81       	ldd	r25, Y+2	; 0x02
    1806:	01 97       	sbiw	r24, 0x01	; 1
    1808:	f1 f7       	brne	.-4      	; 0x1806 <idle+0x3d2>
    180a:	9a 83       	std	Y+2, r25	; 0x02
    180c:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x03;
    180e:	ec e2       	ldi	r30, 0x2C	; 44
    1810:	f0 e0       	ldi	r31, 0x00	; 0
    1812:	83 e0       	ldi	r24, 0x03	; 3
    1814:	80 83       	st	Z, r24
}
    1816:	e8 96       	adiw	r28, 0x38	; 56
    1818:	0f b6       	in	r0, 0x3f	; 63
    181a:	f8 94       	cli
    181c:	de bf       	out	0x3e, r29	; 62
    181e:	0f be       	out	0x3f, r0	; 63
    1820:	cd bf       	out	0x3d, r28	; 61
    1822:	cf 91       	pop	r28
    1824:	df 91       	pop	r29
    1826:	08 95       	ret

00001828 <shot>:
 
void shot(){
    1828:	df 93       	push	r29
    182a:	cf 93       	push	r28
    182c:	cd b7       	in	r28, 0x3d	; 61
    182e:	de b7       	in	r29, 0x3e	; 62
    1830:	e8 97       	sbiw	r28, 0x38	; 56
    1832:	0f b6       	in	r0, 0x3f	; 63
    1834:	f8 94       	cli
    1836:	de bf       	out	0x3e, r29	; 62
    1838:	0f be       	out	0x3f, r0	; 63
    183a:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nSHOT  ");
    183c:	00 d0       	rcall	.+0      	; 0x183e <shot+0x16>
    183e:	ed b7       	in	r30, 0x3d	; 61
    1840:	fe b7       	in	r31, 0x3e	; 62
    1842:	31 96       	adiw	r30, 0x01	; 1
    1844:	8a e2       	ldi	r24, 0x2A	; 42
    1846:	91 e0       	ldi	r25, 0x01	; 1
    1848:	91 83       	std	Z+1, r25	; 0x01
    184a:	80 83       	st	Z, r24
    184c:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
    1850:	0f 90       	pop	r0
    1852:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    1854:	ec e2       	ldi	r30, 0x2C	; 44
    1856:	f0 e0       	ldi	r31, 0x00	; 0
    1858:	86 e5       	ldi	r24, 0x56	; 86
    185a:	80 83       	st	Z, r24
    185c:	80 e0       	ldi	r24, 0x00	; 0
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	a0 e8       	ldi	r26, 0x80	; 128
    1862:	bf e3       	ldi	r27, 0x3F	; 63
    1864:	8d ab       	std	Y+53, r24	; 0x35
    1866:	9e ab       	std	Y+54, r25	; 0x36
    1868:	af ab       	std	Y+55, r26	; 0x37
    186a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    186c:	6d a9       	ldd	r22, Y+53	; 0x35
    186e:	7e a9       	ldd	r23, Y+54	; 0x36
    1870:	8f a9       	ldd	r24, Y+55	; 0x37
    1872:	98 ad       	ldd	r25, Y+56	; 0x38
    1874:	20 e0       	ldi	r18, 0x00	; 0
    1876:	30 e0       	ldi	r19, 0x00	; 0
    1878:	4a e7       	ldi	r20, 0x7A	; 122
    187a:	55 e4       	ldi	r21, 0x45	; 69
    187c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1880:	dc 01       	movw	r26, r24
    1882:	cb 01       	movw	r24, r22
    1884:	89 ab       	std	Y+49, r24	; 0x31
    1886:	9a ab       	std	Y+50, r25	; 0x32
    1888:	ab ab       	std	Y+51, r26	; 0x33
    188a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    188c:	69 a9       	ldd	r22, Y+49	; 0x31
    188e:	7a a9       	ldd	r23, Y+50	; 0x32
    1890:	8b a9       	ldd	r24, Y+51	; 0x33
    1892:	9c a9       	ldd	r25, Y+52	; 0x34
    1894:	20 e0       	ldi	r18, 0x00	; 0
    1896:	30 e0       	ldi	r19, 0x00	; 0
    1898:	40 e8       	ldi	r20, 0x80	; 128
    189a:	5f e3       	ldi	r21, 0x3F	; 63
    189c:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    18a0:	88 23       	and	r24, r24
    18a2:	2c f4       	brge	.+10     	; 0x18ae <shot+0x86>
		__ticks = 1;
    18a4:	81 e0       	ldi	r24, 0x01	; 1
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	98 ab       	std	Y+48, r25	; 0x30
    18aa:	8f a7       	std	Y+47, r24	; 0x2f
    18ac:	3f c0       	rjmp	.+126    	; 0x192c <shot+0x104>
	else if (__tmp > 65535)
    18ae:	69 a9       	ldd	r22, Y+49	; 0x31
    18b0:	7a a9       	ldd	r23, Y+50	; 0x32
    18b2:	8b a9       	ldd	r24, Y+51	; 0x33
    18b4:	9c a9       	ldd	r25, Y+52	; 0x34
    18b6:	20 e0       	ldi	r18, 0x00	; 0
    18b8:	3f ef       	ldi	r19, 0xFF	; 255
    18ba:	4f e7       	ldi	r20, 0x7F	; 127
    18bc:	57 e4       	ldi	r21, 0x47	; 71
    18be:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    18c2:	18 16       	cp	r1, r24
    18c4:	4c f5       	brge	.+82     	; 0x1918 <shot+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18c6:	6d a9       	ldd	r22, Y+53	; 0x35
    18c8:	7e a9       	ldd	r23, Y+54	; 0x36
    18ca:	8f a9       	ldd	r24, Y+55	; 0x37
    18cc:	98 ad       	ldd	r25, Y+56	; 0x38
    18ce:	20 e0       	ldi	r18, 0x00	; 0
    18d0:	30 e0       	ldi	r19, 0x00	; 0
    18d2:	40 e2       	ldi	r20, 0x20	; 32
    18d4:	51 e4       	ldi	r21, 0x41	; 65
    18d6:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    18da:	dc 01       	movw	r26, r24
    18dc:	cb 01       	movw	r24, r22
    18de:	bc 01       	movw	r22, r24
    18e0:	cd 01       	movw	r24, r26
    18e2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    18e6:	dc 01       	movw	r26, r24
    18e8:	cb 01       	movw	r24, r22
    18ea:	98 ab       	std	Y+48, r25	; 0x30
    18ec:	8f a7       	std	Y+47, r24	; 0x2f
    18ee:	0f c0       	rjmp	.+30     	; 0x190e <shot+0xe6>
    18f0:	80 e9       	ldi	r24, 0x90	; 144
    18f2:	91 e0       	ldi	r25, 0x01	; 1
    18f4:	9e a7       	std	Y+46, r25	; 0x2e
    18f6:	8d a7       	std	Y+45, r24	; 0x2d
    18f8:	8d a5       	ldd	r24, Y+45	; 0x2d
    18fa:	9e a5       	ldd	r25, Y+46	; 0x2e
    18fc:	01 97       	sbiw	r24, 0x01	; 1
    18fe:	f1 f7       	brne	.-4      	; 0x18fc <shot+0xd4>
    1900:	9e a7       	std	Y+46, r25	; 0x2e
    1902:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1904:	8f a5       	ldd	r24, Y+47	; 0x2f
    1906:	98 a9       	ldd	r25, Y+48	; 0x30
    1908:	01 97       	sbiw	r24, 0x01	; 1
    190a:	98 ab       	std	Y+48, r25	; 0x30
    190c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    190e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1910:	98 a9       	ldd	r25, Y+48	; 0x30
    1912:	00 97       	sbiw	r24, 0x00	; 0
    1914:	69 f7       	brne	.-38     	; 0x18f0 <shot+0xc8>
    1916:	14 c0       	rjmp	.+40     	; 0x1940 <shot+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1918:	69 a9       	ldd	r22, Y+49	; 0x31
    191a:	7a a9       	ldd	r23, Y+50	; 0x32
    191c:	8b a9       	ldd	r24, Y+51	; 0x33
    191e:	9c a9       	ldd	r25, Y+52	; 0x34
    1920:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1924:	dc 01       	movw	r26, r24
    1926:	cb 01       	movw	r24, r22
    1928:	98 ab       	std	Y+48, r25	; 0x30
    192a:	8f a7       	std	Y+47, r24	; 0x2f
    192c:	8f a5       	ldd	r24, Y+47	; 0x2f
    192e:	98 a9       	ldd	r25, Y+48	; 0x30
    1930:	9c a7       	std	Y+44, r25	; 0x2c
    1932:	8b a7       	std	Y+43, r24	; 0x2b
    1934:	8b a5       	ldd	r24, Y+43	; 0x2b
    1936:	9c a5       	ldd	r25, Y+44	; 0x2c
    1938:	01 97       	sbiw	r24, 0x01	; 1
    193a:	f1 f7       	brne	.-4      	; 0x1938 <shot+0x110>
    193c:	9c a7       	std	Y+44, r25	; 0x2c
    193e:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x00; _delay_ms(1);
    1940:	ec e2       	ldi	r30, 0x2C	; 44
    1942:	f0 e0       	ldi	r31, 0x00	; 0
    1944:	10 82       	st	Z, r1
    1946:	80 e0       	ldi	r24, 0x00	; 0
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	a0 e8       	ldi	r26, 0x80	; 128
    194c:	bf e3       	ldi	r27, 0x3F	; 63
    194e:	8f a3       	std	Y+39, r24	; 0x27
    1950:	98 a7       	std	Y+40, r25	; 0x28
    1952:	a9 a7       	std	Y+41, r26	; 0x29
    1954:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1956:	6f a1       	ldd	r22, Y+39	; 0x27
    1958:	78 a5       	ldd	r23, Y+40	; 0x28
    195a:	89 a5       	ldd	r24, Y+41	; 0x29
    195c:	9a a5       	ldd	r25, Y+42	; 0x2a
    195e:	20 e0       	ldi	r18, 0x00	; 0
    1960:	30 e0       	ldi	r19, 0x00	; 0
    1962:	4a e7       	ldi	r20, 0x7A	; 122
    1964:	55 e4       	ldi	r21, 0x45	; 69
    1966:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    196a:	dc 01       	movw	r26, r24
    196c:	cb 01       	movw	r24, r22
    196e:	8b a3       	std	Y+35, r24	; 0x23
    1970:	9c a3       	std	Y+36, r25	; 0x24
    1972:	ad a3       	std	Y+37, r26	; 0x25
    1974:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1976:	6b a1       	ldd	r22, Y+35	; 0x23
    1978:	7c a1       	ldd	r23, Y+36	; 0x24
    197a:	8d a1       	ldd	r24, Y+37	; 0x25
    197c:	9e a1       	ldd	r25, Y+38	; 0x26
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	40 e8       	ldi	r20, 0x80	; 128
    1984:	5f e3       	ldi	r21, 0x3F	; 63
    1986:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    198a:	88 23       	and	r24, r24
    198c:	2c f4       	brge	.+10     	; 0x1998 <shot+0x170>
		__ticks = 1;
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	9a a3       	std	Y+34, r25	; 0x22
    1994:	89 a3       	std	Y+33, r24	; 0x21
    1996:	3f c0       	rjmp	.+126    	; 0x1a16 <shot+0x1ee>
	else if (__tmp > 65535)
    1998:	6b a1       	ldd	r22, Y+35	; 0x23
    199a:	7c a1       	ldd	r23, Y+36	; 0x24
    199c:	8d a1       	ldd	r24, Y+37	; 0x25
    199e:	9e a1       	ldd	r25, Y+38	; 0x26
    19a0:	20 e0       	ldi	r18, 0x00	; 0
    19a2:	3f ef       	ldi	r19, 0xFF	; 255
    19a4:	4f e7       	ldi	r20, 0x7F	; 127
    19a6:	57 e4       	ldi	r21, 0x47	; 71
    19a8:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    19ac:	18 16       	cp	r1, r24
    19ae:	4c f5       	brge	.+82     	; 0x1a02 <shot+0x1da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19b0:	6f a1       	ldd	r22, Y+39	; 0x27
    19b2:	78 a5       	ldd	r23, Y+40	; 0x28
    19b4:	89 a5       	ldd	r24, Y+41	; 0x29
    19b6:	9a a5       	ldd	r25, Y+42	; 0x2a
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e2       	ldi	r20, 0x20	; 32
    19be:	51 e4       	ldi	r21, 0x41	; 65
    19c0:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    19c4:	dc 01       	movw	r26, r24
    19c6:	cb 01       	movw	r24, r22
    19c8:	bc 01       	movw	r22, r24
    19ca:	cd 01       	movw	r24, r26
    19cc:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    19d0:	dc 01       	movw	r26, r24
    19d2:	cb 01       	movw	r24, r22
    19d4:	9a a3       	std	Y+34, r25	; 0x22
    19d6:	89 a3       	std	Y+33, r24	; 0x21
    19d8:	0f c0       	rjmp	.+30     	; 0x19f8 <shot+0x1d0>
    19da:	80 e9       	ldi	r24, 0x90	; 144
    19dc:	91 e0       	ldi	r25, 0x01	; 1
    19de:	98 a3       	std	Y+32, r25	; 0x20
    19e0:	8f 8f       	std	Y+31, r24	; 0x1f
    19e2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    19e4:	98 a1       	ldd	r25, Y+32	; 0x20
    19e6:	01 97       	sbiw	r24, 0x01	; 1
    19e8:	f1 f7       	brne	.-4      	; 0x19e6 <shot+0x1be>
    19ea:	98 a3       	std	Y+32, r25	; 0x20
    19ec:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ee:	89 a1       	ldd	r24, Y+33	; 0x21
    19f0:	9a a1       	ldd	r25, Y+34	; 0x22
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	9a a3       	std	Y+34, r25	; 0x22
    19f6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19f8:	89 a1       	ldd	r24, Y+33	; 0x21
    19fa:	9a a1       	ldd	r25, Y+34	; 0x22
    19fc:	00 97       	sbiw	r24, 0x00	; 0
    19fe:	69 f7       	brne	.-38     	; 0x19da <shot+0x1b2>
    1a00:	14 c0       	rjmp	.+40     	; 0x1a2a <shot+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a02:	6b a1       	ldd	r22, Y+35	; 0x23
    1a04:	7c a1       	ldd	r23, Y+36	; 0x24
    1a06:	8d a1       	ldd	r24, Y+37	; 0x25
    1a08:	9e a1       	ldd	r25, Y+38	; 0x26
    1a0a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1a0e:	dc 01       	movw	r26, r24
    1a10:	cb 01       	movw	r24, r22
    1a12:	9a a3       	std	Y+34, r25	; 0x22
    1a14:	89 a3       	std	Y+33, r24	; 0x21
    1a16:	89 a1       	ldd	r24, Y+33	; 0x21
    1a18:	9a a1       	ldd	r25, Y+34	; 0x22
    1a1a:	9e 8f       	std	Y+30, r25	; 0x1e
    1a1c:	8d 8f       	std	Y+29, r24	; 0x1d
    1a1e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1a20:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1a22:	01 97       	sbiw	r24, 0x01	; 1
    1a24:	f1 f7       	brne	.-4      	; 0x1a22 <shot+0x1fa>
    1a26:	9e 8f       	std	Y+30, r25	; 0x1e
    1a28:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x36; _delay_ms(1);
    1a2a:	ec e2       	ldi	r30, 0x2C	; 44
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	86 e3       	ldi	r24, 0x36	; 54
    1a30:	80 83       	st	Z, r24
    1a32:	80 e0       	ldi	r24, 0x00	; 0
    1a34:	90 e0       	ldi	r25, 0x00	; 0
    1a36:	a0 e8       	ldi	r26, 0x80	; 128
    1a38:	bf e3       	ldi	r27, 0x3F	; 63
    1a3a:	89 8f       	std	Y+25, r24	; 0x19
    1a3c:	9a 8f       	std	Y+26, r25	; 0x1a
    1a3e:	ab 8f       	std	Y+27, r26	; 0x1b
    1a40:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a42:	69 8d       	ldd	r22, Y+25	; 0x19
    1a44:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a46:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a48:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a4a:	20 e0       	ldi	r18, 0x00	; 0
    1a4c:	30 e0       	ldi	r19, 0x00	; 0
    1a4e:	4a e7       	ldi	r20, 0x7A	; 122
    1a50:	55 e4       	ldi	r21, 0x45	; 69
    1a52:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1a56:	dc 01       	movw	r26, r24
    1a58:	cb 01       	movw	r24, r22
    1a5a:	8d 8b       	std	Y+21, r24	; 0x15
    1a5c:	9e 8b       	std	Y+22, r25	; 0x16
    1a5e:	af 8b       	std	Y+23, r26	; 0x17
    1a60:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a62:	6d 89       	ldd	r22, Y+21	; 0x15
    1a64:	7e 89       	ldd	r23, Y+22	; 0x16
    1a66:	8f 89       	ldd	r24, Y+23	; 0x17
    1a68:	98 8d       	ldd	r25, Y+24	; 0x18
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	40 e8       	ldi	r20, 0x80	; 128
    1a70:	5f e3       	ldi	r21, 0x3F	; 63
    1a72:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1a76:	88 23       	and	r24, r24
    1a78:	2c f4       	brge	.+10     	; 0x1a84 <shot+0x25c>
		__ticks = 1;
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	9c 8b       	std	Y+20, r25	; 0x14
    1a80:	8b 8b       	std	Y+19, r24	; 0x13
    1a82:	3f c0       	rjmp	.+126    	; 0x1b02 <shot+0x2da>
	else if (__tmp > 65535)
    1a84:	6d 89       	ldd	r22, Y+21	; 0x15
    1a86:	7e 89       	ldd	r23, Y+22	; 0x16
    1a88:	8f 89       	ldd	r24, Y+23	; 0x17
    1a8a:	98 8d       	ldd	r25, Y+24	; 0x18
    1a8c:	20 e0       	ldi	r18, 0x00	; 0
    1a8e:	3f ef       	ldi	r19, 0xFF	; 255
    1a90:	4f e7       	ldi	r20, 0x7F	; 127
    1a92:	57 e4       	ldi	r21, 0x47	; 71
    1a94:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1a98:	18 16       	cp	r1, r24
    1a9a:	4c f5       	brge	.+82     	; 0x1aee <shot+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a9c:	69 8d       	ldd	r22, Y+25	; 0x19
    1a9e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1aa0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1aa2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1aa4:	20 e0       	ldi	r18, 0x00	; 0
    1aa6:	30 e0       	ldi	r19, 0x00	; 0
    1aa8:	40 e2       	ldi	r20, 0x20	; 32
    1aaa:	51 e4       	ldi	r21, 0x41	; 65
    1aac:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1ab0:	dc 01       	movw	r26, r24
    1ab2:	cb 01       	movw	r24, r22
    1ab4:	bc 01       	movw	r22, r24
    1ab6:	cd 01       	movw	r24, r26
    1ab8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1abc:	dc 01       	movw	r26, r24
    1abe:	cb 01       	movw	r24, r22
    1ac0:	9c 8b       	std	Y+20, r25	; 0x14
    1ac2:	8b 8b       	std	Y+19, r24	; 0x13
    1ac4:	0f c0       	rjmp	.+30     	; 0x1ae4 <shot+0x2bc>
    1ac6:	80 e9       	ldi	r24, 0x90	; 144
    1ac8:	91 e0       	ldi	r25, 0x01	; 1
    1aca:	9a 8b       	std	Y+18, r25	; 0x12
    1acc:	89 8b       	std	Y+17, r24	; 0x11
    1ace:	89 89       	ldd	r24, Y+17	; 0x11
    1ad0:	9a 89       	ldd	r25, Y+18	; 0x12
    1ad2:	01 97       	sbiw	r24, 0x01	; 1
    1ad4:	f1 f7       	brne	.-4      	; 0x1ad2 <shot+0x2aa>
    1ad6:	9a 8b       	std	Y+18, r25	; 0x12
    1ad8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ada:	8b 89       	ldd	r24, Y+19	; 0x13
    1adc:	9c 89       	ldd	r25, Y+20	; 0x14
    1ade:	01 97       	sbiw	r24, 0x01	; 1
    1ae0:	9c 8b       	std	Y+20, r25	; 0x14
    1ae2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ae4:	8b 89       	ldd	r24, Y+19	; 0x13
    1ae6:	9c 89       	ldd	r25, Y+20	; 0x14
    1ae8:	00 97       	sbiw	r24, 0x00	; 0
    1aea:	69 f7       	brne	.-38     	; 0x1ac6 <shot+0x29e>
    1aec:	14 c0       	rjmp	.+40     	; 0x1b16 <shot+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1aee:	6d 89       	ldd	r22, Y+21	; 0x15
    1af0:	7e 89       	ldd	r23, Y+22	; 0x16
    1af2:	8f 89       	ldd	r24, Y+23	; 0x17
    1af4:	98 8d       	ldd	r25, Y+24	; 0x18
    1af6:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1afa:	dc 01       	movw	r26, r24
    1afc:	cb 01       	movw	r24, r22
    1afe:	9c 8b       	std	Y+20, r25	; 0x14
    1b00:	8b 8b       	std	Y+19, r24	; 0x13
    1b02:	8b 89       	ldd	r24, Y+19	; 0x13
    1b04:	9c 89       	ldd	r25, Y+20	; 0x14
    1b06:	98 8b       	std	Y+16, r25	; 0x10
    1b08:	8f 87       	std	Y+15, r24	; 0x0f
    1b0a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b0c:	98 89       	ldd	r25, Y+16	; 0x10
    1b0e:	01 97       	sbiw	r24, 0x01	; 1
    1b10:	f1 f7       	brne	.-4      	; 0x1b0e <shot+0x2e6>
    1b12:	98 8b       	std	Y+16, r25	; 0x10
    1b14:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x01; _delay_ms(1);
    1b16:	ec e2       	ldi	r30, 0x2C	; 44
    1b18:	f0 e0       	ldi	r31, 0x00	; 0
    1b1a:	81 e0       	ldi	r24, 0x01	; 1
    1b1c:	80 83       	st	Z, r24
    1b1e:	80 e0       	ldi	r24, 0x00	; 0
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	a0 e8       	ldi	r26, 0x80	; 128
    1b24:	bf e3       	ldi	r27, 0x3F	; 63
    1b26:	8b 87       	std	Y+11, r24	; 0x0b
    1b28:	9c 87       	std	Y+12, r25	; 0x0c
    1b2a:	ad 87       	std	Y+13, r26	; 0x0d
    1b2c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b2e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b30:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b32:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b34:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b36:	20 e0       	ldi	r18, 0x00	; 0
    1b38:	30 e0       	ldi	r19, 0x00	; 0
    1b3a:	4a e7       	ldi	r20, 0x7A	; 122
    1b3c:	55 e4       	ldi	r21, 0x45	; 69
    1b3e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1b42:	dc 01       	movw	r26, r24
    1b44:	cb 01       	movw	r24, r22
    1b46:	8f 83       	std	Y+7, r24	; 0x07
    1b48:	98 87       	std	Y+8, r25	; 0x08
    1b4a:	a9 87       	std	Y+9, r26	; 0x09
    1b4c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b4e:	6f 81       	ldd	r22, Y+7	; 0x07
    1b50:	78 85       	ldd	r23, Y+8	; 0x08
    1b52:	89 85       	ldd	r24, Y+9	; 0x09
    1b54:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b56:	20 e0       	ldi	r18, 0x00	; 0
    1b58:	30 e0       	ldi	r19, 0x00	; 0
    1b5a:	40 e8       	ldi	r20, 0x80	; 128
    1b5c:	5f e3       	ldi	r21, 0x3F	; 63
    1b5e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1b62:	88 23       	and	r24, r24
    1b64:	2c f4       	brge	.+10     	; 0x1b70 <shot+0x348>
		__ticks = 1;
    1b66:	81 e0       	ldi	r24, 0x01	; 1
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	9e 83       	std	Y+6, r25	; 0x06
    1b6c:	8d 83       	std	Y+5, r24	; 0x05
    1b6e:	3f c0       	rjmp	.+126    	; 0x1bee <shot+0x3c6>
	else if (__tmp > 65535)
    1b70:	6f 81       	ldd	r22, Y+7	; 0x07
    1b72:	78 85       	ldd	r23, Y+8	; 0x08
    1b74:	89 85       	ldd	r24, Y+9	; 0x09
    1b76:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b78:	20 e0       	ldi	r18, 0x00	; 0
    1b7a:	3f ef       	ldi	r19, 0xFF	; 255
    1b7c:	4f e7       	ldi	r20, 0x7F	; 127
    1b7e:	57 e4       	ldi	r21, 0x47	; 71
    1b80:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1b84:	18 16       	cp	r1, r24
    1b86:	4c f5       	brge	.+82     	; 0x1bda <shot+0x3b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b88:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b8a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b8c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b8e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b90:	20 e0       	ldi	r18, 0x00	; 0
    1b92:	30 e0       	ldi	r19, 0x00	; 0
    1b94:	40 e2       	ldi	r20, 0x20	; 32
    1b96:	51 e4       	ldi	r21, 0x41	; 65
    1b98:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1b9c:	dc 01       	movw	r26, r24
    1b9e:	cb 01       	movw	r24, r22
    1ba0:	bc 01       	movw	r22, r24
    1ba2:	cd 01       	movw	r24, r26
    1ba4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1ba8:	dc 01       	movw	r26, r24
    1baa:	cb 01       	movw	r24, r22
    1bac:	9e 83       	std	Y+6, r25	; 0x06
    1bae:	8d 83       	std	Y+5, r24	; 0x05
    1bb0:	0f c0       	rjmp	.+30     	; 0x1bd0 <shot+0x3a8>
    1bb2:	80 e9       	ldi	r24, 0x90	; 144
    1bb4:	91 e0       	ldi	r25, 0x01	; 1
    1bb6:	9c 83       	std	Y+4, r25	; 0x04
    1bb8:	8b 83       	std	Y+3, r24	; 0x03
    1bba:	8b 81       	ldd	r24, Y+3	; 0x03
    1bbc:	9c 81       	ldd	r25, Y+4	; 0x04
    1bbe:	01 97       	sbiw	r24, 0x01	; 1
    1bc0:	f1 f7       	brne	.-4      	; 0x1bbe <shot+0x396>
    1bc2:	9c 83       	std	Y+4, r25	; 0x04
    1bc4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1bc6:	8d 81       	ldd	r24, Y+5	; 0x05
    1bc8:	9e 81       	ldd	r25, Y+6	; 0x06
    1bca:	01 97       	sbiw	r24, 0x01	; 1
    1bcc:	9e 83       	std	Y+6, r25	; 0x06
    1bce:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1bd0:	8d 81       	ldd	r24, Y+5	; 0x05
    1bd2:	9e 81       	ldd	r25, Y+6	; 0x06
    1bd4:	00 97       	sbiw	r24, 0x00	; 0
    1bd6:	69 f7       	brne	.-38     	; 0x1bb2 <shot+0x38a>
    1bd8:	14 c0       	rjmp	.+40     	; 0x1c02 <shot+0x3da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bda:	6f 81       	ldd	r22, Y+7	; 0x07
    1bdc:	78 85       	ldd	r23, Y+8	; 0x08
    1bde:	89 85       	ldd	r24, Y+9	; 0x09
    1be0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1be2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1be6:	dc 01       	movw	r26, r24
    1be8:	cb 01       	movw	r24, r22
    1bea:	9e 83       	std	Y+6, r25	; 0x06
    1bec:	8d 83       	std	Y+5, r24	; 0x05
    1bee:	8d 81       	ldd	r24, Y+5	; 0x05
    1bf0:	9e 81       	ldd	r25, Y+6	; 0x06
    1bf2:	9a 83       	std	Y+2, r25	; 0x02
    1bf4:	89 83       	std	Y+1, r24	; 0x01
    1bf6:	89 81       	ldd	r24, Y+1	; 0x01
    1bf8:	9a 81       	ldd	r25, Y+2	; 0x02
    1bfa:	01 97       	sbiw	r24, 0x01	; 1
    1bfc:	f1 f7       	brne	.-4      	; 0x1bfa <shot+0x3d2>
    1bfe:	9a 83       	std	Y+2, r25	; 0x02
    1c00:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x00;
    1c02:	ec e2       	ldi	r30, 0x2C	; 44
    1c04:	f0 e0       	ldi	r31, 0x00	; 0
    1c06:	10 82       	st	Z, r1
}
    1c08:	e8 96       	adiw	r28, 0x38	; 56
    1c0a:	0f b6       	in	r0, 0x3f	; 63
    1c0c:	f8 94       	cli
    1c0e:	de bf       	out	0x3e, r29	; 62
    1c10:	0f be       	out	0x3f, r0	; 63
    1c12:	cd bf       	out	0x3d, r28	; 61
    1c14:	cf 91       	pop	r28
    1c16:	df 91       	pop	r29
    1c18:	08 95       	ret

00001c1a <call_size>:
 
void call_size(){
    1c1a:	df 93       	push	r29
    1c1c:	cf 93       	push	r28
    1c1e:	cd b7       	in	r28, 0x3d	; 61
    1c20:	de b7       	in	r29, 0x3e	; 62
    1c22:	e8 97       	sbiw	r28, 0x38	; 56
    1c24:	0f b6       	in	r0, 0x3f	; 63
    1c26:	f8 94       	cli
    1c28:	de bf       	out	0x3e, r29	; 62
    1c2a:	0f be       	out	0x3f, r0	; 63
    1c2c:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nCALL_SIZE ");
    1c2e:	00 d0       	rcall	.+0      	; 0x1c30 <call_size+0x16>
    1c30:	ed b7       	in	r30, 0x3d	; 61
    1c32:	fe b7       	in	r31, 0x3e	; 62
    1c34:	31 96       	adiw	r30, 0x01	; 1
    1c36:	83 e3       	ldi	r24, 0x33	; 51
    1c38:	91 e0       	ldi	r25, 0x01	; 1
    1c3a:	91 83       	std	Z+1, r25	; 0x01
    1c3c:	80 83       	st	Z, r24
    1c3e:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
    1c42:	0f 90       	pop	r0
    1c44:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    1c46:	ec e2       	ldi	r30, 0x2C	; 44
    1c48:	f0 e0       	ldi	r31, 0x00	; 0
    1c4a:	86 e5       	ldi	r24, 0x56	; 86
    1c4c:	80 83       	st	Z, r24
    1c4e:	80 e0       	ldi	r24, 0x00	; 0
    1c50:	90 e0       	ldi	r25, 0x00	; 0
    1c52:	a0 e8       	ldi	r26, 0x80	; 128
    1c54:	bf e3       	ldi	r27, 0x3F	; 63
    1c56:	8d ab       	std	Y+53, r24	; 0x35
    1c58:	9e ab       	std	Y+54, r25	; 0x36
    1c5a:	af ab       	std	Y+55, r26	; 0x37
    1c5c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c5e:	6d a9       	ldd	r22, Y+53	; 0x35
    1c60:	7e a9       	ldd	r23, Y+54	; 0x36
    1c62:	8f a9       	ldd	r24, Y+55	; 0x37
    1c64:	98 ad       	ldd	r25, Y+56	; 0x38
    1c66:	20 e0       	ldi	r18, 0x00	; 0
    1c68:	30 e0       	ldi	r19, 0x00	; 0
    1c6a:	4a e7       	ldi	r20, 0x7A	; 122
    1c6c:	55 e4       	ldi	r21, 0x45	; 69
    1c6e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1c72:	dc 01       	movw	r26, r24
    1c74:	cb 01       	movw	r24, r22
    1c76:	89 ab       	std	Y+49, r24	; 0x31
    1c78:	9a ab       	std	Y+50, r25	; 0x32
    1c7a:	ab ab       	std	Y+51, r26	; 0x33
    1c7c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1c7e:	69 a9       	ldd	r22, Y+49	; 0x31
    1c80:	7a a9       	ldd	r23, Y+50	; 0x32
    1c82:	8b a9       	ldd	r24, Y+51	; 0x33
    1c84:	9c a9       	ldd	r25, Y+52	; 0x34
    1c86:	20 e0       	ldi	r18, 0x00	; 0
    1c88:	30 e0       	ldi	r19, 0x00	; 0
    1c8a:	40 e8       	ldi	r20, 0x80	; 128
    1c8c:	5f e3       	ldi	r21, 0x3F	; 63
    1c8e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1c92:	88 23       	and	r24, r24
    1c94:	2c f4       	brge	.+10     	; 0x1ca0 <call_size+0x86>
		__ticks = 1;
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	90 e0       	ldi	r25, 0x00	; 0
    1c9a:	98 ab       	std	Y+48, r25	; 0x30
    1c9c:	8f a7       	std	Y+47, r24	; 0x2f
    1c9e:	3f c0       	rjmp	.+126    	; 0x1d1e <call_size+0x104>
	else if (__tmp > 65535)
    1ca0:	69 a9       	ldd	r22, Y+49	; 0x31
    1ca2:	7a a9       	ldd	r23, Y+50	; 0x32
    1ca4:	8b a9       	ldd	r24, Y+51	; 0x33
    1ca6:	9c a9       	ldd	r25, Y+52	; 0x34
    1ca8:	20 e0       	ldi	r18, 0x00	; 0
    1caa:	3f ef       	ldi	r19, 0xFF	; 255
    1cac:	4f e7       	ldi	r20, 0x7F	; 127
    1cae:	57 e4       	ldi	r21, 0x47	; 71
    1cb0:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1cb4:	18 16       	cp	r1, r24
    1cb6:	4c f5       	brge	.+82     	; 0x1d0a <call_size+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1cb8:	6d a9       	ldd	r22, Y+53	; 0x35
    1cba:	7e a9       	ldd	r23, Y+54	; 0x36
    1cbc:	8f a9       	ldd	r24, Y+55	; 0x37
    1cbe:	98 ad       	ldd	r25, Y+56	; 0x38
    1cc0:	20 e0       	ldi	r18, 0x00	; 0
    1cc2:	30 e0       	ldi	r19, 0x00	; 0
    1cc4:	40 e2       	ldi	r20, 0x20	; 32
    1cc6:	51 e4       	ldi	r21, 0x41	; 65
    1cc8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1ccc:	dc 01       	movw	r26, r24
    1cce:	cb 01       	movw	r24, r22
    1cd0:	bc 01       	movw	r22, r24
    1cd2:	cd 01       	movw	r24, r26
    1cd4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1cd8:	dc 01       	movw	r26, r24
    1cda:	cb 01       	movw	r24, r22
    1cdc:	98 ab       	std	Y+48, r25	; 0x30
    1cde:	8f a7       	std	Y+47, r24	; 0x2f
    1ce0:	0f c0       	rjmp	.+30     	; 0x1d00 <call_size+0xe6>
    1ce2:	80 e9       	ldi	r24, 0x90	; 144
    1ce4:	91 e0       	ldi	r25, 0x01	; 1
    1ce6:	9e a7       	std	Y+46, r25	; 0x2e
    1ce8:	8d a7       	std	Y+45, r24	; 0x2d
    1cea:	8d a5       	ldd	r24, Y+45	; 0x2d
    1cec:	9e a5       	ldd	r25, Y+46	; 0x2e
    1cee:	01 97       	sbiw	r24, 0x01	; 1
    1cf0:	f1 f7       	brne	.-4      	; 0x1cee <call_size+0xd4>
    1cf2:	9e a7       	std	Y+46, r25	; 0x2e
    1cf4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cf6:	8f a5       	ldd	r24, Y+47	; 0x2f
    1cf8:	98 a9       	ldd	r25, Y+48	; 0x30
    1cfa:	01 97       	sbiw	r24, 0x01	; 1
    1cfc:	98 ab       	std	Y+48, r25	; 0x30
    1cfe:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d00:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d02:	98 a9       	ldd	r25, Y+48	; 0x30
    1d04:	00 97       	sbiw	r24, 0x00	; 0
    1d06:	69 f7       	brne	.-38     	; 0x1ce2 <call_size+0xc8>
    1d08:	14 c0       	rjmp	.+40     	; 0x1d32 <call_size+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d0a:	69 a9       	ldd	r22, Y+49	; 0x31
    1d0c:	7a a9       	ldd	r23, Y+50	; 0x32
    1d0e:	8b a9       	ldd	r24, Y+51	; 0x33
    1d10:	9c a9       	ldd	r25, Y+52	; 0x34
    1d12:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1d16:	dc 01       	movw	r26, r24
    1d18:	cb 01       	movw	r24, r22
    1d1a:	98 ab       	std	Y+48, r25	; 0x30
    1d1c:	8f a7       	std	Y+47, r24	; 0x2f
    1d1e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1d20:	98 a9       	ldd	r25, Y+48	; 0x30
    1d22:	9c a7       	std	Y+44, r25	; 0x2c
    1d24:	8b a7       	std	Y+43, r24	; 0x2b
    1d26:	8b a5       	ldd	r24, Y+43	; 0x2b
    1d28:	9c a5       	ldd	r25, Y+44	; 0x2c
    1d2a:	01 97       	sbiw	r24, 0x01	; 1
    1d2c:	f1 f7       	brne	.-4      	; 0x1d2a <call_size+0x110>
    1d2e:	9c a7       	std	Y+44, r25	; 0x2c
    1d30:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x00; _delay_ms(1);
    1d32:	ec e2       	ldi	r30, 0x2C	; 44
    1d34:	f0 e0       	ldi	r31, 0x00	; 0
    1d36:	10 82       	st	Z, r1
    1d38:	80 e0       	ldi	r24, 0x00	; 0
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	a0 e8       	ldi	r26, 0x80	; 128
    1d3e:	bf e3       	ldi	r27, 0x3F	; 63
    1d40:	8f a3       	std	Y+39, r24	; 0x27
    1d42:	98 a7       	std	Y+40, r25	; 0x28
    1d44:	a9 a7       	std	Y+41, r26	; 0x29
    1d46:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d48:	6f a1       	ldd	r22, Y+39	; 0x27
    1d4a:	78 a5       	ldd	r23, Y+40	; 0x28
    1d4c:	89 a5       	ldd	r24, Y+41	; 0x29
    1d4e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d50:	20 e0       	ldi	r18, 0x00	; 0
    1d52:	30 e0       	ldi	r19, 0x00	; 0
    1d54:	4a e7       	ldi	r20, 0x7A	; 122
    1d56:	55 e4       	ldi	r21, 0x45	; 69
    1d58:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1d5c:	dc 01       	movw	r26, r24
    1d5e:	cb 01       	movw	r24, r22
    1d60:	8b a3       	std	Y+35, r24	; 0x23
    1d62:	9c a3       	std	Y+36, r25	; 0x24
    1d64:	ad a3       	std	Y+37, r26	; 0x25
    1d66:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1d68:	6b a1       	ldd	r22, Y+35	; 0x23
    1d6a:	7c a1       	ldd	r23, Y+36	; 0x24
    1d6c:	8d a1       	ldd	r24, Y+37	; 0x25
    1d6e:	9e a1       	ldd	r25, Y+38	; 0x26
    1d70:	20 e0       	ldi	r18, 0x00	; 0
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	40 e8       	ldi	r20, 0x80	; 128
    1d76:	5f e3       	ldi	r21, 0x3F	; 63
    1d78:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1d7c:	88 23       	and	r24, r24
    1d7e:	2c f4       	brge	.+10     	; 0x1d8a <call_size+0x170>
		__ticks = 1;
    1d80:	81 e0       	ldi	r24, 0x01	; 1
    1d82:	90 e0       	ldi	r25, 0x00	; 0
    1d84:	9a a3       	std	Y+34, r25	; 0x22
    1d86:	89 a3       	std	Y+33, r24	; 0x21
    1d88:	3f c0       	rjmp	.+126    	; 0x1e08 <call_size+0x1ee>
	else if (__tmp > 65535)
    1d8a:	6b a1       	ldd	r22, Y+35	; 0x23
    1d8c:	7c a1       	ldd	r23, Y+36	; 0x24
    1d8e:	8d a1       	ldd	r24, Y+37	; 0x25
    1d90:	9e a1       	ldd	r25, Y+38	; 0x26
    1d92:	20 e0       	ldi	r18, 0x00	; 0
    1d94:	3f ef       	ldi	r19, 0xFF	; 255
    1d96:	4f e7       	ldi	r20, 0x7F	; 127
    1d98:	57 e4       	ldi	r21, 0x47	; 71
    1d9a:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1d9e:	18 16       	cp	r1, r24
    1da0:	4c f5       	brge	.+82     	; 0x1df4 <call_size+0x1da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1da2:	6f a1       	ldd	r22, Y+39	; 0x27
    1da4:	78 a5       	ldd	r23, Y+40	; 0x28
    1da6:	89 a5       	ldd	r24, Y+41	; 0x29
    1da8:	9a a5       	ldd	r25, Y+42	; 0x2a
    1daa:	20 e0       	ldi	r18, 0x00	; 0
    1dac:	30 e0       	ldi	r19, 0x00	; 0
    1dae:	40 e2       	ldi	r20, 0x20	; 32
    1db0:	51 e4       	ldi	r21, 0x41	; 65
    1db2:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1db6:	dc 01       	movw	r26, r24
    1db8:	cb 01       	movw	r24, r22
    1dba:	bc 01       	movw	r22, r24
    1dbc:	cd 01       	movw	r24, r26
    1dbe:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1dc2:	dc 01       	movw	r26, r24
    1dc4:	cb 01       	movw	r24, r22
    1dc6:	9a a3       	std	Y+34, r25	; 0x22
    1dc8:	89 a3       	std	Y+33, r24	; 0x21
    1dca:	0f c0       	rjmp	.+30     	; 0x1dea <call_size+0x1d0>
    1dcc:	80 e9       	ldi	r24, 0x90	; 144
    1dce:	91 e0       	ldi	r25, 0x01	; 1
    1dd0:	98 a3       	std	Y+32, r25	; 0x20
    1dd2:	8f 8f       	std	Y+31, r24	; 0x1f
    1dd4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1dd6:	98 a1       	ldd	r25, Y+32	; 0x20
    1dd8:	01 97       	sbiw	r24, 0x01	; 1
    1dda:	f1 f7       	brne	.-4      	; 0x1dd8 <call_size+0x1be>
    1ddc:	98 a3       	std	Y+32, r25	; 0x20
    1dde:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1de0:	89 a1       	ldd	r24, Y+33	; 0x21
    1de2:	9a a1       	ldd	r25, Y+34	; 0x22
    1de4:	01 97       	sbiw	r24, 0x01	; 1
    1de6:	9a a3       	std	Y+34, r25	; 0x22
    1de8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dea:	89 a1       	ldd	r24, Y+33	; 0x21
    1dec:	9a a1       	ldd	r25, Y+34	; 0x22
    1dee:	00 97       	sbiw	r24, 0x00	; 0
    1df0:	69 f7       	brne	.-38     	; 0x1dcc <call_size+0x1b2>
    1df2:	14 c0       	rjmp	.+40     	; 0x1e1c <call_size+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1df4:	6b a1       	ldd	r22, Y+35	; 0x23
    1df6:	7c a1       	ldd	r23, Y+36	; 0x24
    1df8:	8d a1       	ldd	r24, Y+37	; 0x25
    1dfa:	9e a1       	ldd	r25, Y+38	; 0x26
    1dfc:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1e00:	dc 01       	movw	r26, r24
    1e02:	cb 01       	movw	r24, r22
    1e04:	9a a3       	std	Y+34, r25	; 0x22
    1e06:	89 a3       	std	Y+33, r24	; 0x21
    1e08:	89 a1       	ldd	r24, Y+33	; 0x21
    1e0a:	9a a1       	ldd	r25, Y+34	; 0x22
    1e0c:	9e 8f       	std	Y+30, r25	; 0x1e
    1e0e:	8d 8f       	std	Y+29, r24	; 0x1d
    1e10:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e12:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1e14:	01 97       	sbiw	r24, 0x01	; 1
    1e16:	f1 f7       	brne	.-4      	; 0x1e14 <call_size+0x1fa>
    1e18:	9e 8f       	std	Y+30, r25	; 0x1e
    1e1a:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x34; _delay_ms(1);
    1e1c:	ec e2       	ldi	r30, 0x2C	; 44
    1e1e:	f0 e0       	ldi	r31, 0x00	; 0
    1e20:	84 e3       	ldi	r24, 0x34	; 52
    1e22:	80 83       	st	Z, r24
    1e24:	80 e0       	ldi	r24, 0x00	; 0
    1e26:	90 e0       	ldi	r25, 0x00	; 0
    1e28:	a0 e8       	ldi	r26, 0x80	; 128
    1e2a:	bf e3       	ldi	r27, 0x3F	; 63
    1e2c:	89 8f       	std	Y+25, r24	; 0x19
    1e2e:	9a 8f       	std	Y+26, r25	; 0x1a
    1e30:	ab 8f       	std	Y+27, r26	; 0x1b
    1e32:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e34:	69 8d       	ldd	r22, Y+25	; 0x19
    1e36:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e38:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e3a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e3c:	20 e0       	ldi	r18, 0x00	; 0
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	4a e7       	ldi	r20, 0x7A	; 122
    1e42:	55 e4       	ldi	r21, 0x45	; 69
    1e44:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1e48:	dc 01       	movw	r26, r24
    1e4a:	cb 01       	movw	r24, r22
    1e4c:	8d 8b       	std	Y+21, r24	; 0x15
    1e4e:	9e 8b       	std	Y+22, r25	; 0x16
    1e50:	af 8b       	std	Y+23, r26	; 0x17
    1e52:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e54:	6d 89       	ldd	r22, Y+21	; 0x15
    1e56:	7e 89       	ldd	r23, Y+22	; 0x16
    1e58:	8f 89       	ldd	r24, Y+23	; 0x17
    1e5a:	98 8d       	ldd	r25, Y+24	; 0x18
    1e5c:	20 e0       	ldi	r18, 0x00	; 0
    1e5e:	30 e0       	ldi	r19, 0x00	; 0
    1e60:	40 e8       	ldi	r20, 0x80	; 128
    1e62:	5f e3       	ldi	r21, 0x3F	; 63
    1e64:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1e68:	88 23       	and	r24, r24
    1e6a:	2c f4       	brge	.+10     	; 0x1e76 <call_size+0x25c>
		__ticks = 1;
    1e6c:	81 e0       	ldi	r24, 0x01	; 1
    1e6e:	90 e0       	ldi	r25, 0x00	; 0
    1e70:	9c 8b       	std	Y+20, r25	; 0x14
    1e72:	8b 8b       	std	Y+19, r24	; 0x13
    1e74:	3f c0       	rjmp	.+126    	; 0x1ef4 <call_size+0x2da>
	else if (__tmp > 65535)
    1e76:	6d 89       	ldd	r22, Y+21	; 0x15
    1e78:	7e 89       	ldd	r23, Y+22	; 0x16
    1e7a:	8f 89       	ldd	r24, Y+23	; 0x17
    1e7c:	98 8d       	ldd	r25, Y+24	; 0x18
    1e7e:	20 e0       	ldi	r18, 0x00	; 0
    1e80:	3f ef       	ldi	r19, 0xFF	; 255
    1e82:	4f e7       	ldi	r20, 0x7F	; 127
    1e84:	57 e4       	ldi	r21, 0x47	; 71
    1e86:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1e8a:	18 16       	cp	r1, r24
    1e8c:	4c f5       	brge	.+82     	; 0x1ee0 <call_size+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e8e:	69 8d       	ldd	r22, Y+25	; 0x19
    1e90:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e92:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e94:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e96:	20 e0       	ldi	r18, 0x00	; 0
    1e98:	30 e0       	ldi	r19, 0x00	; 0
    1e9a:	40 e2       	ldi	r20, 0x20	; 32
    1e9c:	51 e4       	ldi	r21, 0x41	; 65
    1e9e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1ea2:	dc 01       	movw	r26, r24
    1ea4:	cb 01       	movw	r24, r22
    1ea6:	bc 01       	movw	r22, r24
    1ea8:	cd 01       	movw	r24, r26
    1eaa:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1eae:	dc 01       	movw	r26, r24
    1eb0:	cb 01       	movw	r24, r22
    1eb2:	9c 8b       	std	Y+20, r25	; 0x14
    1eb4:	8b 8b       	std	Y+19, r24	; 0x13
    1eb6:	0f c0       	rjmp	.+30     	; 0x1ed6 <call_size+0x2bc>
    1eb8:	80 e9       	ldi	r24, 0x90	; 144
    1eba:	91 e0       	ldi	r25, 0x01	; 1
    1ebc:	9a 8b       	std	Y+18, r25	; 0x12
    1ebe:	89 8b       	std	Y+17, r24	; 0x11
    1ec0:	89 89       	ldd	r24, Y+17	; 0x11
    1ec2:	9a 89       	ldd	r25, Y+18	; 0x12
    1ec4:	01 97       	sbiw	r24, 0x01	; 1
    1ec6:	f1 f7       	brne	.-4      	; 0x1ec4 <call_size+0x2aa>
    1ec8:	9a 8b       	std	Y+18, r25	; 0x12
    1eca:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ecc:	8b 89       	ldd	r24, Y+19	; 0x13
    1ece:	9c 89       	ldd	r25, Y+20	; 0x14
    1ed0:	01 97       	sbiw	r24, 0x01	; 1
    1ed2:	9c 8b       	std	Y+20, r25	; 0x14
    1ed4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ed6:	8b 89       	ldd	r24, Y+19	; 0x13
    1ed8:	9c 89       	ldd	r25, Y+20	; 0x14
    1eda:	00 97       	sbiw	r24, 0x00	; 0
    1edc:	69 f7       	brne	.-38     	; 0x1eb8 <call_size+0x29e>
    1ede:	14 c0       	rjmp	.+40     	; 0x1f08 <call_size+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ee0:	6d 89       	ldd	r22, Y+21	; 0x15
    1ee2:	7e 89       	ldd	r23, Y+22	; 0x16
    1ee4:	8f 89       	ldd	r24, Y+23	; 0x17
    1ee6:	98 8d       	ldd	r25, Y+24	; 0x18
    1ee8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1eec:	dc 01       	movw	r26, r24
    1eee:	cb 01       	movw	r24, r22
    1ef0:	9c 8b       	std	Y+20, r25	; 0x14
    1ef2:	8b 8b       	std	Y+19, r24	; 0x13
    1ef4:	8b 89       	ldd	r24, Y+19	; 0x13
    1ef6:	9c 89       	ldd	r25, Y+20	; 0x14
    1ef8:	98 8b       	std	Y+16, r25	; 0x10
    1efa:	8f 87       	std	Y+15, r24	; 0x0f
    1efc:	8f 85       	ldd	r24, Y+15	; 0x0f
    1efe:	98 89       	ldd	r25, Y+16	; 0x10
    1f00:	01 97       	sbiw	r24, 0x01	; 1
    1f02:	f1 f7       	brne	.-4      	; 0x1f00 <call_size+0x2e6>
    1f04:	98 8b       	std	Y+16, r25	; 0x10
    1f06:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x01; _delay_ms(1);
    1f08:	ec e2       	ldi	r30, 0x2C	; 44
    1f0a:	f0 e0       	ldi	r31, 0x00	; 0
    1f0c:	81 e0       	ldi	r24, 0x01	; 1
    1f0e:	80 83       	st	Z, r24
    1f10:	80 e0       	ldi	r24, 0x00	; 0
    1f12:	90 e0       	ldi	r25, 0x00	; 0
    1f14:	a0 e8       	ldi	r26, 0x80	; 128
    1f16:	bf e3       	ldi	r27, 0x3F	; 63
    1f18:	8b 87       	std	Y+11, r24	; 0x0b
    1f1a:	9c 87       	std	Y+12, r25	; 0x0c
    1f1c:	ad 87       	std	Y+13, r26	; 0x0d
    1f1e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f20:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f22:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f24:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f26:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f28:	20 e0       	ldi	r18, 0x00	; 0
    1f2a:	30 e0       	ldi	r19, 0x00	; 0
    1f2c:	4a e7       	ldi	r20, 0x7A	; 122
    1f2e:	55 e4       	ldi	r21, 0x45	; 69
    1f30:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1f34:	dc 01       	movw	r26, r24
    1f36:	cb 01       	movw	r24, r22
    1f38:	8f 83       	std	Y+7, r24	; 0x07
    1f3a:	98 87       	std	Y+8, r25	; 0x08
    1f3c:	a9 87       	std	Y+9, r26	; 0x09
    1f3e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1f40:	6f 81       	ldd	r22, Y+7	; 0x07
    1f42:	78 85       	ldd	r23, Y+8	; 0x08
    1f44:	89 85       	ldd	r24, Y+9	; 0x09
    1f46:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	40 e8       	ldi	r20, 0x80	; 128
    1f4e:	5f e3       	ldi	r21, 0x3F	; 63
    1f50:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    1f54:	88 23       	and	r24, r24
    1f56:	2c f4       	brge	.+10     	; 0x1f62 <call_size+0x348>
		__ticks = 1;
    1f58:	81 e0       	ldi	r24, 0x01	; 1
    1f5a:	90 e0       	ldi	r25, 0x00	; 0
    1f5c:	9e 83       	std	Y+6, r25	; 0x06
    1f5e:	8d 83       	std	Y+5, r24	; 0x05
    1f60:	3f c0       	rjmp	.+126    	; 0x1fe0 <call_size+0x3c6>
	else if (__tmp > 65535)
    1f62:	6f 81       	ldd	r22, Y+7	; 0x07
    1f64:	78 85       	ldd	r23, Y+8	; 0x08
    1f66:	89 85       	ldd	r24, Y+9	; 0x09
    1f68:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f6a:	20 e0       	ldi	r18, 0x00	; 0
    1f6c:	3f ef       	ldi	r19, 0xFF	; 255
    1f6e:	4f e7       	ldi	r20, 0x7F	; 127
    1f70:	57 e4       	ldi	r21, 0x47	; 71
    1f72:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    1f76:	18 16       	cp	r1, r24
    1f78:	4c f5       	brge	.+82     	; 0x1fcc <call_size+0x3b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f7a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f7c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f80:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f82:	20 e0       	ldi	r18, 0x00	; 0
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	40 e2       	ldi	r20, 0x20	; 32
    1f88:	51 e4       	ldi	r21, 0x41	; 65
    1f8a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    1f8e:	dc 01       	movw	r26, r24
    1f90:	cb 01       	movw	r24, r22
    1f92:	bc 01       	movw	r22, r24
    1f94:	cd 01       	movw	r24, r26
    1f96:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1f9a:	dc 01       	movw	r26, r24
    1f9c:	cb 01       	movw	r24, r22
    1f9e:	9e 83       	std	Y+6, r25	; 0x06
    1fa0:	8d 83       	std	Y+5, r24	; 0x05
    1fa2:	0f c0       	rjmp	.+30     	; 0x1fc2 <call_size+0x3a8>
    1fa4:	80 e9       	ldi	r24, 0x90	; 144
    1fa6:	91 e0       	ldi	r25, 0x01	; 1
    1fa8:	9c 83       	std	Y+4, r25	; 0x04
    1faa:	8b 83       	std	Y+3, r24	; 0x03
    1fac:	8b 81       	ldd	r24, Y+3	; 0x03
    1fae:	9c 81       	ldd	r25, Y+4	; 0x04
    1fb0:	01 97       	sbiw	r24, 0x01	; 1
    1fb2:	f1 f7       	brne	.-4      	; 0x1fb0 <call_size+0x396>
    1fb4:	9c 83       	std	Y+4, r25	; 0x04
    1fb6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fb8:	8d 81       	ldd	r24, Y+5	; 0x05
    1fba:	9e 81       	ldd	r25, Y+6	; 0x06
    1fbc:	01 97       	sbiw	r24, 0x01	; 1
    1fbe:	9e 83       	std	Y+6, r25	; 0x06
    1fc0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fc2:	8d 81       	ldd	r24, Y+5	; 0x05
    1fc4:	9e 81       	ldd	r25, Y+6	; 0x06
    1fc6:	00 97       	sbiw	r24, 0x00	; 0
    1fc8:	69 f7       	brne	.-38     	; 0x1fa4 <call_size+0x38a>
    1fca:	14 c0       	rjmp	.+40     	; 0x1ff4 <call_size+0x3da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fcc:	6f 81       	ldd	r22, Y+7	; 0x07
    1fce:	78 85       	ldd	r23, Y+8	; 0x08
    1fd0:	89 85       	ldd	r24, Y+9	; 0x09
    1fd2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fd4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    1fd8:	dc 01       	movw	r26, r24
    1fda:	cb 01       	movw	r24, r22
    1fdc:	9e 83       	std	Y+6, r25	; 0x06
    1fde:	8d 83       	std	Y+5, r24	; 0x05
    1fe0:	8d 81       	ldd	r24, Y+5	; 0x05
    1fe2:	9e 81       	ldd	r25, Y+6	; 0x06
    1fe4:	9a 83       	std	Y+2, r25	; 0x02
    1fe6:	89 83       	std	Y+1, r24	; 0x01
    1fe8:	89 81       	ldd	r24, Y+1	; 0x01
    1fea:	9a 81       	ldd	r25, Y+2	; 0x02
    1fec:	01 97       	sbiw	r24, 0x01	; 1
    1fee:	f1 f7       	brne	.-4      	; 0x1fec <call_size+0x3d2>
    1ff0:	9a 83       	std	Y+2, r25	; 0x02
    1ff2:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x00;
    1ff4:	ec e2       	ldi	r30, 0x2C	; 44
    1ff6:	f0 e0       	ldi	r31, 0x00	; 0
    1ff8:	10 82       	st	Z, r1
}
    1ffa:	e8 96       	adiw	r28, 0x38	; 56
    1ffc:	0f b6       	in	r0, 0x3f	; 63
    1ffe:	f8 94       	cli
    2000:	de bf       	out	0x3e, r29	; 62
    2002:	0f be       	out	0x3f, r0	; 63
    2004:	cd bf       	out	0x3d, r28	; 61
    2006:	cf 91       	pop	r28
    2008:	df 91       	pop	r29
    200a:	08 95       	ret

0000200c <call_img>:
 
void call_img(){
    200c:	0f 93       	push	r16
    200e:	1f 93       	push	r17
    2010:	df 93       	push	r29
    2012:	cf 93       	push	r28
    2014:	cd b7       	in	r28, 0x3d	; 61
    2016:	de b7       	in	r29, 0x3e	; 62
    2018:	c2 5d       	subi	r28, 0xD2	; 210
    201a:	d0 40       	sbci	r29, 0x00	; 0
    201c:	0f b6       	in	r0, 0x3f	; 63
    201e:	f8 94       	cli
    2020:	de bf       	out	0x3e, r29	; 62
    2022:	0f be       	out	0x3f, r0	; 63
    2024:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nCALL_IMG ");
    2026:	00 d0       	rcall	.+0      	; 0x2028 <call_img+0x1c>
    2028:	ed b7       	in	r30, 0x3d	; 61
    202a:	fe b7       	in	r31, 0x3e	; 62
    202c:	31 96       	adiw	r30, 0x01	; 1
    202e:	80 e4       	ldi	r24, 0x40	; 64
    2030:	91 e0       	ldi	r25, 0x01	; 1
    2032:	91 83       	std	Z+1, r25	; 0x01
    2034:	80 83       	st	Z, r24
    2036:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
    203a:	0f 90       	pop	r0
    203c:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    203e:	ec e2       	ldi	r30, 0x2C	; 44
    2040:	f0 e0       	ldi	r31, 0x00	; 0
    2042:	86 e5       	ldi	r24, 0x56	; 86
    2044:	80 83       	st	Z, r24
    2046:	fe 01       	movw	r30, r28
    2048:	e1 53       	subi	r30, 0x31	; 49
    204a:	ff 4f       	sbci	r31, 0xFF	; 255
    204c:	80 e0       	ldi	r24, 0x00	; 0
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	a0 e8       	ldi	r26, 0x80	; 128
    2052:	bf e3       	ldi	r27, 0x3F	; 63
    2054:	80 83       	st	Z, r24
    2056:	91 83       	std	Z+1, r25	; 0x01
    2058:	a2 83       	std	Z+2, r26	; 0x02
    205a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    205c:	8e 01       	movw	r16, r28
    205e:	05 53       	subi	r16, 0x35	; 53
    2060:	1f 4f       	sbci	r17, 0xFF	; 255
    2062:	fe 01       	movw	r30, r28
    2064:	e1 53       	subi	r30, 0x31	; 49
    2066:	ff 4f       	sbci	r31, 0xFF	; 255
    2068:	60 81       	ld	r22, Z
    206a:	71 81       	ldd	r23, Z+1	; 0x01
    206c:	82 81       	ldd	r24, Z+2	; 0x02
    206e:	93 81       	ldd	r25, Z+3	; 0x03
    2070:	20 e0       	ldi	r18, 0x00	; 0
    2072:	30 e0       	ldi	r19, 0x00	; 0
    2074:	4a e7       	ldi	r20, 0x7A	; 122
    2076:	55 e4       	ldi	r21, 0x45	; 69
    2078:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    207c:	dc 01       	movw	r26, r24
    207e:	cb 01       	movw	r24, r22
    2080:	f8 01       	movw	r30, r16
    2082:	80 83       	st	Z, r24
    2084:	91 83       	std	Z+1, r25	; 0x01
    2086:	a2 83       	std	Z+2, r26	; 0x02
    2088:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    208a:	fe 01       	movw	r30, r28
    208c:	e5 53       	subi	r30, 0x35	; 53
    208e:	ff 4f       	sbci	r31, 0xFF	; 255
    2090:	60 81       	ld	r22, Z
    2092:	71 81       	ldd	r23, Z+1	; 0x01
    2094:	82 81       	ldd	r24, Z+2	; 0x02
    2096:	93 81       	ldd	r25, Z+3	; 0x03
    2098:	20 e0       	ldi	r18, 0x00	; 0
    209a:	30 e0       	ldi	r19, 0x00	; 0
    209c:	40 e8       	ldi	r20, 0x80	; 128
    209e:	5f e3       	ldi	r21, 0x3F	; 63
    20a0:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    20a4:	88 23       	and	r24, r24
    20a6:	44 f4       	brge	.+16     	; 0x20b8 <call_img+0xac>
		__ticks = 1;
    20a8:	fe 01       	movw	r30, r28
    20aa:	e7 53       	subi	r30, 0x37	; 55
    20ac:	ff 4f       	sbci	r31, 0xFF	; 255
    20ae:	81 e0       	ldi	r24, 0x01	; 1
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	91 83       	std	Z+1, r25	; 0x01
    20b4:	80 83       	st	Z, r24
    20b6:	64 c0       	rjmp	.+200    	; 0x2180 <call_img+0x174>
	else if (__tmp > 65535)
    20b8:	fe 01       	movw	r30, r28
    20ba:	e5 53       	subi	r30, 0x35	; 53
    20bc:	ff 4f       	sbci	r31, 0xFF	; 255
    20be:	60 81       	ld	r22, Z
    20c0:	71 81       	ldd	r23, Z+1	; 0x01
    20c2:	82 81       	ldd	r24, Z+2	; 0x02
    20c4:	93 81       	ldd	r25, Z+3	; 0x03
    20c6:	20 e0       	ldi	r18, 0x00	; 0
    20c8:	3f ef       	ldi	r19, 0xFF	; 255
    20ca:	4f e7       	ldi	r20, 0x7F	; 127
    20cc:	57 e4       	ldi	r21, 0x47	; 71
    20ce:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    20d2:	18 16       	cp	r1, r24
    20d4:	0c f0       	brlt	.+2      	; 0x20d8 <call_img+0xcc>
    20d6:	43 c0       	rjmp	.+134    	; 0x215e <call_img+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20d8:	fe 01       	movw	r30, r28
    20da:	e1 53       	subi	r30, 0x31	; 49
    20dc:	ff 4f       	sbci	r31, 0xFF	; 255
    20de:	60 81       	ld	r22, Z
    20e0:	71 81       	ldd	r23, Z+1	; 0x01
    20e2:	82 81       	ldd	r24, Z+2	; 0x02
    20e4:	93 81       	ldd	r25, Z+3	; 0x03
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	40 e2       	ldi	r20, 0x20	; 32
    20ec:	51 e4       	ldi	r21, 0x41	; 65
    20ee:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    20f2:	dc 01       	movw	r26, r24
    20f4:	cb 01       	movw	r24, r22
    20f6:	8e 01       	movw	r16, r28
    20f8:	07 53       	subi	r16, 0x37	; 55
    20fa:	1f 4f       	sbci	r17, 0xFF	; 255
    20fc:	bc 01       	movw	r22, r24
    20fe:	cd 01       	movw	r24, r26
    2100:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2104:	dc 01       	movw	r26, r24
    2106:	cb 01       	movw	r24, r22
    2108:	f8 01       	movw	r30, r16
    210a:	91 83       	std	Z+1, r25	; 0x01
    210c:	80 83       	st	Z, r24
    210e:	1f c0       	rjmp	.+62     	; 0x214e <call_img+0x142>
    2110:	fe 01       	movw	r30, r28
    2112:	e9 53       	subi	r30, 0x39	; 57
    2114:	ff 4f       	sbci	r31, 0xFF	; 255
    2116:	80 e9       	ldi	r24, 0x90	; 144
    2118:	91 e0       	ldi	r25, 0x01	; 1
    211a:	91 83       	std	Z+1, r25	; 0x01
    211c:	80 83       	st	Z, r24
    211e:	fe 01       	movw	r30, r28
    2120:	e9 53       	subi	r30, 0x39	; 57
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	80 81       	ld	r24, Z
    2126:	91 81       	ldd	r25, Z+1	; 0x01
    2128:	01 97       	sbiw	r24, 0x01	; 1
    212a:	f1 f7       	brne	.-4      	; 0x2128 <call_img+0x11c>
    212c:	fe 01       	movw	r30, r28
    212e:	e9 53       	subi	r30, 0x39	; 57
    2130:	ff 4f       	sbci	r31, 0xFF	; 255
    2132:	91 83       	std	Z+1, r25	; 0x01
    2134:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2136:	de 01       	movw	r26, r28
    2138:	a7 53       	subi	r26, 0x37	; 55
    213a:	bf 4f       	sbci	r27, 0xFF	; 255
    213c:	fe 01       	movw	r30, r28
    213e:	e7 53       	subi	r30, 0x37	; 55
    2140:	ff 4f       	sbci	r31, 0xFF	; 255
    2142:	80 81       	ld	r24, Z
    2144:	91 81       	ldd	r25, Z+1	; 0x01
    2146:	01 97       	sbiw	r24, 0x01	; 1
    2148:	11 96       	adiw	r26, 0x01	; 1
    214a:	9c 93       	st	X, r25
    214c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    214e:	fe 01       	movw	r30, r28
    2150:	e7 53       	subi	r30, 0x37	; 55
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	80 81       	ld	r24, Z
    2156:	91 81       	ldd	r25, Z+1	; 0x01
    2158:	00 97       	sbiw	r24, 0x00	; 0
    215a:	d1 f6       	brne	.-76     	; 0x2110 <call_img+0x104>
    215c:	27 c0       	rjmp	.+78     	; 0x21ac <call_img+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    215e:	8e 01       	movw	r16, r28
    2160:	07 53       	subi	r16, 0x37	; 55
    2162:	1f 4f       	sbci	r17, 0xFF	; 255
    2164:	fe 01       	movw	r30, r28
    2166:	e5 53       	subi	r30, 0x35	; 53
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	60 81       	ld	r22, Z
    216c:	71 81       	ldd	r23, Z+1	; 0x01
    216e:	82 81       	ldd	r24, Z+2	; 0x02
    2170:	93 81       	ldd	r25, Z+3	; 0x03
    2172:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2176:	dc 01       	movw	r26, r24
    2178:	cb 01       	movw	r24, r22
    217a:	f8 01       	movw	r30, r16
    217c:	91 83       	std	Z+1, r25	; 0x01
    217e:	80 83       	st	Z, r24
    2180:	de 01       	movw	r26, r28
    2182:	ab 53       	subi	r26, 0x3B	; 59
    2184:	bf 4f       	sbci	r27, 0xFF	; 255
    2186:	fe 01       	movw	r30, r28
    2188:	e7 53       	subi	r30, 0x37	; 55
    218a:	ff 4f       	sbci	r31, 0xFF	; 255
    218c:	80 81       	ld	r24, Z
    218e:	91 81       	ldd	r25, Z+1	; 0x01
    2190:	8d 93       	st	X+, r24
    2192:	9c 93       	st	X, r25
    2194:	fe 01       	movw	r30, r28
    2196:	eb 53       	subi	r30, 0x3B	; 59
    2198:	ff 4f       	sbci	r31, 0xFF	; 255
    219a:	80 81       	ld	r24, Z
    219c:	91 81       	ldd	r25, Z+1	; 0x01
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	f1 f7       	brne	.-4      	; 0x219e <call_img+0x192>
    21a2:	fe 01       	movw	r30, r28
    21a4:	eb 53       	subi	r30, 0x3B	; 59
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	91 83       	std	Z+1, r25	; 0x01
    21aa:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    21ac:	ec e2       	ldi	r30, 0x2C	; 44
    21ae:	f0 e0       	ldi	r31, 0x00	; 0
    21b0:	10 82       	st	Z, r1
    21b2:	fe 01       	movw	r30, r28
    21b4:	ef 53       	subi	r30, 0x3F	; 63
    21b6:	ff 4f       	sbci	r31, 0xFF	; 255
    21b8:	80 e0       	ldi	r24, 0x00	; 0
    21ba:	90 e0       	ldi	r25, 0x00	; 0
    21bc:	a0 e8       	ldi	r26, 0x80	; 128
    21be:	bf e3       	ldi	r27, 0x3F	; 63
    21c0:	80 83       	st	Z, r24
    21c2:	91 83       	std	Z+1, r25	; 0x01
    21c4:	a2 83       	std	Z+2, r26	; 0x02
    21c6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21c8:	8e 01       	movw	r16, r28
    21ca:	03 54       	subi	r16, 0x43	; 67
    21cc:	1f 4f       	sbci	r17, 0xFF	; 255
    21ce:	fe 01       	movw	r30, r28
    21d0:	ef 53       	subi	r30, 0x3F	; 63
    21d2:	ff 4f       	sbci	r31, 0xFF	; 255
    21d4:	60 81       	ld	r22, Z
    21d6:	71 81       	ldd	r23, Z+1	; 0x01
    21d8:	82 81       	ldd	r24, Z+2	; 0x02
    21da:	93 81       	ldd	r25, Z+3	; 0x03
    21dc:	20 e0       	ldi	r18, 0x00	; 0
    21de:	30 e0       	ldi	r19, 0x00	; 0
    21e0:	4a e7       	ldi	r20, 0x7A	; 122
    21e2:	55 e4       	ldi	r21, 0x45	; 69
    21e4:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    21e8:	dc 01       	movw	r26, r24
    21ea:	cb 01       	movw	r24, r22
    21ec:	f8 01       	movw	r30, r16
    21ee:	80 83       	st	Z, r24
    21f0:	91 83       	std	Z+1, r25	; 0x01
    21f2:	a2 83       	std	Z+2, r26	; 0x02
    21f4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    21f6:	fe 01       	movw	r30, r28
    21f8:	e3 54       	subi	r30, 0x43	; 67
    21fa:	ff 4f       	sbci	r31, 0xFF	; 255
    21fc:	60 81       	ld	r22, Z
    21fe:	71 81       	ldd	r23, Z+1	; 0x01
    2200:	82 81       	ldd	r24, Z+2	; 0x02
    2202:	93 81       	ldd	r25, Z+3	; 0x03
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	30 e0       	ldi	r19, 0x00	; 0
    2208:	40 e8       	ldi	r20, 0x80	; 128
    220a:	5f e3       	ldi	r21, 0x3F	; 63
    220c:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2210:	88 23       	and	r24, r24
    2212:	44 f4       	brge	.+16     	; 0x2224 <call_img+0x218>
		__ticks = 1;
    2214:	fe 01       	movw	r30, r28
    2216:	e5 54       	subi	r30, 0x45	; 69
    2218:	ff 4f       	sbci	r31, 0xFF	; 255
    221a:	81 e0       	ldi	r24, 0x01	; 1
    221c:	90 e0       	ldi	r25, 0x00	; 0
    221e:	91 83       	std	Z+1, r25	; 0x01
    2220:	80 83       	st	Z, r24
    2222:	64 c0       	rjmp	.+200    	; 0x22ec <call_img+0x2e0>
	else if (__tmp > 65535)
    2224:	fe 01       	movw	r30, r28
    2226:	e3 54       	subi	r30, 0x43	; 67
    2228:	ff 4f       	sbci	r31, 0xFF	; 255
    222a:	60 81       	ld	r22, Z
    222c:	71 81       	ldd	r23, Z+1	; 0x01
    222e:	82 81       	ldd	r24, Z+2	; 0x02
    2230:	93 81       	ldd	r25, Z+3	; 0x03
    2232:	20 e0       	ldi	r18, 0x00	; 0
    2234:	3f ef       	ldi	r19, 0xFF	; 255
    2236:	4f e7       	ldi	r20, 0x7F	; 127
    2238:	57 e4       	ldi	r21, 0x47	; 71
    223a:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    223e:	18 16       	cp	r1, r24
    2240:	0c f0       	brlt	.+2      	; 0x2244 <call_img+0x238>
    2242:	43 c0       	rjmp	.+134    	; 0x22ca <call_img+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2244:	fe 01       	movw	r30, r28
    2246:	ef 53       	subi	r30, 0x3F	; 63
    2248:	ff 4f       	sbci	r31, 0xFF	; 255
    224a:	60 81       	ld	r22, Z
    224c:	71 81       	ldd	r23, Z+1	; 0x01
    224e:	82 81       	ldd	r24, Z+2	; 0x02
    2250:	93 81       	ldd	r25, Z+3	; 0x03
    2252:	20 e0       	ldi	r18, 0x00	; 0
    2254:	30 e0       	ldi	r19, 0x00	; 0
    2256:	40 e2       	ldi	r20, 0x20	; 32
    2258:	51 e4       	ldi	r21, 0x41	; 65
    225a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    225e:	dc 01       	movw	r26, r24
    2260:	cb 01       	movw	r24, r22
    2262:	8e 01       	movw	r16, r28
    2264:	05 54       	subi	r16, 0x45	; 69
    2266:	1f 4f       	sbci	r17, 0xFF	; 255
    2268:	bc 01       	movw	r22, r24
    226a:	cd 01       	movw	r24, r26
    226c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2270:	dc 01       	movw	r26, r24
    2272:	cb 01       	movw	r24, r22
    2274:	f8 01       	movw	r30, r16
    2276:	91 83       	std	Z+1, r25	; 0x01
    2278:	80 83       	st	Z, r24
    227a:	1f c0       	rjmp	.+62     	; 0x22ba <call_img+0x2ae>
    227c:	fe 01       	movw	r30, r28
    227e:	e7 54       	subi	r30, 0x47	; 71
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	80 e9       	ldi	r24, 0x90	; 144
    2284:	91 e0       	ldi	r25, 0x01	; 1
    2286:	91 83       	std	Z+1, r25	; 0x01
    2288:	80 83       	st	Z, r24
    228a:	fe 01       	movw	r30, r28
    228c:	e7 54       	subi	r30, 0x47	; 71
    228e:	ff 4f       	sbci	r31, 0xFF	; 255
    2290:	80 81       	ld	r24, Z
    2292:	91 81       	ldd	r25, Z+1	; 0x01
    2294:	01 97       	sbiw	r24, 0x01	; 1
    2296:	f1 f7       	brne	.-4      	; 0x2294 <call_img+0x288>
    2298:	fe 01       	movw	r30, r28
    229a:	e7 54       	subi	r30, 0x47	; 71
    229c:	ff 4f       	sbci	r31, 0xFF	; 255
    229e:	91 83       	std	Z+1, r25	; 0x01
    22a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22a2:	de 01       	movw	r26, r28
    22a4:	a5 54       	subi	r26, 0x45	; 69
    22a6:	bf 4f       	sbci	r27, 0xFF	; 255
    22a8:	fe 01       	movw	r30, r28
    22aa:	e5 54       	subi	r30, 0x45	; 69
    22ac:	ff 4f       	sbci	r31, 0xFF	; 255
    22ae:	80 81       	ld	r24, Z
    22b0:	91 81       	ldd	r25, Z+1	; 0x01
    22b2:	01 97       	sbiw	r24, 0x01	; 1
    22b4:	11 96       	adiw	r26, 0x01	; 1
    22b6:	9c 93       	st	X, r25
    22b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22ba:	fe 01       	movw	r30, r28
    22bc:	e5 54       	subi	r30, 0x45	; 69
    22be:	ff 4f       	sbci	r31, 0xFF	; 255
    22c0:	80 81       	ld	r24, Z
    22c2:	91 81       	ldd	r25, Z+1	; 0x01
    22c4:	00 97       	sbiw	r24, 0x00	; 0
    22c6:	d1 f6       	brne	.-76     	; 0x227c <call_img+0x270>
    22c8:	27 c0       	rjmp	.+78     	; 0x2318 <call_img+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22ca:	8e 01       	movw	r16, r28
    22cc:	05 54       	subi	r16, 0x45	; 69
    22ce:	1f 4f       	sbci	r17, 0xFF	; 255
    22d0:	fe 01       	movw	r30, r28
    22d2:	e3 54       	subi	r30, 0x43	; 67
    22d4:	ff 4f       	sbci	r31, 0xFF	; 255
    22d6:	60 81       	ld	r22, Z
    22d8:	71 81       	ldd	r23, Z+1	; 0x01
    22da:	82 81       	ldd	r24, Z+2	; 0x02
    22dc:	93 81       	ldd	r25, Z+3	; 0x03
    22de:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    22e2:	dc 01       	movw	r26, r24
    22e4:	cb 01       	movw	r24, r22
    22e6:	f8 01       	movw	r30, r16
    22e8:	91 83       	std	Z+1, r25	; 0x01
    22ea:	80 83       	st	Z, r24
    22ec:	de 01       	movw	r26, r28
    22ee:	a9 54       	subi	r26, 0x49	; 73
    22f0:	bf 4f       	sbci	r27, 0xFF	; 255
    22f2:	fe 01       	movw	r30, r28
    22f4:	e5 54       	subi	r30, 0x45	; 69
    22f6:	ff 4f       	sbci	r31, 0xFF	; 255
    22f8:	80 81       	ld	r24, Z
    22fa:	91 81       	ldd	r25, Z+1	; 0x01
    22fc:	8d 93       	st	X+, r24
    22fe:	9c 93       	st	X, r25
    2300:	fe 01       	movw	r30, r28
    2302:	e9 54       	subi	r30, 0x49	; 73
    2304:	ff 4f       	sbci	r31, 0xFF	; 255
    2306:	80 81       	ld	r24, Z
    2308:	91 81       	ldd	r25, Z+1	; 0x01
    230a:	01 97       	sbiw	r24, 0x01	; 1
    230c:	f1 f7       	brne	.-4      	; 0x230a <call_img+0x2fe>
    230e:	fe 01       	movw	r30, r28
    2310:	e9 54       	subi	r30, 0x49	; 73
    2312:	ff 4f       	sbci	r31, 0xFF	; 255
    2314:	91 83       	std	Z+1, r25	; 0x01
    2316:	80 83       	st	Z, r24
 UDR0=0x32; _delay_ms(1);
    2318:	ec e2       	ldi	r30, 0x2C	; 44
    231a:	f0 e0       	ldi	r31, 0x00	; 0
    231c:	82 e3       	ldi	r24, 0x32	; 50
    231e:	80 83       	st	Z, r24
    2320:	fe 01       	movw	r30, r28
    2322:	ed 54       	subi	r30, 0x4D	; 77
    2324:	ff 4f       	sbci	r31, 0xFF	; 255
    2326:	80 e0       	ldi	r24, 0x00	; 0
    2328:	90 e0       	ldi	r25, 0x00	; 0
    232a:	a0 e8       	ldi	r26, 0x80	; 128
    232c:	bf e3       	ldi	r27, 0x3F	; 63
    232e:	80 83       	st	Z, r24
    2330:	91 83       	std	Z+1, r25	; 0x01
    2332:	a2 83       	std	Z+2, r26	; 0x02
    2334:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2336:	8e 01       	movw	r16, r28
    2338:	01 55       	subi	r16, 0x51	; 81
    233a:	1f 4f       	sbci	r17, 0xFF	; 255
    233c:	fe 01       	movw	r30, r28
    233e:	ed 54       	subi	r30, 0x4D	; 77
    2340:	ff 4f       	sbci	r31, 0xFF	; 255
    2342:	60 81       	ld	r22, Z
    2344:	71 81       	ldd	r23, Z+1	; 0x01
    2346:	82 81       	ldd	r24, Z+2	; 0x02
    2348:	93 81       	ldd	r25, Z+3	; 0x03
    234a:	20 e0       	ldi	r18, 0x00	; 0
    234c:	30 e0       	ldi	r19, 0x00	; 0
    234e:	4a e7       	ldi	r20, 0x7A	; 122
    2350:	55 e4       	ldi	r21, 0x45	; 69
    2352:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2356:	dc 01       	movw	r26, r24
    2358:	cb 01       	movw	r24, r22
    235a:	f8 01       	movw	r30, r16
    235c:	80 83       	st	Z, r24
    235e:	91 83       	std	Z+1, r25	; 0x01
    2360:	a2 83       	std	Z+2, r26	; 0x02
    2362:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2364:	fe 01       	movw	r30, r28
    2366:	e1 55       	subi	r30, 0x51	; 81
    2368:	ff 4f       	sbci	r31, 0xFF	; 255
    236a:	60 81       	ld	r22, Z
    236c:	71 81       	ldd	r23, Z+1	; 0x01
    236e:	82 81       	ldd	r24, Z+2	; 0x02
    2370:	93 81       	ldd	r25, Z+3	; 0x03
    2372:	20 e0       	ldi	r18, 0x00	; 0
    2374:	30 e0       	ldi	r19, 0x00	; 0
    2376:	40 e8       	ldi	r20, 0x80	; 128
    2378:	5f e3       	ldi	r21, 0x3F	; 63
    237a:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    237e:	88 23       	and	r24, r24
    2380:	44 f4       	brge	.+16     	; 0x2392 <call_img+0x386>
		__ticks = 1;
    2382:	fe 01       	movw	r30, r28
    2384:	e3 55       	subi	r30, 0x53	; 83
    2386:	ff 4f       	sbci	r31, 0xFF	; 255
    2388:	81 e0       	ldi	r24, 0x01	; 1
    238a:	90 e0       	ldi	r25, 0x00	; 0
    238c:	91 83       	std	Z+1, r25	; 0x01
    238e:	80 83       	st	Z, r24
    2390:	64 c0       	rjmp	.+200    	; 0x245a <call_img+0x44e>
	else if (__tmp > 65535)
    2392:	fe 01       	movw	r30, r28
    2394:	e1 55       	subi	r30, 0x51	; 81
    2396:	ff 4f       	sbci	r31, 0xFF	; 255
    2398:	60 81       	ld	r22, Z
    239a:	71 81       	ldd	r23, Z+1	; 0x01
    239c:	82 81       	ldd	r24, Z+2	; 0x02
    239e:	93 81       	ldd	r25, Z+3	; 0x03
    23a0:	20 e0       	ldi	r18, 0x00	; 0
    23a2:	3f ef       	ldi	r19, 0xFF	; 255
    23a4:	4f e7       	ldi	r20, 0x7F	; 127
    23a6:	57 e4       	ldi	r21, 0x47	; 71
    23a8:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    23ac:	18 16       	cp	r1, r24
    23ae:	0c f0       	brlt	.+2      	; 0x23b2 <call_img+0x3a6>
    23b0:	43 c0       	rjmp	.+134    	; 0x2438 <call_img+0x42c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23b2:	fe 01       	movw	r30, r28
    23b4:	ed 54       	subi	r30, 0x4D	; 77
    23b6:	ff 4f       	sbci	r31, 0xFF	; 255
    23b8:	60 81       	ld	r22, Z
    23ba:	71 81       	ldd	r23, Z+1	; 0x01
    23bc:	82 81       	ldd	r24, Z+2	; 0x02
    23be:	93 81       	ldd	r25, Z+3	; 0x03
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	40 e2       	ldi	r20, 0x20	; 32
    23c6:	51 e4       	ldi	r21, 0x41	; 65
    23c8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    23cc:	dc 01       	movw	r26, r24
    23ce:	cb 01       	movw	r24, r22
    23d0:	8e 01       	movw	r16, r28
    23d2:	03 55       	subi	r16, 0x53	; 83
    23d4:	1f 4f       	sbci	r17, 0xFF	; 255
    23d6:	bc 01       	movw	r22, r24
    23d8:	cd 01       	movw	r24, r26
    23da:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    23de:	dc 01       	movw	r26, r24
    23e0:	cb 01       	movw	r24, r22
    23e2:	f8 01       	movw	r30, r16
    23e4:	91 83       	std	Z+1, r25	; 0x01
    23e6:	80 83       	st	Z, r24
    23e8:	1f c0       	rjmp	.+62     	; 0x2428 <call_img+0x41c>
    23ea:	fe 01       	movw	r30, r28
    23ec:	e5 55       	subi	r30, 0x55	; 85
    23ee:	ff 4f       	sbci	r31, 0xFF	; 255
    23f0:	80 e9       	ldi	r24, 0x90	; 144
    23f2:	91 e0       	ldi	r25, 0x01	; 1
    23f4:	91 83       	std	Z+1, r25	; 0x01
    23f6:	80 83       	st	Z, r24
    23f8:	fe 01       	movw	r30, r28
    23fa:	e5 55       	subi	r30, 0x55	; 85
    23fc:	ff 4f       	sbci	r31, 0xFF	; 255
    23fe:	80 81       	ld	r24, Z
    2400:	91 81       	ldd	r25, Z+1	; 0x01
    2402:	01 97       	sbiw	r24, 0x01	; 1
    2404:	f1 f7       	brne	.-4      	; 0x2402 <call_img+0x3f6>
    2406:	fe 01       	movw	r30, r28
    2408:	e5 55       	subi	r30, 0x55	; 85
    240a:	ff 4f       	sbci	r31, 0xFF	; 255
    240c:	91 83       	std	Z+1, r25	; 0x01
    240e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2410:	de 01       	movw	r26, r28
    2412:	a3 55       	subi	r26, 0x53	; 83
    2414:	bf 4f       	sbci	r27, 0xFF	; 255
    2416:	fe 01       	movw	r30, r28
    2418:	e3 55       	subi	r30, 0x53	; 83
    241a:	ff 4f       	sbci	r31, 0xFF	; 255
    241c:	80 81       	ld	r24, Z
    241e:	91 81       	ldd	r25, Z+1	; 0x01
    2420:	01 97       	sbiw	r24, 0x01	; 1
    2422:	11 96       	adiw	r26, 0x01	; 1
    2424:	9c 93       	st	X, r25
    2426:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2428:	fe 01       	movw	r30, r28
    242a:	e3 55       	subi	r30, 0x53	; 83
    242c:	ff 4f       	sbci	r31, 0xFF	; 255
    242e:	80 81       	ld	r24, Z
    2430:	91 81       	ldd	r25, Z+1	; 0x01
    2432:	00 97       	sbiw	r24, 0x00	; 0
    2434:	d1 f6       	brne	.-76     	; 0x23ea <call_img+0x3de>
    2436:	27 c0       	rjmp	.+78     	; 0x2486 <call_img+0x47a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2438:	8e 01       	movw	r16, r28
    243a:	03 55       	subi	r16, 0x53	; 83
    243c:	1f 4f       	sbci	r17, 0xFF	; 255
    243e:	fe 01       	movw	r30, r28
    2440:	e1 55       	subi	r30, 0x51	; 81
    2442:	ff 4f       	sbci	r31, 0xFF	; 255
    2444:	60 81       	ld	r22, Z
    2446:	71 81       	ldd	r23, Z+1	; 0x01
    2448:	82 81       	ldd	r24, Z+2	; 0x02
    244a:	93 81       	ldd	r25, Z+3	; 0x03
    244c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2450:	dc 01       	movw	r26, r24
    2452:	cb 01       	movw	r24, r22
    2454:	f8 01       	movw	r30, r16
    2456:	91 83       	std	Z+1, r25	; 0x01
    2458:	80 83       	st	Z, r24
    245a:	de 01       	movw	r26, r28
    245c:	a7 55       	subi	r26, 0x57	; 87
    245e:	bf 4f       	sbci	r27, 0xFF	; 255
    2460:	fe 01       	movw	r30, r28
    2462:	e3 55       	subi	r30, 0x53	; 83
    2464:	ff 4f       	sbci	r31, 0xFF	; 255
    2466:	80 81       	ld	r24, Z
    2468:	91 81       	ldd	r25, Z+1	; 0x01
    246a:	8d 93       	st	X+, r24
    246c:	9c 93       	st	X, r25
    246e:	fe 01       	movw	r30, r28
    2470:	e7 55       	subi	r30, 0x57	; 87
    2472:	ff 4f       	sbci	r31, 0xFF	; 255
    2474:	80 81       	ld	r24, Z
    2476:	91 81       	ldd	r25, Z+1	; 0x01
    2478:	01 97       	sbiw	r24, 0x01	; 1
    247a:	f1 f7       	brne	.-4      	; 0x2478 <call_img+0x46c>
    247c:	fe 01       	movw	r30, r28
    247e:	e7 55       	subi	r30, 0x57	; 87
    2480:	ff 4f       	sbci	r31, 0xFF	; 255
    2482:	91 83       	std	Z+1, r25	; 0x01
    2484:	80 83       	st	Z, r24
 UDR0=0x0c; _delay_ms(1);
    2486:	ec e2       	ldi	r30, 0x2C	; 44
    2488:	f0 e0       	ldi	r31, 0x00	; 0
    248a:	8c e0       	ldi	r24, 0x0C	; 12
    248c:	80 83       	st	Z, r24
    248e:	fe 01       	movw	r30, r28
    2490:	eb 55       	subi	r30, 0x5B	; 91
    2492:	ff 4f       	sbci	r31, 0xFF	; 255
    2494:	80 e0       	ldi	r24, 0x00	; 0
    2496:	90 e0       	ldi	r25, 0x00	; 0
    2498:	a0 e8       	ldi	r26, 0x80	; 128
    249a:	bf e3       	ldi	r27, 0x3F	; 63
    249c:	80 83       	st	Z, r24
    249e:	91 83       	std	Z+1, r25	; 0x01
    24a0:	a2 83       	std	Z+2, r26	; 0x02
    24a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24a4:	8e 01       	movw	r16, r28
    24a6:	0f 55       	subi	r16, 0x5F	; 95
    24a8:	1f 4f       	sbci	r17, 0xFF	; 255
    24aa:	fe 01       	movw	r30, r28
    24ac:	eb 55       	subi	r30, 0x5B	; 91
    24ae:	ff 4f       	sbci	r31, 0xFF	; 255
    24b0:	60 81       	ld	r22, Z
    24b2:	71 81       	ldd	r23, Z+1	; 0x01
    24b4:	82 81       	ldd	r24, Z+2	; 0x02
    24b6:	93 81       	ldd	r25, Z+3	; 0x03
    24b8:	20 e0       	ldi	r18, 0x00	; 0
    24ba:	30 e0       	ldi	r19, 0x00	; 0
    24bc:	4a e7       	ldi	r20, 0x7A	; 122
    24be:	55 e4       	ldi	r21, 0x45	; 69
    24c0:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    24c4:	dc 01       	movw	r26, r24
    24c6:	cb 01       	movw	r24, r22
    24c8:	f8 01       	movw	r30, r16
    24ca:	80 83       	st	Z, r24
    24cc:	91 83       	std	Z+1, r25	; 0x01
    24ce:	a2 83       	std	Z+2, r26	; 0x02
    24d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    24d2:	fe 01       	movw	r30, r28
    24d4:	ef 55       	subi	r30, 0x5F	; 95
    24d6:	ff 4f       	sbci	r31, 0xFF	; 255
    24d8:	60 81       	ld	r22, Z
    24da:	71 81       	ldd	r23, Z+1	; 0x01
    24dc:	82 81       	ldd	r24, Z+2	; 0x02
    24de:	93 81       	ldd	r25, Z+3	; 0x03
    24e0:	20 e0       	ldi	r18, 0x00	; 0
    24e2:	30 e0       	ldi	r19, 0x00	; 0
    24e4:	40 e8       	ldi	r20, 0x80	; 128
    24e6:	5f e3       	ldi	r21, 0x3F	; 63
    24e8:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    24ec:	88 23       	and	r24, r24
    24ee:	44 f4       	brge	.+16     	; 0x2500 <call_img+0x4f4>
		__ticks = 1;
    24f0:	fe 01       	movw	r30, r28
    24f2:	e1 56       	subi	r30, 0x61	; 97
    24f4:	ff 4f       	sbci	r31, 0xFF	; 255
    24f6:	81 e0       	ldi	r24, 0x01	; 1
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	91 83       	std	Z+1, r25	; 0x01
    24fc:	80 83       	st	Z, r24
    24fe:	64 c0       	rjmp	.+200    	; 0x25c8 <call_img+0x5bc>
	else if (__tmp > 65535)
    2500:	fe 01       	movw	r30, r28
    2502:	ef 55       	subi	r30, 0x5F	; 95
    2504:	ff 4f       	sbci	r31, 0xFF	; 255
    2506:	60 81       	ld	r22, Z
    2508:	71 81       	ldd	r23, Z+1	; 0x01
    250a:	82 81       	ldd	r24, Z+2	; 0x02
    250c:	93 81       	ldd	r25, Z+3	; 0x03
    250e:	20 e0       	ldi	r18, 0x00	; 0
    2510:	3f ef       	ldi	r19, 0xFF	; 255
    2512:	4f e7       	ldi	r20, 0x7F	; 127
    2514:	57 e4       	ldi	r21, 0x47	; 71
    2516:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    251a:	18 16       	cp	r1, r24
    251c:	0c f0       	brlt	.+2      	; 0x2520 <call_img+0x514>
    251e:	43 c0       	rjmp	.+134    	; 0x25a6 <call_img+0x59a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2520:	fe 01       	movw	r30, r28
    2522:	eb 55       	subi	r30, 0x5B	; 91
    2524:	ff 4f       	sbci	r31, 0xFF	; 255
    2526:	60 81       	ld	r22, Z
    2528:	71 81       	ldd	r23, Z+1	; 0x01
    252a:	82 81       	ldd	r24, Z+2	; 0x02
    252c:	93 81       	ldd	r25, Z+3	; 0x03
    252e:	20 e0       	ldi	r18, 0x00	; 0
    2530:	30 e0       	ldi	r19, 0x00	; 0
    2532:	40 e2       	ldi	r20, 0x20	; 32
    2534:	51 e4       	ldi	r21, 0x41	; 65
    2536:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    253a:	dc 01       	movw	r26, r24
    253c:	cb 01       	movw	r24, r22
    253e:	8e 01       	movw	r16, r28
    2540:	01 56       	subi	r16, 0x61	; 97
    2542:	1f 4f       	sbci	r17, 0xFF	; 255
    2544:	bc 01       	movw	r22, r24
    2546:	cd 01       	movw	r24, r26
    2548:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    254c:	dc 01       	movw	r26, r24
    254e:	cb 01       	movw	r24, r22
    2550:	f8 01       	movw	r30, r16
    2552:	91 83       	std	Z+1, r25	; 0x01
    2554:	80 83       	st	Z, r24
    2556:	1f c0       	rjmp	.+62     	; 0x2596 <call_img+0x58a>
    2558:	fe 01       	movw	r30, r28
    255a:	e3 56       	subi	r30, 0x63	; 99
    255c:	ff 4f       	sbci	r31, 0xFF	; 255
    255e:	80 e9       	ldi	r24, 0x90	; 144
    2560:	91 e0       	ldi	r25, 0x01	; 1
    2562:	91 83       	std	Z+1, r25	; 0x01
    2564:	80 83       	st	Z, r24
    2566:	fe 01       	movw	r30, r28
    2568:	e3 56       	subi	r30, 0x63	; 99
    256a:	ff 4f       	sbci	r31, 0xFF	; 255
    256c:	80 81       	ld	r24, Z
    256e:	91 81       	ldd	r25, Z+1	; 0x01
    2570:	01 97       	sbiw	r24, 0x01	; 1
    2572:	f1 f7       	brne	.-4      	; 0x2570 <call_img+0x564>
    2574:	fe 01       	movw	r30, r28
    2576:	e3 56       	subi	r30, 0x63	; 99
    2578:	ff 4f       	sbci	r31, 0xFF	; 255
    257a:	91 83       	std	Z+1, r25	; 0x01
    257c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    257e:	de 01       	movw	r26, r28
    2580:	a1 56       	subi	r26, 0x61	; 97
    2582:	bf 4f       	sbci	r27, 0xFF	; 255
    2584:	fe 01       	movw	r30, r28
    2586:	e1 56       	subi	r30, 0x61	; 97
    2588:	ff 4f       	sbci	r31, 0xFF	; 255
    258a:	80 81       	ld	r24, Z
    258c:	91 81       	ldd	r25, Z+1	; 0x01
    258e:	01 97       	sbiw	r24, 0x01	; 1
    2590:	11 96       	adiw	r26, 0x01	; 1
    2592:	9c 93       	st	X, r25
    2594:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2596:	fe 01       	movw	r30, r28
    2598:	e1 56       	subi	r30, 0x61	; 97
    259a:	ff 4f       	sbci	r31, 0xFF	; 255
    259c:	80 81       	ld	r24, Z
    259e:	91 81       	ldd	r25, Z+1	; 0x01
    25a0:	00 97       	sbiw	r24, 0x00	; 0
    25a2:	d1 f6       	brne	.-76     	; 0x2558 <call_img+0x54c>
    25a4:	27 c0       	rjmp	.+78     	; 0x25f4 <call_img+0x5e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25a6:	8e 01       	movw	r16, r28
    25a8:	01 56       	subi	r16, 0x61	; 97
    25aa:	1f 4f       	sbci	r17, 0xFF	; 255
    25ac:	fe 01       	movw	r30, r28
    25ae:	ef 55       	subi	r30, 0x5F	; 95
    25b0:	ff 4f       	sbci	r31, 0xFF	; 255
    25b2:	60 81       	ld	r22, Z
    25b4:	71 81       	ldd	r23, Z+1	; 0x01
    25b6:	82 81       	ldd	r24, Z+2	; 0x02
    25b8:	93 81       	ldd	r25, Z+3	; 0x03
    25ba:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    25be:	dc 01       	movw	r26, r24
    25c0:	cb 01       	movw	r24, r22
    25c2:	f8 01       	movw	r30, r16
    25c4:	91 83       	std	Z+1, r25	; 0x01
    25c6:	80 83       	st	Z, r24
    25c8:	de 01       	movw	r26, r28
    25ca:	a5 56       	subi	r26, 0x65	; 101
    25cc:	bf 4f       	sbci	r27, 0xFF	; 255
    25ce:	fe 01       	movw	r30, r28
    25d0:	e1 56       	subi	r30, 0x61	; 97
    25d2:	ff 4f       	sbci	r31, 0xFF	; 255
    25d4:	80 81       	ld	r24, Z
    25d6:	91 81       	ldd	r25, Z+1	; 0x01
    25d8:	8d 93       	st	X+, r24
    25da:	9c 93       	st	X, r25
    25dc:	fe 01       	movw	r30, r28
    25de:	e5 56       	subi	r30, 0x65	; 101
    25e0:	ff 4f       	sbci	r31, 0xFF	; 255
    25e2:	80 81       	ld	r24, Z
    25e4:	91 81       	ldd	r25, Z+1	; 0x01
    25e6:	01 97       	sbiw	r24, 0x01	; 1
    25e8:	f1 f7       	brne	.-4      	; 0x25e6 <call_img+0x5da>
    25ea:	fe 01       	movw	r30, r28
    25ec:	e5 56       	subi	r30, 0x65	; 101
    25ee:	ff 4f       	sbci	r31, 0xFF	; 255
    25f0:	91 83       	std	Z+1, r25	; 0x01
    25f2:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    25f4:	ec e2       	ldi	r30, 0x2C	; 44
    25f6:	f0 e0       	ldi	r31, 0x00	; 0
    25f8:	10 82       	st	Z, r1
    25fa:	fe 01       	movw	r30, r28
    25fc:	e9 56       	subi	r30, 0x69	; 105
    25fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2600:	80 e0       	ldi	r24, 0x00	; 0
    2602:	90 e0       	ldi	r25, 0x00	; 0
    2604:	a0 e8       	ldi	r26, 0x80	; 128
    2606:	bf e3       	ldi	r27, 0x3F	; 63
    2608:	80 83       	st	Z, r24
    260a:	91 83       	std	Z+1, r25	; 0x01
    260c:	a2 83       	std	Z+2, r26	; 0x02
    260e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2610:	8e 01       	movw	r16, r28
    2612:	0d 56       	subi	r16, 0x6D	; 109
    2614:	1f 4f       	sbci	r17, 0xFF	; 255
    2616:	fe 01       	movw	r30, r28
    2618:	e9 56       	subi	r30, 0x69	; 105
    261a:	ff 4f       	sbci	r31, 0xFF	; 255
    261c:	60 81       	ld	r22, Z
    261e:	71 81       	ldd	r23, Z+1	; 0x01
    2620:	82 81       	ldd	r24, Z+2	; 0x02
    2622:	93 81       	ldd	r25, Z+3	; 0x03
    2624:	20 e0       	ldi	r18, 0x00	; 0
    2626:	30 e0       	ldi	r19, 0x00	; 0
    2628:	4a e7       	ldi	r20, 0x7A	; 122
    262a:	55 e4       	ldi	r21, 0x45	; 69
    262c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2630:	dc 01       	movw	r26, r24
    2632:	cb 01       	movw	r24, r22
    2634:	f8 01       	movw	r30, r16
    2636:	80 83       	st	Z, r24
    2638:	91 83       	std	Z+1, r25	; 0x01
    263a:	a2 83       	std	Z+2, r26	; 0x02
    263c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    263e:	fe 01       	movw	r30, r28
    2640:	ed 56       	subi	r30, 0x6D	; 109
    2642:	ff 4f       	sbci	r31, 0xFF	; 255
    2644:	60 81       	ld	r22, Z
    2646:	71 81       	ldd	r23, Z+1	; 0x01
    2648:	82 81       	ldd	r24, Z+2	; 0x02
    264a:	93 81       	ldd	r25, Z+3	; 0x03
    264c:	20 e0       	ldi	r18, 0x00	; 0
    264e:	30 e0       	ldi	r19, 0x00	; 0
    2650:	40 e8       	ldi	r20, 0x80	; 128
    2652:	5f e3       	ldi	r21, 0x3F	; 63
    2654:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2658:	88 23       	and	r24, r24
    265a:	44 f4       	brge	.+16     	; 0x266c <call_img+0x660>
		__ticks = 1;
    265c:	fe 01       	movw	r30, r28
    265e:	ef 56       	subi	r30, 0x6F	; 111
    2660:	ff 4f       	sbci	r31, 0xFF	; 255
    2662:	81 e0       	ldi	r24, 0x01	; 1
    2664:	90 e0       	ldi	r25, 0x00	; 0
    2666:	91 83       	std	Z+1, r25	; 0x01
    2668:	80 83       	st	Z, r24
    266a:	64 c0       	rjmp	.+200    	; 0x2734 <call_img+0x728>
	else if (__tmp > 65535)
    266c:	fe 01       	movw	r30, r28
    266e:	ed 56       	subi	r30, 0x6D	; 109
    2670:	ff 4f       	sbci	r31, 0xFF	; 255
    2672:	60 81       	ld	r22, Z
    2674:	71 81       	ldd	r23, Z+1	; 0x01
    2676:	82 81       	ldd	r24, Z+2	; 0x02
    2678:	93 81       	ldd	r25, Z+3	; 0x03
    267a:	20 e0       	ldi	r18, 0x00	; 0
    267c:	3f ef       	ldi	r19, 0xFF	; 255
    267e:	4f e7       	ldi	r20, 0x7F	; 127
    2680:	57 e4       	ldi	r21, 0x47	; 71
    2682:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    2686:	18 16       	cp	r1, r24
    2688:	0c f0       	brlt	.+2      	; 0x268c <call_img+0x680>
    268a:	43 c0       	rjmp	.+134    	; 0x2712 <call_img+0x706>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    268c:	fe 01       	movw	r30, r28
    268e:	e9 56       	subi	r30, 0x69	; 105
    2690:	ff 4f       	sbci	r31, 0xFF	; 255
    2692:	60 81       	ld	r22, Z
    2694:	71 81       	ldd	r23, Z+1	; 0x01
    2696:	82 81       	ldd	r24, Z+2	; 0x02
    2698:	93 81       	ldd	r25, Z+3	; 0x03
    269a:	20 e0       	ldi	r18, 0x00	; 0
    269c:	30 e0       	ldi	r19, 0x00	; 0
    269e:	40 e2       	ldi	r20, 0x20	; 32
    26a0:	51 e4       	ldi	r21, 0x41	; 65
    26a2:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    26a6:	dc 01       	movw	r26, r24
    26a8:	cb 01       	movw	r24, r22
    26aa:	8e 01       	movw	r16, r28
    26ac:	0f 56       	subi	r16, 0x6F	; 111
    26ae:	1f 4f       	sbci	r17, 0xFF	; 255
    26b0:	bc 01       	movw	r22, r24
    26b2:	cd 01       	movw	r24, r26
    26b4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    26b8:	dc 01       	movw	r26, r24
    26ba:	cb 01       	movw	r24, r22
    26bc:	f8 01       	movw	r30, r16
    26be:	91 83       	std	Z+1, r25	; 0x01
    26c0:	80 83       	st	Z, r24
    26c2:	1f c0       	rjmp	.+62     	; 0x2702 <call_img+0x6f6>
    26c4:	fe 01       	movw	r30, r28
    26c6:	e1 57       	subi	r30, 0x71	; 113
    26c8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ca:	80 e9       	ldi	r24, 0x90	; 144
    26cc:	91 e0       	ldi	r25, 0x01	; 1
    26ce:	91 83       	std	Z+1, r25	; 0x01
    26d0:	80 83       	st	Z, r24
    26d2:	fe 01       	movw	r30, r28
    26d4:	e1 57       	subi	r30, 0x71	; 113
    26d6:	ff 4f       	sbci	r31, 0xFF	; 255
    26d8:	80 81       	ld	r24, Z
    26da:	91 81       	ldd	r25, Z+1	; 0x01
    26dc:	01 97       	sbiw	r24, 0x01	; 1
    26de:	f1 f7       	brne	.-4      	; 0x26dc <call_img+0x6d0>
    26e0:	fe 01       	movw	r30, r28
    26e2:	e1 57       	subi	r30, 0x71	; 113
    26e4:	ff 4f       	sbci	r31, 0xFF	; 255
    26e6:	91 83       	std	Z+1, r25	; 0x01
    26e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ea:	de 01       	movw	r26, r28
    26ec:	af 56       	subi	r26, 0x6F	; 111
    26ee:	bf 4f       	sbci	r27, 0xFF	; 255
    26f0:	fe 01       	movw	r30, r28
    26f2:	ef 56       	subi	r30, 0x6F	; 111
    26f4:	ff 4f       	sbci	r31, 0xFF	; 255
    26f6:	80 81       	ld	r24, Z
    26f8:	91 81       	ldd	r25, Z+1	; 0x01
    26fa:	01 97       	sbiw	r24, 0x01	; 1
    26fc:	11 96       	adiw	r26, 0x01	; 1
    26fe:	9c 93       	st	X, r25
    2700:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2702:	fe 01       	movw	r30, r28
    2704:	ef 56       	subi	r30, 0x6F	; 111
    2706:	ff 4f       	sbci	r31, 0xFF	; 255
    2708:	80 81       	ld	r24, Z
    270a:	91 81       	ldd	r25, Z+1	; 0x01
    270c:	00 97       	sbiw	r24, 0x00	; 0
    270e:	d1 f6       	brne	.-76     	; 0x26c4 <call_img+0x6b8>
    2710:	27 c0       	rjmp	.+78     	; 0x2760 <call_img+0x754>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2712:	8e 01       	movw	r16, r28
    2714:	0f 56       	subi	r16, 0x6F	; 111
    2716:	1f 4f       	sbci	r17, 0xFF	; 255
    2718:	fe 01       	movw	r30, r28
    271a:	ed 56       	subi	r30, 0x6D	; 109
    271c:	ff 4f       	sbci	r31, 0xFF	; 255
    271e:	60 81       	ld	r22, Z
    2720:	71 81       	ldd	r23, Z+1	; 0x01
    2722:	82 81       	ldd	r24, Z+2	; 0x02
    2724:	93 81       	ldd	r25, Z+3	; 0x03
    2726:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    272a:	dc 01       	movw	r26, r24
    272c:	cb 01       	movw	r24, r22
    272e:	f8 01       	movw	r30, r16
    2730:	91 83       	std	Z+1, r25	; 0x01
    2732:	80 83       	st	Z, r24
    2734:	de 01       	movw	r26, r28
    2736:	a3 57       	subi	r26, 0x73	; 115
    2738:	bf 4f       	sbci	r27, 0xFF	; 255
    273a:	fe 01       	movw	r30, r28
    273c:	ef 56       	subi	r30, 0x6F	; 111
    273e:	ff 4f       	sbci	r31, 0xFF	; 255
    2740:	80 81       	ld	r24, Z
    2742:	91 81       	ldd	r25, Z+1	; 0x01
    2744:	8d 93       	st	X+, r24
    2746:	9c 93       	st	X, r25
    2748:	fe 01       	movw	r30, r28
    274a:	e3 57       	subi	r30, 0x73	; 115
    274c:	ff 4f       	sbci	r31, 0xFF	; 255
    274e:	80 81       	ld	r24, Z
    2750:	91 81       	ldd	r25, Z+1	; 0x01
    2752:	01 97       	sbiw	r24, 0x01	; 1
    2754:	f1 f7       	brne	.-4      	; 0x2752 <call_img+0x746>
    2756:	fe 01       	movw	r30, r28
    2758:	e3 57       	subi	r30, 0x73	; 115
    275a:	ff 4f       	sbci	r31, 0xFF	; 255
    275c:	91 83       	std	Z+1, r25	; 0x01
    275e:	80 83       	st	Z, r24
 UDR0=0x0A; _delay_ms(1);
    2760:	ec e2       	ldi	r30, 0x2C	; 44
    2762:	f0 e0       	ldi	r31, 0x00	; 0
    2764:	8a e0       	ldi	r24, 0x0A	; 10
    2766:	80 83       	st	Z, r24
    2768:	fe 01       	movw	r30, r28
    276a:	e7 57       	subi	r30, 0x77	; 119
    276c:	ff 4f       	sbci	r31, 0xFF	; 255
    276e:	80 e0       	ldi	r24, 0x00	; 0
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	a0 e8       	ldi	r26, 0x80	; 128
    2774:	bf e3       	ldi	r27, 0x3F	; 63
    2776:	80 83       	st	Z, r24
    2778:	91 83       	std	Z+1, r25	; 0x01
    277a:	a2 83       	std	Z+2, r26	; 0x02
    277c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    277e:	8e 01       	movw	r16, r28
    2780:	0b 57       	subi	r16, 0x7B	; 123
    2782:	1f 4f       	sbci	r17, 0xFF	; 255
    2784:	fe 01       	movw	r30, r28
    2786:	e7 57       	subi	r30, 0x77	; 119
    2788:	ff 4f       	sbci	r31, 0xFF	; 255
    278a:	60 81       	ld	r22, Z
    278c:	71 81       	ldd	r23, Z+1	; 0x01
    278e:	82 81       	ldd	r24, Z+2	; 0x02
    2790:	93 81       	ldd	r25, Z+3	; 0x03
    2792:	20 e0       	ldi	r18, 0x00	; 0
    2794:	30 e0       	ldi	r19, 0x00	; 0
    2796:	4a e7       	ldi	r20, 0x7A	; 122
    2798:	55 e4       	ldi	r21, 0x45	; 69
    279a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    279e:	dc 01       	movw	r26, r24
    27a0:	cb 01       	movw	r24, r22
    27a2:	f8 01       	movw	r30, r16
    27a4:	80 83       	st	Z, r24
    27a6:	91 83       	std	Z+1, r25	; 0x01
    27a8:	a2 83       	std	Z+2, r26	; 0x02
    27aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27ac:	fe 01       	movw	r30, r28
    27ae:	eb 57       	subi	r30, 0x7B	; 123
    27b0:	ff 4f       	sbci	r31, 0xFF	; 255
    27b2:	60 81       	ld	r22, Z
    27b4:	71 81       	ldd	r23, Z+1	; 0x01
    27b6:	82 81       	ldd	r24, Z+2	; 0x02
    27b8:	93 81       	ldd	r25, Z+3	; 0x03
    27ba:	20 e0       	ldi	r18, 0x00	; 0
    27bc:	30 e0       	ldi	r19, 0x00	; 0
    27be:	40 e8       	ldi	r20, 0x80	; 128
    27c0:	5f e3       	ldi	r21, 0x3F	; 63
    27c2:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    27c6:	88 23       	and	r24, r24
    27c8:	44 f4       	brge	.+16     	; 0x27da <call_img+0x7ce>
		__ticks = 1;
    27ca:	fe 01       	movw	r30, r28
    27cc:	ed 57       	subi	r30, 0x7D	; 125
    27ce:	ff 4f       	sbci	r31, 0xFF	; 255
    27d0:	81 e0       	ldi	r24, 0x01	; 1
    27d2:	90 e0       	ldi	r25, 0x00	; 0
    27d4:	91 83       	std	Z+1, r25	; 0x01
    27d6:	80 83       	st	Z, r24
    27d8:	64 c0       	rjmp	.+200    	; 0x28a2 <call_img+0x896>
	else if (__tmp > 65535)
    27da:	fe 01       	movw	r30, r28
    27dc:	eb 57       	subi	r30, 0x7B	; 123
    27de:	ff 4f       	sbci	r31, 0xFF	; 255
    27e0:	60 81       	ld	r22, Z
    27e2:	71 81       	ldd	r23, Z+1	; 0x01
    27e4:	82 81       	ldd	r24, Z+2	; 0x02
    27e6:	93 81       	ldd	r25, Z+3	; 0x03
    27e8:	20 e0       	ldi	r18, 0x00	; 0
    27ea:	3f ef       	ldi	r19, 0xFF	; 255
    27ec:	4f e7       	ldi	r20, 0x7F	; 127
    27ee:	57 e4       	ldi	r21, 0x47	; 71
    27f0:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    27f4:	18 16       	cp	r1, r24
    27f6:	0c f0       	brlt	.+2      	; 0x27fa <call_img+0x7ee>
    27f8:	43 c0       	rjmp	.+134    	; 0x2880 <call_img+0x874>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27fa:	fe 01       	movw	r30, r28
    27fc:	e7 57       	subi	r30, 0x77	; 119
    27fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2800:	60 81       	ld	r22, Z
    2802:	71 81       	ldd	r23, Z+1	; 0x01
    2804:	82 81       	ldd	r24, Z+2	; 0x02
    2806:	93 81       	ldd	r25, Z+3	; 0x03
    2808:	20 e0       	ldi	r18, 0x00	; 0
    280a:	30 e0       	ldi	r19, 0x00	; 0
    280c:	40 e2       	ldi	r20, 0x20	; 32
    280e:	51 e4       	ldi	r21, 0x41	; 65
    2810:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2814:	dc 01       	movw	r26, r24
    2816:	cb 01       	movw	r24, r22
    2818:	8e 01       	movw	r16, r28
    281a:	0d 57       	subi	r16, 0x7D	; 125
    281c:	1f 4f       	sbci	r17, 0xFF	; 255
    281e:	bc 01       	movw	r22, r24
    2820:	cd 01       	movw	r24, r26
    2822:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2826:	dc 01       	movw	r26, r24
    2828:	cb 01       	movw	r24, r22
    282a:	f8 01       	movw	r30, r16
    282c:	91 83       	std	Z+1, r25	; 0x01
    282e:	80 83       	st	Z, r24
    2830:	1f c0       	rjmp	.+62     	; 0x2870 <call_img+0x864>
    2832:	fe 01       	movw	r30, r28
    2834:	ef 57       	subi	r30, 0x7F	; 127
    2836:	ff 4f       	sbci	r31, 0xFF	; 255
    2838:	80 e9       	ldi	r24, 0x90	; 144
    283a:	91 e0       	ldi	r25, 0x01	; 1
    283c:	91 83       	std	Z+1, r25	; 0x01
    283e:	80 83       	st	Z, r24
    2840:	fe 01       	movw	r30, r28
    2842:	ef 57       	subi	r30, 0x7F	; 127
    2844:	ff 4f       	sbci	r31, 0xFF	; 255
    2846:	80 81       	ld	r24, Z
    2848:	91 81       	ldd	r25, Z+1	; 0x01
    284a:	01 97       	sbiw	r24, 0x01	; 1
    284c:	f1 f7       	brne	.-4      	; 0x284a <call_img+0x83e>
    284e:	fe 01       	movw	r30, r28
    2850:	ef 57       	subi	r30, 0x7F	; 127
    2852:	ff 4f       	sbci	r31, 0xFF	; 255
    2854:	91 83       	std	Z+1, r25	; 0x01
    2856:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2858:	de 01       	movw	r26, r28
    285a:	ad 57       	subi	r26, 0x7D	; 125
    285c:	bf 4f       	sbci	r27, 0xFF	; 255
    285e:	fe 01       	movw	r30, r28
    2860:	ed 57       	subi	r30, 0x7D	; 125
    2862:	ff 4f       	sbci	r31, 0xFF	; 255
    2864:	80 81       	ld	r24, Z
    2866:	91 81       	ldd	r25, Z+1	; 0x01
    2868:	01 97       	sbiw	r24, 0x01	; 1
    286a:	11 96       	adiw	r26, 0x01	; 1
    286c:	9c 93       	st	X, r25
    286e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2870:	fe 01       	movw	r30, r28
    2872:	ed 57       	subi	r30, 0x7D	; 125
    2874:	ff 4f       	sbci	r31, 0xFF	; 255
    2876:	80 81       	ld	r24, Z
    2878:	91 81       	ldd	r25, Z+1	; 0x01
    287a:	00 97       	sbiw	r24, 0x00	; 0
    287c:	d1 f6       	brne	.-76     	; 0x2832 <call_img+0x826>
    287e:	27 c0       	rjmp	.+78     	; 0x28ce <call_img+0x8c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2880:	8e 01       	movw	r16, r28
    2882:	0d 57       	subi	r16, 0x7D	; 125
    2884:	1f 4f       	sbci	r17, 0xFF	; 255
    2886:	fe 01       	movw	r30, r28
    2888:	eb 57       	subi	r30, 0x7B	; 123
    288a:	ff 4f       	sbci	r31, 0xFF	; 255
    288c:	60 81       	ld	r22, Z
    288e:	71 81       	ldd	r23, Z+1	; 0x01
    2890:	82 81       	ldd	r24, Z+2	; 0x02
    2892:	93 81       	ldd	r25, Z+3	; 0x03
    2894:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2898:	dc 01       	movw	r26, r24
    289a:	cb 01       	movw	r24, r22
    289c:	f8 01       	movw	r30, r16
    289e:	91 83       	std	Z+1, r25	; 0x01
    28a0:	80 83       	st	Z, r24
    28a2:	de 01       	movw	r26, r28
    28a4:	a1 58       	subi	r26, 0x81	; 129
    28a6:	bf 4f       	sbci	r27, 0xFF	; 255
    28a8:	fe 01       	movw	r30, r28
    28aa:	ed 57       	subi	r30, 0x7D	; 125
    28ac:	ff 4f       	sbci	r31, 0xFF	; 255
    28ae:	80 81       	ld	r24, Z
    28b0:	91 81       	ldd	r25, Z+1	; 0x01
    28b2:	8d 93       	st	X+, r24
    28b4:	9c 93       	st	X, r25
    28b6:	fe 01       	movw	r30, r28
    28b8:	e1 58       	subi	r30, 0x81	; 129
    28ba:	ff 4f       	sbci	r31, 0xFF	; 255
    28bc:	80 81       	ld	r24, Z
    28be:	91 81       	ldd	r25, Z+1	; 0x01
    28c0:	01 97       	sbiw	r24, 0x01	; 1
    28c2:	f1 f7       	brne	.-4      	; 0x28c0 <call_img+0x8b4>
    28c4:	fe 01       	movw	r30, r28
    28c6:	e1 58       	subi	r30, 0x81	; 129
    28c8:	ff 4f       	sbci	r31, 0xFF	; 255
    28ca:	91 83       	std	Z+1, r25	; 0x01
    28cc:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    28ce:	ec e2       	ldi	r30, 0x2C	; 44
    28d0:	f0 e0       	ldi	r31, 0x00	; 0
    28d2:	10 82       	st	Z, r1
    28d4:	fe 01       	movw	r30, r28
    28d6:	e5 58       	subi	r30, 0x85	; 133
    28d8:	ff 4f       	sbci	r31, 0xFF	; 255
    28da:	80 e0       	ldi	r24, 0x00	; 0
    28dc:	90 e0       	ldi	r25, 0x00	; 0
    28de:	a0 e8       	ldi	r26, 0x80	; 128
    28e0:	bf e3       	ldi	r27, 0x3F	; 63
    28e2:	80 83       	st	Z, r24
    28e4:	91 83       	std	Z+1, r25	; 0x01
    28e6:	a2 83       	std	Z+2, r26	; 0x02
    28e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28ea:	8e 01       	movw	r16, r28
    28ec:	09 58       	subi	r16, 0x89	; 137
    28ee:	1f 4f       	sbci	r17, 0xFF	; 255
    28f0:	fe 01       	movw	r30, r28
    28f2:	e5 58       	subi	r30, 0x85	; 133
    28f4:	ff 4f       	sbci	r31, 0xFF	; 255
    28f6:	60 81       	ld	r22, Z
    28f8:	71 81       	ldd	r23, Z+1	; 0x01
    28fa:	82 81       	ldd	r24, Z+2	; 0x02
    28fc:	93 81       	ldd	r25, Z+3	; 0x03
    28fe:	20 e0       	ldi	r18, 0x00	; 0
    2900:	30 e0       	ldi	r19, 0x00	; 0
    2902:	4a e7       	ldi	r20, 0x7A	; 122
    2904:	55 e4       	ldi	r21, 0x45	; 69
    2906:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    290a:	dc 01       	movw	r26, r24
    290c:	cb 01       	movw	r24, r22
    290e:	f8 01       	movw	r30, r16
    2910:	80 83       	st	Z, r24
    2912:	91 83       	std	Z+1, r25	; 0x01
    2914:	a2 83       	std	Z+2, r26	; 0x02
    2916:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2918:	fe 01       	movw	r30, r28
    291a:	e9 58       	subi	r30, 0x89	; 137
    291c:	ff 4f       	sbci	r31, 0xFF	; 255
    291e:	60 81       	ld	r22, Z
    2920:	71 81       	ldd	r23, Z+1	; 0x01
    2922:	82 81       	ldd	r24, Z+2	; 0x02
    2924:	93 81       	ldd	r25, Z+3	; 0x03
    2926:	20 e0       	ldi	r18, 0x00	; 0
    2928:	30 e0       	ldi	r19, 0x00	; 0
    292a:	40 e8       	ldi	r20, 0x80	; 128
    292c:	5f e3       	ldi	r21, 0x3F	; 63
    292e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2932:	88 23       	and	r24, r24
    2934:	44 f4       	brge	.+16     	; 0x2946 <call_img+0x93a>
		__ticks = 1;
    2936:	fe 01       	movw	r30, r28
    2938:	eb 58       	subi	r30, 0x8B	; 139
    293a:	ff 4f       	sbci	r31, 0xFF	; 255
    293c:	81 e0       	ldi	r24, 0x01	; 1
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	91 83       	std	Z+1, r25	; 0x01
    2942:	80 83       	st	Z, r24
    2944:	64 c0       	rjmp	.+200    	; 0x2a0e <call_img+0xa02>
	else if (__tmp > 65535)
    2946:	fe 01       	movw	r30, r28
    2948:	e9 58       	subi	r30, 0x89	; 137
    294a:	ff 4f       	sbci	r31, 0xFF	; 255
    294c:	60 81       	ld	r22, Z
    294e:	71 81       	ldd	r23, Z+1	; 0x01
    2950:	82 81       	ldd	r24, Z+2	; 0x02
    2952:	93 81       	ldd	r25, Z+3	; 0x03
    2954:	20 e0       	ldi	r18, 0x00	; 0
    2956:	3f ef       	ldi	r19, 0xFF	; 255
    2958:	4f e7       	ldi	r20, 0x7F	; 127
    295a:	57 e4       	ldi	r21, 0x47	; 71
    295c:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    2960:	18 16       	cp	r1, r24
    2962:	0c f0       	brlt	.+2      	; 0x2966 <call_img+0x95a>
    2964:	43 c0       	rjmp	.+134    	; 0x29ec <call_img+0x9e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2966:	fe 01       	movw	r30, r28
    2968:	e5 58       	subi	r30, 0x85	; 133
    296a:	ff 4f       	sbci	r31, 0xFF	; 255
    296c:	60 81       	ld	r22, Z
    296e:	71 81       	ldd	r23, Z+1	; 0x01
    2970:	82 81       	ldd	r24, Z+2	; 0x02
    2972:	93 81       	ldd	r25, Z+3	; 0x03
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	30 e0       	ldi	r19, 0x00	; 0
    2978:	40 e2       	ldi	r20, 0x20	; 32
    297a:	51 e4       	ldi	r21, 0x41	; 65
    297c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2980:	dc 01       	movw	r26, r24
    2982:	cb 01       	movw	r24, r22
    2984:	8e 01       	movw	r16, r28
    2986:	0b 58       	subi	r16, 0x8B	; 139
    2988:	1f 4f       	sbci	r17, 0xFF	; 255
    298a:	bc 01       	movw	r22, r24
    298c:	cd 01       	movw	r24, r26
    298e:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2992:	dc 01       	movw	r26, r24
    2994:	cb 01       	movw	r24, r22
    2996:	f8 01       	movw	r30, r16
    2998:	91 83       	std	Z+1, r25	; 0x01
    299a:	80 83       	st	Z, r24
    299c:	1f c0       	rjmp	.+62     	; 0x29dc <call_img+0x9d0>
    299e:	fe 01       	movw	r30, r28
    29a0:	ed 58       	subi	r30, 0x8D	; 141
    29a2:	ff 4f       	sbci	r31, 0xFF	; 255
    29a4:	80 e9       	ldi	r24, 0x90	; 144
    29a6:	91 e0       	ldi	r25, 0x01	; 1
    29a8:	91 83       	std	Z+1, r25	; 0x01
    29aa:	80 83       	st	Z, r24
    29ac:	fe 01       	movw	r30, r28
    29ae:	ed 58       	subi	r30, 0x8D	; 141
    29b0:	ff 4f       	sbci	r31, 0xFF	; 255
    29b2:	80 81       	ld	r24, Z
    29b4:	91 81       	ldd	r25, Z+1	; 0x01
    29b6:	01 97       	sbiw	r24, 0x01	; 1
    29b8:	f1 f7       	brne	.-4      	; 0x29b6 <call_img+0x9aa>
    29ba:	fe 01       	movw	r30, r28
    29bc:	ed 58       	subi	r30, 0x8D	; 141
    29be:	ff 4f       	sbci	r31, 0xFF	; 255
    29c0:	91 83       	std	Z+1, r25	; 0x01
    29c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29c4:	de 01       	movw	r26, r28
    29c6:	ab 58       	subi	r26, 0x8B	; 139
    29c8:	bf 4f       	sbci	r27, 0xFF	; 255
    29ca:	fe 01       	movw	r30, r28
    29cc:	eb 58       	subi	r30, 0x8B	; 139
    29ce:	ff 4f       	sbci	r31, 0xFF	; 255
    29d0:	80 81       	ld	r24, Z
    29d2:	91 81       	ldd	r25, Z+1	; 0x01
    29d4:	01 97       	sbiw	r24, 0x01	; 1
    29d6:	11 96       	adiw	r26, 0x01	; 1
    29d8:	9c 93       	st	X, r25
    29da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29dc:	fe 01       	movw	r30, r28
    29de:	eb 58       	subi	r30, 0x8B	; 139
    29e0:	ff 4f       	sbci	r31, 0xFF	; 255
    29e2:	80 81       	ld	r24, Z
    29e4:	91 81       	ldd	r25, Z+1	; 0x01
    29e6:	00 97       	sbiw	r24, 0x00	; 0
    29e8:	d1 f6       	brne	.-76     	; 0x299e <call_img+0x992>
    29ea:	27 c0       	rjmp	.+78     	; 0x2a3a <call_img+0xa2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29ec:	8e 01       	movw	r16, r28
    29ee:	0b 58       	subi	r16, 0x8B	; 139
    29f0:	1f 4f       	sbci	r17, 0xFF	; 255
    29f2:	fe 01       	movw	r30, r28
    29f4:	e9 58       	subi	r30, 0x89	; 137
    29f6:	ff 4f       	sbci	r31, 0xFF	; 255
    29f8:	60 81       	ld	r22, Z
    29fa:	71 81       	ldd	r23, Z+1	; 0x01
    29fc:	82 81       	ldd	r24, Z+2	; 0x02
    29fe:	93 81       	ldd	r25, Z+3	; 0x03
    2a00:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2a04:	dc 01       	movw	r26, r24
    2a06:	cb 01       	movw	r24, r22
    2a08:	f8 01       	movw	r30, r16
    2a0a:	91 83       	std	Z+1, r25	; 0x01
    2a0c:	80 83       	st	Z, r24
    2a0e:	de 01       	movw	r26, r28
    2a10:	af 58       	subi	r26, 0x8F	; 143
    2a12:	bf 4f       	sbci	r27, 0xFF	; 255
    2a14:	fe 01       	movw	r30, r28
    2a16:	eb 58       	subi	r30, 0x8B	; 139
    2a18:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1a:	80 81       	ld	r24, Z
    2a1c:	91 81       	ldd	r25, Z+1	; 0x01
    2a1e:	8d 93       	st	X+, r24
    2a20:	9c 93       	st	X, r25
    2a22:	fe 01       	movw	r30, r28
    2a24:	ef 58       	subi	r30, 0x8F	; 143
    2a26:	ff 4f       	sbci	r31, 0xFF	; 255
    2a28:	80 81       	ld	r24, Z
    2a2a:	91 81       	ldd	r25, Z+1	; 0x01
    2a2c:	01 97       	sbiw	r24, 0x01	; 1
    2a2e:	f1 f7       	brne	.-4      	; 0x2a2c <call_img+0xa20>
    2a30:	fe 01       	movw	r30, r28
    2a32:	ef 58       	subi	r30, 0x8F	; 143
    2a34:	ff 4f       	sbci	r31, 0xFF	; 255
    2a36:	91 83       	std	Z+1, r25	; 0x01
    2a38:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2a3a:	ec e2       	ldi	r30, 0x2C	; 44
    2a3c:	f0 e0       	ldi	r31, 0x00	; 0
    2a3e:	10 82       	st	Z, r1
    2a40:	fe 01       	movw	r30, r28
    2a42:	e3 59       	subi	r30, 0x93	; 147
    2a44:	ff 4f       	sbci	r31, 0xFF	; 255
    2a46:	80 e0       	ldi	r24, 0x00	; 0
    2a48:	90 e0       	ldi	r25, 0x00	; 0
    2a4a:	a0 e8       	ldi	r26, 0x80	; 128
    2a4c:	bf e3       	ldi	r27, 0x3F	; 63
    2a4e:	80 83       	st	Z, r24
    2a50:	91 83       	std	Z+1, r25	; 0x01
    2a52:	a2 83       	std	Z+2, r26	; 0x02
    2a54:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a56:	8e 01       	movw	r16, r28
    2a58:	07 59       	subi	r16, 0x97	; 151
    2a5a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a5c:	fe 01       	movw	r30, r28
    2a5e:	e3 59       	subi	r30, 0x93	; 147
    2a60:	ff 4f       	sbci	r31, 0xFF	; 255
    2a62:	60 81       	ld	r22, Z
    2a64:	71 81       	ldd	r23, Z+1	; 0x01
    2a66:	82 81       	ldd	r24, Z+2	; 0x02
    2a68:	93 81       	ldd	r25, Z+3	; 0x03
    2a6a:	20 e0       	ldi	r18, 0x00	; 0
    2a6c:	30 e0       	ldi	r19, 0x00	; 0
    2a6e:	4a e7       	ldi	r20, 0x7A	; 122
    2a70:	55 e4       	ldi	r21, 0x45	; 69
    2a72:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2a76:	dc 01       	movw	r26, r24
    2a78:	cb 01       	movw	r24, r22
    2a7a:	f8 01       	movw	r30, r16
    2a7c:	80 83       	st	Z, r24
    2a7e:	91 83       	std	Z+1, r25	; 0x01
    2a80:	a2 83       	std	Z+2, r26	; 0x02
    2a82:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a84:	fe 01       	movw	r30, r28
    2a86:	e7 59       	subi	r30, 0x97	; 151
    2a88:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8a:	60 81       	ld	r22, Z
    2a8c:	71 81       	ldd	r23, Z+1	; 0x01
    2a8e:	82 81       	ldd	r24, Z+2	; 0x02
    2a90:	93 81       	ldd	r25, Z+3	; 0x03
    2a92:	20 e0       	ldi	r18, 0x00	; 0
    2a94:	30 e0       	ldi	r19, 0x00	; 0
    2a96:	40 e8       	ldi	r20, 0x80	; 128
    2a98:	5f e3       	ldi	r21, 0x3F	; 63
    2a9a:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2a9e:	88 23       	and	r24, r24
    2aa0:	44 f4       	brge	.+16     	; 0x2ab2 <call_img+0xaa6>
		__ticks = 1;
    2aa2:	fe 01       	movw	r30, r28
    2aa4:	e9 59       	subi	r30, 0x99	; 153
    2aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa8:	81 e0       	ldi	r24, 0x01	; 1
    2aaa:	90 e0       	ldi	r25, 0x00	; 0
    2aac:	91 83       	std	Z+1, r25	; 0x01
    2aae:	80 83       	st	Z, r24
    2ab0:	64 c0       	rjmp	.+200    	; 0x2b7a <call_img+0xb6e>
	else if (__tmp > 65535)
    2ab2:	fe 01       	movw	r30, r28
    2ab4:	e7 59       	subi	r30, 0x97	; 151
    2ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab8:	60 81       	ld	r22, Z
    2aba:	71 81       	ldd	r23, Z+1	; 0x01
    2abc:	82 81       	ldd	r24, Z+2	; 0x02
    2abe:	93 81       	ldd	r25, Z+3	; 0x03
    2ac0:	20 e0       	ldi	r18, 0x00	; 0
    2ac2:	3f ef       	ldi	r19, 0xFF	; 255
    2ac4:	4f e7       	ldi	r20, 0x7F	; 127
    2ac6:	57 e4       	ldi	r21, 0x47	; 71
    2ac8:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    2acc:	18 16       	cp	r1, r24
    2ace:	0c f0       	brlt	.+2      	; 0x2ad2 <call_img+0xac6>
    2ad0:	43 c0       	rjmp	.+134    	; 0x2b58 <call_img+0xb4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ad2:	fe 01       	movw	r30, r28
    2ad4:	e3 59       	subi	r30, 0x93	; 147
    2ad6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad8:	60 81       	ld	r22, Z
    2ada:	71 81       	ldd	r23, Z+1	; 0x01
    2adc:	82 81       	ldd	r24, Z+2	; 0x02
    2ade:	93 81       	ldd	r25, Z+3	; 0x03
    2ae0:	20 e0       	ldi	r18, 0x00	; 0
    2ae2:	30 e0       	ldi	r19, 0x00	; 0
    2ae4:	40 e2       	ldi	r20, 0x20	; 32
    2ae6:	51 e4       	ldi	r21, 0x41	; 65
    2ae8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2aec:	dc 01       	movw	r26, r24
    2aee:	cb 01       	movw	r24, r22
    2af0:	8e 01       	movw	r16, r28
    2af2:	09 59       	subi	r16, 0x99	; 153
    2af4:	1f 4f       	sbci	r17, 0xFF	; 255
    2af6:	bc 01       	movw	r22, r24
    2af8:	cd 01       	movw	r24, r26
    2afa:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2afe:	dc 01       	movw	r26, r24
    2b00:	cb 01       	movw	r24, r22
    2b02:	f8 01       	movw	r30, r16
    2b04:	91 83       	std	Z+1, r25	; 0x01
    2b06:	80 83       	st	Z, r24
    2b08:	1f c0       	rjmp	.+62     	; 0x2b48 <call_img+0xb3c>
    2b0a:	fe 01       	movw	r30, r28
    2b0c:	eb 59       	subi	r30, 0x9B	; 155
    2b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b10:	80 e9       	ldi	r24, 0x90	; 144
    2b12:	91 e0       	ldi	r25, 0x01	; 1
    2b14:	91 83       	std	Z+1, r25	; 0x01
    2b16:	80 83       	st	Z, r24
    2b18:	fe 01       	movw	r30, r28
    2b1a:	eb 59       	subi	r30, 0x9B	; 155
    2b1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b1e:	80 81       	ld	r24, Z
    2b20:	91 81       	ldd	r25, Z+1	; 0x01
    2b22:	01 97       	sbiw	r24, 0x01	; 1
    2b24:	f1 f7       	brne	.-4      	; 0x2b22 <call_img+0xb16>
    2b26:	fe 01       	movw	r30, r28
    2b28:	eb 59       	subi	r30, 0x9B	; 155
    2b2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2c:	91 83       	std	Z+1, r25	; 0x01
    2b2e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b30:	de 01       	movw	r26, r28
    2b32:	a9 59       	subi	r26, 0x99	; 153
    2b34:	bf 4f       	sbci	r27, 0xFF	; 255
    2b36:	fe 01       	movw	r30, r28
    2b38:	e9 59       	subi	r30, 0x99	; 153
    2b3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b3c:	80 81       	ld	r24, Z
    2b3e:	91 81       	ldd	r25, Z+1	; 0x01
    2b40:	01 97       	sbiw	r24, 0x01	; 1
    2b42:	11 96       	adiw	r26, 0x01	; 1
    2b44:	9c 93       	st	X, r25
    2b46:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b48:	fe 01       	movw	r30, r28
    2b4a:	e9 59       	subi	r30, 0x99	; 153
    2b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b4e:	80 81       	ld	r24, Z
    2b50:	91 81       	ldd	r25, Z+1	; 0x01
    2b52:	00 97       	sbiw	r24, 0x00	; 0
    2b54:	d1 f6       	brne	.-76     	; 0x2b0a <call_img+0xafe>
    2b56:	27 c0       	rjmp	.+78     	; 0x2ba6 <call_img+0xb9a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b58:	8e 01       	movw	r16, r28
    2b5a:	09 59       	subi	r16, 0x99	; 153
    2b5c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b5e:	fe 01       	movw	r30, r28
    2b60:	e7 59       	subi	r30, 0x97	; 151
    2b62:	ff 4f       	sbci	r31, 0xFF	; 255
    2b64:	60 81       	ld	r22, Z
    2b66:	71 81       	ldd	r23, Z+1	; 0x01
    2b68:	82 81       	ldd	r24, Z+2	; 0x02
    2b6a:	93 81       	ldd	r25, Z+3	; 0x03
    2b6c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2b70:	dc 01       	movw	r26, r24
    2b72:	cb 01       	movw	r24, r22
    2b74:	f8 01       	movw	r30, r16
    2b76:	91 83       	std	Z+1, r25	; 0x01
    2b78:	80 83       	st	Z, r24
    2b7a:	de 01       	movw	r26, r28
    2b7c:	ad 59       	subi	r26, 0x9D	; 157
    2b7e:	bf 4f       	sbci	r27, 0xFF	; 255
    2b80:	fe 01       	movw	r30, r28
    2b82:	e9 59       	subi	r30, 0x99	; 153
    2b84:	ff 4f       	sbci	r31, 0xFF	; 255
    2b86:	80 81       	ld	r24, Z
    2b88:	91 81       	ldd	r25, Z+1	; 0x01
    2b8a:	8d 93       	st	X+, r24
    2b8c:	9c 93       	st	X, r25
    2b8e:	fe 01       	movw	r30, r28
    2b90:	ed 59       	subi	r30, 0x9D	; 157
    2b92:	ff 4f       	sbci	r31, 0xFF	; 255
    2b94:	80 81       	ld	r24, Z
    2b96:	91 81       	ldd	r25, Z+1	; 0x01
    2b98:	01 97       	sbiw	r24, 0x01	; 1
    2b9a:	f1 f7       	brne	.-4      	; 0x2b98 <call_img+0xb8c>
    2b9c:	fe 01       	movw	r30, r28
    2b9e:	ed 59       	subi	r30, 0x9D	; 157
    2ba0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ba2:	91 83       	std	Z+1, r25	; 0x01
    2ba4:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2ba6:	ec e2       	ldi	r30, 0x2C	; 44
    2ba8:	f0 e0       	ldi	r31, 0x00	; 0
    2baa:	10 82       	st	Z, r1
    2bac:	fe 01       	movw	r30, r28
    2bae:	e1 5a       	subi	r30, 0xA1	; 161
    2bb0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bb2:	80 e0       	ldi	r24, 0x00	; 0
    2bb4:	90 e0       	ldi	r25, 0x00	; 0
    2bb6:	a0 e8       	ldi	r26, 0x80	; 128
    2bb8:	bf e3       	ldi	r27, 0x3F	; 63
    2bba:	80 83       	st	Z, r24
    2bbc:	91 83       	std	Z+1, r25	; 0x01
    2bbe:	a2 83       	std	Z+2, r26	; 0x02
    2bc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2bc2:	8e 01       	movw	r16, r28
    2bc4:	05 5a       	subi	r16, 0xA5	; 165
    2bc6:	1f 4f       	sbci	r17, 0xFF	; 255
    2bc8:	fe 01       	movw	r30, r28
    2bca:	e1 5a       	subi	r30, 0xA1	; 161
    2bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bce:	60 81       	ld	r22, Z
    2bd0:	71 81       	ldd	r23, Z+1	; 0x01
    2bd2:	82 81       	ldd	r24, Z+2	; 0x02
    2bd4:	93 81       	ldd	r25, Z+3	; 0x03
    2bd6:	20 e0       	ldi	r18, 0x00	; 0
    2bd8:	30 e0       	ldi	r19, 0x00	; 0
    2bda:	4a e7       	ldi	r20, 0x7A	; 122
    2bdc:	55 e4       	ldi	r21, 0x45	; 69
    2bde:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2be2:	dc 01       	movw	r26, r24
    2be4:	cb 01       	movw	r24, r22
    2be6:	f8 01       	movw	r30, r16
    2be8:	80 83       	st	Z, r24
    2bea:	91 83       	std	Z+1, r25	; 0x01
    2bec:	a2 83       	std	Z+2, r26	; 0x02
    2bee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2bf0:	fe 01       	movw	r30, r28
    2bf2:	e5 5a       	subi	r30, 0xA5	; 165
    2bf4:	ff 4f       	sbci	r31, 0xFF	; 255
    2bf6:	60 81       	ld	r22, Z
    2bf8:	71 81       	ldd	r23, Z+1	; 0x01
    2bfa:	82 81       	ldd	r24, Z+2	; 0x02
    2bfc:	93 81       	ldd	r25, Z+3	; 0x03
    2bfe:	20 e0       	ldi	r18, 0x00	; 0
    2c00:	30 e0       	ldi	r19, 0x00	; 0
    2c02:	40 e8       	ldi	r20, 0x80	; 128
    2c04:	5f e3       	ldi	r21, 0x3F	; 63
    2c06:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2c0a:	88 23       	and	r24, r24
    2c0c:	44 f4       	brge	.+16     	; 0x2c1e <call_img+0xc12>
		__ticks = 1;
    2c0e:	fe 01       	movw	r30, r28
    2c10:	e7 5a       	subi	r30, 0xA7	; 167
    2c12:	ff 4f       	sbci	r31, 0xFF	; 255
    2c14:	81 e0       	ldi	r24, 0x01	; 1
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	91 83       	std	Z+1, r25	; 0x01
    2c1a:	80 83       	st	Z, r24
    2c1c:	64 c0       	rjmp	.+200    	; 0x2ce6 <call_img+0xcda>
	else if (__tmp > 65535)
    2c1e:	fe 01       	movw	r30, r28
    2c20:	e5 5a       	subi	r30, 0xA5	; 165
    2c22:	ff 4f       	sbci	r31, 0xFF	; 255
    2c24:	60 81       	ld	r22, Z
    2c26:	71 81       	ldd	r23, Z+1	; 0x01
    2c28:	82 81       	ldd	r24, Z+2	; 0x02
    2c2a:	93 81       	ldd	r25, Z+3	; 0x03
    2c2c:	20 e0       	ldi	r18, 0x00	; 0
    2c2e:	3f ef       	ldi	r19, 0xFF	; 255
    2c30:	4f e7       	ldi	r20, 0x7F	; 127
    2c32:	57 e4       	ldi	r21, 0x47	; 71
    2c34:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    2c38:	18 16       	cp	r1, r24
    2c3a:	0c f0       	brlt	.+2      	; 0x2c3e <call_img+0xc32>
    2c3c:	43 c0       	rjmp	.+134    	; 0x2cc4 <call_img+0xcb8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c3e:	fe 01       	movw	r30, r28
    2c40:	e1 5a       	subi	r30, 0xA1	; 161
    2c42:	ff 4f       	sbci	r31, 0xFF	; 255
    2c44:	60 81       	ld	r22, Z
    2c46:	71 81       	ldd	r23, Z+1	; 0x01
    2c48:	82 81       	ldd	r24, Z+2	; 0x02
    2c4a:	93 81       	ldd	r25, Z+3	; 0x03
    2c4c:	20 e0       	ldi	r18, 0x00	; 0
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	40 e2       	ldi	r20, 0x20	; 32
    2c52:	51 e4       	ldi	r21, 0x41	; 65
    2c54:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2c58:	dc 01       	movw	r26, r24
    2c5a:	cb 01       	movw	r24, r22
    2c5c:	8e 01       	movw	r16, r28
    2c5e:	07 5a       	subi	r16, 0xA7	; 167
    2c60:	1f 4f       	sbci	r17, 0xFF	; 255
    2c62:	bc 01       	movw	r22, r24
    2c64:	cd 01       	movw	r24, r26
    2c66:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2c6a:	dc 01       	movw	r26, r24
    2c6c:	cb 01       	movw	r24, r22
    2c6e:	f8 01       	movw	r30, r16
    2c70:	91 83       	std	Z+1, r25	; 0x01
    2c72:	80 83       	st	Z, r24
    2c74:	1f c0       	rjmp	.+62     	; 0x2cb4 <call_img+0xca8>
    2c76:	fe 01       	movw	r30, r28
    2c78:	e9 5a       	subi	r30, 0xA9	; 169
    2c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c7c:	80 e9       	ldi	r24, 0x90	; 144
    2c7e:	91 e0       	ldi	r25, 0x01	; 1
    2c80:	91 83       	std	Z+1, r25	; 0x01
    2c82:	80 83       	st	Z, r24
    2c84:	fe 01       	movw	r30, r28
    2c86:	e9 5a       	subi	r30, 0xA9	; 169
    2c88:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8a:	80 81       	ld	r24, Z
    2c8c:	91 81       	ldd	r25, Z+1	; 0x01
    2c8e:	01 97       	sbiw	r24, 0x01	; 1
    2c90:	f1 f7       	brne	.-4      	; 0x2c8e <call_img+0xc82>
    2c92:	fe 01       	movw	r30, r28
    2c94:	e9 5a       	subi	r30, 0xA9	; 169
    2c96:	ff 4f       	sbci	r31, 0xFF	; 255
    2c98:	91 83       	std	Z+1, r25	; 0x01
    2c9a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c9c:	de 01       	movw	r26, r28
    2c9e:	a7 5a       	subi	r26, 0xA7	; 167
    2ca0:	bf 4f       	sbci	r27, 0xFF	; 255
    2ca2:	fe 01       	movw	r30, r28
    2ca4:	e7 5a       	subi	r30, 0xA7	; 167
    2ca6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ca8:	80 81       	ld	r24, Z
    2caa:	91 81       	ldd	r25, Z+1	; 0x01
    2cac:	01 97       	sbiw	r24, 0x01	; 1
    2cae:	11 96       	adiw	r26, 0x01	; 1
    2cb0:	9c 93       	st	X, r25
    2cb2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cb4:	fe 01       	movw	r30, r28
    2cb6:	e7 5a       	subi	r30, 0xA7	; 167
    2cb8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cba:	80 81       	ld	r24, Z
    2cbc:	91 81       	ldd	r25, Z+1	; 0x01
    2cbe:	00 97       	sbiw	r24, 0x00	; 0
    2cc0:	d1 f6       	brne	.-76     	; 0x2c76 <call_img+0xc6a>
    2cc2:	27 c0       	rjmp	.+78     	; 0x2d12 <call_img+0xd06>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cc4:	8e 01       	movw	r16, r28
    2cc6:	07 5a       	subi	r16, 0xA7	; 167
    2cc8:	1f 4f       	sbci	r17, 0xFF	; 255
    2cca:	fe 01       	movw	r30, r28
    2ccc:	e5 5a       	subi	r30, 0xA5	; 165
    2cce:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd0:	60 81       	ld	r22, Z
    2cd2:	71 81       	ldd	r23, Z+1	; 0x01
    2cd4:	82 81       	ldd	r24, Z+2	; 0x02
    2cd6:	93 81       	ldd	r25, Z+3	; 0x03
    2cd8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2cdc:	dc 01       	movw	r26, r24
    2cde:	cb 01       	movw	r24, r22
    2ce0:	f8 01       	movw	r30, r16
    2ce2:	91 83       	std	Z+1, r25	; 0x01
    2ce4:	80 83       	st	Z, r24
    2ce6:	de 01       	movw	r26, r28
    2ce8:	ab 5a       	subi	r26, 0xAB	; 171
    2cea:	bf 4f       	sbci	r27, 0xFF	; 255
    2cec:	fe 01       	movw	r30, r28
    2cee:	e7 5a       	subi	r30, 0xA7	; 167
    2cf0:	ff 4f       	sbci	r31, 0xFF	; 255
    2cf2:	80 81       	ld	r24, Z
    2cf4:	91 81       	ldd	r25, Z+1	; 0x01
    2cf6:	8d 93       	st	X+, r24
    2cf8:	9c 93       	st	X, r25
    2cfa:	fe 01       	movw	r30, r28
    2cfc:	eb 5a       	subi	r30, 0xAB	; 171
    2cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    2d00:	80 81       	ld	r24, Z
    2d02:	91 81       	ldd	r25, Z+1	; 0x01
    2d04:	01 97       	sbiw	r24, 0x01	; 1
    2d06:	f1 f7       	brne	.-4      	; 0x2d04 <call_img+0xcf8>
    2d08:	fe 01       	movw	r30, r28
    2d0a:	eb 5a       	subi	r30, 0xAB	; 171
    2d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0e:	91 83       	std	Z+1, r25	; 0x01
    2d10:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2d12:	ec e2       	ldi	r30, 0x2C	; 44
    2d14:	f0 e0       	ldi	r31, 0x00	; 0
    2d16:	10 82       	st	Z, r1
    2d18:	fe 01       	movw	r30, r28
    2d1a:	ef 5a       	subi	r30, 0xAF	; 175
    2d1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d1e:	80 e0       	ldi	r24, 0x00	; 0
    2d20:	90 e0       	ldi	r25, 0x00	; 0
    2d22:	a0 e8       	ldi	r26, 0x80	; 128
    2d24:	bf e3       	ldi	r27, 0x3F	; 63
    2d26:	80 83       	st	Z, r24
    2d28:	91 83       	std	Z+1, r25	; 0x01
    2d2a:	a2 83       	std	Z+2, r26	; 0x02
    2d2c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d2e:	8e 01       	movw	r16, r28
    2d30:	03 5b       	subi	r16, 0xB3	; 179
    2d32:	1f 4f       	sbci	r17, 0xFF	; 255
    2d34:	fe 01       	movw	r30, r28
    2d36:	ef 5a       	subi	r30, 0xAF	; 175
    2d38:	ff 4f       	sbci	r31, 0xFF	; 255
    2d3a:	60 81       	ld	r22, Z
    2d3c:	71 81       	ldd	r23, Z+1	; 0x01
    2d3e:	82 81       	ldd	r24, Z+2	; 0x02
    2d40:	93 81       	ldd	r25, Z+3	; 0x03
    2d42:	20 e0       	ldi	r18, 0x00	; 0
    2d44:	30 e0       	ldi	r19, 0x00	; 0
    2d46:	4a e7       	ldi	r20, 0x7A	; 122
    2d48:	55 e4       	ldi	r21, 0x45	; 69
    2d4a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2d4e:	dc 01       	movw	r26, r24
    2d50:	cb 01       	movw	r24, r22
    2d52:	f8 01       	movw	r30, r16
    2d54:	80 83       	st	Z, r24
    2d56:	91 83       	std	Z+1, r25	; 0x01
    2d58:	a2 83       	std	Z+2, r26	; 0x02
    2d5a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d5c:	fe 01       	movw	r30, r28
    2d5e:	e3 5b       	subi	r30, 0xB3	; 179
    2d60:	ff 4f       	sbci	r31, 0xFF	; 255
    2d62:	60 81       	ld	r22, Z
    2d64:	71 81       	ldd	r23, Z+1	; 0x01
    2d66:	82 81       	ldd	r24, Z+2	; 0x02
    2d68:	93 81       	ldd	r25, Z+3	; 0x03
    2d6a:	20 e0       	ldi	r18, 0x00	; 0
    2d6c:	30 e0       	ldi	r19, 0x00	; 0
    2d6e:	40 e8       	ldi	r20, 0x80	; 128
    2d70:	5f e3       	ldi	r21, 0x3F	; 63
    2d72:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2d76:	88 23       	and	r24, r24
    2d78:	44 f4       	brge	.+16     	; 0x2d8a <call_img+0xd7e>
		__ticks = 1;
    2d7a:	fe 01       	movw	r30, r28
    2d7c:	e5 5b       	subi	r30, 0xB5	; 181
    2d7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d80:	81 e0       	ldi	r24, 0x01	; 1
    2d82:	90 e0       	ldi	r25, 0x00	; 0
    2d84:	91 83       	std	Z+1, r25	; 0x01
    2d86:	80 83       	st	Z, r24
    2d88:	64 c0       	rjmp	.+200    	; 0x2e52 <call_img+0xe46>
	else if (__tmp > 65535)
    2d8a:	fe 01       	movw	r30, r28
    2d8c:	e3 5b       	subi	r30, 0xB3	; 179
    2d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d90:	60 81       	ld	r22, Z
    2d92:	71 81       	ldd	r23, Z+1	; 0x01
    2d94:	82 81       	ldd	r24, Z+2	; 0x02
    2d96:	93 81       	ldd	r25, Z+3	; 0x03
    2d98:	20 e0       	ldi	r18, 0x00	; 0
    2d9a:	3f ef       	ldi	r19, 0xFF	; 255
    2d9c:	4f e7       	ldi	r20, 0x7F	; 127
    2d9e:	57 e4       	ldi	r21, 0x47	; 71
    2da0:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    2da4:	18 16       	cp	r1, r24
    2da6:	0c f0       	brlt	.+2      	; 0x2daa <call_img+0xd9e>
    2da8:	43 c0       	rjmp	.+134    	; 0x2e30 <call_img+0xe24>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2daa:	fe 01       	movw	r30, r28
    2dac:	ef 5a       	subi	r30, 0xAF	; 175
    2dae:	ff 4f       	sbci	r31, 0xFF	; 255
    2db0:	60 81       	ld	r22, Z
    2db2:	71 81       	ldd	r23, Z+1	; 0x01
    2db4:	82 81       	ldd	r24, Z+2	; 0x02
    2db6:	93 81       	ldd	r25, Z+3	; 0x03
    2db8:	20 e0       	ldi	r18, 0x00	; 0
    2dba:	30 e0       	ldi	r19, 0x00	; 0
    2dbc:	40 e2       	ldi	r20, 0x20	; 32
    2dbe:	51 e4       	ldi	r21, 0x41	; 65
    2dc0:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2dc4:	dc 01       	movw	r26, r24
    2dc6:	cb 01       	movw	r24, r22
    2dc8:	8e 01       	movw	r16, r28
    2dca:	05 5b       	subi	r16, 0xB5	; 181
    2dcc:	1f 4f       	sbci	r17, 0xFF	; 255
    2dce:	bc 01       	movw	r22, r24
    2dd0:	cd 01       	movw	r24, r26
    2dd2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2dd6:	dc 01       	movw	r26, r24
    2dd8:	cb 01       	movw	r24, r22
    2dda:	f8 01       	movw	r30, r16
    2ddc:	91 83       	std	Z+1, r25	; 0x01
    2dde:	80 83       	st	Z, r24
    2de0:	1f c0       	rjmp	.+62     	; 0x2e20 <call_img+0xe14>
    2de2:	fe 01       	movw	r30, r28
    2de4:	e7 5b       	subi	r30, 0xB7	; 183
    2de6:	ff 4f       	sbci	r31, 0xFF	; 255
    2de8:	80 e9       	ldi	r24, 0x90	; 144
    2dea:	91 e0       	ldi	r25, 0x01	; 1
    2dec:	91 83       	std	Z+1, r25	; 0x01
    2dee:	80 83       	st	Z, r24
    2df0:	fe 01       	movw	r30, r28
    2df2:	e7 5b       	subi	r30, 0xB7	; 183
    2df4:	ff 4f       	sbci	r31, 0xFF	; 255
    2df6:	80 81       	ld	r24, Z
    2df8:	91 81       	ldd	r25, Z+1	; 0x01
    2dfa:	01 97       	sbiw	r24, 0x01	; 1
    2dfc:	f1 f7       	brne	.-4      	; 0x2dfa <call_img+0xdee>
    2dfe:	fe 01       	movw	r30, r28
    2e00:	e7 5b       	subi	r30, 0xB7	; 183
    2e02:	ff 4f       	sbci	r31, 0xFF	; 255
    2e04:	91 83       	std	Z+1, r25	; 0x01
    2e06:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e08:	de 01       	movw	r26, r28
    2e0a:	a5 5b       	subi	r26, 0xB5	; 181
    2e0c:	bf 4f       	sbci	r27, 0xFF	; 255
    2e0e:	fe 01       	movw	r30, r28
    2e10:	e5 5b       	subi	r30, 0xB5	; 181
    2e12:	ff 4f       	sbci	r31, 0xFF	; 255
    2e14:	80 81       	ld	r24, Z
    2e16:	91 81       	ldd	r25, Z+1	; 0x01
    2e18:	01 97       	sbiw	r24, 0x01	; 1
    2e1a:	11 96       	adiw	r26, 0x01	; 1
    2e1c:	9c 93       	st	X, r25
    2e1e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e20:	fe 01       	movw	r30, r28
    2e22:	e5 5b       	subi	r30, 0xB5	; 181
    2e24:	ff 4f       	sbci	r31, 0xFF	; 255
    2e26:	80 81       	ld	r24, Z
    2e28:	91 81       	ldd	r25, Z+1	; 0x01
    2e2a:	00 97       	sbiw	r24, 0x00	; 0
    2e2c:	d1 f6       	brne	.-76     	; 0x2de2 <call_img+0xdd6>
    2e2e:	27 c0       	rjmp	.+78     	; 0x2e7e <call_img+0xe72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e30:	8e 01       	movw	r16, r28
    2e32:	05 5b       	subi	r16, 0xB5	; 181
    2e34:	1f 4f       	sbci	r17, 0xFF	; 255
    2e36:	fe 01       	movw	r30, r28
    2e38:	e3 5b       	subi	r30, 0xB3	; 179
    2e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3c:	60 81       	ld	r22, Z
    2e3e:	71 81       	ldd	r23, Z+1	; 0x01
    2e40:	82 81       	ldd	r24, Z+2	; 0x02
    2e42:	93 81       	ldd	r25, Z+3	; 0x03
    2e44:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2e48:	dc 01       	movw	r26, r24
    2e4a:	cb 01       	movw	r24, r22
    2e4c:	f8 01       	movw	r30, r16
    2e4e:	91 83       	std	Z+1, r25	; 0x01
    2e50:	80 83       	st	Z, r24
    2e52:	de 01       	movw	r26, r28
    2e54:	a9 5b       	subi	r26, 0xB9	; 185
    2e56:	bf 4f       	sbci	r27, 0xFF	; 255
    2e58:	fe 01       	movw	r30, r28
    2e5a:	e5 5b       	subi	r30, 0xB5	; 181
    2e5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e5e:	80 81       	ld	r24, Z
    2e60:	91 81       	ldd	r25, Z+1	; 0x01
    2e62:	8d 93       	st	X+, r24
    2e64:	9c 93       	st	X, r25
    2e66:	fe 01       	movw	r30, r28
    2e68:	e9 5b       	subi	r30, 0xB9	; 185
    2e6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6c:	80 81       	ld	r24, Z
    2e6e:	91 81       	ldd	r25, Z+1	; 0x01
    2e70:	01 97       	sbiw	r24, 0x01	; 1
    2e72:	f1 f7       	brne	.-4      	; 0x2e70 <call_img+0xe64>
    2e74:	fe 01       	movw	r30, r28
    2e76:	e9 5b       	subi	r30, 0xB9	; 185
    2e78:	ff 4f       	sbci	r31, 0xFF	; 255
    2e7a:	91 83       	std	Z+1, r25	; 0x01
    2e7c:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2e7e:	ec e2       	ldi	r30, 0x2C	; 44
    2e80:	f0 e0       	ldi	r31, 0x00	; 0
    2e82:	10 82       	st	Z, r1
    2e84:	fe 01       	movw	r30, r28
    2e86:	ed 5b       	subi	r30, 0xBD	; 189
    2e88:	ff 4f       	sbci	r31, 0xFF	; 255
    2e8a:	80 e0       	ldi	r24, 0x00	; 0
    2e8c:	90 e0       	ldi	r25, 0x00	; 0
    2e8e:	a0 e8       	ldi	r26, 0x80	; 128
    2e90:	bf e3       	ldi	r27, 0x3F	; 63
    2e92:	80 83       	st	Z, r24
    2e94:	91 83       	std	Z+1, r25	; 0x01
    2e96:	a2 83       	std	Z+2, r26	; 0x02
    2e98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e9a:	8e 01       	movw	r16, r28
    2e9c:	01 5c       	subi	r16, 0xC1	; 193
    2e9e:	1f 4f       	sbci	r17, 0xFF	; 255
    2ea0:	fe 01       	movw	r30, r28
    2ea2:	ed 5b       	subi	r30, 0xBD	; 189
    2ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea6:	60 81       	ld	r22, Z
    2ea8:	71 81       	ldd	r23, Z+1	; 0x01
    2eaa:	82 81       	ldd	r24, Z+2	; 0x02
    2eac:	93 81       	ldd	r25, Z+3	; 0x03
    2eae:	20 e0       	ldi	r18, 0x00	; 0
    2eb0:	30 e0       	ldi	r19, 0x00	; 0
    2eb2:	4a e7       	ldi	r20, 0x7A	; 122
    2eb4:	55 e4       	ldi	r21, 0x45	; 69
    2eb6:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2eba:	dc 01       	movw	r26, r24
    2ebc:	cb 01       	movw	r24, r22
    2ebe:	f8 01       	movw	r30, r16
    2ec0:	80 83       	st	Z, r24
    2ec2:	91 83       	std	Z+1, r25	; 0x01
    2ec4:	a2 83       	std	Z+2, r26	; 0x02
    2ec6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ec8:	fe 01       	movw	r30, r28
    2eca:	ff 96       	adiw	r30, 0x3f	; 63
    2ecc:	60 81       	ld	r22, Z
    2ece:	71 81       	ldd	r23, Z+1	; 0x01
    2ed0:	82 81       	ldd	r24, Z+2	; 0x02
    2ed2:	93 81       	ldd	r25, Z+3	; 0x03
    2ed4:	20 e0       	ldi	r18, 0x00	; 0
    2ed6:	30 e0       	ldi	r19, 0x00	; 0
    2ed8:	40 e8       	ldi	r20, 0x80	; 128
    2eda:	5f e3       	ldi	r21, 0x3F	; 63
    2edc:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2ee0:	88 23       	and	r24, r24
    2ee2:	2c f4       	brge	.+10     	; 0x2eee <call_img+0xee2>
		__ticks = 1;
    2ee4:	81 e0       	ldi	r24, 0x01	; 1
    2ee6:	90 e0       	ldi	r25, 0x00	; 0
    2ee8:	9e af       	std	Y+62, r25	; 0x3e
    2eea:	8d af       	std	Y+61, r24	; 0x3d
    2eec:	46 c0       	rjmp	.+140    	; 0x2f7a <call_img+0xf6e>
	else if (__tmp > 65535)
    2eee:	fe 01       	movw	r30, r28
    2ef0:	ff 96       	adiw	r30, 0x3f	; 63
    2ef2:	60 81       	ld	r22, Z
    2ef4:	71 81       	ldd	r23, Z+1	; 0x01
    2ef6:	82 81       	ldd	r24, Z+2	; 0x02
    2ef8:	93 81       	ldd	r25, Z+3	; 0x03
    2efa:	20 e0       	ldi	r18, 0x00	; 0
    2efc:	3f ef       	ldi	r19, 0xFF	; 255
    2efe:	4f e7       	ldi	r20, 0x7F	; 127
    2f00:	57 e4       	ldi	r21, 0x47	; 71
    2f02:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    2f06:	18 16       	cp	r1, r24
    2f08:	64 f5       	brge	.+88     	; 0x2f62 <call_img+0xf56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f0a:	fe 01       	movw	r30, r28
    2f0c:	ed 5b       	subi	r30, 0xBD	; 189
    2f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f10:	60 81       	ld	r22, Z
    2f12:	71 81       	ldd	r23, Z+1	; 0x01
    2f14:	82 81       	ldd	r24, Z+2	; 0x02
    2f16:	93 81       	ldd	r25, Z+3	; 0x03
    2f18:	20 e0       	ldi	r18, 0x00	; 0
    2f1a:	30 e0       	ldi	r19, 0x00	; 0
    2f1c:	40 e2       	ldi	r20, 0x20	; 32
    2f1e:	51 e4       	ldi	r21, 0x41	; 65
    2f20:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2f24:	dc 01       	movw	r26, r24
    2f26:	cb 01       	movw	r24, r22
    2f28:	bc 01       	movw	r22, r24
    2f2a:	cd 01       	movw	r24, r26
    2f2c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2f30:	dc 01       	movw	r26, r24
    2f32:	cb 01       	movw	r24, r22
    2f34:	9e af       	std	Y+62, r25	; 0x3e
    2f36:	8d af       	std	Y+61, r24	; 0x3d
    2f38:	0f c0       	rjmp	.+30     	; 0x2f58 <call_img+0xf4c>
    2f3a:	80 e9       	ldi	r24, 0x90	; 144
    2f3c:	91 e0       	ldi	r25, 0x01	; 1
    2f3e:	9c af       	std	Y+60, r25	; 0x3c
    2f40:	8b af       	std	Y+59, r24	; 0x3b
    2f42:	8b ad       	ldd	r24, Y+59	; 0x3b
    2f44:	9c ad       	ldd	r25, Y+60	; 0x3c
    2f46:	01 97       	sbiw	r24, 0x01	; 1
    2f48:	f1 f7       	brne	.-4      	; 0x2f46 <call_img+0xf3a>
    2f4a:	9c af       	std	Y+60, r25	; 0x3c
    2f4c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f4e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2f50:	9e ad       	ldd	r25, Y+62	; 0x3e
    2f52:	01 97       	sbiw	r24, 0x01	; 1
    2f54:	9e af       	std	Y+62, r25	; 0x3e
    2f56:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f58:	8d ad       	ldd	r24, Y+61	; 0x3d
    2f5a:	9e ad       	ldd	r25, Y+62	; 0x3e
    2f5c:	00 97       	sbiw	r24, 0x00	; 0
    2f5e:	69 f7       	brne	.-38     	; 0x2f3a <call_img+0xf2e>
    2f60:	16 c0       	rjmp	.+44     	; 0x2f8e <call_img+0xf82>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f62:	fe 01       	movw	r30, r28
    2f64:	ff 96       	adiw	r30, 0x3f	; 63
    2f66:	60 81       	ld	r22, Z
    2f68:	71 81       	ldd	r23, Z+1	; 0x01
    2f6a:	82 81       	ldd	r24, Z+2	; 0x02
    2f6c:	93 81       	ldd	r25, Z+3	; 0x03
    2f6e:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    2f72:	dc 01       	movw	r26, r24
    2f74:	cb 01       	movw	r24, r22
    2f76:	9e af       	std	Y+62, r25	; 0x3e
    2f78:	8d af       	std	Y+61, r24	; 0x3d
    2f7a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2f7c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2f7e:	9a af       	std	Y+58, r25	; 0x3a
    2f80:	89 af       	std	Y+57, r24	; 0x39
    2f82:	89 ad       	ldd	r24, Y+57	; 0x39
    2f84:	9a ad       	ldd	r25, Y+58	; 0x3a
    2f86:	01 97       	sbiw	r24, 0x01	; 1
    2f88:	f1 f7       	brne	.-4      	; 0x2f86 <call_img+0xf7a>
    2f8a:	9a af       	std	Y+58, r25	; 0x3a
    2f8c:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x00; _delay_ms(1);
    2f8e:	ec e2       	ldi	r30, 0x2C	; 44
    2f90:	f0 e0       	ldi	r31, 0x00	; 0
    2f92:	10 82       	st	Z, r1
    2f94:	80 e0       	ldi	r24, 0x00	; 0
    2f96:	90 e0       	ldi	r25, 0x00	; 0
    2f98:	a0 e8       	ldi	r26, 0x80	; 128
    2f9a:	bf e3       	ldi	r27, 0x3F	; 63
    2f9c:	8d ab       	std	Y+53, r24	; 0x35
    2f9e:	9e ab       	std	Y+54, r25	; 0x36
    2fa0:	af ab       	std	Y+55, r26	; 0x37
    2fa2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fa4:	6d a9       	ldd	r22, Y+53	; 0x35
    2fa6:	7e a9       	ldd	r23, Y+54	; 0x36
    2fa8:	8f a9       	ldd	r24, Y+55	; 0x37
    2faa:	98 ad       	ldd	r25, Y+56	; 0x38
    2fac:	20 e0       	ldi	r18, 0x00	; 0
    2fae:	30 e0       	ldi	r19, 0x00	; 0
    2fb0:	4a e7       	ldi	r20, 0x7A	; 122
    2fb2:	55 e4       	ldi	r21, 0x45	; 69
    2fb4:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    2fb8:	dc 01       	movw	r26, r24
    2fba:	cb 01       	movw	r24, r22
    2fbc:	89 ab       	std	Y+49, r24	; 0x31
    2fbe:	9a ab       	std	Y+50, r25	; 0x32
    2fc0:	ab ab       	std	Y+51, r26	; 0x33
    2fc2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2fc4:	69 a9       	ldd	r22, Y+49	; 0x31
    2fc6:	7a a9       	ldd	r23, Y+50	; 0x32
    2fc8:	8b a9       	ldd	r24, Y+51	; 0x33
    2fca:	9c a9       	ldd	r25, Y+52	; 0x34
    2fcc:	20 e0       	ldi	r18, 0x00	; 0
    2fce:	30 e0       	ldi	r19, 0x00	; 0
    2fd0:	40 e8       	ldi	r20, 0x80	; 128
    2fd2:	5f e3       	ldi	r21, 0x3F	; 63
    2fd4:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    2fd8:	88 23       	and	r24, r24
    2fda:	2c f4       	brge	.+10     	; 0x2fe6 <call_img+0xfda>
		__ticks = 1;
    2fdc:	81 e0       	ldi	r24, 0x01	; 1
    2fde:	90 e0       	ldi	r25, 0x00	; 0
    2fe0:	98 ab       	std	Y+48, r25	; 0x30
    2fe2:	8f a7       	std	Y+47, r24	; 0x2f
    2fe4:	3f c0       	rjmp	.+126    	; 0x3064 <call_img+0x1058>
	else if (__tmp > 65535)
    2fe6:	69 a9       	ldd	r22, Y+49	; 0x31
    2fe8:	7a a9       	ldd	r23, Y+50	; 0x32
    2fea:	8b a9       	ldd	r24, Y+51	; 0x33
    2fec:	9c a9       	ldd	r25, Y+52	; 0x34
    2fee:	20 e0       	ldi	r18, 0x00	; 0
    2ff0:	3f ef       	ldi	r19, 0xFF	; 255
    2ff2:	4f e7       	ldi	r20, 0x7F	; 127
    2ff4:	57 e4       	ldi	r21, 0x47	; 71
    2ff6:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    2ffa:	18 16       	cp	r1, r24
    2ffc:	4c f5       	brge	.+82     	; 0x3050 <call_img+0x1044>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ffe:	6d a9       	ldd	r22, Y+53	; 0x35
    3000:	7e a9       	ldd	r23, Y+54	; 0x36
    3002:	8f a9       	ldd	r24, Y+55	; 0x37
    3004:	98 ad       	ldd	r25, Y+56	; 0x38
    3006:	20 e0       	ldi	r18, 0x00	; 0
    3008:	30 e0       	ldi	r19, 0x00	; 0
    300a:	40 e2       	ldi	r20, 0x20	; 32
    300c:	51 e4       	ldi	r21, 0x41	; 65
    300e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3012:	dc 01       	movw	r26, r24
    3014:	cb 01       	movw	r24, r22
    3016:	bc 01       	movw	r22, r24
    3018:	cd 01       	movw	r24, r26
    301a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    301e:	dc 01       	movw	r26, r24
    3020:	cb 01       	movw	r24, r22
    3022:	98 ab       	std	Y+48, r25	; 0x30
    3024:	8f a7       	std	Y+47, r24	; 0x2f
    3026:	0f c0       	rjmp	.+30     	; 0x3046 <call_img+0x103a>
    3028:	80 e9       	ldi	r24, 0x90	; 144
    302a:	91 e0       	ldi	r25, 0x01	; 1
    302c:	9e a7       	std	Y+46, r25	; 0x2e
    302e:	8d a7       	std	Y+45, r24	; 0x2d
    3030:	8d a5       	ldd	r24, Y+45	; 0x2d
    3032:	9e a5       	ldd	r25, Y+46	; 0x2e
    3034:	01 97       	sbiw	r24, 0x01	; 1
    3036:	f1 f7       	brne	.-4      	; 0x3034 <call_img+0x1028>
    3038:	9e a7       	std	Y+46, r25	; 0x2e
    303a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    303c:	8f a5       	ldd	r24, Y+47	; 0x2f
    303e:	98 a9       	ldd	r25, Y+48	; 0x30
    3040:	01 97       	sbiw	r24, 0x01	; 1
    3042:	98 ab       	std	Y+48, r25	; 0x30
    3044:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3046:	8f a5       	ldd	r24, Y+47	; 0x2f
    3048:	98 a9       	ldd	r25, Y+48	; 0x30
    304a:	00 97       	sbiw	r24, 0x00	; 0
    304c:	69 f7       	brne	.-38     	; 0x3028 <call_img+0x101c>
    304e:	14 c0       	rjmp	.+40     	; 0x3078 <call_img+0x106c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3050:	69 a9       	ldd	r22, Y+49	; 0x31
    3052:	7a a9       	ldd	r23, Y+50	; 0x32
    3054:	8b a9       	ldd	r24, Y+51	; 0x33
    3056:	9c a9       	ldd	r25, Y+52	; 0x34
    3058:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    305c:	dc 01       	movw	r26, r24
    305e:	cb 01       	movw	r24, r22
    3060:	98 ab       	std	Y+48, r25	; 0x30
    3062:	8f a7       	std	Y+47, r24	; 0x2f
    3064:	8f a5       	ldd	r24, Y+47	; 0x2f
    3066:	98 a9       	ldd	r25, Y+48	; 0x30
    3068:	9c a7       	std	Y+44, r25	; 0x2c
    306a:	8b a7       	std	Y+43, r24	; 0x2b
    306c:	8b a5       	ldd	r24, Y+43	; 0x2b
    306e:	9c a5       	ldd	r25, Y+44	; 0x2c
    3070:	01 97       	sbiw	r24, 0x01	; 1
    3072:	f1 f7       	brne	.-4      	; 0x3070 <call_img+0x1064>
    3074:	9c a7       	std	Y+44, r25	; 0x2c
    3076:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=buff[7]; _delay_ms(1);
    3078:	ec e2       	ldi	r30, 0x2C	; 44
    307a:	f0 e0       	ldi	r31, 0x00	; 0
    307c:	80 91 be 01 	lds	r24, 0x01BE
    3080:	90 91 bf 01 	lds	r25, 0x01BF
    3084:	80 83       	st	Z, r24
    3086:	80 e0       	ldi	r24, 0x00	; 0
    3088:	90 e0       	ldi	r25, 0x00	; 0
    308a:	a0 e8       	ldi	r26, 0x80	; 128
    308c:	bf e3       	ldi	r27, 0x3F	; 63
    308e:	8f a3       	std	Y+39, r24	; 0x27
    3090:	98 a7       	std	Y+40, r25	; 0x28
    3092:	a9 a7       	std	Y+41, r26	; 0x29
    3094:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3096:	6f a1       	ldd	r22, Y+39	; 0x27
    3098:	78 a5       	ldd	r23, Y+40	; 0x28
    309a:	89 a5       	ldd	r24, Y+41	; 0x29
    309c:	9a a5       	ldd	r25, Y+42	; 0x2a
    309e:	20 e0       	ldi	r18, 0x00	; 0
    30a0:	30 e0       	ldi	r19, 0x00	; 0
    30a2:	4a e7       	ldi	r20, 0x7A	; 122
    30a4:	55 e4       	ldi	r21, 0x45	; 69
    30a6:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    30aa:	dc 01       	movw	r26, r24
    30ac:	cb 01       	movw	r24, r22
    30ae:	8b a3       	std	Y+35, r24	; 0x23
    30b0:	9c a3       	std	Y+36, r25	; 0x24
    30b2:	ad a3       	std	Y+37, r26	; 0x25
    30b4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    30b6:	6b a1       	ldd	r22, Y+35	; 0x23
    30b8:	7c a1       	ldd	r23, Y+36	; 0x24
    30ba:	8d a1       	ldd	r24, Y+37	; 0x25
    30bc:	9e a1       	ldd	r25, Y+38	; 0x26
    30be:	20 e0       	ldi	r18, 0x00	; 0
    30c0:	30 e0       	ldi	r19, 0x00	; 0
    30c2:	40 e8       	ldi	r20, 0x80	; 128
    30c4:	5f e3       	ldi	r21, 0x3F	; 63
    30c6:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    30ca:	88 23       	and	r24, r24
    30cc:	2c f4       	brge	.+10     	; 0x30d8 <call_img+0x10cc>
		__ticks = 1;
    30ce:	81 e0       	ldi	r24, 0x01	; 1
    30d0:	90 e0       	ldi	r25, 0x00	; 0
    30d2:	9a a3       	std	Y+34, r25	; 0x22
    30d4:	89 a3       	std	Y+33, r24	; 0x21
    30d6:	3f c0       	rjmp	.+126    	; 0x3156 <call_img+0x114a>
	else if (__tmp > 65535)
    30d8:	6b a1       	ldd	r22, Y+35	; 0x23
    30da:	7c a1       	ldd	r23, Y+36	; 0x24
    30dc:	8d a1       	ldd	r24, Y+37	; 0x25
    30de:	9e a1       	ldd	r25, Y+38	; 0x26
    30e0:	20 e0       	ldi	r18, 0x00	; 0
    30e2:	3f ef       	ldi	r19, 0xFF	; 255
    30e4:	4f e7       	ldi	r20, 0x7F	; 127
    30e6:	57 e4       	ldi	r21, 0x47	; 71
    30e8:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    30ec:	18 16       	cp	r1, r24
    30ee:	4c f5       	brge	.+82     	; 0x3142 <call_img+0x1136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30f0:	6f a1       	ldd	r22, Y+39	; 0x27
    30f2:	78 a5       	ldd	r23, Y+40	; 0x28
    30f4:	89 a5       	ldd	r24, Y+41	; 0x29
    30f6:	9a a5       	ldd	r25, Y+42	; 0x2a
    30f8:	20 e0       	ldi	r18, 0x00	; 0
    30fa:	30 e0       	ldi	r19, 0x00	; 0
    30fc:	40 e2       	ldi	r20, 0x20	; 32
    30fe:	51 e4       	ldi	r21, 0x41	; 65
    3100:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3104:	dc 01       	movw	r26, r24
    3106:	cb 01       	movw	r24, r22
    3108:	bc 01       	movw	r22, r24
    310a:	cd 01       	movw	r24, r26
    310c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3110:	dc 01       	movw	r26, r24
    3112:	cb 01       	movw	r24, r22
    3114:	9a a3       	std	Y+34, r25	; 0x22
    3116:	89 a3       	std	Y+33, r24	; 0x21
    3118:	0f c0       	rjmp	.+30     	; 0x3138 <call_img+0x112c>
    311a:	80 e9       	ldi	r24, 0x90	; 144
    311c:	91 e0       	ldi	r25, 0x01	; 1
    311e:	98 a3       	std	Y+32, r25	; 0x20
    3120:	8f 8f       	std	Y+31, r24	; 0x1f
    3122:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3124:	98 a1       	ldd	r25, Y+32	; 0x20
    3126:	01 97       	sbiw	r24, 0x01	; 1
    3128:	f1 f7       	brne	.-4      	; 0x3126 <call_img+0x111a>
    312a:	98 a3       	std	Y+32, r25	; 0x20
    312c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    312e:	89 a1       	ldd	r24, Y+33	; 0x21
    3130:	9a a1       	ldd	r25, Y+34	; 0x22
    3132:	01 97       	sbiw	r24, 0x01	; 1
    3134:	9a a3       	std	Y+34, r25	; 0x22
    3136:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3138:	89 a1       	ldd	r24, Y+33	; 0x21
    313a:	9a a1       	ldd	r25, Y+34	; 0x22
    313c:	00 97       	sbiw	r24, 0x00	; 0
    313e:	69 f7       	brne	.-38     	; 0x311a <call_img+0x110e>
    3140:	14 c0       	rjmp	.+40     	; 0x316a <call_img+0x115e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3142:	6b a1       	ldd	r22, Y+35	; 0x23
    3144:	7c a1       	ldd	r23, Y+36	; 0x24
    3146:	8d a1       	ldd	r24, Y+37	; 0x25
    3148:	9e a1       	ldd	r25, Y+38	; 0x26
    314a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    314e:	dc 01       	movw	r26, r24
    3150:	cb 01       	movw	r24, r22
    3152:	9a a3       	std	Y+34, r25	; 0x22
    3154:	89 a3       	std	Y+33, r24	; 0x21
    3156:	89 a1       	ldd	r24, Y+33	; 0x21
    3158:	9a a1       	ldd	r25, Y+34	; 0x22
    315a:	9e 8f       	std	Y+30, r25	; 0x1e
    315c:	8d 8f       	std	Y+29, r24	; 0x1d
    315e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3160:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3162:	01 97       	sbiw	r24, 0x01	; 1
    3164:	f1 f7       	brne	.-4      	; 0x3162 <call_img+0x1156>
    3166:	9e 8f       	std	Y+30, r25	; 0x1e
    3168:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=buff[8]; _delay_ms(1);
    316a:	ec e2       	ldi	r30, 0x2C	; 44
    316c:	f0 e0       	ldi	r31, 0x00	; 0
    316e:	80 91 c0 01 	lds	r24, 0x01C0
    3172:	90 91 c1 01 	lds	r25, 0x01C1
    3176:	80 83       	st	Z, r24
    3178:	80 e0       	ldi	r24, 0x00	; 0
    317a:	90 e0       	ldi	r25, 0x00	; 0
    317c:	a0 e8       	ldi	r26, 0x80	; 128
    317e:	bf e3       	ldi	r27, 0x3F	; 63
    3180:	89 8f       	std	Y+25, r24	; 0x19
    3182:	9a 8f       	std	Y+26, r25	; 0x1a
    3184:	ab 8f       	std	Y+27, r26	; 0x1b
    3186:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3188:	69 8d       	ldd	r22, Y+25	; 0x19
    318a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    318c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    318e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3190:	20 e0       	ldi	r18, 0x00	; 0
    3192:	30 e0       	ldi	r19, 0x00	; 0
    3194:	4a e7       	ldi	r20, 0x7A	; 122
    3196:	55 e4       	ldi	r21, 0x45	; 69
    3198:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    319c:	dc 01       	movw	r26, r24
    319e:	cb 01       	movw	r24, r22
    31a0:	8d 8b       	std	Y+21, r24	; 0x15
    31a2:	9e 8b       	std	Y+22, r25	; 0x16
    31a4:	af 8b       	std	Y+23, r26	; 0x17
    31a6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    31a8:	6d 89       	ldd	r22, Y+21	; 0x15
    31aa:	7e 89       	ldd	r23, Y+22	; 0x16
    31ac:	8f 89       	ldd	r24, Y+23	; 0x17
    31ae:	98 8d       	ldd	r25, Y+24	; 0x18
    31b0:	20 e0       	ldi	r18, 0x00	; 0
    31b2:	30 e0       	ldi	r19, 0x00	; 0
    31b4:	40 e8       	ldi	r20, 0x80	; 128
    31b6:	5f e3       	ldi	r21, 0x3F	; 63
    31b8:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    31bc:	88 23       	and	r24, r24
    31be:	2c f4       	brge	.+10     	; 0x31ca <call_img+0x11be>
		__ticks = 1;
    31c0:	81 e0       	ldi	r24, 0x01	; 1
    31c2:	90 e0       	ldi	r25, 0x00	; 0
    31c4:	9c 8b       	std	Y+20, r25	; 0x14
    31c6:	8b 8b       	std	Y+19, r24	; 0x13
    31c8:	3f c0       	rjmp	.+126    	; 0x3248 <call_img+0x123c>
	else if (__tmp > 65535)
    31ca:	6d 89       	ldd	r22, Y+21	; 0x15
    31cc:	7e 89       	ldd	r23, Y+22	; 0x16
    31ce:	8f 89       	ldd	r24, Y+23	; 0x17
    31d0:	98 8d       	ldd	r25, Y+24	; 0x18
    31d2:	20 e0       	ldi	r18, 0x00	; 0
    31d4:	3f ef       	ldi	r19, 0xFF	; 255
    31d6:	4f e7       	ldi	r20, 0x7F	; 127
    31d8:	57 e4       	ldi	r21, 0x47	; 71
    31da:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    31de:	18 16       	cp	r1, r24
    31e0:	4c f5       	brge	.+82     	; 0x3234 <call_img+0x1228>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31e2:	69 8d       	ldd	r22, Y+25	; 0x19
    31e4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    31e6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    31e8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    31ea:	20 e0       	ldi	r18, 0x00	; 0
    31ec:	30 e0       	ldi	r19, 0x00	; 0
    31ee:	40 e2       	ldi	r20, 0x20	; 32
    31f0:	51 e4       	ldi	r21, 0x41	; 65
    31f2:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    31f6:	dc 01       	movw	r26, r24
    31f8:	cb 01       	movw	r24, r22
    31fa:	bc 01       	movw	r22, r24
    31fc:	cd 01       	movw	r24, r26
    31fe:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3202:	dc 01       	movw	r26, r24
    3204:	cb 01       	movw	r24, r22
    3206:	9c 8b       	std	Y+20, r25	; 0x14
    3208:	8b 8b       	std	Y+19, r24	; 0x13
    320a:	0f c0       	rjmp	.+30     	; 0x322a <call_img+0x121e>
    320c:	80 e9       	ldi	r24, 0x90	; 144
    320e:	91 e0       	ldi	r25, 0x01	; 1
    3210:	9a 8b       	std	Y+18, r25	; 0x12
    3212:	89 8b       	std	Y+17, r24	; 0x11
    3214:	89 89       	ldd	r24, Y+17	; 0x11
    3216:	9a 89       	ldd	r25, Y+18	; 0x12
    3218:	01 97       	sbiw	r24, 0x01	; 1
    321a:	f1 f7       	brne	.-4      	; 0x3218 <call_img+0x120c>
    321c:	9a 8b       	std	Y+18, r25	; 0x12
    321e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3220:	8b 89       	ldd	r24, Y+19	; 0x13
    3222:	9c 89       	ldd	r25, Y+20	; 0x14
    3224:	01 97       	sbiw	r24, 0x01	; 1
    3226:	9c 8b       	std	Y+20, r25	; 0x14
    3228:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    322a:	8b 89       	ldd	r24, Y+19	; 0x13
    322c:	9c 89       	ldd	r25, Y+20	; 0x14
    322e:	00 97       	sbiw	r24, 0x00	; 0
    3230:	69 f7       	brne	.-38     	; 0x320c <call_img+0x1200>
    3232:	14 c0       	rjmp	.+40     	; 0x325c <call_img+0x1250>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3234:	6d 89       	ldd	r22, Y+21	; 0x15
    3236:	7e 89       	ldd	r23, Y+22	; 0x16
    3238:	8f 89       	ldd	r24, Y+23	; 0x17
    323a:	98 8d       	ldd	r25, Y+24	; 0x18
    323c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3240:	dc 01       	movw	r26, r24
    3242:	cb 01       	movw	r24, r22
    3244:	9c 8b       	std	Y+20, r25	; 0x14
    3246:	8b 8b       	std	Y+19, r24	; 0x13
    3248:	8b 89       	ldd	r24, Y+19	; 0x13
    324a:	9c 89       	ldd	r25, Y+20	; 0x14
    324c:	98 8b       	std	Y+16, r25	; 0x10
    324e:	8f 87       	std	Y+15, r24	; 0x0f
    3250:	8f 85       	ldd	r24, Y+15	; 0x0f
    3252:	98 89       	ldd	r25, Y+16	; 0x10
    3254:	01 97       	sbiw	r24, 0x01	; 1
    3256:	f1 f7       	brne	.-4      	; 0x3254 <call_img+0x1248>
    3258:	98 8b       	std	Y+16, r25	; 0x10
    325a:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x00; _delay_ms(1);
    325c:	ec e2       	ldi	r30, 0x2C	; 44
    325e:	f0 e0       	ldi	r31, 0x00	; 0
    3260:	10 82       	st	Z, r1
    3262:	80 e0       	ldi	r24, 0x00	; 0
    3264:	90 e0       	ldi	r25, 0x00	; 0
    3266:	a0 e8       	ldi	r26, 0x80	; 128
    3268:	bf e3       	ldi	r27, 0x3F	; 63
    326a:	8b 87       	std	Y+11, r24	; 0x0b
    326c:	9c 87       	std	Y+12, r25	; 0x0c
    326e:	ad 87       	std	Y+13, r26	; 0x0d
    3270:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3272:	6b 85       	ldd	r22, Y+11	; 0x0b
    3274:	7c 85       	ldd	r23, Y+12	; 0x0c
    3276:	8d 85       	ldd	r24, Y+13	; 0x0d
    3278:	9e 85       	ldd	r25, Y+14	; 0x0e
    327a:	20 e0       	ldi	r18, 0x00	; 0
    327c:	30 e0       	ldi	r19, 0x00	; 0
    327e:	4a e7       	ldi	r20, 0x7A	; 122
    3280:	55 e4       	ldi	r21, 0x45	; 69
    3282:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3286:	dc 01       	movw	r26, r24
    3288:	cb 01       	movw	r24, r22
    328a:	8f 83       	std	Y+7, r24	; 0x07
    328c:	98 87       	std	Y+8, r25	; 0x08
    328e:	a9 87       	std	Y+9, r26	; 0x09
    3290:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3292:	6f 81       	ldd	r22, Y+7	; 0x07
    3294:	78 85       	ldd	r23, Y+8	; 0x08
    3296:	89 85       	ldd	r24, Y+9	; 0x09
    3298:	9a 85       	ldd	r25, Y+10	; 0x0a
    329a:	20 e0       	ldi	r18, 0x00	; 0
    329c:	30 e0       	ldi	r19, 0x00	; 0
    329e:	40 e8       	ldi	r20, 0x80	; 128
    32a0:	5f e3       	ldi	r21, 0x3F	; 63
    32a2:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    32a6:	88 23       	and	r24, r24
    32a8:	2c f4       	brge	.+10     	; 0x32b4 <call_img+0x12a8>
		__ticks = 1;
    32aa:	81 e0       	ldi	r24, 0x01	; 1
    32ac:	90 e0       	ldi	r25, 0x00	; 0
    32ae:	9e 83       	std	Y+6, r25	; 0x06
    32b0:	8d 83       	std	Y+5, r24	; 0x05
    32b2:	3f c0       	rjmp	.+126    	; 0x3332 <call_img+0x1326>
	else if (__tmp > 65535)
    32b4:	6f 81       	ldd	r22, Y+7	; 0x07
    32b6:	78 85       	ldd	r23, Y+8	; 0x08
    32b8:	89 85       	ldd	r24, Y+9	; 0x09
    32ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    32bc:	20 e0       	ldi	r18, 0x00	; 0
    32be:	3f ef       	ldi	r19, 0xFF	; 255
    32c0:	4f e7       	ldi	r20, 0x7F	; 127
    32c2:	57 e4       	ldi	r21, 0x47	; 71
    32c4:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    32c8:	18 16       	cp	r1, r24
    32ca:	4c f5       	brge	.+82     	; 0x331e <call_img+0x1312>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    32ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    32d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    32d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    32d4:	20 e0       	ldi	r18, 0x00	; 0
    32d6:	30 e0       	ldi	r19, 0x00	; 0
    32d8:	40 e2       	ldi	r20, 0x20	; 32
    32da:	51 e4       	ldi	r21, 0x41	; 65
    32dc:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    32e0:	dc 01       	movw	r26, r24
    32e2:	cb 01       	movw	r24, r22
    32e4:	bc 01       	movw	r22, r24
    32e6:	cd 01       	movw	r24, r26
    32e8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    32ec:	dc 01       	movw	r26, r24
    32ee:	cb 01       	movw	r24, r22
    32f0:	9e 83       	std	Y+6, r25	; 0x06
    32f2:	8d 83       	std	Y+5, r24	; 0x05
    32f4:	0f c0       	rjmp	.+30     	; 0x3314 <call_img+0x1308>
    32f6:	80 e9       	ldi	r24, 0x90	; 144
    32f8:	91 e0       	ldi	r25, 0x01	; 1
    32fa:	9c 83       	std	Y+4, r25	; 0x04
    32fc:	8b 83       	std	Y+3, r24	; 0x03
    32fe:	8b 81       	ldd	r24, Y+3	; 0x03
    3300:	9c 81       	ldd	r25, Y+4	; 0x04
    3302:	01 97       	sbiw	r24, 0x01	; 1
    3304:	f1 f7       	brne	.-4      	; 0x3302 <call_img+0x12f6>
    3306:	9c 83       	std	Y+4, r25	; 0x04
    3308:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    330a:	8d 81       	ldd	r24, Y+5	; 0x05
    330c:	9e 81       	ldd	r25, Y+6	; 0x06
    330e:	01 97       	sbiw	r24, 0x01	; 1
    3310:	9e 83       	std	Y+6, r25	; 0x06
    3312:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3314:	8d 81       	ldd	r24, Y+5	; 0x05
    3316:	9e 81       	ldd	r25, Y+6	; 0x06
    3318:	00 97       	sbiw	r24, 0x00	; 0
    331a:	69 f7       	brne	.-38     	; 0x32f6 <call_img+0x12ea>
    331c:	14 c0       	rjmp	.+40     	; 0x3346 <call_img+0x133a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    331e:	6f 81       	ldd	r22, Y+7	; 0x07
    3320:	78 85       	ldd	r23, Y+8	; 0x08
    3322:	89 85       	ldd	r24, Y+9	; 0x09
    3324:	9a 85       	ldd	r25, Y+10	; 0x0a
    3326:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    332a:	dc 01       	movw	r26, r24
    332c:	cb 01       	movw	r24, r22
    332e:	9e 83       	std	Y+6, r25	; 0x06
    3330:	8d 83       	std	Y+5, r24	; 0x05
    3332:	8d 81       	ldd	r24, Y+5	; 0x05
    3334:	9e 81       	ldd	r25, Y+6	; 0x06
    3336:	9a 83       	std	Y+2, r25	; 0x02
    3338:	89 83       	std	Y+1, r24	; 0x01
    333a:	89 81       	ldd	r24, Y+1	; 0x01
    333c:	9a 81       	ldd	r25, Y+2	; 0x02
    333e:	01 97       	sbiw	r24, 0x01	; 1
    3340:	f1 f7       	brne	.-4      	; 0x333e <call_img+0x1332>
    3342:	9a 83       	std	Y+2, r25	; 0x02
    3344:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x0A;
    3346:	ec e2       	ldi	r30, 0x2C	; 44
    3348:	f0 e0       	ldi	r31, 0x00	; 0
    334a:	8a e0       	ldi	r24, 0x0A	; 10
    334c:	80 83       	st	Z, r24
}
    334e:	ce 52       	subi	r28, 0x2E	; 46
    3350:	df 4f       	sbci	r29, 0xFF	; 255
    3352:	0f b6       	in	r0, 0x3f	; 63
    3354:	f8 94       	cli
    3356:	de bf       	out	0x3e, r29	; 62
    3358:	0f be       	out	0x3f, r0	; 63
    335a:	cd bf       	out	0x3d, r28	; 61
    335c:	cf 91       	pop	r28
    335e:	df 91       	pop	r29
    3360:	1f 91       	pop	r17
    3362:	0f 91       	pop	r16
    3364:	08 95       	ret

00003366 <zip>:
 
void zip(){
    3366:	0f 93       	push	r16
    3368:	1f 93       	push	r17
    336a:	df 93       	push	r29
    336c:	cf 93       	push	r28
    336e:	cd b7       	in	r28, 0x3d	; 61
    3370:	de b7       	in	r29, 0x3e	; 62
    3372:	c0 57       	subi	r28, 0x70	; 112
    3374:	d0 40       	sbci	r29, 0x00	; 0
    3376:	0f b6       	in	r0, 0x3f	; 63
    3378:	f8 94       	cli
    337a:	de bf       	out	0x3e, r29	; 62
    337c:	0f be       	out	0x3f, r0	; 63
    337e:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nZIP  ");
    3380:	00 d0       	rcall	.+0      	; 0x3382 <zip+0x1c>
    3382:	ed b7       	in	r30, 0x3d	; 61
    3384:	fe b7       	in	r31, 0x3e	; 62
    3386:	31 96       	adiw	r30, 0x01	; 1
    3388:	8c e4       	ldi	r24, 0x4C	; 76
    338a:	91 e0       	ldi	r25, 0x01	; 1
    338c:	91 83       	std	Z+1, r25	; 0x01
    338e:	80 83       	st	Z, r24
    3390:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
    3394:	0f 90       	pop	r0
    3396:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    3398:	ec e2       	ldi	r30, 0x2C	; 44
    339a:	f0 e0       	ldi	r31, 0x00	; 0
    339c:	86 e5       	ldi	r24, 0x56	; 86
    339e:	80 83       	st	Z, r24
    33a0:	fe 01       	movw	r30, r28
    33a2:	e3 59       	subi	r30, 0x93	; 147
    33a4:	ff 4f       	sbci	r31, 0xFF	; 255
    33a6:	80 e0       	ldi	r24, 0x00	; 0
    33a8:	90 e0       	ldi	r25, 0x00	; 0
    33aa:	a0 e8       	ldi	r26, 0x80	; 128
    33ac:	bf e3       	ldi	r27, 0x3F	; 63
    33ae:	80 83       	st	Z, r24
    33b0:	91 83       	std	Z+1, r25	; 0x01
    33b2:	a2 83       	std	Z+2, r26	; 0x02
    33b4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33b6:	8e 01       	movw	r16, r28
    33b8:	07 59       	subi	r16, 0x97	; 151
    33ba:	1f 4f       	sbci	r17, 0xFF	; 255
    33bc:	fe 01       	movw	r30, r28
    33be:	e3 59       	subi	r30, 0x93	; 147
    33c0:	ff 4f       	sbci	r31, 0xFF	; 255
    33c2:	60 81       	ld	r22, Z
    33c4:	71 81       	ldd	r23, Z+1	; 0x01
    33c6:	82 81       	ldd	r24, Z+2	; 0x02
    33c8:	93 81       	ldd	r25, Z+3	; 0x03
    33ca:	20 e0       	ldi	r18, 0x00	; 0
    33cc:	30 e0       	ldi	r19, 0x00	; 0
    33ce:	4a e7       	ldi	r20, 0x7A	; 122
    33d0:	55 e4       	ldi	r21, 0x45	; 69
    33d2:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    33d6:	dc 01       	movw	r26, r24
    33d8:	cb 01       	movw	r24, r22
    33da:	f8 01       	movw	r30, r16
    33dc:	80 83       	st	Z, r24
    33de:	91 83       	std	Z+1, r25	; 0x01
    33e0:	a2 83       	std	Z+2, r26	; 0x02
    33e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    33e4:	fe 01       	movw	r30, r28
    33e6:	e7 59       	subi	r30, 0x97	; 151
    33e8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ea:	60 81       	ld	r22, Z
    33ec:	71 81       	ldd	r23, Z+1	; 0x01
    33ee:	82 81       	ldd	r24, Z+2	; 0x02
    33f0:	93 81       	ldd	r25, Z+3	; 0x03
    33f2:	20 e0       	ldi	r18, 0x00	; 0
    33f4:	30 e0       	ldi	r19, 0x00	; 0
    33f6:	40 e8       	ldi	r20, 0x80	; 128
    33f8:	5f e3       	ldi	r21, 0x3F	; 63
    33fa:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    33fe:	88 23       	and	r24, r24
    3400:	44 f4       	brge	.+16     	; 0x3412 <zip+0xac>
		__ticks = 1;
    3402:	fe 01       	movw	r30, r28
    3404:	e9 59       	subi	r30, 0x99	; 153
    3406:	ff 4f       	sbci	r31, 0xFF	; 255
    3408:	81 e0       	ldi	r24, 0x01	; 1
    340a:	90 e0       	ldi	r25, 0x00	; 0
    340c:	91 83       	std	Z+1, r25	; 0x01
    340e:	80 83       	st	Z, r24
    3410:	64 c0       	rjmp	.+200    	; 0x34da <zip+0x174>
	else if (__tmp > 65535)
    3412:	fe 01       	movw	r30, r28
    3414:	e7 59       	subi	r30, 0x97	; 151
    3416:	ff 4f       	sbci	r31, 0xFF	; 255
    3418:	60 81       	ld	r22, Z
    341a:	71 81       	ldd	r23, Z+1	; 0x01
    341c:	82 81       	ldd	r24, Z+2	; 0x02
    341e:	93 81       	ldd	r25, Z+3	; 0x03
    3420:	20 e0       	ldi	r18, 0x00	; 0
    3422:	3f ef       	ldi	r19, 0xFF	; 255
    3424:	4f e7       	ldi	r20, 0x7F	; 127
    3426:	57 e4       	ldi	r21, 0x47	; 71
    3428:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    342c:	18 16       	cp	r1, r24
    342e:	0c f0       	brlt	.+2      	; 0x3432 <zip+0xcc>
    3430:	43 c0       	rjmp	.+134    	; 0x34b8 <zip+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3432:	fe 01       	movw	r30, r28
    3434:	e3 59       	subi	r30, 0x93	; 147
    3436:	ff 4f       	sbci	r31, 0xFF	; 255
    3438:	60 81       	ld	r22, Z
    343a:	71 81       	ldd	r23, Z+1	; 0x01
    343c:	82 81       	ldd	r24, Z+2	; 0x02
    343e:	93 81       	ldd	r25, Z+3	; 0x03
    3440:	20 e0       	ldi	r18, 0x00	; 0
    3442:	30 e0       	ldi	r19, 0x00	; 0
    3444:	40 e2       	ldi	r20, 0x20	; 32
    3446:	51 e4       	ldi	r21, 0x41	; 65
    3448:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    344c:	dc 01       	movw	r26, r24
    344e:	cb 01       	movw	r24, r22
    3450:	8e 01       	movw	r16, r28
    3452:	09 59       	subi	r16, 0x99	; 153
    3454:	1f 4f       	sbci	r17, 0xFF	; 255
    3456:	bc 01       	movw	r22, r24
    3458:	cd 01       	movw	r24, r26
    345a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    345e:	dc 01       	movw	r26, r24
    3460:	cb 01       	movw	r24, r22
    3462:	f8 01       	movw	r30, r16
    3464:	91 83       	std	Z+1, r25	; 0x01
    3466:	80 83       	st	Z, r24
    3468:	1f c0       	rjmp	.+62     	; 0x34a8 <zip+0x142>
    346a:	fe 01       	movw	r30, r28
    346c:	eb 59       	subi	r30, 0x9B	; 155
    346e:	ff 4f       	sbci	r31, 0xFF	; 255
    3470:	80 e9       	ldi	r24, 0x90	; 144
    3472:	91 e0       	ldi	r25, 0x01	; 1
    3474:	91 83       	std	Z+1, r25	; 0x01
    3476:	80 83       	st	Z, r24
    3478:	fe 01       	movw	r30, r28
    347a:	eb 59       	subi	r30, 0x9B	; 155
    347c:	ff 4f       	sbci	r31, 0xFF	; 255
    347e:	80 81       	ld	r24, Z
    3480:	91 81       	ldd	r25, Z+1	; 0x01
    3482:	01 97       	sbiw	r24, 0x01	; 1
    3484:	f1 f7       	brne	.-4      	; 0x3482 <zip+0x11c>
    3486:	fe 01       	movw	r30, r28
    3488:	eb 59       	subi	r30, 0x9B	; 155
    348a:	ff 4f       	sbci	r31, 0xFF	; 255
    348c:	91 83       	std	Z+1, r25	; 0x01
    348e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3490:	de 01       	movw	r26, r28
    3492:	a9 59       	subi	r26, 0x99	; 153
    3494:	bf 4f       	sbci	r27, 0xFF	; 255
    3496:	fe 01       	movw	r30, r28
    3498:	e9 59       	subi	r30, 0x99	; 153
    349a:	ff 4f       	sbci	r31, 0xFF	; 255
    349c:	80 81       	ld	r24, Z
    349e:	91 81       	ldd	r25, Z+1	; 0x01
    34a0:	01 97       	sbiw	r24, 0x01	; 1
    34a2:	11 96       	adiw	r26, 0x01	; 1
    34a4:	9c 93       	st	X, r25
    34a6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34a8:	fe 01       	movw	r30, r28
    34aa:	e9 59       	subi	r30, 0x99	; 153
    34ac:	ff 4f       	sbci	r31, 0xFF	; 255
    34ae:	80 81       	ld	r24, Z
    34b0:	91 81       	ldd	r25, Z+1	; 0x01
    34b2:	00 97       	sbiw	r24, 0x00	; 0
    34b4:	d1 f6       	brne	.-76     	; 0x346a <zip+0x104>
    34b6:	27 c0       	rjmp	.+78     	; 0x3506 <zip+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34b8:	8e 01       	movw	r16, r28
    34ba:	09 59       	subi	r16, 0x99	; 153
    34bc:	1f 4f       	sbci	r17, 0xFF	; 255
    34be:	fe 01       	movw	r30, r28
    34c0:	e7 59       	subi	r30, 0x97	; 151
    34c2:	ff 4f       	sbci	r31, 0xFF	; 255
    34c4:	60 81       	ld	r22, Z
    34c6:	71 81       	ldd	r23, Z+1	; 0x01
    34c8:	82 81       	ldd	r24, Z+2	; 0x02
    34ca:	93 81       	ldd	r25, Z+3	; 0x03
    34cc:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    34d0:	dc 01       	movw	r26, r24
    34d2:	cb 01       	movw	r24, r22
    34d4:	f8 01       	movw	r30, r16
    34d6:	91 83       	std	Z+1, r25	; 0x01
    34d8:	80 83       	st	Z, r24
    34da:	de 01       	movw	r26, r28
    34dc:	ad 59       	subi	r26, 0x9D	; 157
    34de:	bf 4f       	sbci	r27, 0xFF	; 255
    34e0:	fe 01       	movw	r30, r28
    34e2:	e9 59       	subi	r30, 0x99	; 153
    34e4:	ff 4f       	sbci	r31, 0xFF	; 255
    34e6:	80 81       	ld	r24, Z
    34e8:	91 81       	ldd	r25, Z+1	; 0x01
    34ea:	8d 93       	st	X+, r24
    34ec:	9c 93       	st	X, r25
    34ee:	fe 01       	movw	r30, r28
    34f0:	ed 59       	subi	r30, 0x9D	; 157
    34f2:	ff 4f       	sbci	r31, 0xFF	; 255
    34f4:	80 81       	ld	r24, Z
    34f6:	91 81       	ldd	r25, Z+1	; 0x01
    34f8:	01 97       	sbiw	r24, 0x01	; 1
    34fa:	f1 f7       	brne	.-4      	; 0x34f8 <zip+0x192>
    34fc:	fe 01       	movw	r30, r28
    34fe:	ed 59       	subi	r30, 0x9D	; 157
    3500:	ff 4f       	sbci	r31, 0xFF	; 255
    3502:	91 83       	std	Z+1, r25	; 0x01
    3504:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    3506:	ec e2       	ldi	r30, 0x2C	; 44
    3508:	f0 e0       	ldi	r31, 0x00	; 0
    350a:	10 82       	st	Z, r1
    350c:	fe 01       	movw	r30, r28
    350e:	e1 5a       	subi	r30, 0xA1	; 161
    3510:	ff 4f       	sbci	r31, 0xFF	; 255
    3512:	80 e0       	ldi	r24, 0x00	; 0
    3514:	90 e0       	ldi	r25, 0x00	; 0
    3516:	a0 e8       	ldi	r26, 0x80	; 128
    3518:	bf e3       	ldi	r27, 0x3F	; 63
    351a:	80 83       	st	Z, r24
    351c:	91 83       	std	Z+1, r25	; 0x01
    351e:	a2 83       	std	Z+2, r26	; 0x02
    3520:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3522:	8e 01       	movw	r16, r28
    3524:	05 5a       	subi	r16, 0xA5	; 165
    3526:	1f 4f       	sbci	r17, 0xFF	; 255
    3528:	fe 01       	movw	r30, r28
    352a:	e1 5a       	subi	r30, 0xA1	; 161
    352c:	ff 4f       	sbci	r31, 0xFF	; 255
    352e:	60 81       	ld	r22, Z
    3530:	71 81       	ldd	r23, Z+1	; 0x01
    3532:	82 81       	ldd	r24, Z+2	; 0x02
    3534:	93 81       	ldd	r25, Z+3	; 0x03
    3536:	20 e0       	ldi	r18, 0x00	; 0
    3538:	30 e0       	ldi	r19, 0x00	; 0
    353a:	4a e7       	ldi	r20, 0x7A	; 122
    353c:	55 e4       	ldi	r21, 0x45	; 69
    353e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3542:	dc 01       	movw	r26, r24
    3544:	cb 01       	movw	r24, r22
    3546:	f8 01       	movw	r30, r16
    3548:	80 83       	st	Z, r24
    354a:	91 83       	std	Z+1, r25	; 0x01
    354c:	a2 83       	std	Z+2, r26	; 0x02
    354e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3550:	fe 01       	movw	r30, r28
    3552:	e5 5a       	subi	r30, 0xA5	; 165
    3554:	ff 4f       	sbci	r31, 0xFF	; 255
    3556:	60 81       	ld	r22, Z
    3558:	71 81       	ldd	r23, Z+1	; 0x01
    355a:	82 81       	ldd	r24, Z+2	; 0x02
    355c:	93 81       	ldd	r25, Z+3	; 0x03
    355e:	20 e0       	ldi	r18, 0x00	; 0
    3560:	30 e0       	ldi	r19, 0x00	; 0
    3562:	40 e8       	ldi	r20, 0x80	; 128
    3564:	5f e3       	ldi	r21, 0x3F	; 63
    3566:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    356a:	88 23       	and	r24, r24
    356c:	44 f4       	brge	.+16     	; 0x357e <zip+0x218>
		__ticks = 1;
    356e:	fe 01       	movw	r30, r28
    3570:	e7 5a       	subi	r30, 0xA7	; 167
    3572:	ff 4f       	sbci	r31, 0xFF	; 255
    3574:	81 e0       	ldi	r24, 0x01	; 1
    3576:	90 e0       	ldi	r25, 0x00	; 0
    3578:	91 83       	std	Z+1, r25	; 0x01
    357a:	80 83       	st	Z, r24
    357c:	64 c0       	rjmp	.+200    	; 0x3646 <zip+0x2e0>
	else if (__tmp > 65535)
    357e:	fe 01       	movw	r30, r28
    3580:	e5 5a       	subi	r30, 0xA5	; 165
    3582:	ff 4f       	sbci	r31, 0xFF	; 255
    3584:	60 81       	ld	r22, Z
    3586:	71 81       	ldd	r23, Z+1	; 0x01
    3588:	82 81       	ldd	r24, Z+2	; 0x02
    358a:	93 81       	ldd	r25, Z+3	; 0x03
    358c:	20 e0       	ldi	r18, 0x00	; 0
    358e:	3f ef       	ldi	r19, 0xFF	; 255
    3590:	4f e7       	ldi	r20, 0x7F	; 127
    3592:	57 e4       	ldi	r21, 0x47	; 71
    3594:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3598:	18 16       	cp	r1, r24
    359a:	0c f0       	brlt	.+2      	; 0x359e <zip+0x238>
    359c:	43 c0       	rjmp	.+134    	; 0x3624 <zip+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    359e:	fe 01       	movw	r30, r28
    35a0:	e1 5a       	subi	r30, 0xA1	; 161
    35a2:	ff 4f       	sbci	r31, 0xFF	; 255
    35a4:	60 81       	ld	r22, Z
    35a6:	71 81       	ldd	r23, Z+1	; 0x01
    35a8:	82 81       	ldd	r24, Z+2	; 0x02
    35aa:	93 81       	ldd	r25, Z+3	; 0x03
    35ac:	20 e0       	ldi	r18, 0x00	; 0
    35ae:	30 e0       	ldi	r19, 0x00	; 0
    35b0:	40 e2       	ldi	r20, 0x20	; 32
    35b2:	51 e4       	ldi	r21, 0x41	; 65
    35b4:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    35b8:	dc 01       	movw	r26, r24
    35ba:	cb 01       	movw	r24, r22
    35bc:	8e 01       	movw	r16, r28
    35be:	07 5a       	subi	r16, 0xA7	; 167
    35c0:	1f 4f       	sbci	r17, 0xFF	; 255
    35c2:	bc 01       	movw	r22, r24
    35c4:	cd 01       	movw	r24, r26
    35c6:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    35ca:	dc 01       	movw	r26, r24
    35cc:	cb 01       	movw	r24, r22
    35ce:	f8 01       	movw	r30, r16
    35d0:	91 83       	std	Z+1, r25	; 0x01
    35d2:	80 83       	st	Z, r24
    35d4:	1f c0       	rjmp	.+62     	; 0x3614 <zip+0x2ae>
    35d6:	fe 01       	movw	r30, r28
    35d8:	e9 5a       	subi	r30, 0xA9	; 169
    35da:	ff 4f       	sbci	r31, 0xFF	; 255
    35dc:	80 e9       	ldi	r24, 0x90	; 144
    35de:	91 e0       	ldi	r25, 0x01	; 1
    35e0:	91 83       	std	Z+1, r25	; 0x01
    35e2:	80 83       	st	Z, r24
    35e4:	fe 01       	movw	r30, r28
    35e6:	e9 5a       	subi	r30, 0xA9	; 169
    35e8:	ff 4f       	sbci	r31, 0xFF	; 255
    35ea:	80 81       	ld	r24, Z
    35ec:	91 81       	ldd	r25, Z+1	; 0x01
    35ee:	01 97       	sbiw	r24, 0x01	; 1
    35f0:	f1 f7       	brne	.-4      	; 0x35ee <zip+0x288>
    35f2:	fe 01       	movw	r30, r28
    35f4:	e9 5a       	subi	r30, 0xA9	; 169
    35f6:	ff 4f       	sbci	r31, 0xFF	; 255
    35f8:	91 83       	std	Z+1, r25	; 0x01
    35fa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35fc:	de 01       	movw	r26, r28
    35fe:	a7 5a       	subi	r26, 0xA7	; 167
    3600:	bf 4f       	sbci	r27, 0xFF	; 255
    3602:	fe 01       	movw	r30, r28
    3604:	e7 5a       	subi	r30, 0xA7	; 167
    3606:	ff 4f       	sbci	r31, 0xFF	; 255
    3608:	80 81       	ld	r24, Z
    360a:	91 81       	ldd	r25, Z+1	; 0x01
    360c:	01 97       	sbiw	r24, 0x01	; 1
    360e:	11 96       	adiw	r26, 0x01	; 1
    3610:	9c 93       	st	X, r25
    3612:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3614:	fe 01       	movw	r30, r28
    3616:	e7 5a       	subi	r30, 0xA7	; 167
    3618:	ff 4f       	sbci	r31, 0xFF	; 255
    361a:	80 81       	ld	r24, Z
    361c:	91 81       	ldd	r25, Z+1	; 0x01
    361e:	00 97       	sbiw	r24, 0x00	; 0
    3620:	d1 f6       	brne	.-76     	; 0x35d6 <zip+0x270>
    3622:	27 c0       	rjmp	.+78     	; 0x3672 <zip+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3624:	8e 01       	movw	r16, r28
    3626:	07 5a       	subi	r16, 0xA7	; 167
    3628:	1f 4f       	sbci	r17, 0xFF	; 255
    362a:	fe 01       	movw	r30, r28
    362c:	e5 5a       	subi	r30, 0xA5	; 165
    362e:	ff 4f       	sbci	r31, 0xFF	; 255
    3630:	60 81       	ld	r22, Z
    3632:	71 81       	ldd	r23, Z+1	; 0x01
    3634:	82 81       	ldd	r24, Z+2	; 0x02
    3636:	93 81       	ldd	r25, Z+3	; 0x03
    3638:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    363c:	dc 01       	movw	r26, r24
    363e:	cb 01       	movw	r24, r22
    3640:	f8 01       	movw	r30, r16
    3642:	91 83       	std	Z+1, r25	; 0x01
    3644:	80 83       	st	Z, r24
    3646:	de 01       	movw	r26, r28
    3648:	ab 5a       	subi	r26, 0xAB	; 171
    364a:	bf 4f       	sbci	r27, 0xFF	; 255
    364c:	fe 01       	movw	r30, r28
    364e:	e7 5a       	subi	r30, 0xA7	; 167
    3650:	ff 4f       	sbci	r31, 0xFF	; 255
    3652:	80 81       	ld	r24, Z
    3654:	91 81       	ldd	r25, Z+1	; 0x01
    3656:	8d 93       	st	X+, r24
    3658:	9c 93       	st	X, r25
    365a:	fe 01       	movw	r30, r28
    365c:	eb 5a       	subi	r30, 0xAB	; 171
    365e:	ff 4f       	sbci	r31, 0xFF	; 255
    3660:	80 81       	ld	r24, Z
    3662:	91 81       	ldd	r25, Z+1	; 0x01
    3664:	01 97       	sbiw	r24, 0x01	; 1
    3666:	f1 f7       	brne	.-4      	; 0x3664 <zip+0x2fe>
    3668:	fe 01       	movw	r30, r28
    366a:	eb 5a       	subi	r30, 0xAB	; 171
    366c:	ff 4f       	sbci	r31, 0xFF	; 255
    366e:	91 83       	std	Z+1, r25	; 0x01
    3670:	80 83       	st	Z, r24
 UDR0=0x31; _delay_ms(1);
    3672:	ec e2       	ldi	r30, 0x2C	; 44
    3674:	f0 e0       	ldi	r31, 0x00	; 0
    3676:	81 e3       	ldi	r24, 0x31	; 49
    3678:	80 83       	st	Z, r24
    367a:	fe 01       	movw	r30, r28
    367c:	ef 5a       	subi	r30, 0xAF	; 175
    367e:	ff 4f       	sbci	r31, 0xFF	; 255
    3680:	80 e0       	ldi	r24, 0x00	; 0
    3682:	90 e0       	ldi	r25, 0x00	; 0
    3684:	a0 e8       	ldi	r26, 0x80	; 128
    3686:	bf e3       	ldi	r27, 0x3F	; 63
    3688:	80 83       	st	Z, r24
    368a:	91 83       	std	Z+1, r25	; 0x01
    368c:	a2 83       	std	Z+2, r26	; 0x02
    368e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3690:	8e 01       	movw	r16, r28
    3692:	03 5b       	subi	r16, 0xB3	; 179
    3694:	1f 4f       	sbci	r17, 0xFF	; 255
    3696:	fe 01       	movw	r30, r28
    3698:	ef 5a       	subi	r30, 0xAF	; 175
    369a:	ff 4f       	sbci	r31, 0xFF	; 255
    369c:	60 81       	ld	r22, Z
    369e:	71 81       	ldd	r23, Z+1	; 0x01
    36a0:	82 81       	ldd	r24, Z+2	; 0x02
    36a2:	93 81       	ldd	r25, Z+3	; 0x03
    36a4:	20 e0       	ldi	r18, 0x00	; 0
    36a6:	30 e0       	ldi	r19, 0x00	; 0
    36a8:	4a e7       	ldi	r20, 0x7A	; 122
    36aa:	55 e4       	ldi	r21, 0x45	; 69
    36ac:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    36b0:	dc 01       	movw	r26, r24
    36b2:	cb 01       	movw	r24, r22
    36b4:	f8 01       	movw	r30, r16
    36b6:	80 83       	st	Z, r24
    36b8:	91 83       	std	Z+1, r25	; 0x01
    36ba:	a2 83       	std	Z+2, r26	; 0x02
    36bc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    36be:	fe 01       	movw	r30, r28
    36c0:	e3 5b       	subi	r30, 0xB3	; 179
    36c2:	ff 4f       	sbci	r31, 0xFF	; 255
    36c4:	60 81       	ld	r22, Z
    36c6:	71 81       	ldd	r23, Z+1	; 0x01
    36c8:	82 81       	ldd	r24, Z+2	; 0x02
    36ca:	93 81       	ldd	r25, Z+3	; 0x03
    36cc:	20 e0       	ldi	r18, 0x00	; 0
    36ce:	30 e0       	ldi	r19, 0x00	; 0
    36d0:	40 e8       	ldi	r20, 0x80	; 128
    36d2:	5f e3       	ldi	r21, 0x3F	; 63
    36d4:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    36d8:	88 23       	and	r24, r24
    36da:	44 f4       	brge	.+16     	; 0x36ec <zip+0x386>
		__ticks = 1;
    36dc:	fe 01       	movw	r30, r28
    36de:	e5 5b       	subi	r30, 0xB5	; 181
    36e0:	ff 4f       	sbci	r31, 0xFF	; 255
    36e2:	81 e0       	ldi	r24, 0x01	; 1
    36e4:	90 e0       	ldi	r25, 0x00	; 0
    36e6:	91 83       	std	Z+1, r25	; 0x01
    36e8:	80 83       	st	Z, r24
    36ea:	64 c0       	rjmp	.+200    	; 0x37b4 <zip+0x44e>
	else if (__tmp > 65535)
    36ec:	fe 01       	movw	r30, r28
    36ee:	e3 5b       	subi	r30, 0xB3	; 179
    36f0:	ff 4f       	sbci	r31, 0xFF	; 255
    36f2:	60 81       	ld	r22, Z
    36f4:	71 81       	ldd	r23, Z+1	; 0x01
    36f6:	82 81       	ldd	r24, Z+2	; 0x02
    36f8:	93 81       	ldd	r25, Z+3	; 0x03
    36fa:	20 e0       	ldi	r18, 0x00	; 0
    36fc:	3f ef       	ldi	r19, 0xFF	; 255
    36fe:	4f e7       	ldi	r20, 0x7F	; 127
    3700:	57 e4       	ldi	r21, 0x47	; 71
    3702:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3706:	18 16       	cp	r1, r24
    3708:	0c f0       	brlt	.+2      	; 0x370c <zip+0x3a6>
    370a:	43 c0       	rjmp	.+134    	; 0x3792 <zip+0x42c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    370c:	fe 01       	movw	r30, r28
    370e:	ef 5a       	subi	r30, 0xAF	; 175
    3710:	ff 4f       	sbci	r31, 0xFF	; 255
    3712:	60 81       	ld	r22, Z
    3714:	71 81       	ldd	r23, Z+1	; 0x01
    3716:	82 81       	ldd	r24, Z+2	; 0x02
    3718:	93 81       	ldd	r25, Z+3	; 0x03
    371a:	20 e0       	ldi	r18, 0x00	; 0
    371c:	30 e0       	ldi	r19, 0x00	; 0
    371e:	40 e2       	ldi	r20, 0x20	; 32
    3720:	51 e4       	ldi	r21, 0x41	; 65
    3722:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3726:	dc 01       	movw	r26, r24
    3728:	cb 01       	movw	r24, r22
    372a:	8e 01       	movw	r16, r28
    372c:	05 5b       	subi	r16, 0xB5	; 181
    372e:	1f 4f       	sbci	r17, 0xFF	; 255
    3730:	bc 01       	movw	r22, r24
    3732:	cd 01       	movw	r24, r26
    3734:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3738:	dc 01       	movw	r26, r24
    373a:	cb 01       	movw	r24, r22
    373c:	f8 01       	movw	r30, r16
    373e:	91 83       	std	Z+1, r25	; 0x01
    3740:	80 83       	st	Z, r24
    3742:	1f c0       	rjmp	.+62     	; 0x3782 <zip+0x41c>
    3744:	fe 01       	movw	r30, r28
    3746:	e7 5b       	subi	r30, 0xB7	; 183
    3748:	ff 4f       	sbci	r31, 0xFF	; 255
    374a:	80 e9       	ldi	r24, 0x90	; 144
    374c:	91 e0       	ldi	r25, 0x01	; 1
    374e:	91 83       	std	Z+1, r25	; 0x01
    3750:	80 83       	st	Z, r24
    3752:	fe 01       	movw	r30, r28
    3754:	e7 5b       	subi	r30, 0xB7	; 183
    3756:	ff 4f       	sbci	r31, 0xFF	; 255
    3758:	80 81       	ld	r24, Z
    375a:	91 81       	ldd	r25, Z+1	; 0x01
    375c:	01 97       	sbiw	r24, 0x01	; 1
    375e:	f1 f7       	brne	.-4      	; 0x375c <zip+0x3f6>
    3760:	fe 01       	movw	r30, r28
    3762:	e7 5b       	subi	r30, 0xB7	; 183
    3764:	ff 4f       	sbci	r31, 0xFF	; 255
    3766:	91 83       	std	Z+1, r25	; 0x01
    3768:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    376a:	de 01       	movw	r26, r28
    376c:	a5 5b       	subi	r26, 0xB5	; 181
    376e:	bf 4f       	sbci	r27, 0xFF	; 255
    3770:	fe 01       	movw	r30, r28
    3772:	e5 5b       	subi	r30, 0xB5	; 181
    3774:	ff 4f       	sbci	r31, 0xFF	; 255
    3776:	80 81       	ld	r24, Z
    3778:	91 81       	ldd	r25, Z+1	; 0x01
    377a:	01 97       	sbiw	r24, 0x01	; 1
    377c:	11 96       	adiw	r26, 0x01	; 1
    377e:	9c 93       	st	X, r25
    3780:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3782:	fe 01       	movw	r30, r28
    3784:	e5 5b       	subi	r30, 0xB5	; 181
    3786:	ff 4f       	sbci	r31, 0xFF	; 255
    3788:	80 81       	ld	r24, Z
    378a:	91 81       	ldd	r25, Z+1	; 0x01
    378c:	00 97       	sbiw	r24, 0x00	; 0
    378e:	d1 f6       	brne	.-76     	; 0x3744 <zip+0x3de>
    3790:	27 c0       	rjmp	.+78     	; 0x37e0 <zip+0x47a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3792:	8e 01       	movw	r16, r28
    3794:	05 5b       	subi	r16, 0xB5	; 181
    3796:	1f 4f       	sbci	r17, 0xFF	; 255
    3798:	fe 01       	movw	r30, r28
    379a:	e3 5b       	subi	r30, 0xB3	; 179
    379c:	ff 4f       	sbci	r31, 0xFF	; 255
    379e:	60 81       	ld	r22, Z
    37a0:	71 81       	ldd	r23, Z+1	; 0x01
    37a2:	82 81       	ldd	r24, Z+2	; 0x02
    37a4:	93 81       	ldd	r25, Z+3	; 0x03
    37a6:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    37aa:	dc 01       	movw	r26, r24
    37ac:	cb 01       	movw	r24, r22
    37ae:	f8 01       	movw	r30, r16
    37b0:	91 83       	std	Z+1, r25	; 0x01
    37b2:	80 83       	st	Z, r24
    37b4:	de 01       	movw	r26, r28
    37b6:	a9 5b       	subi	r26, 0xB9	; 185
    37b8:	bf 4f       	sbci	r27, 0xFF	; 255
    37ba:	fe 01       	movw	r30, r28
    37bc:	e5 5b       	subi	r30, 0xB5	; 181
    37be:	ff 4f       	sbci	r31, 0xFF	; 255
    37c0:	80 81       	ld	r24, Z
    37c2:	91 81       	ldd	r25, Z+1	; 0x01
    37c4:	8d 93       	st	X+, r24
    37c6:	9c 93       	st	X, r25
    37c8:	fe 01       	movw	r30, r28
    37ca:	e9 5b       	subi	r30, 0xB9	; 185
    37cc:	ff 4f       	sbci	r31, 0xFF	; 255
    37ce:	80 81       	ld	r24, Z
    37d0:	91 81       	ldd	r25, Z+1	; 0x01
    37d2:	01 97       	sbiw	r24, 0x01	; 1
    37d4:	f1 f7       	brne	.-4      	; 0x37d2 <zip+0x46c>
    37d6:	fe 01       	movw	r30, r28
    37d8:	e9 5b       	subi	r30, 0xB9	; 185
    37da:	ff 4f       	sbci	r31, 0xFF	; 255
    37dc:	91 83       	std	Z+1, r25	; 0x01
    37de:	80 83       	st	Z, r24
 UDR0=0x05; _delay_ms(1);
    37e0:	ec e2       	ldi	r30, 0x2C	; 44
    37e2:	f0 e0       	ldi	r31, 0x00	; 0
    37e4:	85 e0       	ldi	r24, 0x05	; 5
    37e6:	80 83       	st	Z, r24
    37e8:	fe 01       	movw	r30, r28
    37ea:	ed 5b       	subi	r30, 0xBD	; 189
    37ec:	ff 4f       	sbci	r31, 0xFF	; 255
    37ee:	80 e0       	ldi	r24, 0x00	; 0
    37f0:	90 e0       	ldi	r25, 0x00	; 0
    37f2:	a0 e8       	ldi	r26, 0x80	; 128
    37f4:	bf e3       	ldi	r27, 0x3F	; 63
    37f6:	80 83       	st	Z, r24
    37f8:	91 83       	std	Z+1, r25	; 0x01
    37fa:	a2 83       	std	Z+2, r26	; 0x02
    37fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37fe:	8e 01       	movw	r16, r28
    3800:	01 5c       	subi	r16, 0xC1	; 193
    3802:	1f 4f       	sbci	r17, 0xFF	; 255
    3804:	fe 01       	movw	r30, r28
    3806:	ed 5b       	subi	r30, 0xBD	; 189
    3808:	ff 4f       	sbci	r31, 0xFF	; 255
    380a:	60 81       	ld	r22, Z
    380c:	71 81       	ldd	r23, Z+1	; 0x01
    380e:	82 81       	ldd	r24, Z+2	; 0x02
    3810:	93 81       	ldd	r25, Z+3	; 0x03
    3812:	20 e0       	ldi	r18, 0x00	; 0
    3814:	30 e0       	ldi	r19, 0x00	; 0
    3816:	4a e7       	ldi	r20, 0x7A	; 122
    3818:	55 e4       	ldi	r21, 0x45	; 69
    381a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    381e:	dc 01       	movw	r26, r24
    3820:	cb 01       	movw	r24, r22
    3822:	f8 01       	movw	r30, r16
    3824:	80 83       	st	Z, r24
    3826:	91 83       	std	Z+1, r25	; 0x01
    3828:	a2 83       	std	Z+2, r26	; 0x02
    382a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    382c:	fe 01       	movw	r30, r28
    382e:	ff 96       	adiw	r30, 0x3f	; 63
    3830:	60 81       	ld	r22, Z
    3832:	71 81       	ldd	r23, Z+1	; 0x01
    3834:	82 81       	ldd	r24, Z+2	; 0x02
    3836:	93 81       	ldd	r25, Z+3	; 0x03
    3838:	20 e0       	ldi	r18, 0x00	; 0
    383a:	30 e0       	ldi	r19, 0x00	; 0
    383c:	40 e8       	ldi	r20, 0x80	; 128
    383e:	5f e3       	ldi	r21, 0x3F	; 63
    3840:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    3844:	88 23       	and	r24, r24
    3846:	2c f4       	brge	.+10     	; 0x3852 <zip+0x4ec>
		__ticks = 1;
    3848:	81 e0       	ldi	r24, 0x01	; 1
    384a:	90 e0       	ldi	r25, 0x00	; 0
    384c:	9e af       	std	Y+62, r25	; 0x3e
    384e:	8d af       	std	Y+61, r24	; 0x3d
    3850:	46 c0       	rjmp	.+140    	; 0x38de <zip+0x578>
	else if (__tmp > 65535)
    3852:	fe 01       	movw	r30, r28
    3854:	ff 96       	adiw	r30, 0x3f	; 63
    3856:	60 81       	ld	r22, Z
    3858:	71 81       	ldd	r23, Z+1	; 0x01
    385a:	82 81       	ldd	r24, Z+2	; 0x02
    385c:	93 81       	ldd	r25, Z+3	; 0x03
    385e:	20 e0       	ldi	r18, 0x00	; 0
    3860:	3f ef       	ldi	r19, 0xFF	; 255
    3862:	4f e7       	ldi	r20, 0x7F	; 127
    3864:	57 e4       	ldi	r21, 0x47	; 71
    3866:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    386a:	18 16       	cp	r1, r24
    386c:	64 f5       	brge	.+88     	; 0x38c6 <zip+0x560>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    386e:	fe 01       	movw	r30, r28
    3870:	ed 5b       	subi	r30, 0xBD	; 189
    3872:	ff 4f       	sbci	r31, 0xFF	; 255
    3874:	60 81       	ld	r22, Z
    3876:	71 81       	ldd	r23, Z+1	; 0x01
    3878:	82 81       	ldd	r24, Z+2	; 0x02
    387a:	93 81       	ldd	r25, Z+3	; 0x03
    387c:	20 e0       	ldi	r18, 0x00	; 0
    387e:	30 e0       	ldi	r19, 0x00	; 0
    3880:	40 e2       	ldi	r20, 0x20	; 32
    3882:	51 e4       	ldi	r21, 0x41	; 65
    3884:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3888:	dc 01       	movw	r26, r24
    388a:	cb 01       	movw	r24, r22
    388c:	bc 01       	movw	r22, r24
    388e:	cd 01       	movw	r24, r26
    3890:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3894:	dc 01       	movw	r26, r24
    3896:	cb 01       	movw	r24, r22
    3898:	9e af       	std	Y+62, r25	; 0x3e
    389a:	8d af       	std	Y+61, r24	; 0x3d
    389c:	0f c0       	rjmp	.+30     	; 0x38bc <zip+0x556>
    389e:	80 e9       	ldi	r24, 0x90	; 144
    38a0:	91 e0       	ldi	r25, 0x01	; 1
    38a2:	9c af       	std	Y+60, r25	; 0x3c
    38a4:	8b af       	std	Y+59, r24	; 0x3b
    38a6:	8b ad       	ldd	r24, Y+59	; 0x3b
    38a8:	9c ad       	ldd	r25, Y+60	; 0x3c
    38aa:	01 97       	sbiw	r24, 0x01	; 1
    38ac:	f1 f7       	brne	.-4      	; 0x38aa <zip+0x544>
    38ae:	9c af       	std	Y+60, r25	; 0x3c
    38b0:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38b2:	8d ad       	ldd	r24, Y+61	; 0x3d
    38b4:	9e ad       	ldd	r25, Y+62	; 0x3e
    38b6:	01 97       	sbiw	r24, 0x01	; 1
    38b8:	9e af       	std	Y+62, r25	; 0x3e
    38ba:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38bc:	8d ad       	ldd	r24, Y+61	; 0x3d
    38be:	9e ad       	ldd	r25, Y+62	; 0x3e
    38c0:	00 97       	sbiw	r24, 0x00	; 0
    38c2:	69 f7       	brne	.-38     	; 0x389e <zip+0x538>
    38c4:	16 c0       	rjmp	.+44     	; 0x38f2 <zip+0x58c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38c6:	fe 01       	movw	r30, r28
    38c8:	ff 96       	adiw	r30, 0x3f	; 63
    38ca:	60 81       	ld	r22, Z
    38cc:	71 81       	ldd	r23, Z+1	; 0x01
    38ce:	82 81       	ldd	r24, Z+2	; 0x02
    38d0:	93 81       	ldd	r25, Z+3	; 0x03
    38d2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    38d6:	dc 01       	movw	r26, r24
    38d8:	cb 01       	movw	r24, r22
    38da:	9e af       	std	Y+62, r25	; 0x3e
    38dc:	8d af       	std	Y+61, r24	; 0x3d
    38de:	8d ad       	ldd	r24, Y+61	; 0x3d
    38e0:	9e ad       	ldd	r25, Y+62	; 0x3e
    38e2:	9a af       	std	Y+58, r25	; 0x3a
    38e4:	89 af       	std	Y+57, r24	; 0x39
    38e6:	89 ad       	ldd	r24, Y+57	; 0x39
    38e8:	9a ad       	ldd	r25, Y+58	; 0x3a
    38ea:	01 97       	sbiw	r24, 0x01	; 1
    38ec:	f1 f7       	brne	.-4      	; 0x38ea <zip+0x584>
    38ee:	9a af       	std	Y+58, r25	; 0x3a
    38f0:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x01; _delay_ms(1);
    38f2:	ec e2       	ldi	r30, 0x2C	; 44
    38f4:	f0 e0       	ldi	r31, 0x00	; 0
    38f6:	81 e0       	ldi	r24, 0x01	; 1
    38f8:	80 83       	st	Z, r24
    38fa:	80 e0       	ldi	r24, 0x00	; 0
    38fc:	90 e0       	ldi	r25, 0x00	; 0
    38fe:	a0 e8       	ldi	r26, 0x80	; 128
    3900:	bf e3       	ldi	r27, 0x3F	; 63
    3902:	8d ab       	std	Y+53, r24	; 0x35
    3904:	9e ab       	std	Y+54, r25	; 0x36
    3906:	af ab       	std	Y+55, r26	; 0x37
    3908:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    390a:	6d a9       	ldd	r22, Y+53	; 0x35
    390c:	7e a9       	ldd	r23, Y+54	; 0x36
    390e:	8f a9       	ldd	r24, Y+55	; 0x37
    3910:	98 ad       	ldd	r25, Y+56	; 0x38
    3912:	20 e0       	ldi	r18, 0x00	; 0
    3914:	30 e0       	ldi	r19, 0x00	; 0
    3916:	4a e7       	ldi	r20, 0x7A	; 122
    3918:	55 e4       	ldi	r21, 0x45	; 69
    391a:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    391e:	dc 01       	movw	r26, r24
    3920:	cb 01       	movw	r24, r22
    3922:	89 ab       	std	Y+49, r24	; 0x31
    3924:	9a ab       	std	Y+50, r25	; 0x32
    3926:	ab ab       	std	Y+51, r26	; 0x33
    3928:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    392a:	69 a9       	ldd	r22, Y+49	; 0x31
    392c:	7a a9       	ldd	r23, Y+50	; 0x32
    392e:	8b a9       	ldd	r24, Y+51	; 0x33
    3930:	9c a9       	ldd	r25, Y+52	; 0x34
    3932:	20 e0       	ldi	r18, 0x00	; 0
    3934:	30 e0       	ldi	r19, 0x00	; 0
    3936:	40 e8       	ldi	r20, 0x80	; 128
    3938:	5f e3       	ldi	r21, 0x3F	; 63
    393a:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    393e:	88 23       	and	r24, r24
    3940:	2c f4       	brge	.+10     	; 0x394c <zip+0x5e6>
		__ticks = 1;
    3942:	81 e0       	ldi	r24, 0x01	; 1
    3944:	90 e0       	ldi	r25, 0x00	; 0
    3946:	98 ab       	std	Y+48, r25	; 0x30
    3948:	8f a7       	std	Y+47, r24	; 0x2f
    394a:	3f c0       	rjmp	.+126    	; 0x39ca <zip+0x664>
	else if (__tmp > 65535)
    394c:	69 a9       	ldd	r22, Y+49	; 0x31
    394e:	7a a9       	ldd	r23, Y+50	; 0x32
    3950:	8b a9       	ldd	r24, Y+51	; 0x33
    3952:	9c a9       	ldd	r25, Y+52	; 0x34
    3954:	20 e0       	ldi	r18, 0x00	; 0
    3956:	3f ef       	ldi	r19, 0xFF	; 255
    3958:	4f e7       	ldi	r20, 0x7F	; 127
    395a:	57 e4       	ldi	r21, 0x47	; 71
    395c:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3960:	18 16       	cp	r1, r24
    3962:	4c f5       	brge	.+82     	; 0x39b6 <zip+0x650>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3964:	6d a9       	ldd	r22, Y+53	; 0x35
    3966:	7e a9       	ldd	r23, Y+54	; 0x36
    3968:	8f a9       	ldd	r24, Y+55	; 0x37
    396a:	98 ad       	ldd	r25, Y+56	; 0x38
    396c:	20 e0       	ldi	r18, 0x00	; 0
    396e:	30 e0       	ldi	r19, 0x00	; 0
    3970:	40 e2       	ldi	r20, 0x20	; 32
    3972:	51 e4       	ldi	r21, 0x41	; 65
    3974:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3978:	dc 01       	movw	r26, r24
    397a:	cb 01       	movw	r24, r22
    397c:	bc 01       	movw	r22, r24
    397e:	cd 01       	movw	r24, r26
    3980:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3984:	dc 01       	movw	r26, r24
    3986:	cb 01       	movw	r24, r22
    3988:	98 ab       	std	Y+48, r25	; 0x30
    398a:	8f a7       	std	Y+47, r24	; 0x2f
    398c:	0f c0       	rjmp	.+30     	; 0x39ac <zip+0x646>
    398e:	80 e9       	ldi	r24, 0x90	; 144
    3990:	91 e0       	ldi	r25, 0x01	; 1
    3992:	9e a7       	std	Y+46, r25	; 0x2e
    3994:	8d a7       	std	Y+45, r24	; 0x2d
    3996:	8d a5       	ldd	r24, Y+45	; 0x2d
    3998:	9e a5       	ldd	r25, Y+46	; 0x2e
    399a:	01 97       	sbiw	r24, 0x01	; 1
    399c:	f1 f7       	brne	.-4      	; 0x399a <zip+0x634>
    399e:	9e a7       	std	Y+46, r25	; 0x2e
    39a0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39a2:	8f a5       	ldd	r24, Y+47	; 0x2f
    39a4:	98 a9       	ldd	r25, Y+48	; 0x30
    39a6:	01 97       	sbiw	r24, 0x01	; 1
    39a8:	98 ab       	std	Y+48, r25	; 0x30
    39aa:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39ac:	8f a5       	ldd	r24, Y+47	; 0x2f
    39ae:	98 a9       	ldd	r25, Y+48	; 0x30
    39b0:	00 97       	sbiw	r24, 0x00	; 0
    39b2:	69 f7       	brne	.-38     	; 0x398e <zip+0x628>
    39b4:	14 c0       	rjmp	.+40     	; 0x39de <zip+0x678>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39b6:	69 a9       	ldd	r22, Y+49	; 0x31
    39b8:	7a a9       	ldd	r23, Y+50	; 0x32
    39ba:	8b a9       	ldd	r24, Y+51	; 0x33
    39bc:	9c a9       	ldd	r25, Y+52	; 0x34
    39be:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    39c2:	dc 01       	movw	r26, r24
    39c4:	cb 01       	movw	r24, r22
    39c6:	98 ab       	std	Y+48, r25	; 0x30
    39c8:	8f a7       	std	Y+47, r24	; 0x2f
    39ca:	8f a5       	ldd	r24, Y+47	; 0x2f
    39cc:	98 a9       	ldd	r25, Y+48	; 0x30
    39ce:	9c a7       	std	Y+44, r25	; 0x2c
    39d0:	8b a7       	std	Y+43, r24	; 0x2b
    39d2:	8b a5       	ldd	r24, Y+43	; 0x2b
    39d4:	9c a5       	ldd	r25, Y+44	; 0x2c
    39d6:	01 97       	sbiw	r24, 0x01	; 1
    39d8:	f1 f7       	brne	.-4      	; 0x39d6 <zip+0x670>
    39da:	9c a7       	std	Y+44, r25	; 0x2c
    39dc:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x01; _delay_ms(1);
    39de:	ec e2       	ldi	r30, 0x2C	; 44
    39e0:	f0 e0       	ldi	r31, 0x00	; 0
    39e2:	81 e0       	ldi	r24, 0x01	; 1
    39e4:	80 83       	st	Z, r24
    39e6:	80 e0       	ldi	r24, 0x00	; 0
    39e8:	90 e0       	ldi	r25, 0x00	; 0
    39ea:	a0 e8       	ldi	r26, 0x80	; 128
    39ec:	bf e3       	ldi	r27, 0x3F	; 63
    39ee:	8f a3       	std	Y+39, r24	; 0x27
    39f0:	98 a7       	std	Y+40, r25	; 0x28
    39f2:	a9 a7       	std	Y+41, r26	; 0x29
    39f4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39f6:	6f a1       	ldd	r22, Y+39	; 0x27
    39f8:	78 a5       	ldd	r23, Y+40	; 0x28
    39fa:	89 a5       	ldd	r24, Y+41	; 0x29
    39fc:	9a a5       	ldd	r25, Y+42	; 0x2a
    39fe:	20 e0       	ldi	r18, 0x00	; 0
    3a00:	30 e0       	ldi	r19, 0x00	; 0
    3a02:	4a e7       	ldi	r20, 0x7A	; 122
    3a04:	55 e4       	ldi	r21, 0x45	; 69
    3a06:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3a0a:	dc 01       	movw	r26, r24
    3a0c:	cb 01       	movw	r24, r22
    3a0e:	8b a3       	std	Y+35, r24	; 0x23
    3a10:	9c a3       	std	Y+36, r25	; 0x24
    3a12:	ad a3       	std	Y+37, r26	; 0x25
    3a14:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3a16:	6b a1       	ldd	r22, Y+35	; 0x23
    3a18:	7c a1       	ldd	r23, Y+36	; 0x24
    3a1a:	8d a1       	ldd	r24, Y+37	; 0x25
    3a1c:	9e a1       	ldd	r25, Y+38	; 0x26
    3a1e:	20 e0       	ldi	r18, 0x00	; 0
    3a20:	30 e0       	ldi	r19, 0x00	; 0
    3a22:	40 e8       	ldi	r20, 0x80	; 128
    3a24:	5f e3       	ldi	r21, 0x3F	; 63
    3a26:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    3a2a:	88 23       	and	r24, r24
    3a2c:	2c f4       	brge	.+10     	; 0x3a38 <zip+0x6d2>
		__ticks = 1;
    3a2e:	81 e0       	ldi	r24, 0x01	; 1
    3a30:	90 e0       	ldi	r25, 0x00	; 0
    3a32:	9a a3       	std	Y+34, r25	; 0x22
    3a34:	89 a3       	std	Y+33, r24	; 0x21
    3a36:	3f c0       	rjmp	.+126    	; 0x3ab6 <zip+0x750>
	else if (__tmp > 65535)
    3a38:	6b a1       	ldd	r22, Y+35	; 0x23
    3a3a:	7c a1       	ldd	r23, Y+36	; 0x24
    3a3c:	8d a1       	ldd	r24, Y+37	; 0x25
    3a3e:	9e a1       	ldd	r25, Y+38	; 0x26
    3a40:	20 e0       	ldi	r18, 0x00	; 0
    3a42:	3f ef       	ldi	r19, 0xFF	; 255
    3a44:	4f e7       	ldi	r20, 0x7F	; 127
    3a46:	57 e4       	ldi	r21, 0x47	; 71
    3a48:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3a4c:	18 16       	cp	r1, r24
    3a4e:	4c f5       	brge	.+82     	; 0x3aa2 <zip+0x73c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a50:	6f a1       	ldd	r22, Y+39	; 0x27
    3a52:	78 a5       	ldd	r23, Y+40	; 0x28
    3a54:	89 a5       	ldd	r24, Y+41	; 0x29
    3a56:	9a a5       	ldd	r25, Y+42	; 0x2a
    3a58:	20 e0       	ldi	r18, 0x00	; 0
    3a5a:	30 e0       	ldi	r19, 0x00	; 0
    3a5c:	40 e2       	ldi	r20, 0x20	; 32
    3a5e:	51 e4       	ldi	r21, 0x41	; 65
    3a60:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3a64:	dc 01       	movw	r26, r24
    3a66:	cb 01       	movw	r24, r22
    3a68:	bc 01       	movw	r22, r24
    3a6a:	cd 01       	movw	r24, r26
    3a6c:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3a70:	dc 01       	movw	r26, r24
    3a72:	cb 01       	movw	r24, r22
    3a74:	9a a3       	std	Y+34, r25	; 0x22
    3a76:	89 a3       	std	Y+33, r24	; 0x21
    3a78:	0f c0       	rjmp	.+30     	; 0x3a98 <zip+0x732>
    3a7a:	80 e9       	ldi	r24, 0x90	; 144
    3a7c:	91 e0       	ldi	r25, 0x01	; 1
    3a7e:	98 a3       	std	Y+32, r25	; 0x20
    3a80:	8f 8f       	std	Y+31, r24	; 0x1f
    3a82:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3a84:	98 a1       	ldd	r25, Y+32	; 0x20
    3a86:	01 97       	sbiw	r24, 0x01	; 1
    3a88:	f1 f7       	brne	.-4      	; 0x3a86 <zip+0x720>
    3a8a:	98 a3       	std	Y+32, r25	; 0x20
    3a8c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a8e:	89 a1       	ldd	r24, Y+33	; 0x21
    3a90:	9a a1       	ldd	r25, Y+34	; 0x22
    3a92:	01 97       	sbiw	r24, 0x01	; 1
    3a94:	9a a3       	std	Y+34, r25	; 0x22
    3a96:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a98:	89 a1       	ldd	r24, Y+33	; 0x21
    3a9a:	9a a1       	ldd	r25, Y+34	; 0x22
    3a9c:	00 97       	sbiw	r24, 0x00	; 0
    3a9e:	69 f7       	brne	.-38     	; 0x3a7a <zip+0x714>
    3aa0:	14 c0       	rjmp	.+40     	; 0x3aca <zip+0x764>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3aa2:	6b a1       	ldd	r22, Y+35	; 0x23
    3aa4:	7c a1       	ldd	r23, Y+36	; 0x24
    3aa6:	8d a1       	ldd	r24, Y+37	; 0x25
    3aa8:	9e a1       	ldd	r25, Y+38	; 0x26
    3aaa:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3aae:	dc 01       	movw	r26, r24
    3ab0:	cb 01       	movw	r24, r22
    3ab2:	9a a3       	std	Y+34, r25	; 0x22
    3ab4:	89 a3       	std	Y+33, r24	; 0x21
    3ab6:	89 a1       	ldd	r24, Y+33	; 0x21
    3ab8:	9a a1       	ldd	r25, Y+34	; 0x22
    3aba:	9e 8f       	std	Y+30, r25	; 0x1e
    3abc:	8d 8f       	std	Y+29, r24	; 0x1d
    3abe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3ac0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3ac2:	01 97       	sbiw	r24, 0x01	; 1
    3ac4:	f1 f7       	brne	.-4      	; 0x3ac2 <zip+0x75c>
    3ac6:	9e 8f       	std	Y+30, r25	; 0x1e
    3ac8:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x12; _delay_ms(1);
    3aca:	ec e2       	ldi	r30, 0x2C	; 44
    3acc:	f0 e0       	ldi	r31, 0x00	; 0
    3ace:	82 e1       	ldi	r24, 0x12	; 18
    3ad0:	80 83       	st	Z, r24
    3ad2:	80 e0       	ldi	r24, 0x00	; 0
    3ad4:	90 e0       	ldi	r25, 0x00	; 0
    3ad6:	a0 e8       	ldi	r26, 0x80	; 128
    3ad8:	bf e3       	ldi	r27, 0x3F	; 63
    3ada:	89 8f       	std	Y+25, r24	; 0x19
    3adc:	9a 8f       	std	Y+26, r25	; 0x1a
    3ade:	ab 8f       	std	Y+27, r26	; 0x1b
    3ae0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ae2:	69 8d       	ldd	r22, Y+25	; 0x19
    3ae4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ae6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ae8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3aea:	20 e0       	ldi	r18, 0x00	; 0
    3aec:	30 e0       	ldi	r19, 0x00	; 0
    3aee:	4a e7       	ldi	r20, 0x7A	; 122
    3af0:	55 e4       	ldi	r21, 0x45	; 69
    3af2:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3af6:	dc 01       	movw	r26, r24
    3af8:	cb 01       	movw	r24, r22
    3afa:	8d 8b       	std	Y+21, r24	; 0x15
    3afc:	9e 8b       	std	Y+22, r25	; 0x16
    3afe:	af 8b       	std	Y+23, r26	; 0x17
    3b00:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3b02:	6d 89       	ldd	r22, Y+21	; 0x15
    3b04:	7e 89       	ldd	r23, Y+22	; 0x16
    3b06:	8f 89       	ldd	r24, Y+23	; 0x17
    3b08:	98 8d       	ldd	r25, Y+24	; 0x18
    3b0a:	20 e0       	ldi	r18, 0x00	; 0
    3b0c:	30 e0       	ldi	r19, 0x00	; 0
    3b0e:	40 e8       	ldi	r20, 0x80	; 128
    3b10:	5f e3       	ldi	r21, 0x3F	; 63
    3b12:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    3b16:	88 23       	and	r24, r24
    3b18:	2c f4       	brge	.+10     	; 0x3b24 <zip+0x7be>
		__ticks = 1;
    3b1a:	81 e0       	ldi	r24, 0x01	; 1
    3b1c:	90 e0       	ldi	r25, 0x00	; 0
    3b1e:	9c 8b       	std	Y+20, r25	; 0x14
    3b20:	8b 8b       	std	Y+19, r24	; 0x13
    3b22:	3f c0       	rjmp	.+126    	; 0x3ba2 <zip+0x83c>
	else if (__tmp > 65535)
    3b24:	6d 89       	ldd	r22, Y+21	; 0x15
    3b26:	7e 89       	ldd	r23, Y+22	; 0x16
    3b28:	8f 89       	ldd	r24, Y+23	; 0x17
    3b2a:	98 8d       	ldd	r25, Y+24	; 0x18
    3b2c:	20 e0       	ldi	r18, 0x00	; 0
    3b2e:	3f ef       	ldi	r19, 0xFF	; 255
    3b30:	4f e7       	ldi	r20, 0x7F	; 127
    3b32:	57 e4       	ldi	r21, 0x47	; 71
    3b34:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3b38:	18 16       	cp	r1, r24
    3b3a:	4c f5       	brge	.+82     	; 0x3b8e <zip+0x828>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b3c:	69 8d       	ldd	r22, Y+25	; 0x19
    3b3e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3b40:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3b42:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3b44:	20 e0       	ldi	r18, 0x00	; 0
    3b46:	30 e0       	ldi	r19, 0x00	; 0
    3b48:	40 e2       	ldi	r20, 0x20	; 32
    3b4a:	51 e4       	ldi	r21, 0x41	; 65
    3b4c:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3b50:	dc 01       	movw	r26, r24
    3b52:	cb 01       	movw	r24, r22
    3b54:	bc 01       	movw	r22, r24
    3b56:	cd 01       	movw	r24, r26
    3b58:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3b5c:	dc 01       	movw	r26, r24
    3b5e:	cb 01       	movw	r24, r22
    3b60:	9c 8b       	std	Y+20, r25	; 0x14
    3b62:	8b 8b       	std	Y+19, r24	; 0x13
    3b64:	0f c0       	rjmp	.+30     	; 0x3b84 <zip+0x81e>
    3b66:	80 e9       	ldi	r24, 0x90	; 144
    3b68:	91 e0       	ldi	r25, 0x01	; 1
    3b6a:	9a 8b       	std	Y+18, r25	; 0x12
    3b6c:	89 8b       	std	Y+17, r24	; 0x11
    3b6e:	89 89       	ldd	r24, Y+17	; 0x11
    3b70:	9a 89       	ldd	r25, Y+18	; 0x12
    3b72:	01 97       	sbiw	r24, 0x01	; 1
    3b74:	f1 f7       	brne	.-4      	; 0x3b72 <zip+0x80c>
    3b76:	9a 8b       	std	Y+18, r25	; 0x12
    3b78:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b7a:	8b 89       	ldd	r24, Y+19	; 0x13
    3b7c:	9c 89       	ldd	r25, Y+20	; 0x14
    3b7e:	01 97       	sbiw	r24, 0x01	; 1
    3b80:	9c 8b       	std	Y+20, r25	; 0x14
    3b82:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b84:	8b 89       	ldd	r24, Y+19	; 0x13
    3b86:	9c 89       	ldd	r25, Y+20	; 0x14
    3b88:	00 97       	sbiw	r24, 0x00	; 0
    3b8a:	69 f7       	brne	.-38     	; 0x3b66 <zip+0x800>
    3b8c:	14 c0       	rjmp	.+40     	; 0x3bb6 <zip+0x850>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b8e:	6d 89       	ldd	r22, Y+21	; 0x15
    3b90:	7e 89       	ldd	r23, Y+22	; 0x16
    3b92:	8f 89       	ldd	r24, Y+23	; 0x17
    3b94:	98 8d       	ldd	r25, Y+24	; 0x18
    3b96:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3b9a:	dc 01       	movw	r26, r24
    3b9c:	cb 01       	movw	r24, r22
    3b9e:	9c 8b       	std	Y+20, r25	; 0x14
    3ba0:	8b 8b       	std	Y+19, r24	; 0x13
    3ba2:	8b 89       	ldd	r24, Y+19	; 0x13
    3ba4:	9c 89       	ldd	r25, Y+20	; 0x14
    3ba6:	98 8b       	std	Y+16, r25	; 0x10
    3ba8:	8f 87       	std	Y+15, r24	; 0x0f
    3baa:	8f 85       	ldd	r24, Y+15	; 0x0f
    3bac:	98 89       	ldd	r25, Y+16	; 0x10
    3bae:	01 97       	sbiw	r24, 0x01	; 1
    3bb0:	f1 f7       	brne	.-4      	; 0x3bae <zip+0x848>
    3bb2:	98 8b       	std	Y+16, r25	; 0x10
    3bb4:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x04; _delay_ms(1);
    3bb6:	ec e2       	ldi	r30, 0x2C	; 44
    3bb8:	f0 e0       	ldi	r31, 0x00	; 0
    3bba:	84 e0       	ldi	r24, 0x04	; 4
    3bbc:	80 83       	st	Z, r24
    3bbe:	80 e0       	ldi	r24, 0x00	; 0
    3bc0:	90 e0       	ldi	r25, 0x00	; 0
    3bc2:	a0 e8       	ldi	r26, 0x80	; 128
    3bc4:	bf e3       	ldi	r27, 0x3F	; 63
    3bc6:	8b 87       	std	Y+11, r24	; 0x0b
    3bc8:	9c 87       	std	Y+12, r25	; 0x0c
    3bca:	ad 87       	std	Y+13, r26	; 0x0d
    3bcc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bce:	6b 85       	ldd	r22, Y+11	; 0x0b
    3bd0:	7c 85       	ldd	r23, Y+12	; 0x0c
    3bd2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3bd4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3bd6:	20 e0       	ldi	r18, 0x00	; 0
    3bd8:	30 e0       	ldi	r19, 0x00	; 0
    3bda:	4a e7       	ldi	r20, 0x7A	; 122
    3bdc:	55 e4       	ldi	r21, 0x45	; 69
    3bde:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3be2:	dc 01       	movw	r26, r24
    3be4:	cb 01       	movw	r24, r22
    3be6:	8f 83       	std	Y+7, r24	; 0x07
    3be8:	98 87       	std	Y+8, r25	; 0x08
    3bea:	a9 87       	std	Y+9, r26	; 0x09
    3bec:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3bee:	6f 81       	ldd	r22, Y+7	; 0x07
    3bf0:	78 85       	ldd	r23, Y+8	; 0x08
    3bf2:	89 85       	ldd	r24, Y+9	; 0x09
    3bf4:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bf6:	20 e0       	ldi	r18, 0x00	; 0
    3bf8:	30 e0       	ldi	r19, 0x00	; 0
    3bfa:	40 e8       	ldi	r20, 0x80	; 128
    3bfc:	5f e3       	ldi	r21, 0x3F	; 63
    3bfe:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    3c02:	88 23       	and	r24, r24
    3c04:	2c f4       	brge	.+10     	; 0x3c10 <zip+0x8aa>
		__ticks = 1;
    3c06:	81 e0       	ldi	r24, 0x01	; 1
    3c08:	90 e0       	ldi	r25, 0x00	; 0
    3c0a:	9e 83       	std	Y+6, r25	; 0x06
    3c0c:	8d 83       	std	Y+5, r24	; 0x05
    3c0e:	3f c0       	rjmp	.+126    	; 0x3c8e <zip+0x928>
	else if (__tmp > 65535)
    3c10:	6f 81       	ldd	r22, Y+7	; 0x07
    3c12:	78 85       	ldd	r23, Y+8	; 0x08
    3c14:	89 85       	ldd	r24, Y+9	; 0x09
    3c16:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c18:	20 e0       	ldi	r18, 0x00	; 0
    3c1a:	3f ef       	ldi	r19, 0xFF	; 255
    3c1c:	4f e7       	ldi	r20, 0x7F	; 127
    3c1e:	57 e4       	ldi	r21, 0x47	; 71
    3c20:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3c24:	18 16       	cp	r1, r24
    3c26:	4c f5       	brge	.+82     	; 0x3c7a <zip+0x914>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c28:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c2a:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c2c:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c2e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c30:	20 e0       	ldi	r18, 0x00	; 0
    3c32:	30 e0       	ldi	r19, 0x00	; 0
    3c34:	40 e2       	ldi	r20, 0x20	; 32
    3c36:	51 e4       	ldi	r21, 0x41	; 65
    3c38:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3c3c:	dc 01       	movw	r26, r24
    3c3e:	cb 01       	movw	r24, r22
    3c40:	bc 01       	movw	r22, r24
    3c42:	cd 01       	movw	r24, r26
    3c44:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3c48:	dc 01       	movw	r26, r24
    3c4a:	cb 01       	movw	r24, r22
    3c4c:	9e 83       	std	Y+6, r25	; 0x06
    3c4e:	8d 83       	std	Y+5, r24	; 0x05
    3c50:	0f c0       	rjmp	.+30     	; 0x3c70 <zip+0x90a>
    3c52:	80 e9       	ldi	r24, 0x90	; 144
    3c54:	91 e0       	ldi	r25, 0x01	; 1
    3c56:	9c 83       	std	Y+4, r25	; 0x04
    3c58:	8b 83       	std	Y+3, r24	; 0x03
    3c5a:	8b 81       	ldd	r24, Y+3	; 0x03
    3c5c:	9c 81       	ldd	r25, Y+4	; 0x04
    3c5e:	01 97       	sbiw	r24, 0x01	; 1
    3c60:	f1 f7       	brne	.-4      	; 0x3c5e <zip+0x8f8>
    3c62:	9c 83       	std	Y+4, r25	; 0x04
    3c64:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c66:	8d 81       	ldd	r24, Y+5	; 0x05
    3c68:	9e 81       	ldd	r25, Y+6	; 0x06
    3c6a:	01 97       	sbiw	r24, 0x01	; 1
    3c6c:	9e 83       	std	Y+6, r25	; 0x06
    3c6e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c70:	8d 81       	ldd	r24, Y+5	; 0x05
    3c72:	9e 81       	ldd	r25, Y+6	; 0x06
    3c74:	00 97       	sbiw	r24, 0x00	; 0
    3c76:	69 f7       	brne	.-38     	; 0x3c52 <zip+0x8ec>
    3c78:	14 c0       	rjmp	.+40     	; 0x3ca2 <zip+0x93c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c7a:	6f 81       	ldd	r22, Y+7	; 0x07
    3c7c:	78 85       	ldd	r23, Y+8	; 0x08
    3c7e:	89 85       	ldd	r24, Y+9	; 0x09
    3c80:	9a 85       	ldd	r25, Y+10	; 0x0a
    3c82:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3c86:	dc 01       	movw	r26, r24
    3c88:	cb 01       	movw	r24, r22
    3c8a:	9e 83       	std	Y+6, r25	; 0x06
    3c8c:	8d 83       	std	Y+5, r24	; 0x05
    3c8e:	8d 81       	ldd	r24, Y+5	; 0x05
    3c90:	9e 81       	ldd	r25, Y+6	; 0x06
    3c92:	9a 83       	std	Y+2, r25	; 0x02
    3c94:	89 83       	std	Y+1, r24	; 0x01
    3c96:	89 81       	ldd	r24, Y+1	; 0x01
    3c98:	9a 81       	ldd	r25, Y+2	; 0x02
    3c9a:	01 97       	sbiw	r24, 0x01	; 1
    3c9c:	f1 f7       	brne	.-4      	; 0x3c9a <zip+0x934>
    3c9e:	9a 83       	std	Y+2, r25	; 0x02
    3ca0:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x36;
    3ca2:	ec e2       	ldi	r30, 0x2C	; 44
    3ca4:	f0 e0       	ldi	r31, 0x00	; 0
    3ca6:	86 e3       	ldi	r24, 0x36	; 54
    3ca8:	80 83       	st	Z, r24
}
    3caa:	c0 59       	subi	r28, 0x90	; 144
    3cac:	df 4f       	sbci	r29, 0xFF	; 255
    3cae:	0f b6       	in	r0, 0x3f	; 63
    3cb0:	f8 94       	cli
    3cb2:	de bf       	out	0x3e, r29	; 62
    3cb4:	0f be       	out	0x3f, r0	; 63
    3cb6:	cd bf       	out	0x3d, r28	; 61
    3cb8:	cf 91       	pop	r28
    3cba:	df 91       	pop	r29
    3cbc:	1f 91       	pop	r17
    3cbe:	0f 91       	pop	r16
    3cc0:	08 95       	ret

00003cc2 <uart0_init>:
 
void uart0_init(void) //camera 값 수신
{
    3cc2:	df 93       	push	r29
    3cc4:	cf 93       	push	r28
    3cc6:	cd b7       	in	r28, 0x3d	; 61
    3cc8:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
    3cca:	ea e2       	ldi	r30, 0x2A	; 42
    3ccc:	f0 e0       	ldi	r31, 0x00	; 0
    3cce:	10 82       	st	Z, r1
 UCSR0A = 0x00;
    3cd0:	eb e2       	ldi	r30, 0x2B	; 43
    3cd2:	f0 e0       	ldi	r31, 0x00	; 0
    3cd4:	10 82       	st	Z, r1
 UCSR0C = 0x06;
    3cd6:	e5 e9       	ldi	r30, 0x95	; 149
    3cd8:	f0 e0       	ldi	r31, 0x00	; 0
    3cda:	86 e0       	ldi	r24, 0x06	; 6
    3cdc:	80 83       	st	Z, r24
 UBRR0L = 0x19; //set baud rate 38400
    3cde:	e9 e2       	ldi	r30, 0x29	; 41
    3ce0:	f0 e0       	ldi	r31, 0x00	; 0
    3ce2:	89 e1       	ldi	r24, 0x19	; 25
    3ce4:	80 83       	st	Z, r24
 UBRR0H = 0x00; 
    3ce6:	e0 e9       	ldi	r30, 0x90	; 144
    3ce8:	f0 e0       	ldi	r31, 0x00	; 0
    3cea:	10 82       	st	Z, r1
 UCSR0B = 0b10011000; //수신만
    3cec:	ea e2       	ldi	r30, 0x2A	; 42
    3cee:	f0 e0       	ldi	r31, 0x00	; 0
    3cf0:	88 e9       	ldi	r24, 0x98	; 152
    3cf2:	80 83       	st	Z, r24
}
    3cf4:	cf 91       	pop	r28
    3cf6:	df 91       	pop	r29
    3cf8:	08 95       	ret

00003cfa <uart1_init>:
void uart1_init(void) //PC와 통신
{
    3cfa:	df 93       	push	r29
    3cfc:	cf 93       	push	r28
    3cfe:	cd b7       	in	r28, 0x3d	; 61
    3d00:	de b7       	in	r29, 0x3e	; 62
 UCSR1B = 0x00; //disable while setting baud rate
    3d02:	ea e9       	ldi	r30, 0x9A	; 154
    3d04:	f0 e0       	ldi	r31, 0x00	; 0
    3d06:	10 82       	st	Z, r1
 UCSR1A = 0x00;
    3d08:	eb e9       	ldi	r30, 0x9B	; 155
    3d0a:	f0 e0       	ldi	r31, 0x00	; 0
    3d0c:	10 82       	st	Z, r1
 UCSR1C = 0x06;
    3d0e:	ed e9       	ldi	r30, 0x9D	; 157
    3d10:	f0 e0       	ldi	r31, 0x00	; 0
    3d12:	86 e0       	ldi	r24, 0x06	; 6
    3d14:	80 83       	st	Z, r24
 UBRR1L = 0x08; //set baud rate 115200
    3d16:	e9 e9       	ldi	r30, 0x99	; 153
    3d18:	f0 e0       	ldi	r31, 0x00	; 0
    3d1a:	88 e0       	ldi	r24, 0x08	; 8
    3d1c:	80 83       	st	Z, r24
 UBRR1H = 0x00; 
    3d1e:	e8 e9       	ldi	r30, 0x98	; 152
    3d20:	f0 e0       	ldi	r31, 0x00	; 0
    3d22:	10 82       	st	Z, r1
 UCSR1B = 0b10011000; //송신 인터럽트 개방
    3d24:	ea e9       	ldi	r30, 0x9A	; 154
    3d26:	f0 e0       	ldi	r31, 0x00	; 0
    3d28:	88 e9       	ldi	r24, 0x98	; 152
    3d2a:	80 83       	st	Z, r24
}
    3d2c:	cf 91       	pop	r28
    3d2e:	df 91       	pop	r29
    3d30:	08 95       	ret

00003d32 <init_camera>:
 
void init_camera()
{
    3d32:	0f 93       	push	r16
    3d34:	1f 93       	push	r17
    3d36:	df 93       	push	r29
    3d38:	cf 93       	push	r28
    3d3a:	cd b7       	in	r28, 0x3d	; 61
    3d3c:	de b7       	in	r29, 0x3e	; 62
    3d3e:	c6 54       	subi	r28, 0x46	; 70
    3d40:	d0 40       	sbci	r29, 0x00	; 0
    3d42:	0f b6       	in	r0, 0x3f	; 63
    3d44:	f8 94       	cli
    3d46:	de bf       	out	0x3e, r29	; 62
    3d48:	0f be       	out	0x3f, r0	; 63
    3d4a:	cd bf       	out	0x3d, r28	; 61
 reset(); _delay_ms(1000);
    3d4c:	0e 94 aa 00 	call	0x154	; 0x154 <reset>
    3d50:	fe 01       	movw	r30, r28
    3d52:	ed 5b       	subi	r30, 0xBD	; 189
    3d54:	ff 4f       	sbci	r31, 0xFF	; 255
    3d56:	80 e0       	ldi	r24, 0x00	; 0
    3d58:	90 e0       	ldi	r25, 0x00	; 0
    3d5a:	aa e7       	ldi	r26, 0x7A	; 122
    3d5c:	b4 e4       	ldi	r27, 0x44	; 68
    3d5e:	80 83       	st	Z, r24
    3d60:	91 83       	std	Z+1, r25	; 0x01
    3d62:	a2 83       	std	Z+2, r26	; 0x02
    3d64:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d66:	8e 01       	movw	r16, r28
    3d68:	01 5c       	subi	r16, 0xC1	; 193
    3d6a:	1f 4f       	sbci	r17, 0xFF	; 255
    3d6c:	fe 01       	movw	r30, r28
    3d6e:	ed 5b       	subi	r30, 0xBD	; 189
    3d70:	ff 4f       	sbci	r31, 0xFF	; 255
    3d72:	60 81       	ld	r22, Z
    3d74:	71 81       	ldd	r23, Z+1	; 0x01
    3d76:	82 81       	ldd	r24, Z+2	; 0x02
    3d78:	93 81       	ldd	r25, Z+3	; 0x03
    3d7a:	20 e0       	ldi	r18, 0x00	; 0
    3d7c:	30 e0       	ldi	r19, 0x00	; 0
    3d7e:	4a e7       	ldi	r20, 0x7A	; 122
    3d80:	55 e4       	ldi	r21, 0x45	; 69
    3d82:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3d86:	dc 01       	movw	r26, r24
    3d88:	cb 01       	movw	r24, r22
    3d8a:	f8 01       	movw	r30, r16
    3d8c:	80 83       	st	Z, r24
    3d8e:	91 83       	std	Z+1, r25	; 0x01
    3d90:	a2 83       	std	Z+2, r26	; 0x02
    3d92:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3d94:	fe 01       	movw	r30, r28
    3d96:	ff 96       	adiw	r30, 0x3f	; 63
    3d98:	60 81       	ld	r22, Z
    3d9a:	71 81       	ldd	r23, Z+1	; 0x01
    3d9c:	82 81       	ldd	r24, Z+2	; 0x02
    3d9e:	93 81       	ldd	r25, Z+3	; 0x03
    3da0:	20 e0       	ldi	r18, 0x00	; 0
    3da2:	30 e0       	ldi	r19, 0x00	; 0
    3da4:	40 e8       	ldi	r20, 0x80	; 128
    3da6:	5f e3       	ldi	r21, 0x3F	; 63
    3da8:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    3dac:	88 23       	and	r24, r24
    3dae:	2c f4       	brge	.+10     	; 0x3dba <init_camera+0x88>
		__ticks = 1;
    3db0:	81 e0       	ldi	r24, 0x01	; 1
    3db2:	90 e0       	ldi	r25, 0x00	; 0
    3db4:	9e af       	std	Y+62, r25	; 0x3e
    3db6:	8d af       	std	Y+61, r24	; 0x3d
    3db8:	46 c0       	rjmp	.+140    	; 0x3e46 <init_camera+0x114>
	else if (__tmp > 65535)
    3dba:	fe 01       	movw	r30, r28
    3dbc:	ff 96       	adiw	r30, 0x3f	; 63
    3dbe:	60 81       	ld	r22, Z
    3dc0:	71 81       	ldd	r23, Z+1	; 0x01
    3dc2:	82 81       	ldd	r24, Z+2	; 0x02
    3dc4:	93 81       	ldd	r25, Z+3	; 0x03
    3dc6:	20 e0       	ldi	r18, 0x00	; 0
    3dc8:	3f ef       	ldi	r19, 0xFF	; 255
    3dca:	4f e7       	ldi	r20, 0x7F	; 127
    3dcc:	57 e4       	ldi	r21, 0x47	; 71
    3dce:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3dd2:	18 16       	cp	r1, r24
    3dd4:	64 f5       	brge	.+88     	; 0x3e2e <init_camera+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3dd6:	fe 01       	movw	r30, r28
    3dd8:	ed 5b       	subi	r30, 0xBD	; 189
    3dda:	ff 4f       	sbci	r31, 0xFF	; 255
    3ddc:	60 81       	ld	r22, Z
    3dde:	71 81       	ldd	r23, Z+1	; 0x01
    3de0:	82 81       	ldd	r24, Z+2	; 0x02
    3de2:	93 81       	ldd	r25, Z+3	; 0x03
    3de4:	20 e0       	ldi	r18, 0x00	; 0
    3de6:	30 e0       	ldi	r19, 0x00	; 0
    3de8:	40 e2       	ldi	r20, 0x20	; 32
    3dea:	51 e4       	ldi	r21, 0x41	; 65
    3dec:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3df0:	dc 01       	movw	r26, r24
    3df2:	cb 01       	movw	r24, r22
    3df4:	bc 01       	movw	r22, r24
    3df6:	cd 01       	movw	r24, r26
    3df8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3dfc:	dc 01       	movw	r26, r24
    3dfe:	cb 01       	movw	r24, r22
    3e00:	9e af       	std	Y+62, r25	; 0x3e
    3e02:	8d af       	std	Y+61, r24	; 0x3d
    3e04:	0f c0       	rjmp	.+30     	; 0x3e24 <init_camera+0xf2>
    3e06:	80 e9       	ldi	r24, 0x90	; 144
    3e08:	91 e0       	ldi	r25, 0x01	; 1
    3e0a:	9c af       	std	Y+60, r25	; 0x3c
    3e0c:	8b af       	std	Y+59, r24	; 0x3b
    3e0e:	8b ad       	ldd	r24, Y+59	; 0x3b
    3e10:	9c ad       	ldd	r25, Y+60	; 0x3c
    3e12:	01 97       	sbiw	r24, 0x01	; 1
    3e14:	f1 f7       	brne	.-4      	; 0x3e12 <init_camera+0xe0>
    3e16:	9c af       	std	Y+60, r25	; 0x3c
    3e18:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e1a:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e1c:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e1e:	01 97       	sbiw	r24, 0x01	; 1
    3e20:	9e af       	std	Y+62, r25	; 0x3e
    3e22:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3e24:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e26:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e28:	00 97       	sbiw	r24, 0x00	; 0
    3e2a:	69 f7       	brne	.-38     	; 0x3e06 <init_camera+0xd4>
    3e2c:	16 c0       	rjmp	.+44     	; 0x3e5a <init_camera+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3e2e:	fe 01       	movw	r30, r28
    3e30:	ff 96       	adiw	r30, 0x3f	; 63
    3e32:	60 81       	ld	r22, Z
    3e34:	71 81       	ldd	r23, Z+1	; 0x01
    3e36:	82 81       	ldd	r24, Z+2	; 0x02
    3e38:	93 81       	ldd	r25, Z+3	; 0x03
    3e3a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3e3e:	dc 01       	movw	r26, r24
    3e40:	cb 01       	movw	r24, r22
    3e42:	9e af       	std	Y+62, r25	; 0x3e
    3e44:	8d af       	std	Y+61, r24	; 0x3d
    3e46:	8d ad       	ldd	r24, Y+61	; 0x3d
    3e48:	9e ad       	ldd	r25, Y+62	; 0x3e
    3e4a:	9a af       	std	Y+58, r25	; 0x3a
    3e4c:	89 af       	std	Y+57, r24	; 0x39
    3e4e:	89 ad       	ldd	r24, Y+57	; 0x39
    3e50:	9a ad       	ldd	r25, Y+58	; 0x3a
    3e52:	01 97       	sbiw	r24, 0x01	; 1
    3e54:	f1 f7       	brne	.-4      	; 0x3e52 <init_camera+0x120>
    3e56:	9a af       	std	Y+58, r25	; 0x3a
    3e58:	89 af       	std	Y+57, r24	; 0x39
 resize(); _delay_ms(50);
    3e5a:	0e 94 2d 02 	call	0x45a	; 0x45a <resize>
    3e5e:	80 e0       	ldi	r24, 0x00	; 0
    3e60:	90 e0       	ldi	r25, 0x00	; 0
    3e62:	a8 e4       	ldi	r26, 0x48	; 72
    3e64:	b2 e4       	ldi	r27, 0x42	; 66
    3e66:	8d ab       	std	Y+53, r24	; 0x35
    3e68:	9e ab       	std	Y+54, r25	; 0x36
    3e6a:	af ab       	std	Y+55, r26	; 0x37
    3e6c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e6e:	6d a9       	ldd	r22, Y+53	; 0x35
    3e70:	7e a9       	ldd	r23, Y+54	; 0x36
    3e72:	8f a9       	ldd	r24, Y+55	; 0x37
    3e74:	98 ad       	ldd	r25, Y+56	; 0x38
    3e76:	20 e0       	ldi	r18, 0x00	; 0
    3e78:	30 e0       	ldi	r19, 0x00	; 0
    3e7a:	4a e7       	ldi	r20, 0x7A	; 122
    3e7c:	55 e4       	ldi	r21, 0x45	; 69
    3e7e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3e82:	dc 01       	movw	r26, r24
    3e84:	cb 01       	movw	r24, r22
    3e86:	89 ab       	std	Y+49, r24	; 0x31
    3e88:	9a ab       	std	Y+50, r25	; 0x32
    3e8a:	ab ab       	std	Y+51, r26	; 0x33
    3e8c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3e8e:	69 a9       	ldd	r22, Y+49	; 0x31
    3e90:	7a a9       	ldd	r23, Y+50	; 0x32
    3e92:	8b a9       	ldd	r24, Y+51	; 0x33
    3e94:	9c a9       	ldd	r25, Y+52	; 0x34
    3e96:	20 e0       	ldi	r18, 0x00	; 0
    3e98:	30 e0       	ldi	r19, 0x00	; 0
    3e9a:	40 e8       	ldi	r20, 0x80	; 128
    3e9c:	5f e3       	ldi	r21, 0x3F	; 63
    3e9e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    3ea2:	88 23       	and	r24, r24
    3ea4:	2c f4       	brge	.+10     	; 0x3eb0 <init_camera+0x17e>
		__ticks = 1;
    3ea6:	81 e0       	ldi	r24, 0x01	; 1
    3ea8:	90 e0       	ldi	r25, 0x00	; 0
    3eaa:	98 ab       	std	Y+48, r25	; 0x30
    3eac:	8f a7       	std	Y+47, r24	; 0x2f
    3eae:	3f c0       	rjmp	.+126    	; 0x3f2e <init_camera+0x1fc>
	else if (__tmp > 65535)
    3eb0:	69 a9       	ldd	r22, Y+49	; 0x31
    3eb2:	7a a9       	ldd	r23, Y+50	; 0x32
    3eb4:	8b a9       	ldd	r24, Y+51	; 0x33
    3eb6:	9c a9       	ldd	r25, Y+52	; 0x34
    3eb8:	20 e0       	ldi	r18, 0x00	; 0
    3eba:	3f ef       	ldi	r19, 0xFF	; 255
    3ebc:	4f e7       	ldi	r20, 0x7F	; 127
    3ebe:	57 e4       	ldi	r21, 0x47	; 71
    3ec0:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3ec4:	18 16       	cp	r1, r24
    3ec6:	4c f5       	brge	.+82     	; 0x3f1a <init_camera+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ec8:	6d a9       	ldd	r22, Y+53	; 0x35
    3eca:	7e a9       	ldd	r23, Y+54	; 0x36
    3ecc:	8f a9       	ldd	r24, Y+55	; 0x37
    3ece:	98 ad       	ldd	r25, Y+56	; 0x38
    3ed0:	20 e0       	ldi	r18, 0x00	; 0
    3ed2:	30 e0       	ldi	r19, 0x00	; 0
    3ed4:	40 e2       	ldi	r20, 0x20	; 32
    3ed6:	51 e4       	ldi	r21, 0x41	; 65
    3ed8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3edc:	dc 01       	movw	r26, r24
    3ede:	cb 01       	movw	r24, r22
    3ee0:	bc 01       	movw	r22, r24
    3ee2:	cd 01       	movw	r24, r26
    3ee4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3ee8:	dc 01       	movw	r26, r24
    3eea:	cb 01       	movw	r24, r22
    3eec:	98 ab       	std	Y+48, r25	; 0x30
    3eee:	8f a7       	std	Y+47, r24	; 0x2f
    3ef0:	0f c0       	rjmp	.+30     	; 0x3f10 <init_camera+0x1de>
    3ef2:	80 e9       	ldi	r24, 0x90	; 144
    3ef4:	91 e0       	ldi	r25, 0x01	; 1
    3ef6:	9e a7       	std	Y+46, r25	; 0x2e
    3ef8:	8d a7       	std	Y+45, r24	; 0x2d
    3efa:	8d a5       	ldd	r24, Y+45	; 0x2d
    3efc:	9e a5       	ldd	r25, Y+46	; 0x2e
    3efe:	01 97       	sbiw	r24, 0x01	; 1
    3f00:	f1 f7       	brne	.-4      	; 0x3efe <init_camera+0x1cc>
    3f02:	9e a7       	std	Y+46, r25	; 0x2e
    3f04:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f06:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f08:	98 a9       	ldd	r25, Y+48	; 0x30
    3f0a:	01 97       	sbiw	r24, 0x01	; 1
    3f0c:	98 ab       	std	Y+48, r25	; 0x30
    3f0e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f10:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f12:	98 a9       	ldd	r25, Y+48	; 0x30
    3f14:	00 97       	sbiw	r24, 0x00	; 0
    3f16:	69 f7       	brne	.-38     	; 0x3ef2 <init_camera+0x1c0>
    3f18:	14 c0       	rjmp	.+40     	; 0x3f42 <init_camera+0x210>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f1a:	69 a9       	ldd	r22, Y+49	; 0x31
    3f1c:	7a a9       	ldd	r23, Y+50	; 0x32
    3f1e:	8b a9       	ldd	r24, Y+51	; 0x33
    3f20:	9c a9       	ldd	r25, Y+52	; 0x34
    3f22:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3f26:	dc 01       	movw	r26, r24
    3f28:	cb 01       	movw	r24, r22
    3f2a:	98 ab       	std	Y+48, r25	; 0x30
    3f2c:	8f a7       	std	Y+47, r24	; 0x2f
    3f2e:	8f a5       	ldd	r24, Y+47	; 0x2f
    3f30:	98 a9       	ldd	r25, Y+48	; 0x30
    3f32:	9c a7       	std	Y+44, r25	; 0x2c
    3f34:	8b a7       	std	Y+43, r24	; 0x2b
    3f36:	8b a5       	ldd	r24, Y+43	; 0x2b
    3f38:	9c a5       	ldd	r25, Y+44	; 0x2c
    3f3a:	01 97       	sbiw	r24, 0x01	; 1
    3f3c:	f1 f7       	brne	.-4      	; 0x3f3a <init_camera+0x208>
    3f3e:	9c a7       	std	Y+44, r25	; 0x2c
    3f40:	8b a7       	std	Y+43, r24	; 0x2b
 zip(); _delay_ms(50);
    3f42:	0e 94 b3 19 	call	0x3366	; 0x3366 <zip>
    3f46:	80 e0       	ldi	r24, 0x00	; 0
    3f48:	90 e0       	ldi	r25, 0x00	; 0
    3f4a:	a8 e4       	ldi	r26, 0x48	; 72
    3f4c:	b2 e4       	ldi	r27, 0x42	; 66
    3f4e:	8f a3       	std	Y+39, r24	; 0x27
    3f50:	98 a7       	std	Y+40, r25	; 0x28
    3f52:	a9 a7       	std	Y+41, r26	; 0x29
    3f54:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f56:	6f a1       	ldd	r22, Y+39	; 0x27
    3f58:	78 a5       	ldd	r23, Y+40	; 0x28
    3f5a:	89 a5       	ldd	r24, Y+41	; 0x29
    3f5c:	9a a5       	ldd	r25, Y+42	; 0x2a
    3f5e:	20 e0       	ldi	r18, 0x00	; 0
    3f60:	30 e0       	ldi	r19, 0x00	; 0
    3f62:	4a e7       	ldi	r20, 0x7A	; 122
    3f64:	55 e4       	ldi	r21, 0x45	; 69
    3f66:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3f6a:	dc 01       	movw	r26, r24
    3f6c:	cb 01       	movw	r24, r22
    3f6e:	8b a3       	std	Y+35, r24	; 0x23
    3f70:	9c a3       	std	Y+36, r25	; 0x24
    3f72:	ad a3       	std	Y+37, r26	; 0x25
    3f74:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3f76:	6b a1       	ldd	r22, Y+35	; 0x23
    3f78:	7c a1       	ldd	r23, Y+36	; 0x24
    3f7a:	8d a1       	ldd	r24, Y+37	; 0x25
    3f7c:	9e a1       	ldd	r25, Y+38	; 0x26
    3f7e:	20 e0       	ldi	r18, 0x00	; 0
    3f80:	30 e0       	ldi	r19, 0x00	; 0
    3f82:	40 e8       	ldi	r20, 0x80	; 128
    3f84:	5f e3       	ldi	r21, 0x3F	; 63
    3f86:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    3f8a:	88 23       	and	r24, r24
    3f8c:	2c f4       	brge	.+10     	; 0x3f98 <init_camera+0x266>
		__ticks = 1;
    3f8e:	81 e0       	ldi	r24, 0x01	; 1
    3f90:	90 e0       	ldi	r25, 0x00	; 0
    3f92:	9a a3       	std	Y+34, r25	; 0x22
    3f94:	89 a3       	std	Y+33, r24	; 0x21
    3f96:	3f c0       	rjmp	.+126    	; 0x4016 <init_camera+0x2e4>
	else if (__tmp > 65535)
    3f98:	6b a1       	ldd	r22, Y+35	; 0x23
    3f9a:	7c a1       	ldd	r23, Y+36	; 0x24
    3f9c:	8d a1       	ldd	r24, Y+37	; 0x25
    3f9e:	9e a1       	ldd	r25, Y+38	; 0x26
    3fa0:	20 e0       	ldi	r18, 0x00	; 0
    3fa2:	3f ef       	ldi	r19, 0xFF	; 255
    3fa4:	4f e7       	ldi	r20, 0x7F	; 127
    3fa6:	57 e4       	ldi	r21, 0x47	; 71
    3fa8:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    3fac:	18 16       	cp	r1, r24
    3fae:	4c f5       	brge	.+82     	; 0x4002 <init_camera+0x2d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fb0:	6f a1       	ldd	r22, Y+39	; 0x27
    3fb2:	78 a5       	ldd	r23, Y+40	; 0x28
    3fb4:	89 a5       	ldd	r24, Y+41	; 0x29
    3fb6:	9a a5       	ldd	r25, Y+42	; 0x2a
    3fb8:	20 e0       	ldi	r18, 0x00	; 0
    3fba:	30 e0       	ldi	r19, 0x00	; 0
    3fbc:	40 e2       	ldi	r20, 0x20	; 32
    3fbe:	51 e4       	ldi	r21, 0x41	; 65
    3fc0:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    3fc4:	dc 01       	movw	r26, r24
    3fc6:	cb 01       	movw	r24, r22
    3fc8:	bc 01       	movw	r22, r24
    3fca:	cd 01       	movw	r24, r26
    3fcc:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    3fd0:	dc 01       	movw	r26, r24
    3fd2:	cb 01       	movw	r24, r22
    3fd4:	9a a3       	std	Y+34, r25	; 0x22
    3fd6:	89 a3       	std	Y+33, r24	; 0x21
    3fd8:	0f c0       	rjmp	.+30     	; 0x3ff8 <init_camera+0x2c6>
    3fda:	80 e9       	ldi	r24, 0x90	; 144
    3fdc:	91 e0       	ldi	r25, 0x01	; 1
    3fde:	98 a3       	std	Y+32, r25	; 0x20
    3fe0:	8f 8f       	std	Y+31, r24	; 0x1f
    3fe2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3fe4:	98 a1       	ldd	r25, Y+32	; 0x20
    3fe6:	01 97       	sbiw	r24, 0x01	; 1
    3fe8:	f1 f7       	brne	.-4      	; 0x3fe6 <init_camera+0x2b4>
    3fea:	98 a3       	std	Y+32, r25	; 0x20
    3fec:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fee:	89 a1       	ldd	r24, Y+33	; 0x21
    3ff0:	9a a1       	ldd	r25, Y+34	; 0x22
    3ff2:	01 97       	sbiw	r24, 0x01	; 1
    3ff4:	9a a3       	std	Y+34, r25	; 0x22
    3ff6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ff8:	89 a1       	ldd	r24, Y+33	; 0x21
    3ffa:	9a a1       	ldd	r25, Y+34	; 0x22
    3ffc:	00 97       	sbiw	r24, 0x00	; 0
    3ffe:	69 f7       	brne	.-38     	; 0x3fda <init_camera+0x2a8>
    4000:	14 c0       	rjmp	.+40     	; 0x402a <init_camera+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4002:	6b a1       	ldd	r22, Y+35	; 0x23
    4004:	7c a1       	ldd	r23, Y+36	; 0x24
    4006:	8d a1       	ldd	r24, Y+37	; 0x25
    4008:	9e a1       	ldd	r25, Y+38	; 0x26
    400a:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    400e:	dc 01       	movw	r26, r24
    4010:	cb 01       	movw	r24, r22
    4012:	9a a3       	std	Y+34, r25	; 0x22
    4014:	89 a3       	std	Y+33, r24	; 0x21
    4016:	89 a1       	ldd	r24, Y+33	; 0x21
    4018:	9a a1       	ldd	r25, Y+34	; 0x22
    401a:	9e 8f       	std	Y+30, r25	; 0x1e
    401c:	8d 8f       	std	Y+29, r24	; 0x1d
    401e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4020:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4022:	01 97       	sbiw	r24, 0x01	; 1
    4024:	f1 f7       	brne	.-4      	; 0x4022 <init_camera+0x2f0>
    4026:	9e 8f       	std	Y+30, r25	; 0x1e
    4028:	8d 8f       	std	Y+29, r24	; 0x1d
 set_rate(); _delay_ms(50);		//
    402a:	0e 94 da 06 	call	0xdb4	; 0xdb4 <set_rate>
    402e:	80 e0       	ldi	r24, 0x00	; 0
    4030:	90 e0       	ldi	r25, 0x00	; 0
    4032:	a8 e4       	ldi	r26, 0x48	; 72
    4034:	b2 e4       	ldi	r27, 0x42	; 66
    4036:	89 8f       	std	Y+25, r24	; 0x19
    4038:	9a 8f       	std	Y+26, r25	; 0x1a
    403a:	ab 8f       	std	Y+27, r26	; 0x1b
    403c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    403e:	69 8d       	ldd	r22, Y+25	; 0x19
    4040:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4042:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4044:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4046:	20 e0       	ldi	r18, 0x00	; 0
    4048:	30 e0       	ldi	r19, 0x00	; 0
    404a:	4a e7       	ldi	r20, 0x7A	; 122
    404c:	55 e4       	ldi	r21, 0x45	; 69
    404e:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    4052:	dc 01       	movw	r26, r24
    4054:	cb 01       	movw	r24, r22
    4056:	8d 8b       	std	Y+21, r24	; 0x15
    4058:	9e 8b       	std	Y+22, r25	; 0x16
    405a:	af 8b       	std	Y+23, r26	; 0x17
    405c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    405e:	6d 89       	ldd	r22, Y+21	; 0x15
    4060:	7e 89       	ldd	r23, Y+22	; 0x16
    4062:	8f 89       	ldd	r24, Y+23	; 0x17
    4064:	98 8d       	ldd	r25, Y+24	; 0x18
    4066:	20 e0       	ldi	r18, 0x00	; 0
    4068:	30 e0       	ldi	r19, 0x00	; 0
    406a:	40 e8       	ldi	r20, 0x80	; 128
    406c:	5f e3       	ldi	r21, 0x3F	; 63
    406e:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    4072:	88 23       	and	r24, r24
    4074:	2c f4       	brge	.+10     	; 0x4080 <init_camera+0x34e>
		__ticks = 1;
    4076:	81 e0       	ldi	r24, 0x01	; 1
    4078:	90 e0       	ldi	r25, 0x00	; 0
    407a:	9c 8b       	std	Y+20, r25	; 0x14
    407c:	8b 8b       	std	Y+19, r24	; 0x13
    407e:	3f c0       	rjmp	.+126    	; 0x40fe <init_camera+0x3cc>
	else if (__tmp > 65535)
    4080:	6d 89       	ldd	r22, Y+21	; 0x15
    4082:	7e 89       	ldd	r23, Y+22	; 0x16
    4084:	8f 89       	ldd	r24, Y+23	; 0x17
    4086:	98 8d       	ldd	r25, Y+24	; 0x18
    4088:	20 e0       	ldi	r18, 0x00	; 0
    408a:	3f ef       	ldi	r19, 0xFF	; 255
    408c:	4f e7       	ldi	r20, 0x7F	; 127
    408e:	57 e4       	ldi	r21, 0x47	; 71
    4090:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    4094:	18 16       	cp	r1, r24
    4096:	4c f5       	brge	.+82     	; 0x40ea <init_camera+0x3b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4098:	69 8d       	ldd	r22, Y+25	; 0x19
    409a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    409c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    409e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    40a0:	20 e0       	ldi	r18, 0x00	; 0
    40a2:	30 e0       	ldi	r19, 0x00	; 0
    40a4:	40 e2       	ldi	r20, 0x20	; 32
    40a6:	51 e4       	ldi	r21, 0x41	; 65
    40a8:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    40ac:	dc 01       	movw	r26, r24
    40ae:	cb 01       	movw	r24, r22
    40b0:	bc 01       	movw	r22, r24
    40b2:	cd 01       	movw	r24, r26
    40b4:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    40b8:	dc 01       	movw	r26, r24
    40ba:	cb 01       	movw	r24, r22
    40bc:	9c 8b       	std	Y+20, r25	; 0x14
    40be:	8b 8b       	std	Y+19, r24	; 0x13
    40c0:	0f c0       	rjmp	.+30     	; 0x40e0 <init_camera+0x3ae>
    40c2:	80 e9       	ldi	r24, 0x90	; 144
    40c4:	91 e0       	ldi	r25, 0x01	; 1
    40c6:	9a 8b       	std	Y+18, r25	; 0x12
    40c8:	89 8b       	std	Y+17, r24	; 0x11
    40ca:	89 89       	ldd	r24, Y+17	; 0x11
    40cc:	9a 89       	ldd	r25, Y+18	; 0x12
    40ce:	01 97       	sbiw	r24, 0x01	; 1
    40d0:	f1 f7       	brne	.-4      	; 0x40ce <init_camera+0x39c>
    40d2:	9a 8b       	std	Y+18, r25	; 0x12
    40d4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40d6:	8b 89       	ldd	r24, Y+19	; 0x13
    40d8:	9c 89       	ldd	r25, Y+20	; 0x14
    40da:	01 97       	sbiw	r24, 0x01	; 1
    40dc:	9c 8b       	std	Y+20, r25	; 0x14
    40de:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40e0:	8b 89       	ldd	r24, Y+19	; 0x13
    40e2:	9c 89       	ldd	r25, Y+20	; 0x14
    40e4:	00 97       	sbiw	r24, 0x00	; 0
    40e6:	69 f7       	brne	.-38     	; 0x40c2 <init_camera+0x390>
    40e8:	14 c0       	rjmp	.+40     	; 0x4112 <init_camera+0x3e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40ea:	6d 89       	ldd	r22, Y+21	; 0x15
    40ec:	7e 89       	ldd	r23, Y+22	; 0x16
    40ee:	8f 89       	ldd	r24, Y+23	; 0x17
    40f0:	98 8d       	ldd	r25, Y+24	; 0x18
    40f2:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    40f6:	dc 01       	movw	r26, r24
    40f8:	cb 01       	movw	r24, r22
    40fa:	9c 8b       	std	Y+20, r25	; 0x14
    40fc:	8b 8b       	std	Y+19, r24	; 0x13
    40fe:	8b 89       	ldd	r24, Y+19	; 0x13
    4100:	9c 89       	ldd	r25, Y+20	; 0x14
    4102:	98 8b       	std	Y+16, r25	; 0x10
    4104:	8f 87       	std	Y+15, r24	; 0x0f
    4106:	8f 85       	ldd	r24, Y+15	; 0x0f
    4108:	98 89       	ldd	r25, Y+16	; 0x10
    410a:	01 97       	sbiw	r24, 0x01	; 1
    410c:	f1 f7       	brne	.-4      	; 0x410a <init_camera+0x3d8>
    410e:	98 8b       	std	Y+16, r25	; 0x10
    4110:	8f 87       	std	Y+15, r24	; 0x0f
 UBRR0L = 0x08; printf("\r\n chang boudrate"); _delay_ms(50);
    4112:	e9 e2       	ldi	r30, 0x29	; 41
    4114:	f0 e0       	ldi	r31, 0x00	; 0
    4116:	88 e0       	ldi	r24, 0x08	; 8
    4118:	80 83       	st	Z, r24
    411a:	00 d0       	rcall	.+0      	; 0x411c <init_camera+0x3ea>
    411c:	ed b7       	in	r30, 0x3d	; 61
    411e:	fe b7       	in	r31, 0x3e	; 62
    4120:	31 96       	adiw	r30, 0x01	; 1
    4122:	84 e5       	ldi	r24, 0x54	; 84
    4124:	91 e0       	ldi	r25, 0x01	; 1
    4126:	91 83       	std	Z+1, r25	; 0x01
    4128:	80 83       	st	Z, r24
    412a:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
    412e:	0f 90       	pop	r0
    4130:	0f 90       	pop	r0
    4132:	80 e0       	ldi	r24, 0x00	; 0
    4134:	90 e0       	ldi	r25, 0x00	; 0
    4136:	a8 e4       	ldi	r26, 0x48	; 72
    4138:	b2 e4       	ldi	r27, 0x42	; 66
    413a:	8b 87       	std	Y+11, r24	; 0x0b
    413c:	9c 87       	std	Y+12, r25	; 0x0c
    413e:	ad 87       	std	Y+13, r26	; 0x0d
    4140:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4142:	6b 85       	ldd	r22, Y+11	; 0x0b
    4144:	7c 85       	ldd	r23, Y+12	; 0x0c
    4146:	8d 85       	ldd	r24, Y+13	; 0x0d
    4148:	9e 85       	ldd	r25, Y+14	; 0x0e
    414a:	20 e0       	ldi	r18, 0x00	; 0
    414c:	30 e0       	ldi	r19, 0x00	; 0
    414e:	4a e7       	ldi	r20, 0x7A	; 122
    4150:	55 e4       	ldi	r21, 0x45	; 69
    4152:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    4156:	dc 01       	movw	r26, r24
    4158:	cb 01       	movw	r24, r22
    415a:	8f 83       	std	Y+7, r24	; 0x07
    415c:	98 87       	std	Y+8, r25	; 0x08
    415e:	a9 87       	std	Y+9, r26	; 0x09
    4160:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4162:	6f 81       	ldd	r22, Y+7	; 0x07
    4164:	78 85       	ldd	r23, Y+8	; 0x08
    4166:	89 85       	ldd	r24, Y+9	; 0x09
    4168:	9a 85       	ldd	r25, Y+10	; 0x0a
    416a:	20 e0       	ldi	r18, 0x00	; 0
    416c:	30 e0       	ldi	r19, 0x00	; 0
    416e:	40 e8       	ldi	r20, 0x80	; 128
    4170:	5f e3       	ldi	r21, 0x3F	; 63
    4172:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    4176:	88 23       	and	r24, r24
    4178:	2c f4       	brge	.+10     	; 0x4184 <init_camera+0x452>
		__ticks = 1;
    417a:	81 e0       	ldi	r24, 0x01	; 1
    417c:	90 e0       	ldi	r25, 0x00	; 0
    417e:	9e 83       	std	Y+6, r25	; 0x06
    4180:	8d 83       	std	Y+5, r24	; 0x05
    4182:	3f c0       	rjmp	.+126    	; 0x4202 <init_camera+0x4d0>
	else if (__tmp > 65535)
    4184:	6f 81       	ldd	r22, Y+7	; 0x07
    4186:	78 85       	ldd	r23, Y+8	; 0x08
    4188:	89 85       	ldd	r24, Y+9	; 0x09
    418a:	9a 85       	ldd	r25, Y+10	; 0x0a
    418c:	20 e0       	ldi	r18, 0x00	; 0
    418e:	3f ef       	ldi	r19, 0xFF	; 255
    4190:	4f e7       	ldi	r20, 0x7F	; 127
    4192:	57 e4       	ldi	r21, 0x47	; 71
    4194:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    4198:	18 16       	cp	r1, r24
    419a:	4c f5       	brge	.+82     	; 0x41ee <init_camera+0x4bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    419c:	6b 85       	ldd	r22, Y+11	; 0x0b
    419e:	7c 85       	ldd	r23, Y+12	; 0x0c
    41a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    41a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    41a4:	20 e0       	ldi	r18, 0x00	; 0
    41a6:	30 e0       	ldi	r19, 0x00	; 0
    41a8:	40 e2       	ldi	r20, 0x20	; 32
    41aa:	51 e4       	ldi	r21, 0x41	; 65
    41ac:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    41b0:	dc 01       	movw	r26, r24
    41b2:	cb 01       	movw	r24, r22
    41b4:	bc 01       	movw	r22, r24
    41b6:	cd 01       	movw	r24, r26
    41b8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    41bc:	dc 01       	movw	r26, r24
    41be:	cb 01       	movw	r24, r22
    41c0:	9e 83       	std	Y+6, r25	; 0x06
    41c2:	8d 83       	std	Y+5, r24	; 0x05
    41c4:	0f c0       	rjmp	.+30     	; 0x41e4 <init_camera+0x4b2>
    41c6:	80 e9       	ldi	r24, 0x90	; 144
    41c8:	91 e0       	ldi	r25, 0x01	; 1
    41ca:	9c 83       	std	Y+4, r25	; 0x04
    41cc:	8b 83       	std	Y+3, r24	; 0x03
    41ce:	8b 81       	ldd	r24, Y+3	; 0x03
    41d0:	9c 81       	ldd	r25, Y+4	; 0x04
    41d2:	01 97       	sbiw	r24, 0x01	; 1
    41d4:	f1 f7       	brne	.-4      	; 0x41d2 <init_camera+0x4a0>
    41d6:	9c 83       	std	Y+4, r25	; 0x04
    41d8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    41da:	8d 81       	ldd	r24, Y+5	; 0x05
    41dc:	9e 81       	ldd	r25, Y+6	; 0x06
    41de:	01 97       	sbiw	r24, 0x01	; 1
    41e0:	9e 83       	std	Y+6, r25	; 0x06
    41e2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41e4:	8d 81       	ldd	r24, Y+5	; 0x05
    41e6:	9e 81       	ldd	r25, Y+6	; 0x06
    41e8:	00 97       	sbiw	r24, 0x00	; 0
    41ea:	69 f7       	brne	.-38     	; 0x41c6 <init_camera+0x494>
    41ec:	14 c0       	rjmp	.+40     	; 0x4216 <init_camera+0x4e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41ee:	6f 81       	ldd	r22, Y+7	; 0x07
    41f0:	78 85       	ldd	r23, Y+8	; 0x08
    41f2:	89 85       	ldd	r24, Y+9	; 0x09
    41f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    41f6:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    41fa:	dc 01       	movw	r26, r24
    41fc:	cb 01       	movw	r24, r22
    41fe:	9e 83       	std	Y+6, r25	; 0x06
    4200:	8d 83       	std	Y+5, r24	; 0x05
    4202:	8d 81       	ldd	r24, Y+5	; 0x05
    4204:	9e 81       	ldd	r25, Y+6	; 0x06
    4206:	9a 83       	std	Y+2, r25	; 0x02
    4208:	89 83       	std	Y+1, r24	; 0x01
    420a:	89 81       	ldd	r24, Y+1	; 0x01
    420c:	9a 81       	ldd	r25, Y+2	; 0x02
    420e:	01 97       	sbiw	r24, 0x01	; 1
    4210:	f1 f7       	brne	.-4      	; 0x420e <init_camera+0x4dc>
    4212:	9a 83       	std	Y+2, r25	; 0x02
    4214:	89 83       	std	Y+1, r24	; 0x01
 idle();
    4216:	0e 94 1a 0a 	call	0x1434	; 0x1434 <idle>
}
    421a:	ca 5b       	subi	r28, 0xBA	; 186
    421c:	df 4f       	sbci	r29, 0xFF	; 255
    421e:	0f b6       	in	r0, 0x3f	; 63
    4220:	f8 94       	cli
    4222:	de bf       	out	0x3e, r29	; 62
    4224:	0f be       	out	0x3f, r0	; 63
    4226:	cd bf       	out	0x3d, r28	; 61
    4228:	cf 91       	pop	r28
    422a:	df 91       	pop	r29
    422c:	1f 91       	pop	r17
    422e:	0f 91       	pop	r16
    4230:	08 95       	ret

00004232 <init_devices>:
 
void init_devices(void)
{
    4232:	df 93       	push	r29
    4234:	cf 93       	push	r28
    4236:	cd b7       	in	r28, 0x3d	; 61
    4238:	de b7       	in	r29, 0x3e	; 62
  cli(); //disable all interrupts
    423a:	f8 94       	cli
  port_init();
    423c:	0e 94 67 00 	call	0xce	; 0xce <port_init>
  uart0_init();  
    4240:	0e 94 61 1e 	call	0x3cc2	; 0x3cc2 <uart0_init>
  uart1_init();
    4244:	0e 94 7d 1e 	call	0x3cfa	; 0x3cfa <uart1_init>
  fdevopen(Putchar, Getchar);//file stream 0
    4248:	8e e6       	ldi	r24, 0x6E	; 110
    424a:	90 e0       	ldi	r25, 0x00	; 0
    424c:	24 e9       	ldi	r18, 0x94	; 148
    424e:	30 e0       	ldi	r19, 0x00	; 0
    4250:	b9 01       	movw	r22, r18
    4252:	0e 94 76 28 	call	0x50ec	; 0x50ec <fdevopen>
  sei(); 
    4256:	78 94       	sei
}
    4258:	cf 91       	pop	r28
    425a:	df 91       	pop	r29
    425c:	08 95       	ret

0000425e <shot_camera>:
 

void shot_camera()
{_delay_ms(50);
    425e:	df 93       	push	r29
    4260:	cf 93       	push	r28
    4262:	cd b7       	in	r28, 0x3d	; 61
    4264:	de b7       	in	r29, 0x3e	; 62
    4266:	2e 97       	sbiw	r28, 0x0e	; 14
    4268:	0f b6       	in	r0, 0x3f	; 63
    426a:	f8 94       	cli
    426c:	de bf       	out	0x3e, r29	; 62
    426e:	0f be       	out	0x3f, r0	; 63
    4270:	cd bf       	out	0x3d, r28	; 61
    4272:	80 e0       	ldi	r24, 0x00	; 0
    4274:	90 e0       	ldi	r25, 0x00	; 0
    4276:	a8 e4       	ldi	r26, 0x48	; 72
    4278:	b2 e4       	ldi	r27, 0x42	; 66
    427a:	8b 87       	std	Y+11, r24	; 0x0b
    427c:	9c 87       	std	Y+12, r25	; 0x0c
    427e:	ad 87       	std	Y+13, r26	; 0x0d
    4280:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4282:	6b 85       	ldd	r22, Y+11	; 0x0b
    4284:	7c 85       	ldd	r23, Y+12	; 0x0c
    4286:	8d 85       	ldd	r24, Y+13	; 0x0d
    4288:	9e 85       	ldd	r25, Y+14	; 0x0e
    428a:	20 e0       	ldi	r18, 0x00	; 0
    428c:	30 e0       	ldi	r19, 0x00	; 0
    428e:	4a e7       	ldi	r20, 0x7A	; 122
    4290:	55 e4       	ldi	r21, 0x45	; 69
    4292:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    4296:	dc 01       	movw	r26, r24
    4298:	cb 01       	movw	r24, r22
    429a:	8f 83       	std	Y+7, r24	; 0x07
    429c:	98 87       	std	Y+8, r25	; 0x08
    429e:	a9 87       	std	Y+9, r26	; 0x09
    42a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    42a2:	6f 81       	ldd	r22, Y+7	; 0x07
    42a4:	78 85       	ldd	r23, Y+8	; 0x08
    42a6:	89 85       	ldd	r24, Y+9	; 0x09
    42a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    42aa:	20 e0       	ldi	r18, 0x00	; 0
    42ac:	30 e0       	ldi	r19, 0x00	; 0
    42ae:	40 e8       	ldi	r20, 0x80	; 128
    42b0:	5f e3       	ldi	r21, 0x3F	; 63
    42b2:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__ltsf2>
    42b6:	88 23       	and	r24, r24
    42b8:	2c f4       	brge	.+10     	; 0x42c4 <shot_camera+0x66>
		__ticks = 1;
    42ba:	81 e0       	ldi	r24, 0x01	; 1
    42bc:	90 e0       	ldi	r25, 0x00	; 0
    42be:	9e 83       	std	Y+6, r25	; 0x06
    42c0:	8d 83       	std	Y+5, r24	; 0x05
    42c2:	3f c0       	rjmp	.+126    	; 0x4342 <shot_camera+0xe4>
	else if (__tmp > 65535)
    42c4:	6f 81       	ldd	r22, Y+7	; 0x07
    42c6:	78 85       	ldd	r23, Y+8	; 0x08
    42c8:	89 85       	ldd	r24, Y+9	; 0x09
    42ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    42cc:	20 e0       	ldi	r18, 0x00	; 0
    42ce:	3f ef       	ldi	r19, 0xFF	; 255
    42d0:	4f e7       	ldi	r20, 0x7F	; 127
    42d2:	57 e4       	ldi	r21, 0x47	; 71
    42d4:	0e 94 b5 25 	call	0x4b6a	; 0x4b6a <__gtsf2>
    42d8:	18 16       	cp	r1, r24
    42da:	4c f5       	brge	.+82     	; 0x432e <shot_camera+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    42de:	7c 85       	ldd	r23, Y+12	; 0x0c
    42e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    42e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    42e4:	20 e0       	ldi	r18, 0x00	; 0
    42e6:	30 e0       	ldi	r19, 0x00	; 0
    42e8:	40 e2       	ldi	r20, 0x20	; 32
    42ea:	51 e4       	ldi	r21, 0x41	; 65
    42ec:	0e 94 bb 24 	call	0x4976	; 0x4976 <__mulsf3>
    42f0:	dc 01       	movw	r26, r24
    42f2:	cb 01       	movw	r24, r22
    42f4:	bc 01       	movw	r22, r24
    42f6:	cd 01       	movw	r24, r26
    42f8:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    42fc:	dc 01       	movw	r26, r24
    42fe:	cb 01       	movw	r24, r22
    4300:	9e 83       	std	Y+6, r25	; 0x06
    4302:	8d 83       	std	Y+5, r24	; 0x05
    4304:	0f c0       	rjmp	.+30     	; 0x4324 <shot_camera+0xc6>
    4306:	80 e9       	ldi	r24, 0x90	; 144
    4308:	91 e0       	ldi	r25, 0x01	; 1
    430a:	9c 83       	std	Y+4, r25	; 0x04
    430c:	8b 83       	std	Y+3, r24	; 0x03
    430e:	8b 81       	ldd	r24, Y+3	; 0x03
    4310:	9c 81       	ldd	r25, Y+4	; 0x04
    4312:	01 97       	sbiw	r24, 0x01	; 1
    4314:	f1 f7       	brne	.-4      	; 0x4312 <shot_camera+0xb4>
    4316:	9c 83       	std	Y+4, r25	; 0x04
    4318:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    431a:	8d 81       	ldd	r24, Y+5	; 0x05
    431c:	9e 81       	ldd	r25, Y+6	; 0x06
    431e:	01 97       	sbiw	r24, 0x01	; 1
    4320:	9e 83       	std	Y+6, r25	; 0x06
    4322:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4324:	8d 81       	ldd	r24, Y+5	; 0x05
    4326:	9e 81       	ldd	r25, Y+6	; 0x06
    4328:	00 97       	sbiw	r24, 0x00	; 0
    432a:	69 f7       	brne	.-38     	; 0x4306 <shot_camera+0xa8>
    432c:	14 c0       	rjmp	.+40     	; 0x4356 <shot_camera+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    432e:	6f 81       	ldd	r22, Y+7	; 0x07
    4330:	78 85       	ldd	r23, Y+8	; 0x08
    4332:	89 85       	ldd	r24, Y+9	; 0x09
    4334:	9a 85       	ldd	r25, Y+10	; 0x0a
    4336:	0e 94 e5 22 	call	0x45ca	; 0x45ca <__fixunssfsi>
    433a:	dc 01       	movw	r26, r24
    433c:	cb 01       	movw	r24, r22
    433e:	9e 83       	std	Y+6, r25	; 0x06
    4340:	8d 83       	std	Y+5, r24	; 0x05
    4342:	8d 81       	ldd	r24, Y+5	; 0x05
    4344:	9e 81       	ldd	r25, Y+6	; 0x06
    4346:	9a 83       	std	Y+2, r25	; 0x02
    4348:	89 83       	std	Y+1, r24	; 0x01
    434a:	89 81       	ldd	r24, Y+1	; 0x01
    434c:	9a 81       	ldd	r25, Y+2	; 0x02
    434e:	01 97       	sbiw	r24, 0x01	; 1
    4350:	f1 f7       	brne	.-4      	; 0x434e <shot_camera+0xf0>
    4352:	9a 83       	std	Y+2, r25	; 0x02
    4354:	89 83       	std	Y+1, r24	; 0x01
 shot();  
    4356:	0e 94 14 0c 	call	0x1828	; 0x1828 <shot>
// call_size(); _delay_ms(50);
// call_img(); _delay_ms(100);
 idle(); 
    435a:	0e 94 1a 0a 	call	0x1434	; 0x1434 <idle>
} 
    435e:	2e 96       	adiw	r28, 0x0e	; 14
    4360:	0f b6       	in	r0, 0x3f	; 63
    4362:	f8 94       	cli
    4364:	de bf       	out	0x3e, r29	; 62
    4366:	0f be       	out	0x3f, r0	; 63
    4368:	cd bf       	out	0x3d, r28	; 61
    436a:	cf 91       	pop	r28
    436c:	df 91       	pop	r29
    436e:	08 95       	ret

00004370 <main>:
 
int main(void)
{
    4370:	df 93       	push	r29
    4372:	cf 93       	push	r28
    4374:	cd b7       	in	r28, 0x3d	; 61
    4376:	de b7       	in	r29, 0x3e	; 62
 init_devices();
    4378:	0e 94 19 21 	call	0x4232	; 0x4232 <init_devices>
 printf("\r\n\r\nConnect with 2560\r\n");
    437c:	86 e6       	ldi	r24, 0x66	; 102
    437e:	91 e0       	ldi	r25, 0x01	; 1
    4380:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <puts>
 init_camera();
    4384:	0e 94 99 1e 	call	0x3d32	; 0x3d32 <init_camera>
    4388:	ff cf       	rjmp	.-2      	; 0x4388 <main+0x18>

0000438a <__vector_18>:
 
 return 0;
}
 
ISR(USART0_RX_vect)
{  
    438a:	1f 92       	push	r1
    438c:	0f 92       	push	r0
    438e:	0f b6       	in	r0, 0x3f	; 63
    4390:	0f 92       	push	r0
    4392:	00 90 5b 00 	lds	r0, 0x005B
    4396:	0f 92       	push	r0
    4398:	11 24       	eor	r1, r1
    439a:	2f 93       	push	r18
    439c:	3f 93       	push	r19
    439e:	4f 93       	push	r20
    43a0:	5f 93       	push	r21
    43a2:	8f 93       	push	r24
    43a4:	9f 93       	push	r25
    43a6:	af 93       	push	r26
    43a8:	bf 93       	push	r27
    43aa:	ef 93       	push	r30
    43ac:	ff 93       	push	r31
    43ae:	df 93       	push	r29
    43b0:	cf 93       	push	r28
    43b2:	cd b7       	in	r28, 0x3d	; 61
    43b4:	de b7       	in	r29, 0x3e	; 62
 if(callflag==1)
    43b6:	80 91 c2 01 	lds	r24, 0x01C2
    43ba:	90 91 c3 01 	lds	r25, 0x01C3
    43be:	81 30       	cpi	r24, 0x01	; 1
    43c0:	91 05       	cpc	r25, r1
    43c2:	d9 f4       	brne	.+54     	; 0x43fa <__vector_18+0x70>
 {
 	buff[cnt]=UDR0;
    43c4:	40 91 ae 01 	lds	r20, 0x01AE
    43c8:	50 91 af 01 	lds	r21, 0x01AF
    43cc:	ec e2       	ldi	r30, 0x2C	; 44
    43ce:	f0 e0       	ldi	r31, 0x00	; 0
    43d0:	80 81       	ld	r24, Z
    43d2:	28 2f       	mov	r18, r24
    43d4:	30 e0       	ldi	r19, 0x00	; 0
    43d6:	ca 01       	movw	r24, r20
    43d8:	88 0f       	add	r24, r24
    43da:	99 1f       	adc	r25, r25
    43dc:	fc 01       	movw	r30, r24
    43de:	e0 55       	subi	r30, 0x50	; 80
    43e0:	fe 4f       	sbci	r31, 0xFE	; 254
    43e2:	31 83       	std	Z+1, r19	; 0x01
    43e4:	20 83       	st	Z, r18
	cnt++;
    43e6:	80 91 ae 01 	lds	r24, 0x01AE
    43ea:	90 91 af 01 	lds	r25, 0x01AF
    43ee:	01 96       	adiw	r24, 0x01	; 1
    43f0:	90 93 af 01 	sts	0x01AF, r25
    43f4:	80 93 ae 01 	sts	0x01AE, r24
    43f8:	06 c0       	rjmp	.+12     	; 0x4406 <__vector_18+0x7c>
 }
 else
 	UDR1=UDR0;
    43fa:	ec e9       	ldi	r30, 0x9C	; 156
    43fc:	f0 e0       	ldi	r31, 0x00	; 0
    43fe:	ac e2       	ldi	r26, 0x2C	; 44
    4400:	b0 e0       	ldi	r27, 0x00	; 0
    4402:	8c 91       	ld	r24, X
    4404:	80 83       	st	Z, r24
}
    4406:	cf 91       	pop	r28
    4408:	df 91       	pop	r29
    440a:	ff 91       	pop	r31
    440c:	ef 91       	pop	r30
    440e:	bf 91       	pop	r27
    4410:	af 91       	pop	r26
    4412:	9f 91       	pop	r25
    4414:	8f 91       	pop	r24
    4416:	5f 91       	pop	r21
    4418:	4f 91       	pop	r20
    441a:	3f 91       	pop	r19
    441c:	2f 91       	pop	r18
    441e:	0f 90       	pop	r0
    4420:	00 92 5b 00 	sts	0x005B, r0
    4424:	0f 90       	pop	r0
    4426:	0f be       	out	0x3f, r0	; 63
    4428:	0f 90       	pop	r0
    442a:	1f 90       	pop	r1
    442c:	18 95       	reti

0000442e <__vector_30>:
 
ISR(USART1_RX_vect)
{
    442e:	1f 92       	push	r1
    4430:	0f 92       	push	r0
    4432:	0f b6       	in	r0, 0x3f	; 63
    4434:	0f 92       	push	r0
    4436:	00 90 5b 00 	lds	r0, 0x005B
    443a:	0f 92       	push	r0
    443c:	11 24       	eor	r1, r1
    443e:	8f 92       	push	r8
    4440:	9f 92       	push	r9
    4442:	af 92       	push	r10
    4444:	bf 92       	push	r11
    4446:	cf 92       	push	r12
    4448:	df 92       	push	r13
    444a:	ef 92       	push	r14
    444c:	ff 92       	push	r15
    444e:	0f 93       	push	r16
    4450:	1f 93       	push	r17
    4452:	2f 93       	push	r18
    4454:	3f 93       	push	r19
    4456:	4f 93       	push	r20
    4458:	5f 93       	push	r21
    445a:	6f 93       	push	r22
    445c:	7f 93       	push	r23
    445e:	8f 93       	push	r24
    4460:	9f 93       	push	r25
    4462:	af 93       	push	r26
    4464:	bf 93       	push	r27
    4466:	ef 93       	push	r30
    4468:	ff 93       	push	r31
    446a:	df 93       	push	r29
    446c:	cf 93       	push	r28
    446e:	0f 92       	push	r0
    4470:	cd b7       	in	r28, 0x3d	; 61
    4472:	de b7       	in	r29, 0x3e	; 62
 char ch=UDR1;
    4474:	ec e9       	ldi	r30, 0x9C	; 156
    4476:	f0 e0       	ldi	r31, 0x00	; 0
    4478:	80 81       	ld	r24, Z
    447a:	89 83       	std	Y+1, r24	; 0x01
 if(ch=='l')
    447c:	89 81       	ldd	r24, Y+1	; 0x01
    447e:	8c 36       	cpi	r24, 0x6C	; 108
    4480:	31 f4       	brne	.+12     	; 0x448e <__vector_30+0x60>
 {
 	callflag=0;
    4482:	10 92 c3 01 	sts	0x01C3, r1
    4486:	10 92 c2 01 	sts	0x01C2, r1
   shot_camera();
    448a:	0e 94 2f 21 	call	0x425e	; 0x425e <shot_camera>
  }
 if(ch=='c')
    448e:	89 81       	ldd	r24, Y+1	; 0x01
    4490:	83 36       	cpi	r24, 0x63	; 99
    4492:	61 f4       	brne	.+24     	; 0x44ac <__vector_30+0x7e>
  {
  cnt=0;
    4494:	10 92 af 01 	sts	0x01AF, r1
    4498:	10 92 ae 01 	sts	0x01AE, r1
 	callflag=1;
    449c:	81 e0       	ldi	r24, 0x01	; 1
    449e:	90 e0       	ldi	r25, 0x00	; 0
    44a0:	90 93 c3 01 	sts	0x01C3, r25
    44a4:	80 93 c2 01 	sts	0x01C2, r24
  call_size();
    44a8:	0e 94 0d 0e 	call	0x1c1a	; 0x1c1a <call_size>
  
  }
 if(ch=='s')
    44ac:	89 81       	ldd	r24, Y+1	; 0x01
    44ae:	83 37       	cpi	r24, 0x73	; 115
    44b0:	31 f4       	brne	.+12     	; 0x44be <__vector_30+0x90>
  {
 	callflag=0;
    44b2:	10 92 c3 01 	sts	0x01C3, r1
    44b6:	10 92 c2 01 	sts	0x01C2, r1
  shot(); 
    44ba:	0e 94 14 0c 	call	0x1828	; 0x1828 <shot>
  }
 if(ch=='i')
    44be:	89 81       	ldd	r24, Y+1	; 0x01
    44c0:	89 36       	cpi	r24, 0x69	; 105
    44c2:	31 f4       	brne	.+12     	; 0x44d0 <__vector_30+0xa2>
  {
 	callflag=0;
    44c4:	10 92 c3 01 	sts	0x01C3, r1
    44c8:	10 92 c2 01 	sts	0x01C2, r1
  idle();
    44cc:	0e 94 1a 0a 	call	0x1434	; 0x1434 <idle>
  }
 if(ch=='k')
    44d0:	89 81       	ldd	r24, Y+1	; 0x01
    44d2:	8b 36       	cpi	r24, 0x6B	; 107
    44d4:	31 f4       	brne	.+12     	; 0x44e2 <__vector_30+0xb4>
  {
 	callflag=0;
    44d6:	10 92 c3 01 	sts	0x01C3, r1
    44da:	10 92 c2 01 	sts	0x01C2, r1
  call_img();
    44de:	0e 94 06 10 	call	0x200c	; 0x200c <call_img>
  }
 if(ch=='p')
    44e2:	89 81       	ldd	r24, Y+1	; 0x01
    44e4:	80 37       	cpi	r24, 0x70	; 112
    44e6:	09 f0       	breq	.+2      	; 0x44ea <__vector_30+0xbc>
    44e8:	4f c0       	rjmp	.+158    	; 0x4588 <__vector_30+0x15a>
  printf("size: %x %x %x %x %x %x %x %x %x ",buff[0],buff[1],buff[2],buff[3],buff[4],buff[5],buff[6],buff[7],buff[8]);
    44ea:	20 91 b0 01 	lds	r18, 0x01B0
    44ee:	30 91 b1 01 	lds	r19, 0x01B1
    44f2:	40 91 b2 01 	lds	r20, 0x01B2
    44f6:	50 91 b3 01 	lds	r21, 0x01B3
    44fa:	60 91 b4 01 	lds	r22, 0x01B4
    44fe:	70 91 b5 01 	lds	r23, 0x01B5
    4502:	a0 91 b6 01 	lds	r26, 0x01B6
    4506:	b0 91 b7 01 	lds	r27, 0x01B7
    450a:	00 91 b8 01 	lds	r16, 0x01B8
    450e:	10 91 b9 01 	lds	r17, 0x01B9
    4512:	e0 90 ba 01 	lds	r14, 0x01BA
    4516:	f0 90 bb 01 	lds	r15, 0x01BB
    451a:	c0 90 bc 01 	lds	r12, 0x01BC
    451e:	d0 90 bd 01 	lds	r13, 0x01BD
    4522:	a0 90 be 01 	lds	r10, 0x01BE
    4526:	b0 90 bf 01 	lds	r11, 0x01BF
    452a:	80 90 c0 01 	lds	r8, 0x01C0
    452e:	90 90 c1 01 	lds	r9, 0x01C1
    4532:	8d b7       	in	r24, 0x3d	; 61
    4534:	9e b7       	in	r25, 0x3e	; 62
    4536:	44 97       	sbiw	r24, 0x14	; 20
    4538:	0f b6       	in	r0, 0x3f	; 63
    453a:	f8 94       	cli
    453c:	9e bf       	out	0x3e, r25	; 62
    453e:	0f be       	out	0x3f, r0	; 63
    4540:	8d bf       	out	0x3d, r24	; 61
    4542:	ed b7       	in	r30, 0x3d	; 61
    4544:	fe b7       	in	r31, 0x3e	; 62
    4546:	31 96       	adiw	r30, 0x01	; 1
    4548:	8d e7       	ldi	r24, 0x7D	; 125
    454a:	91 e0       	ldi	r25, 0x01	; 1
    454c:	91 83       	std	Z+1, r25	; 0x01
    454e:	80 83       	st	Z, r24
    4550:	33 83       	std	Z+3, r19	; 0x03
    4552:	22 83       	std	Z+2, r18	; 0x02
    4554:	55 83       	std	Z+5, r21	; 0x05
    4556:	44 83       	std	Z+4, r20	; 0x04
    4558:	77 83       	std	Z+7, r23	; 0x07
    455a:	66 83       	std	Z+6, r22	; 0x06
    455c:	b1 87       	std	Z+9, r27	; 0x09
    455e:	a0 87       	std	Z+8, r26	; 0x08
    4560:	13 87       	std	Z+11, r17	; 0x0b
    4562:	02 87       	std	Z+10, r16	; 0x0a
    4564:	f5 86       	std	Z+13, r15	; 0x0d
    4566:	e4 86       	std	Z+12, r14	; 0x0c
    4568:	d7 86       	std	Z+15, r13	; 0x0f
    456a:	c6 86       	std	Z+14, r12	; 0x0e
    456c:	b1 8a       	std	Z+17, r11	; 0x11
    456e:	a0 8a       	std	Z+16, r10	; 0x10
    4570:	93 8a       	std	Z+19, r9	; 0x13
    4572:	82 8a       	std	Z+18, r8	; 0x12
    4574:	0e 94 c2 28 	call	0x5184	; 0x5184 <printf>
    4578:	8d b7       	in	r24, 0x3d	; 61
    457a:	9e b7       	in	r25, 0x3e	; 62
    457c:	44 96       	adiw	r24, 0x14	; 20
    457e:	0f b6       	in	r0, 0x3f	; 63
    4580:	f8 94       	cli
    4582:	9e bf       	out	0x3e, r25	; 62
    4584:	0f be       	out	0x3f, r0	; 63
    4586:	8d bf       	out	0x3d, r24	; 61
}
    4588:	0f 90       	pop	r0
    458a:	cf 91       	pop	r28
    458c:	df 91       	pop	r29
    458e:	ff 91       	pop	r31
    4590:	ef 91       	pop	r30
    4592:	bf 91       	pop	r27
    4594:	af 91       	pop	r26
    4596:	9f 91       	pop	r25
    4598:	8f 91       	pop	r24
    459a:	7f 91       	pop	r23
    459c:	6f 91       	pop	r22
    459e:	5f 91       	pop	r21
    45a0:	4f 91       	pop	r20
    45a2:	3f 91       	pop	r19
    45a4:	2f 91       	pop	r18
    45a6:	1f 91       	pop	r17
    45a8:	0f 91       	pop	r16
    45aa:	ff 90       	pop	r15
    45ac:	ef 90       	pop	r14
    45ae:	df 90       	pop	r13
    45b0:	cf 90       	pop	r12
    45b2:	bf 90       	pop	r11
    45b4:	af 90       	pop	r10
    45b6:	9f 90       	pop	r9
    45b8:	8f 90       	pop	r8
    45ba:	0f 90       	pop	r0
    45bc:	00 92 5b 00 	sts	0x005B, r0
    45c0:	0f 90       	pop	r0
    45c2:	0f be       	out	0x3f, r0	; 63
    45c4:	0f 90       	pop	r0
    45c6:	1f 90       	pop	r1
    45c8:	18 95       	reti

000045ca <__fixunssfsi>:
    45ca:	ef 92       	push	r14
    45cc:	ff 92       	push	r15
    45ce:	0f 93       	push	r16
    45d0:	1f 93       	push	r17
    45d2:	7b 01       	movw	r14, r22
    45d4:	8c 01       	movw	r16, r24
    45d6:	20 e0       	ldi	r18, 0x00	; 0
    45d8:	30 e0       	ldi	r19, 0x00	; 0
    45da:	40 e0       	ldi	r20, 0x00	; 0
    45dc:	5f e4       	ldi	r21, 0x4F	; 79
    45de:	0e 94 e5 25 	call	0x4bca	; 0x4bca <__gesf2>
    45e2:	88 23       	and	r24, r24
    45e4:	8c f0       	brlt	.+34     	; 0x4608 <__fixunssfsi+0x3e>
    45e6:	c8 01       	movw	r24, r16
    45e8:	b7 01       	movw	r22, r14
    45ea:	20 e0       	ldi	r18, 0x00	; 0
    45ec:	30 e0       	ldi	r19, 0x00	; 0
    45ee:	40 e0       	ldi	r20, 0x00	; 0
    45f0:	5f e4       	ldi	r21, 0x4F	; 79
    45f2:	0e 94 5d 24 	call	0x48ba	; 0x48ba <__subsf3>
    45f6:	0e 94 45 26 	call	0x4c8a	; 0x4c8a <__fixsfsi>
    45fa:	9b 01       	movw	r18, r22
    45fc:	ac 01       	movw	r20, r24
    45fe:	20 50       	subi	r18, 0x00	; 0
    4600:	30 40       	sbci	r19, 0x00	; 0
    4602:	40 40       	sbci	r20, 0x00	; 0
    4604:	50 48       	sbci	r21, 0x80	; 128
    4606:	06 c0       	rjmp	.+12     	; 0x4614 <__fixunssfsi+0x4a>
    4608:	c8 01       	movw	r24, r16
    460a:	b7 01       	movw	r22, r14
    460c:	0e 94 45 26 	call	0x4c8a	; 0x4c8a <__fixsfsi>
    4610:	9b 01       	movw	r18, r22
    4612:	ac 01       	movw	r20, r24
    4614:	b9 01       	movw	r22, r18
    4616:	ca 01       	movw	r24, r20
    4618:	1f 91       	pop	r17
    461a:	0f 91       	pop	r16
    461c:	ff 90       	pop	r15
    461e:	ef 90       	pop	r14
    4620:	08 95       	ret

00004622 <_fpadd_parts>:
    4622:	a0 e0       	ldi	r26, 0x00	; 0
    4624:	b0 e0       	ldi	r27, 0x00	; 0
    4626:	e7 e1       	ldi	r30, 0x17	; 23
    4628:	f3 e2       	ldi	r31, 0x23	; 35
    462a:	0c 94 3f 28 	jmp	0x507e	; 0x507e <__prologue_saves__>
    462e:	dc 01       	movw	r26, r24
    4630:	2b 01       	movw	r4, r22
    4632:	fa 01       	movw	r30, r20
    4634:	9c 91       	ld	r25, X
    4636:	92 30       	cpi	r25, 0x02	; 2
    4638:	08 f4       	brcc	.+2      	; 0x463c <_fpadd_parts+0x1a>
    463a:	39 c1       	rjmp	.+626    	; 0x48ae <_fpadd_parts+0x28c>
    463c:	eb 01       	movw	r28, r22
    463e:	88 81       	ld	r24, Y
    4640:	82 30       	cpi	r24, 0x02	; 2
    4642:	08 f4       	brcc	.+2      	; 0x4646 <_fpadd_parts+0x24>
    4644:	33 c1       	rjmp	.+614    	; 0x48ac <_fpadd_parts+0x28a>
    4646:	94 30       	cpi	r25, 0x04	; 4
    4648:	69 f4       	brne	.+26     	; 0x4664 <_fpadd_parts+0x42>
    464a:	84 30       	cpi	r24, 0x04	; 4
    464c:	09 f0       	breq	.+2      	; 0x4650 <_fpadd_parts+0x2e>
    464e:	2f c1       	rjmp	.+606    	; 0x48ae <_fpadd_parts+0x28c>
    4650:	11 96       	adiw	r26, 0x01	; 1
    4652:	9c 91       	ld	r25, X
    4654:	11 97       	sbiw	r26, 0x01	; 1
    4656:	89 81       	ldd	r24, Y+1	; 0x01
    4658:	98 17       	cp	r25, r24
    465a:	09 f4       	brne	.+2      	; 0x465e <_fpadd_parts+0x3c>
    465c:	28 c1       	rjmp	.+592    	; 0x48ae <_fpadd_parts+0x28c>
    465e:	af e9       	ldi	r26, 0x9F	; 159
    4660:	b1 e0       	ldi	r27, 0x01	; 1
    4662:	25 c1       	rjmp	.+586    	; 0x48ae <_fpadd_parts+0x28c>
    4664:	84 30       	cpi	r24, 0x04	; 4
    4666:	09 f4       	brne	.+2      	; 0x466a <_fpadd_parts+0x48>
    4668:	21 c1       	rjmp	.+578    	; 0x48ac <_fpadd_parts+0x28a>
    466a:	82 30       	cpi	r24, 0x02	; 2
    466c:	a9 f4       	brne	.+42     	; 0x4698 <_fpadd_parts+0x76>
    466e:	92 30       	cpi	r25, 0x02	; 2
    4670:	09 f0       	breq	.+2      	; 0x4674 <_fpadd_parts+0x52>
    4672:	1d c1       	rjmp	.+570    	; 0x48ae <_fpadd_parts+0x28c>
    4674:	9a 01       	movw	r18, r20
    4676:	ad 01       	movw	r20, r26
    4678:	88 e0       	ldi	r24, 0x08	; 8
    467a:	ea 01       	movw	r28, r20
    467c:	09 90       	ld	r0, Y+
    467e:	ae 01       	movw	r20, r28
    4680:	e9 01       	movw	r28, r18
    4682:	09 92       	st	Y+, r0
    4684:	9e 01       	movw	r18, r28
    4686:	81 50       	subi	r24, 0x01	; 1
    4688:	c1 f7       	brne	.-16     	; 0x467a <_fpadd_parts+0x58>
    468a:	e2 01       	movw	r28, r4
    468c:	89 81       	ldd	r24, Y+1	; 0x01
    468e:	11 96       	adiw	r26, 0x01	; 1
    4690:	9c 91       	ld	r25, X
    4692:	89 23       	and	r24, r25
    4694:	81 83       	std	Z+1, r24	; 0x01
    4696:	08 c1       	rjmp	.+528    	; 0x48a8 <_fpadd_parts+0x286>
    4698:	92 30       	cpi	r25, 0x02	; 2
    469a:	09 f4       	brne	.+2      	; 0x469e <_fpadd_parts+0x7c>
    469c:	07 c1       	rjmp	.+526    	; 0x48ac <_fpadd_parts+0x28a>
    469e:	12 96       	adiw	r26, 0x02	; 2
    46a0:	2d 90       	ld	r2, X+
    46a2:	3c 90       	ld	r3, X
    46a4:	13 97       	sbiw	r26, 0x03	; 3
    46a6:	eb 01       	movw	r28, r22
    46a8:	8a 81       	ldd	r24, Y+2	; 0x02
    46aa:	9b 81       	ldd	r25, Y+3	; 0x03
    46ac:	14 96       	adiw	r26, 0x04	; 4
    46ae:	ad 90       	ld	r10, X+
    46b0:	bd 90       	ld	r11, X+
    46b2:	cd 90       	ld	r12, X+
    46b4:	dc 90       	ld	r13, X
    46b6:	17 97       	sbiw	r26, 0x07	; 7
    46b8:	ec 80       	ldd	r14, Y+4	; 0x04
    46ba:	fd 80       	ldd	r15, Y+5	; 0x05
    46bc:	0e 81       	ldd	r16, Y+6	; 0x06
    46be:	1f 81       	ldd	r17, Y+7	; 0x07
    46c0:	91 01       	movw	r18, r2
    46c2:	28 1b       	sub	r18, r24
    46c4:	39 0b       	sbc	r19, r25
    46c6:	b9 01       	movw	r22, r18
    46c8:	37 ff       	sbrs	r19, 7
    46ca:	04 c0       	rjmp	.+8      	; 0x46d4 <_fpadd_parts+0xb2>
    46cc:	66 27       	eor	r22, r22
    46ce:	77 27       	eor	r23, r23
    46d0:	62 1b       	sub	r22, r18
    46d2:	73 0b       	sbc	r23, r19
    46d4:	60 32       	cpi	r22, 0x20	; 32
    46d6:	71 05       	cpc	r23, r1
    46d8:	0c f0       	brlt	.+2      	; 0x46dc <_fpadd_parts+0xba>
    46da:	61 c0       	rjmp	.+194    	; 0x479e <_fpadd_parts+0x17c>
    46dc:	12 16       	cp	r1, r18
    46de:	13 06       	cpc	r1, r19
    46e0:	6c f5       	brge	.+90     	; 0x473c <_fpadd_parts+0x11a>
    46e2:	37 01       	movw	r6, r14
    46e4:	48 01       	movw	r8, r16
    46e6:	06 2e       	mov	r0, r22
    46e8:	04 c0       	rjmp	.+8      	; 0x46f2 <_fpadd_parts+0xd0>
    46ea:	96 94       	lsr	r9
    46ec:	87 94       	ror	r8
    46ee:	77 94       	ror	r7
    46f0:	67 94       	ror	r6
    46f2:	0a 94       	dec	r0
    46f4:	d2 f7       	brpl	.-12     	; 0x46ea <_fpadd_parts+0xc8>
    46f6:	21 e0       	ldi	r18, 0x01	; 1
    46f8:	30 e0       	ldi	r19, 0x00	; 0
    46fa:	40 e0       	ldi	r20, 0x00	; 0
    46fc:	50 e0       	ldi	r21, 0x00	; 0
    46fe:	04 c0       	rjmp	.+8      	; 0x4708 <_fpadd_parts+0xe6>
    4700:	22 0f       	add	r18, r18
    4702:	33 1f       	adc	r19, r19
    4704:	44 1f       	adc	r20, r20
    4706:	55 1f       	adc	r21, r21
    4708:	6a 95       	dec	r22
    470a:	d2 f7       	brpl	.-12     	; 0x4700 <_fpadd_parts+0xde>
    470c:	21 50       	subi	r18, 0x01	; 1
    470e:	30 40       	sbci	r19, 0x00	; 0
    4710:	40 40       	sbci	r20, 0x00	; 0
    4712:	50 40       	sbci	r21, 0x00	; 0
    4714:	2e 21       	and	r18, r14
    4716:	3f 21       	and	r19, r15
    4718:	40 23       	and	r20, r16
    471a:	51 23       	and	r21, r17
    471c:	21 15       	cp	r18, r1
    471e:	31 05       	cpc	r19, r1
    4720:	41 05       	cpc	r20, r1
    4722:	51 05       	cpc	r21, r1
    4724:	21 f0       	breq	.+8      	; 0x472e <_fpadd_parts+0x10c>
    4726:	21 e0       	ldi	r18, 0x01	; 1
    4728:	30 e0       	ldi	r19, 0x00	; 0
    472a:	40 e0       	ldi	r20, 0x00	; 0
    472c:	50 e0       	ldi	r21, 0x00	; 0
    472e:	79 01       	movw	r14, r18
    4730:	8a 01       	movw	r16, r20
    4732:	e6 28       	or	r14, r6
    4734:	f7 28       	or	r15, r7
    4736:	08 29       	or	r16, r8
    4738:	19 29       	or	r17, r9
    473a:	3c c0       	rjmp	.+120    	; 0x47b4 <_fpadd_parts+0x192>
    473c:	23 2b       	or	r18, r19
    473e:	d1 f1       	breq	.+116    	; 0x47b4 <_fpadd_parts+0x192>
    4740:	26 0e       	add	r2, r22
    4742:	37 1e       	adc	r3, r23
    4744:	35 01       	movw	r6, r10
    4746:	46 01       	movw	r8, r12
    4748:	06 2e       	mov	r0, r22
    474a:	04 c0       	rjmp	.+8      	; 0x4754 <_fpadd_parts+0x132>
    474c:	96 94       	lsr	r9
    474e:	87 94       	ror	r8
    4750:	77 94       	ror	r7
    4752:	67 94       	ror	r6
    4754:	0a 94       	dec	r0
    4756:	d2 f7       	brpl	.-12     	; 0x474c <_fpadd_parts+0x12a>
    4758:	21 e0       	ldi	r18, 0x01	; 1
    475a:	30 e0       	ldi	r19, 0x00	; 0
    475c:	40 e0       	ldi	r20, 0x00	; 0
    475e:	50 e0       	ldi	r21, 0x00	; 0
    4760:	04 c0       	rjmp	.+8      	; 0x476a <_fpadd_parts+0x148>
    4762:	22 0f       	add	r18, r18
    4764:	33 1f       	adc	r19, r19
    4766:	44 1f       	adc	r20, r20
    4768:	55 1f       	adc	r21, r21
    476a:	6a 95       	dec	r22
    476c:	d2 f7       	brpl	.-12     	; 0x4762 <_fpadd_parts+0x140>
    476e:	21 50       	subi	r18, 0x01	; 1
    4770:	30 40       	sbci	r19, 0x00	; 0
    4772:	40 40       	sbci	r20, 0x00	; 0
    4774:	50 40       	sbci	r21, 0x00	; 0
    4776:	2a 21       	and	r18, r10
    4778:	3b 21       	and	r19, r11
    477a:	4c 21       	and	r20, r12
    477c:	5d 21       	and	r21, r13
    477e:	21 15       	cp	r18, r1
    4780:	31 05       	cpc	r19, r1
    4782:	41 05       	cpc	r20, r1
    4784:	51 05       	cpc	r21, r1
    4786:	21 f0       	breq	.+8      	; 0x4790 <_fpadd_parts+0x16e>
    4788:	21 e0       	ldi	r18, 0x01	; 1
    478a:	30 e0       	ldi	r19, 0x00	; 0
    478c:	40 e0       	ldi	r20, 0x00	; 0
    478e:	50 e0       	ldi	r21, 0x00	; 0
    4790:	59 01       	movw	r10, r18
    4792:	6a 01       	movw	r12, r20
    4794:	a6 28       	or	r10, r6
    4796:	b7 28       	or	r11, r7
    4798:	c8 28       	or	r12, r8
    479a:	d9 28       	or	r13, r9
    479c:	0b c0       	rjmp	.+22     	; 0x47b4 <_fpadd_parts+0x192>
    479e:	82 15       	cp	r24, r2
    47a0:	93 05       	cpc	r25, r3
    47a2:	2c f0       	brlt	.+10     	; 0x47ae <_fpadd_parts+0x18c>
    47a4:	1c 01       	movw	r2, r24
    47a6:	aa 24       	eor	r10, r10
    47a8:	bb 24       	eor	r11, r11
    47aa:	65 01       	movw	r12, r10
    47ac:	03 c0       	rjmp	.+6      	; 0x47b4 <_fpadd_parts+0x192>
    47ae:	ee 24       	eor	r14, r14
    47b0:	ff 24       	eor	r15, r15
    47b2:	87 01       	movw	r16, r14
    47b4:	11 96       	adiw	r26, 0x01	; 1
    47b6:	9c 91       	ld	r25, X
    47b8:	d2 01       	movw	r26, r4
    47ba:	11 96       	adiw	r26, 0x01	; 1
    47bc:	8c 91       	ld	r24, X
    47be:	98 17       	cp	r25, r24
    47c0:	09 f4       	brne	.+2      	; 0x47c4 <_fpadd_parts+0x1a2>
    47c2:	45 c0       	rjmp	.+138    	; 0x484e <_fpadd_parts+0x22c>
    47c4:	99 23       	and	r25, r25
    47c6:	39 f0       	breq	.+14     	; 0x47d6 <_fpadd_parts+0x1b4>
    47c8:	a8 01       	movw	r20, r16
    47ca:	97 01       	movw	r18, r14
    47cc:	2a 19       	sub	r18, r10
    47ce:	3b 09       	sbc	r19, r11
    47d0:	4c 09       	sbc	r20, r12
    47d2:	5d 09       	sbc	r21, r13
    47d4:	06 c0       	rjmp	.+12     	; 0x47e2 <_fpadd_parts+0x1c0>
    47d6:	a6 01       	movw	r20, r12
    47d8:	95 01       	movw	r18, r10
    47da:	2e 19       	sub	r18, r14
    47dc:	3f 09       	sbc	r19, r15
    47de:	40 0b       	sbc	r20, r16
    47e0:	51 0b       	sbc	r21, r17
    47e2:	57 fd       	sbrc	r21, 7
    47e4:	08 c0       	rjmp	.+16     	; 0x47f6 <_fpadd_parts+0x1d4>
    47e6:	11 82       	std	Z+1, r1	; 0x01
    47e8:	33 82       	std	Z+3, r3	; 0x03
    47ea:	22 82       	std	Z+2, r2	; 0x02
    47ec:	24 83       	std	Z+4, r18	; 0x04
    47ee:	35 83       	std	Z+5, r19	; 0x05
    47f0:	46 83       	std	Z+6, r20	; 0x06
    47f2:	57 83       	std	Z+7, r21	; 0x07
    47f4:	1d c0       	rjmp	.+58     	; 0x4830 <_fpadd_parts+0x20e>
    47f6:	81 e0       	ldi	r24, 0x01	; 1
    47f8:	81 83       	std	Z+1, r24	; 0x01
    47fa:	33 82       	std	Z+3, r3	; 0x03
    47fc:	22 82       	std	Z+2, r2	; 0x02
    47fe:	88 27       	eor	r24, r24
    4800:	99 27       	eor	r25, r25
    4802:	dc 01       	movw	r26, r24
    4804:	82 1b       	sub	r24, r18
    4806:	93 0b       	sbc	r25, r19
    4808:	a4 0b       	sbc	r26, r20
    480a:	b5 0b       	sbc	r27, r21
    480c:	84 83       	std	Z+4, r24	; 0x04
    480e:	95 83       	std	Z+5, r25	; 0x05
    4810:	a6 83       	std	Z+6, r26	; 0x06
    4812:	b7 83       	std	Z+7, r27	; 0x07
    4814:	0d c0       	rjmp	.+26     	; 0x4830 <_fpadd_parts+0x20e>
    4816:	22 0f       	add	r18, r18
    4818:	33 1f       	adc	r19, r19
    481a:	44 1f       	adc	r20, r20
    481c:	55 1f       	adc	r21, r21
    481e:	24 83       	std	Z+4, r18	; 0x04
    4820:	35 83       	std	Z+5, r19	; 0x05
    4822:	46 83       	std	Z+6, r20	; 0x06
    4824:	57 83       	std	Z+7, r21	; 0x07
    4826:	82 81       	ldd	r24, Z+2	; 0x02
    4828:	93 81       	ldd	r25, Z+3	; 0x03
    482a:	01 97       	sbiw	r24, 0x01	; 1
    482c:	93 83       	std	Z+3, r25	; 0x03
    482e:	82 83       	std	Z+2, r24	; 0x02
    4830:	24 81       	ldd	r18, Z+4	; 0x04
    4832:	35 81       	ldd	r19, Z+5	; 0x05
    4834:	46 81       	ldd	r20, Z+6	; 0x06
    4836:	57 81       	ldd	r21, Z+7	; 0x07
    4838:	da 01       	movw	r26, r20
    483a:	c9 01       	movw	r24, r18
    483c:	01 97       	sbiw	r24, 0x01	; 1
    483e:	a1 09       	sbc	r26, r1
    4840:	b1 09       	sbc	r27, r1
    4842:	8f 5f       	subi	r24, 0xFF	; 255
    4844:	9f 4f       	sbci	r25, 0xFF	; 255
    4846:	af 4f       	sbci	r26, 0xFF	; 255
    4848:	bf 43       	sbci	r27, 0x3F	; 63
    484a:	28 f3       	brcs	.-54     	; 0x4816 <_fpadd_parts+0x1f4>
    484c:	0b c0       	rjmp	.+22     	; 0x4864 <_fpadd_parts+0x242>
    484e:	91 83       	std	Z+1, r25	; 0x01
    4850:	33 82       	std	Z+3, r3	; 0x03
    4852:	22 82       	std	Z+2, r2	; 0x02
    4854:	ea 0c       	add	r14, r10
    4856:	fb 1c       	adc	r15, r11
    4858:	0c 1d       	adc	r16, r12
    485a:	1d 1d       	adc	r17, r13
    485c:	e4 82       	std	Z+4, r14	; 0x04
    485e:	f5 82       	std	Z+5, r15	; 0x05
    4860:	06 83       	std	Z+6, r16	; 0x06
    4862:	17 83       	std	Z+7, r17	; 0x07
    4864:	83 e0       	ldi	r24, 0x03	; 3
    4866:	80 83       	st	Z, r24
    4868:	24 81       	ldd	r18, Z+4	; 0x04
    486a:	35 81       	ldd	r19, Z+5	; 0x05
    486c:	46 81       	ldd	r20, Z+6	; 0x06
    486e:	57 81       	ldd	r21, Z+7	; 0x07
    4870:	57 ff       	sbrs	r21, 7
    4872:	1a c0       	rjmp	.+52     	; 0x48a8 <_fpadd_parts+0x286>
    4874:	c9 01       	movw	r24, r18
    4876:	aa 27       	eor	r26, r26
    4878:	97 fd       	sbrc	r25, 7
    487a:	a0 95       	com	r26
    487c:	ba 2f       	mov	r27, r26
    487e:	81 70       	andi	r24, 0x01	; 1
    4880:	90 70       	andi	r25, 0x00	; 0
    4882:	a0 70       	andi	r26, 0x00	; 0
    4884:	b0 70       	andi	r27, 0x00	; 0
    4886:	56 95       	lsr	r21
    4888:	47 95       	ror	r20
    488a:	37 95       	ror	r19
    488c:	27 95       	ror	r18
    488e:	82 2b       	or	r24, r18
    4890:	93 2b       	or	r25, r19
    4892:	a4 2b       	or	r26, r20
    4894:	b5 2b       	or	r27, r21
    4896:	84 83       	std	Z+4, r24	; 0x04
    4898:	95 83       	std	Z+5, r25	; 0x05
    489a:	a6 83       	std	Z+6, r26	; 0x06
    489c:	b7 83       	std	Z+7, r27	; 0x07
    489e:	82 81       	ldd	r24, Z+2	; 0x02
    48a0:	93 81       	ldd	r25, Z+3	; 0x03
    48a2:	01 96       	adiw	r24, 0x01	; 1
    48a4:	93 83       	std	Z+3, r25	; 0x03
    48a6:	82 83       	std	Z+2, r24	; 0x02
    48a8:	df 01       	movw	r26, r30
    48aa:	01 c0       	rjmp	.+2      	; 0x48ae <_fpadd_parts+0x28c>
    48ac:	d2 01       	movw	r26, r4
    48ae:	cd 01       	movw	r24, r26
    48b0:	cd b7       	in	r28, 0x3d	; 61
    48b2:	de b7       	in	r29, 0x3e	; 62
    48b4:	e2 e1       	ldi	r30, 0x12	; 18
    48b6:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__epilogue_restores__>

000048ba <__subsf3>:
    48ba:	a0 e2       	ldi	r26, 0x20	; 32
    48bc:	b0 e0       	ldi	r27, 0x00	; 0
    48be:	e3 e6       	ldi	r30, 0x63	; 99
    48c0:	f4 e2       	ldi	r31, 0x24	; 36
    48c2:	0c 94 4b 28 	jmp	0x5096	; 0x5096 <__prologue_saves__+0x18>
    48c6:	69 83       	std	Y+1, r22	; 0x01
    48c8:	7a 83       	std	Y+2, r23	; 0x02
    48ca:	8b 83       	std	Y+3, r24	; 0x03
    48cc:	9c 83       	std	Y+4, r25	; 0x04
    48ce:	2d 83       	std	Y+5, r18	; 0x05
    48d0:	3e 83       	std	Y+6, r19	; 0x06
    48d2:	4f 83       	std	Y+7, r20	; 0x07
    48d4:	58 87       	std	Y+8, r21	; 0x08
    48d6:	e9 e0       	ldi	r30, 0x09	; 9
    48d8:	ee 2e       	mov	r14, r30
    48da:	f1 2c       	mov	r15, r1
    48dc:	ec 0e       	add	r14, r28
    48de:	fd 1e       	adc	r15, r29
    48e0:	ce 01       	movw	r24, r28
    48e2:	01 96       	adiw	r24, 0x01	; 1
    48e4:	b7 01       	movw	r22, r14
    48e6:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    48ea:	8e 01       	movw	r16, r28
    48ec:	0f 5e       	subi	r16, 0xEF	; 239
    48ee:	1f 4f       	sbci	r17, 0xFF	; 255
    48f0:	ce 01       	movw	r24, r28
    48f2:	05 96       	adiw	r24, 0x05	; 5
    48f4:	b8 01       	movw	r22, r16
    48f6:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    48fa:	8a 89       	ldd	r24, Y+18	; 0x12
    48fc:	91 e0       	ldi	r25, 0x01	; 1
    48fe:	89 27       	eor	r24, r25
    4900:	8a 8b       	std	Y+18, r24	; 0x12
    4902:	c7 01       	movw	r24, r14
    4904:	b8 01       	movw	r22, r16
    4906:	ae 01       	movw	r20, r28
    4908:	47 5e       	subi	r20, 0xE7	; 231
    490a:	5f 4f       	sbci	r21, 0xFF	; 255
    490c:	0e 94 11 23 	call	0x4622	; 0x4622 <_fpadd_parts>
    4910:	0e 94 99 26 	call	0x4d32	; 0x4d32 <__pack_f>
    4914:	a0 96       	adiw	r28, 0x20	; 32
    4916:	e6 e0       	ldi	r30, 0x06	; 6
    4918:	0c 94 67 28 	jmp	0x50ce	; 0x50ce <__epilogue_restores__+0x18>

0000491c <__addsf3>:
    491c:	a0 e2       	ldi	r26, 0x20	; 32
    491e:	b0 e0       	ldi	r27, 0x00	; 0
    4920:	e4 e9       	ldi	r30, 0x94	; 148
    4922:	f4 e2       	ldi	r31, 0x24	; 36
    4924:	0c 94 4b 28 	jmp	0x5096	; 0x5096 <__prologue_saves__+0x18>
    4928:	69 83       	std	Y+1, r22	; 0x01
    492a:	7a 83       	std	Y+2, r23	; 0x02
    492c:	8b 83       	std	Y+3, r24	; 0x03
    492e:	9c 83       	std	Y+4, r25	; 0x04
    4930:	2d 83       	std	Y+5, r18	; 0x05
    4932:	3e 83       	std	Y+6, r19	; 0x06
    4934:	4f 83       	std	Y+7, r20	; 0x07
    4936:	58 87       	std	Y+8, r21	; 0x08
    4938:	f9 e0       	ldi	r31, 0x09	; 9
    493a:	ef 2e       	mov	r14, r31
    493c:	f1 2c       	mov	r15, r1
    493e:	ec 0e       	add	r14, r28
    4940:	fd 1e       	adc	r15, r29
    4942:	ce 01       	movw	r24, r28
    4944:	01 96       	adiw	r24, 0x01	; 1
    4946:	b7 01       	movw	r22, r14
    4948:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    494c:	8e 01       	movw	r16, r28
    494e:	0f 5e       	subi	r16, 0xEF	; 239
    4950:	1f 4f       	sbci	r17, 0xFF	; 255
    4952:	ce 01       	movw	r24, r28
    4954:	05 96       	adiw	r24, 0x05	; 5
    4956:	b8 01       	movw	r22, r16
    4958:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    495c:	c7 01       	movw	r24, r14
    495e:	b8 01       	movw	r22, r16
    4960:	ae 01       	movw	r20, r28
    4962:	47 5e       	subi	r20, 0xE7	; 231
    4964:	5f 4f       	sbci	r21, 0xFF	; 255
    4966:	0e 94 11 23 	call	0x4622	; 0x4622 <_fpadd_parts>
    496a:	0e 94 99 26 	call	0x4d32	; 0x4d32 <__pack_f>
    496e:	a0 96       	adiw	r28, 0x20	; 32
    4970:	e6 e0       	ldi	r30, 0x06	; 6
    4972:	0c 94 67 28 	jmp	0x50ce	; 0x50ce <__epilogue_restores__+0x18>

00004976 <__mulsf3>:
    4976:	a0 e2       	ldi	r26, 0x20	; 32
    4978:	b0 e0       	ldi	r27, 0x00	; 0
    497a:	e1 ec       	ldi	r30, 0xC1	; 193
    497c:	f4 e2       	ldi	r31, 0x24	; 36
    497e:	0c 94 3f 28 	jmp	0x507e	; 0x507e <__prologue_saves__>
    4982:	69 83       	std	Y+1, r22	; 0x01
    4984:	7a 83       	std	Y+2, r23	; 0x02
    4986:	8b 83       	std	Y+3, r24	; 0x03
    4988:	9c 83       	std	Y+4, r25	; 0x04
    498a:	2d 83       	std	Y+5, r18	; 0x05
    498c:	3e 83       	std	Y+6, r19	; 0x06
    498e:	4f 83       	std	Y+7, r20	; 0x07
    4990:	58 87       	std	Y+8, r21	; 0x08
    4992:	ce 01       	movw	r24, r28
    4994:	01 96       	adiw	r24, 0x01	; 1
    4996:	be 01       	movw	r22, r28
    4998:	67 5f       	subi	r22, 0xF7	; 247
    499a:	7f 4f       	sbci	r23, 0xFF	; 255
    499c:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    49a0:	ce 01       	movw	r24, r28
    49a2:	05 96       	adiw	r24, 0x05	; 5
    49a4:	be 01       	movw	r22, r28
    49a6:	6f 5e       	subi	r22, 0xEF	; 239
    49a8:	7f 4f       	sbci	r23, 0xFF	; 255
    49aa:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    49ae:	99 85       	ldd	r25, Y+9	; 0x09
    49b0:	92 30       	cpi	r25, 0x02	; 2
    49b2:	88 f0       	brcs	.+34     	; 0x49d6 <__mulsf3+0x60>
    49b4:	89 89       	ldd	r24, Y+17	; 0x11
    49b6:	82 30       	cpi	r24, 0x02	; 2
    49b8:	c8 f0       	brcs	.+50     	; 0x49ec <__mulsf3+0x76>
    49ba:	94 30       	cpi	r25, 0x04	; 4
    49bc:	19 f4       	brne	.+6      	; 0x49c4 <__mulsf3+0x4e>
    49be:	82 30       	cpi	r24, 0x02	; 2
    49c0:	51 f4       	brne	.+20     	; 0x49d6 <__mulsf3+0x60>
    49c2:	04 c0       	rjmp	.+8      	; 0x49cc <__mulsf3+0x56>
    49c4:	84 30       	cpi	r24, 0x04	; 4
    49c6:	29 f4       	brne	.+10     	; 0x49d2 <__mulsf3+0x5c>
    49c8:	92 30       	cpi	r25, 0x02	; 2
    49ca:	81 f4       	brne	.+32     	; 0x49ec <__mulsf3+0x76>
    49cc:	8f e9       	ldi	r24, 0x9F	; 159
    49ce:	91 e0       	ldi	r25, 0x01	; 1
    49d0:	c6 c0       	rjmp	.+396    	; 0x4b5e <__mulsf3+0x1e8>
    49d2:	92 30       	cpi	r25, 0x02	; 2
    49d4:	49 f4       	brne	.+18     	; 0x49e8 <__mulsf3+0x72>
    49d6:	20 e0       	ldi	r18, 0x00	; 0
    49d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    49da:	8a 89       	ldd	r24, Y+18	; 0x12
    49dc:	98 13       	cpse	r25, r24
    49de:	21 e0       	ldi	r18, 0x01	; 1
    49e0:	2a 87       	std	Y+10, r18	; 0x0a
    49e2:	ce 01       	movw	r24, r28
    49e4:	09 96       	adiw	r24, 0x09	; 9
    49e6:	bb c0       	rjmp	.+374    	; 0x4b5e <__mulsf3+0x1e8>
    49e8:	82 30       	cpi	r24, 0x02	; 2
    49ea:	49 f4       	brne	.+18     	; 0x49fe <__mulsf3+0x88>
    49ec:	20 e0       	ldi	r18, 0x00	; 0
    49ee:	9a 85       	ldd	r25, Y+10	; 0x0a
    49f0:	8a 89       	ldd	r24, Y+18	; 0x12
    49f2:	98 13       	cpse	r25, r24
    49f4:	21 e0       	ldi	r18, 0x01	; 1
    49f6:	2a 8b       	std	Y+18, r18	; 0x12
    49f8:	ce 01       	movw	r24, r28
    49fa:	41 96       	adiw	r24, 0x11	; 17
    49fc:	b0 c0       	rjmp	.+352    	; 0x4b5e <__mulsf3+0x1e8>
    49fe:	2d 84       	ldd	r2, Y+13	; 0x0d
    4a00:	3e 84       	ldd	r3, Y+14	; 0x0e
    4a02:	4f 84       	ldd	r4, Y+15	; 0x0f
    4a04:	58 88       	ldd	r5, Y+16	; 0x10
    4a06:	6d 88       	ldd	r6, Y+21	; 0x15
    4a08:	7e 88       	ldd	r7, Y+22	; 0x16
    4a0a:	8f 88       	ldd	r8, Y+23	; 0x17
    4a0c:	98 8c       	ldd	r9, Y+24	; 0x18
    4a0e:	ee 24       	eor	r14, r14
    4a10:	ff 24       	eor	r15, r15
    4a12:	87 01       	movw	r16, r14
    4a14:	aa 24       	eor	r10, r10
    4a16:	bb 24       	eor	r11, r11
    4a18:	65 01       	movw	r12, r10
    4a1a:	40 e0       	ldi	r20, 0x00	; 0
    4a1c:	50 e0       	ldi	r21, 0x00	; 0
    4a1e:	60 e0       	ldi	r22, 0x00	; 0
    4a20:	70 e0       	ldi	r23, 0x00	; 0
    4a22:	e0 e0       	ldi	r30, 0x00	; 0
    4a24:	f0 e0       	ldi	r31, 0x00	; 0
    4a26:	c1 01       	movw	r24, r2
    4a28:	81 70       	andi	r24, 0x01	; 1
    4a2a:	90 70       	andi	r25, 0x00	; 0
    4a2c:	89 2b       	or	r24, r25
    4a2e:	e9 f0       	breq	.+58     	; 0x4a6a <__mulsf3+0xf4>
    4a30:	e6 0c       	add	r14, r6
    4a32:	f7 1c       	adc	r15, r7
    4a34:	08 1d       	adc	r16, r8
    4a36:	19 1d       	adc	r17, r9
    4a38:	9a 01       	movw	r18, r20
    4a3a:	ab 01       	movw	r20, r22
    4a3c:	2a 0d       	add	r18, r10
    4a3e:	3b 1d       	adc	r19, r11
    4a40:	4c 1d       	adc	r20, r12
    4a42:	5d 1d       	adc	r21, r13
    4a44:	80 e0       	ldi	r24, 0x00	; 0
    4a46:	90 e0       	ldi	r25, 0x00	; 0
    4a48:	a0 e0       	ldi	r26, 0x00	; 0
    4a4a:	b0 e0       	ldi	r27, 0x00	; 0
    4a4c:	e6 14       	cp	r14, r6
    4a4e:	f7 04       	cpc	r15, r7
    4a50:	08 05       	cpc	r16, r8
    4a52:	19 05       	cpc	r17, r9
    4a54:	20 f4       	brcc	.+8      	; 0x4a5e <__mulsf3+0xe8>
    4a56:	81 e0       	ldi	r24, 0x01	; 1
    4a58:	90 e0       	ldi	r25, 0x00	; 0
    4a5a:	a0 e0       	ldi	r26, 0x00	; 0
    4a5c:	b0 e0       	ldi	r27, 0x00	; 0
    4a5e:	ba 01       	movw	r22, r20
    4a60:	a9 01       	movw	r20, r18
    4a62:	48 0f       	add	r20, r24
    4a64:	59 1f       	adc	r21, r25
    4a66:	6a 1f       	adc	r22, r26
    4a68:	7b 1f       	adc	r23, r27
    4a6a:	aa 0c       	add	r10, r10
    4a6c:	bb 1c       	adc	r11, r11
    4a6e:	cc 1c       	adc	r12, r12
    4a70:	dd 1c       	adc	r13, r13
    4a72:	97 fe       	sbrs	r9, 7
    4a74:	08 c0       	rjmp	.+16     	; 0x4a86 <__mulsf3+0x110>
    4a76:	81 e0       	ldi	r24, 0x01	; 1
    4a78:	90 e0       	ldi	r25, 0x00	; 0
    4a7a:	a0 e0       	ldi	r26, 0x00	; 0
    4a7c:	b0 e0       	ldi	r27, 0x00	; 0
    4a7e:	a8 2a       	or	r10, r24
    4a80:	b9 2a       	or	r11, r25
    4a82:	ca 2a       	or	r12, r26
    4a84:	db 2a       	or	r13, r27
    4a86:	31 96       	adiw	r30, 0x01	; 1
    4a88:	e0 32       	cpi	r30, 0x20	; 32
    4a8a:	f1 05       	cpc	r31, r1
    4a8c:	49 f0       	breq	.+18     	; 0x4aa0 <__mulsf3+0x12a>
    4a8e:	66 0c       	add	r6, r6
    4a90:	77 1c       	adc	r7, r7
    4a92:	88 1c       	adc	r8, r8
    4a94:	99 1c       	adc	r9, r9
    4a96:	56 94       	lsr	r5
    4a98:	47 94       	ror	r4
    4a9a:	37 94       	ror	r3
    4a9c:	27 94       	ror	r2
    4a9e:	c3 cf       	rjmp	.-122    	; 0x4a26 <__mulsf3+0xb0>
    4aa0:	fa 85       	ldd	r31, Y+10	; 0x0a
    4aa2:	ea 89       	ldd	r30, Y+18	; 0x12
    4aa4:	2b 89       	ldd	r18, Y+19	; 0x13
    4aa6:	3c 89       	ldd	r19, Y+20	; 0x14
    4aa8:	8b 85       	ldd	r24, Y+11	; 0x0b
    4aaa:	9c 85       	ldd	r25, Y+12	; 0x0c
    4aac:	28 0f       	add	r18, r24
    4aae:	39 1f       	adc	r19, r25
    4ab0:	2e 5f       	subi	r18, 0xFE	; 254
    4ab2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ab4:	17 c0       	rjmp	.+46     	; 0x4ae4 <__mulsf3+0x16e>
    4ab6:	ca 01       	movw	r24, r20
    4ab8:	81 70       	andi	r24, 0x01	; 1
    4aba:	90 70       	andi	r25, 0x00	; 0
    4abc:	89 2b       	or	r24, r25
    4abe:	61 f0       	breq	.+24     	; 0x4ad8 <__mulsf3+0x162>
    4ac0:	16 95       	lsr	r17
    4ac2:	07 95       	ror	r16
    4ac4:	f7 94       	ror	r15
    4ac6:	e7 94       	ror	r14
    4ac8:	80 e0       	ldi	r24, 0x00	; 0
    4aca:	90 e0       	ldi	r25, 0x00	; 0
    4acc:	a0 e0       	ldi	r26, 0x00	; 0
    4ace:	b0 e8       	ldi	r27, 0x80	; 128
    4ad0:	e8 2a       	or	r14, r24
    4ad2:	f9 2a       	or	r15, r25
    4ad4:	0a 2b       	or	r16, r26
    4ad6:	1b 2b       	or	r17, r27
    4ad8:	76 95       	lsr	r23
    4ada:	67 95       	ror	r22
    4adc:	57 95       	ror	r21
    4ade:	47 95       	ror	r20
    4ae0:	2f 5f       	subi	r18, 0xFF	; 255
    4ae2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ae4:	77 fd       	sbrc	r23, 7
    4ae6:	e7 cf       	rjmp	.-50     	; 0x4ab6 <__mulsf3+0x140>
    4ae8:	0c c0       	rjmp	.+24     	; 0x4b02 <__mulsf3+0x18c>
    4aea:	44 0f       	add	r20, r20
    4aec:	55 1f       	adc	r21, r21
    4aee:	66 1f       	adc	r22, r22
    4af0:	77 1f       	adc	r23, r23
    4af2:	17 fd       	sbrc	r17, 7
    4af4:	41 60       	ori	r20, 0x01	; 1
    4af6:	ee 0c       	add	r14, r14
    4af8:	ff 1c       	adc	r15, r15
    4afa:	00 1f       	adc	r16, r16
    4afc:	11 1f       	adc	r17, r17
    4afe:	21 50       	subi	r18, 0x01	; 1
    4b00:	30 40       	sbci	r19, 0x00	; 0
    4b02:	40 30       	cpi	r20, 0x00	; 0
    4b04:	90 e0       	ldi	r25, 0x00	; 0
    4b06:	59 07       	cpc	r21, r25
    4b08:	90 e0       	ldi	r25, 0x00	; 0
    4b0a:	69 07       	cpc	r22, r25
    4b0c:	90 e4       	ldi	r25, 0x40	; 64
    4b0e:	79 07       	cpc	r23, r25
    4b10:	60 f3       	brcs	.-40     	; 0x4aea <__mulsf3+0x174>
    4b12:	2b 8f       	std	Y+27, r18	; 0x1b
    4b14:	3c 8f       	std	Y+28, r19	; 0x1c
    4b16:	db 01       	movw	r26, r22
    4b18:	ca 01       	movw	r24, r20
    4b1a:	8f 77       	andi	r24, 0x7F	; 127
    4b1c:	90 70       	andi	r25, 0x00	; 0
    4b1e:	a0 70       	andi	r26, 0x00	; 0
    4b20:	b0 70       	andi	r27, 0x00	; 0
    4b22:	80 34       	cpi	r24, 0x40	; 64
    4b24:	91 05       	cpc	r25, r1
    4b26:	a1 05       	cpc	r26, r1
    4b28:	b1 05       	cpc	r27, r1
    4b2a:	61 f4       	brne	.+24     	; 0x4b44 <__mulsf3+0x1ce>
    4b2c:	47 fd       	sbrc	r20, 7
    4b2e:	0a c0       	rjmp	.+20     	; 0x4b44 <__mulsf3+0x1ce>
    4b30:	e1 14       	cp	r14, r1
    4b32:	f1 04       	cpc	r15, r1
    4b34:	01 05       	cpc	r16, r1
    4b36:	11 05       	cpc	r17, r1
    4b38:	29 f0       	breq	.+10     	; 0x4b44 <__mulsf3+0x1ce>
    4b3a:	40 5c       	subi	r20, 0xC0	; 192
    4b3c:	5f 4f       	sbci	r21, 0xFF	; 255
    4b3e:	6f 4f       	sbci	r22, 0xFF	; 255
    4b40:	7f 4f       	sbci	r23, 0xFF	; 255
    4b42:	40 78       	andi	r20, 0x80	; 128
    4b44:	1a 8e       	std	Y+26, r1	; 0x1a
    4b46:	fe 17       	cp	r31, r30
    4b48:	11 f0       	breq	.+4      	; 0x4b4e <__mulsf3+0x1d8>
    4b4a:	81 e0       	ldi	r24, 0x01	; 1
    4b4c:	8a 8f       	std	Y+26, r24	; 0x1a
    4b4e:	4d 8f       	std	Y+29, r20	; 0x1d
    4b50:	5e 8f       	std	Y+30, r21	; 0x1e
    4b52:	6f 8f       	std	Y+31, r22	; 0x1f
    4b54:	78 a3       	std	Y+32, r23	; 0x20
    4b56:	83 e0       	ldi	r24, 0x03	; 3
    4b58:	89 8f       	std	Y+25, r24	; 0x19
    4b5a:	ce 01       	movw	r24, r28
    4b5c:	49 96       	adiw	r24, 0x19	; 25
    4b5e:	0e 94 99 26 	call	0x4d32	; 0x4d32 <__pack_f>
    4b62:	a0 96       	adiw	r28, 0x20	; 32
    4b64:	e2 e1       	ldi	r30, 0x12	; 18
    4b66:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__epilogue_restores__>

00004b6a <__gtsf2>:
    4b6a:	a8 e1       	ldi	r26, 0x18	; 24
    4b6c:	b0 e0       	ldi	r27, 0x00	; 0
    4b6e:	eb eb       	ldi	r30, 0xBB	; 187
    4b70:	f5 e2       	ldi	r31, 0x25	; 37
    4b72:	0c 94 4b 28 	jmp	0x5096	; 0x5096 <__prologue_saves__+0x18>
    4b76:	69 83       	std	Y+1, r22	; 0x01
    4b78:	7a 83       	std	Y+2, r23	; 0x02
    4b7a:	8b 83       	std	Y+3, r24	; 0x03
    4b7c:	9c 83       	std	Y+4, r25	; 0x04
    4b7e:	2d 83       	std	Y+5, r18	; 0x05
    4b80:	3e 83       	std	Y+6, r19	; 0x06
    4b82:	4f 83       	std	Y+7, r20	; 0x07
    4b84:	58 87       	std	Y+8, r21	; 0x08
    4b86:	89 e0       	ldi	r24, 0x09	; 9
    4b88:	e8 2e       	mov	r14, r24
    4b8a:	f1 2c       	mov	r15, r1
    4b8c:	ec 0e       	add	r14, r28
    4b8e:	fd 1e       	adc	r15, r29
    4b90:	ce 01       	movw	r24, r28
    4b92:	01 96       	adiw	r24, 0x01	; 1
    4b94:	b7 01       	movw	r22, r14
    4b96:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    4b9a:	8e 01       	movw	r16, r28
    4b9c:	0f 5e       	subi	r16, 0xEF	; 239
    4b9e:	1f 4f       	sbci	r17, 0xFF	; 255
    4ba0:	ce 01       	movw	r24, r28
    4ba2:	05 96       	adiw	r24, 0x05	; 5
    4ba4:	b8 01       	movw	r22, r16
    4ba6:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    4baa:	89 85       	ldd	r24, Y+9	; 0x09
    4bac:	82 30       	cpi	r24, 0x02	; 2
    4bae:	40 f0       	brcs	.+16     	; 0x4bc0 <__gtsf2+0x56>
    4bb0:	89 89       	ldd	r24, Y+17	; 0x11
    4bb2:	82 30       	cpi	r24, 0x02	; 2
    4bb4:	28 f0       	brcs	.+10     	; 0x4bc0 <__gtsf2+0x56>
    4bb6:	c7 01       	movw	r24, r14
    4bb8:	b8 01       	movw	r22, r16
    4bba:	0e 94 e6 27 	call	0x4fcc	; 0x4fcc <__fpcmp_parts_f>
    4bbe:	01 c0       	rjmp	.+2      	; 0x4bc2 <__gtsf2+0x58>
    4bc0:	8f ef       	ldi	r24, 0xFF	; 255
    4bc2:	68 96       	adiw	r28, 0x18	; 24
    4bc4:	e6 e0       	ldi	r30, 0x06	; 6
    4bc6:	0c 94 67 28 	jmp	0x50ce	; 0x50ce <__epilogue_restores__+0x18>

00004bca <__gesf2>:
    4bca:	a8 e1       	ldi	r26, 0x18	; 24
    4bcc:	b0 e0       	ldi	r27, 0x00	; 0
    4bce:	eb ee       	ldi	r30, 0xEB	; 235
    4bd0:	f5 e2       	ldi	r31, 0x25	; 37
    4bd2:	0c 94 4b 28 	jmp	0x5096	; 0x5096 <__prologue_saves__+0x18>
    4bd6:	69 83       	std	Y+1, r22	; 0x01
    4bd8:	7a 83       	std	Y+2, r23	; 0x02
    4bda:	8b 83       	std	Y+3, r24	; 0x03
    4bdc:	9c 83       	std	Y+4, r25	; 0x04
    4bde:	2d 83       	std	Y+5, r18	; 0x05
    4be0:	3e 83       	std	Y+6, r19	; 0x06
    4be2:	4f 83       	std	Y+7, r20	; 0x07
    4be4:	58 87       	std	Y+8, r21	; 0x08
    4be6:	89 e0       	ldi	r24, 0x09	; 9
    4be8:	e8 2e       	mov	r14, r24
    4bea:	f1 2c       	mov	r15, r1
    4bec:	ec 0e       	add	r14, r28
    4bee:	fd 1e       	adc	r15, r29
    4bf0:	ce 01       	movw	r24, r28
    4bf2:	01 96       	adiw	r24, 0x01	; 1
    4bf4:	b7 01       	movw	r22, r14
    4bf6:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    4bfa:	8e 01       	movw	r16, r28
    4bfc:	0f 5e       	subi	r16, 0xEF	; 239
    4bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    4c00:	ce 01       	movw	r24, r28
    4c02:	05 96       	adiw	r24, 0x05	; 5
    4c04:	b8 01       	movw	r22, r16
    4c06:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    4c0a:	89 85       	ldd	r24, Y+9	; 0x09
    4c0c:	82 30       	cpi	r24, 0x02	; 2
    4c0e:	40 f0       	brcs	.+16     	; 0x4c20 <__gesf2+0x56>
    4c10:	89 89       	ldd	r24, Y+17	; 0x11
    4c12:	82 30       	cpi	r24, 0x02	; 2
    4c14:	28 f0       	brcs	.+10     	; 0x4c20 <__gesf2+0x56>
    4c16:	c7 01       	movw	r24, r14
    4c18:	b8 01       	movw	r22, r16
    4c1a:	0e 94 e6 27 	call	0x4fcc	; 0x4fcc <__fpcmp_parts_f>
    4c1e:	01 c0       	rjmp	.+2      	; 0x4c22 <__gesf2+0x58>
    4c20:	8f ef       	ldi	r24, 0xFF	; 255
    4c22:	68 96       	adiw	r28, 0x18	; 24
    4c24:	e6 e0       	ldi	r30, 0x06	; 6
    4c26:	0c 94 67 28 	jmp	0x50ce	; 0x50ce <__epilogue_restores__+0x18>

00004c2a <__ltsf2>:
    4c2a:	a8 e1       	ldi	r26, 0x18	; 24
    4c2c:	b0 e0       	ldi	r27, 0x00	; 0
    4c2e:	eb e1       	ldi	r30, 0x1B	; 27
    4c30:	f6 e2       	ldi	r31, 0x26	; 38
    4c32:	0c 94 4b 28 	jmp	0x5096	; 0x5096 <__prologue_saves__+0x18>
    4c36:	69 83       	std	Y+1, r22	; 0x01
    4c38:	7a 83       	std	Y+2, r23	; 0x02
    4c3a:	8b 83       	std	Y+3, r24	; 0x03
    4c3c:	9c 83       	std	Y+4, r25	; 0x04
    4c3e:	2d 83       	std	Y+5, r18	; 0x05
    4c40:	3e 83       	std	Y+6, r19	; 0x06
    4c42:	4f 83       	std	Y+7, r20	; 0x07
    4c44:	58 87       	std	Y+8, r21	; 0x08
    4c46:	89 e0       	ldi	r24, 0x09	; 9
    4c48:	e8 2e       	mov	r14, r24
    4c4a:	f1 2c       	mov	r15, r1
    4c4c:	ec 0e       	add	r14, r28
    4c4e:	fd 1e       	adc	r15, r29
    4c50:	ce 01       	movw	r24, r28
    4c52:	01 96       	adiw	r24, 0x01	; 1
    4c54:	b7 01       	movw	r22, r14
    4c56:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    4c5a:	8e 01       	movw	r16, r28
    4c5c:	0f 5e       	subi	r16, 0xEF	; 239
    4c5e:	1f 4f       	sbci	r17, 0xFF	; 255
    4c60:	ce 01       	movw	r24, r28
    4c62:	05 96       	adiw	r24, 0x05	; 5
    4c64:	b8 01       	movw	r22, r16
    4c66:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    4c6a:	89 85       	ldd	r24, Y+9	; 0x09
    4c6c:	82 30       	cpi	r24, 0x02	; 2
    4c6e:	40 f0       	brcs	.+16     	; 0x4c80 <__ltsf2+0x56>
    4c70:	89 89       	ldd	r24, Y+17	; 0x11
    4c72:	82 30       	cpi	r24, 0x02	; 2
    4c74:	28 f0       	brcs	.+10     	; 0x4c80 <__ltsf2+0x56>
    4c76:	c7 01       	movw	r24, r14
    4c78:	b8 01       	movw	r22, r16
    4c7a:	0e 94 e6 27 	call	0x4fcc	; 0x4fcc <__fpcmp_parts_f>
    4c7e:	01 c0       	rjmp	.+2      	; 0x4c82 <__ltsf2+0x58>
    4c80:	81 e0       	ldi	r24, 0x01	; 1
    4c82:	68 96       	adiw	r28, 0x18	; 24
    4c84:	e6 e0       	ldi	r30, 0x06	; 6
    4c86:	0c 94 67 28 	jmp	0x50ce	; 0x50ce <__epilogue_restores__+0x18>

00004c8a <__fixsfsi>:
    4c8a:	ac e0       	ldi	r26, 0x0C	; 12
    4c8c:	b0 e0       	ldi	r27, 0x00	; 0
    4c8e:	eb e4       	ldi	r30, 0x4B	; 75
    4c90:	f6 e2       	ldi	r31, 0x26	; 38
    4c92:	0c 94 4f 28 	jmp	0x509e	; 0x509e <__prologue_saves__+0x20>
    4c96:	69 83       	std	Y+1, r22	; 0x01
    4c98:	7a 83       	std	Y+2, r23	; 0x02
    4c9a:	8b 83       	std	Y+3, r24	; 0x03
    4c9c:	9c 83       	std	Y+4, r25	; 0x04
    4c9e:	ce 01       	movw	r24, r28
    4ca0:	01 96       	adiw	r24, 0x01	; 1
    4ca2:	be 01       	movw	r22, r28
    4ca4:	6b 5f       	subi	r22, 0xFB	; 251
    4ca6:	7f 4f       	sbci	r23, 0xFF	; 255
    4ca8:	0e 94 6e 27 	call	0x4edc	; 0x4edc <__unpack_f>
    4cac:	8d 81       	ldd	r24, Y+5	; 0x05
    4cae:	82 30       	cpi	r24, 0x02	; 2
    4cb0:	61 f1       	breq	.+88     	; 0x4d0a <__fixsfsi+0x80>
    4cb2:	82 30       	cpi	r24, 0x02	; 2
    4cb4:	50 f1       	brcs	.+84     	; 0x4d0a <__fixsfsi+0x80>
    4cb6:	84 30       	cpi	r24, 0x04	; 4
    4cb8:	21 f4       	brne	.+8      	; 0x4cc2 <__fixsfsi+0x38>
    4cba:	8e 81       	ldd	r24, Y+6	; 0x06
    4cbc:	88 23       	and	r24, r24
    4cbe:	51 f1       	breq	.+84     	; 0x4d14 <__fixsfsi+0x8a>
    4cc0:	2e c0       	rjmp	.+92     	; 0x4d1e <__fixsfsi+0x94>
    4cc2:	2f 81       	ldd	r18, Y+7	; 0x07
    4cc4:	38 85       	ldd	r19, Y+8	; 0x08
    4cc6:	37 fd       	sbrc	r19, 7
    4cc8:	20 c0       	rjmp	.+64     	; 0x4d0a <__fixsfsi+0x80>
    4cca:	6e 81       	ldd	r22, Y+6	; 0x06
    4ccc:	2f 31       	cpi	r18, 0x1F	; 31
    4cce:	31 05       	cpc	r19, r1
    4cd0:	1c f0       	brlt	.+6      	; 0x4cd8 <__fixsfsi+0x4e>
    4cd2:	66 23       	and	r22, r22
    4cd4:	f9 f0       	breq	.+62     	; 0x4d14 <__fixsfsi+0x8a>
    4cd6:	23 c0       	rjmp	.+70     	; 0x4d1e <__fixsfsi+0x94>
    4cd8:	8e e1       	ldi	r24, 0x1E	; 30
    4cda:	90 e0       	ldi	r25, 0x00	; 0
    4cdc:	82 1b       	sub	r24, r18
    4cde:	93 0b       	sbc	r25, r19
    4ce0:	29 85       	ldd	r18, Y+9	; 0x09
    4ce2:	3a 85       	ldd	r19, Y+10	; 0x0a
    4ce4:	4b 85       	ldd	r20, Y+11	; 0x0b
    4ce6:	5c 85       	ldd	r21, Y+12	; 0x0c
    4ce8:	04 c0       	rjmp	.+8      	; 0x4cf2 <__fixsfsi+0x68>
    4cea:	56 95       	lsr	r21
    4cec:	47 95       	ror	r20
    4cee:	37 95       	ror	r19
    4cf0:	27 95       	ror	r18
    4cf2:	8a 95       	dec	r24
    4cf4:	d2 f7       	brpl	.-12     	; 0x4cea <__fixsfsi+0x60>
    4cf6:	66 23       	and	r22, r22
    4cf8:	b1 f0       	breq	.+44     	; 0x4d26 <__fixsfsi+0x9c>
    4cfa:	50 95       	com	r21
    4cfc:	40 95       	com	r20
    4cfe:	30 95       	com	r19
    4d00:	21 95       	neg	r18
    4d02:	3f 4f       	sbci	r19, 0xFF	; 255
    4d04:	4f 4f       	sbci	r20, 0xFF	; 255
    4d06:	5f 4f       	sbci	r21, 0xFF	; 255
    4d08:	0e c0       	rjmp	.+28     	; 0x4d26 <__fixsfsi+0x9c>
    4d0a:	20 e0       	ldi	r18, 0x00	; 0
    4d0c:	30 e0       	ldi	r19, 0x00	; 0
    4d0e:	40 e0       	ldi	r20, 0x00	; 0
    4d10:	50 e0       	ldi	r21, 0x00	; 0
    4d12:	09 c0       	rjmp	.+18     	; 0x4d26 <__fixsfsi+0x9c>
    4d14:	2f ef       	ldi	r18, 0xFF	; 255
    4d16:	3f ef       	ldi	r19, 0xFF	; 255
    4d18:	4f ef       	ldi	r20, 0xFF	; 255
    4d1a:	5f e7       	ldi	r21, 0x7F	; 127
    4d1c:	04 c0       	rjmp	.+8      	; 0x4d26 <__fixsfsi+0x9c>
    4d1e:	20 e0       	ldi	r18, 0x00	; 0
    4d20:	30 e0       	ldi	r19, 0x00	; 0
    4d22:	40 e0       	ldi	r20, 0x00	; 0
    4d24:	50 e8       	ldi	r21, 0x80	; 128
    4d26:	b9 01       	movw	r22, r18
    4d28:	ca 01       	movw	r24, r20
    4d2a:	2c 96       	adiw	r28, 0x0c	; 12
    4d2c:	e2 e0       	ldi	r30, 0x02	; 2
    4d2e:	0c 94 6b 28 	jmp	0x50d6	; 0x50d6 <__epilogue_restores__+0x20>

00004d32 <__pack_f>:
    4d32:	df 92       	push	r13
    4d34:	ef 92       	push	r14
    4d36:	ff 92       	push	r15
    4d38:	0f 93       	push	r16
    4d3a:	1f 93       	push	r17
    4d3c:	fc 01       	movw	r30, r24
    4d3e:	e4 80       	ldd	r14, Z+4	; 0x04
    4d40:	f5 80       	ldd	r15, Z+5	; 0x05
    4d42:	06 81       	ldd	r16, Z+6	; 0x06
    4d44:	17 81       	ldd	r17, Z+7	; 0x07
    4d46:	d1 80       	ldd	r13, Z+1	; 0x01
    4d48:	80 81       	ld	r24, Z
    4d4a:	82 30       	cpi	r24, 0x02	; 2
    4d4c:	48 f4       	brcc	.+18     	; 0x4d60 <__pack_f+0x2e>
    4d4e:	80 e0       	ldi	r24, 0x00	; 0
    4d50:	90 e0       	ldi	r25, 0x00	; 0
    4d52:	a0 e1       	ldi	r26, 0x10	; 16
    4d54:	b0 e0       	ldi	r27, 0x00	; 0
    4d56:	e8 2a       	or	r14, r24
    4d58:	f9 2a       	or	r15, r25
    4d5a:	0a 2b       	or	r16, r26
    4d5c:	1b 2b       	or	r17, r27
    4d5e:	a5 c0       	rjmp	.+330    	; 0x4eaa <__pack_f+0x178>
    4d60:	84 30       	cpi	r24, 0x04	; 4
    4d62:	09 f4       	brne	.+2      	; 0x4d66 <__pack_f+0x34>
    4d64:	9f c0       	rjmp	.+318    	; 0x4ea4 <__pack_f+0x172>
    4d66:	82 30       	cpi	r24, 0x02	; 2
    4d68:	21 f4       	brne	.+8      	; 0x4d72 <__pack_f+0x40>
    4d6a:	ee 24       	eor	r14, r14
    4d6c:	ff 24       	eor	r15, r15
    4d6e:	87 01       	movw	r16, r14
    4d70:	05 c0       	rjmp	.+10     	; 0x4d7c <__pack_f+0x4a>
    4d72:	e1 14       	cp	r14, r1
    4d74:	f1 04       	cpc	r15, r1
    4d76:	01 05       	cpc	r16, r1
    4d78:	11 05       	cpc	r17, r1
    4d7a:	19 f4       	brne	.+6      	; 0x4d82 <__pack_f+0x50>
    4d7c:	e0 e0       	ldi	r30, 0x00	; 0
    4d7e:	f0 e0       	ldi	r31, 0x00	; 0
    4d80:	96 c0       	rjmp	.+300    	; 0x4eae <__pack_f+0x17c>
    4d82:	62 81       	ldd	r22, Z+2	; 0x02
    4d84:	73 81       	ldd	r23, Z+3	; 0x03
    4d86:	9f ef       	ldi	r25, 0xFF	; 255
    4d88:	62 38       	cpi	r22, 0x82	; 130
    4d8a:	79 07       	cpc	r23, r25
    4d8c:	0c f0       	brlt	.+2      	; 0x4d90 <__pack_f+0x5e>
    4d8e:	5b c0       	rjmp	.+182    	; 0x4e46 <__pack_f+0x114>
    4d90:	22 e8       	ldi	r18, 0x82	; 130
    4d92:	3f ef       	ldi	r19, 0xFF	; 255
    4d94:	26 1b       	sub	r18, r22
    4d96:	37 0b       	sbc	r19, r23
    4d98:	2a 31       	cpi	r18, 0x1A	; 26
    4d9a:	31 05       	cpc	r19, r1
    4d9c:	2c f0       	brlt	.+10     	; 0x4da8 <__pack_f+0x76>
    4d9e:	20 e0       	ldi	r18, 0x00	; 0
    4da0:	30 e0       	ldi	r19, 0x00	; 0
    4da2:	40 e0       	ldi	r20, 0x00	; 0
    4da4:	50 e0       	ldi	r21, 0x00	; 0
    4da6:	2a c0       	rjmp	.+84     	; 0x4dfc <__pack_f+0xca>
    4da8:	b8 01       	movw	r22, r16
    4daa:	a7 01       	movw	r20, r14
    4dac:	02 2e       	mov	r0, r18
    4dae:	04 c0       	rjmp	.+8      	; 0x4db8 <__pack_f+0x86>
    4db0:	76 95       	lsr	r23
    4db2:	67 95       	ror	r22
    4db4:	57 95       	ror	r21
    4db6:	47 95       	ror	r20
    4db8:	0a 94       	dec	r0
    4dba:	d2 f7       	brpl	.-12     	; 0x4db0 <__pack_f+0x7e>
    4dbc:	81 e0       	ldi	r24, 0x01	; 1
    4dbe:	90 e0       	ldi	r25, 0x00	; 0
    4dc0:	a0 e0       	ldi	r26, 0x00	; 0
    4dc2:	b0 e0       	ldi	r27, 0x00	; 0
    4dc4:	04 c0       	rjmp	.+8      	; 0x4dce <__pack_f+0x9c>
    4dc6:	88 0f       	add	r24, r24
    4dc8:	99 1f       	adc	r25, r25
    4dca:	aa 1f       	adc	r26, r26
    4dcc:	bb 1f       	adc	r27, r27
    4dce:	2a 95       	dec	r18
    4dd0:	d2 f7       	brpl	.-12     	; 0x4dc6 <__pack_f+0x94>
    4dd2:	01 97       	sbiw	r24, 0x01	; 1
    4dd4:	a1 09       	sbc	r26, r1
    4dd6:	b1 09       	sbc	r27, r1
    4dd8:	8e 21       	and	r24, r14
    4dda:	9f 21       	and	r25, r15
    4ddc:	a0 23       	and	r26, r16
    4dde:	b1 23       	and	r27, r17
    4de0:	00 97       	sbiw	r24, 0x00	; 0
    4de2:	a1 05       	cpc	r26, r1
    4de4:	b1 05       	cpc	r27, r1
    4de6:	21 f0       	breq	.+8      	; 0x4df0 <__pack_f+0xbe>
    4de8:	81 e0       	ldi	r24, 0x01	; 1
    4dea:	90 e0       	ldi	r25, 0x00	; 0
    4dec:	a0 e0       	ldi	r26, 0x00	; 0
    4dee:	b0 e0       	ldi	r27, 0x00	; 0
    4df0:	9a 01       	movw	r18, r20
    4df2:	ab 01       	movw	r20, r22
    4df4:	28 2b       	or	r18, r24
    4df6:	39 2b       	or	r19, r25
    4df8:	4a 2b       	or	r20, r26
    4dfa:	5b 2b       	or	r21, r27
    4dfc:	da 01       	movw	r26, r20
    4dfe:	c9 01       	movw	r24, r18
    4e00:	8f 77       	andi	r24, 0x7F	; 127
    4e02:	90 70       	andi	r25, 0x00	; 0
    4e04:	a0 70       	andi	r26, 0x00	; 0
    4e06:	b0 70       	andi	r27, 0x00	; 0
    4e08:	80 34       	cpi	r24, 0x40	; 64
    4e0a:	91 05       	cpc	r25, r1
    4e0c:	a1 05       	cpc	r26, r1
    4e0e:	b1 05       	cpc	r27, r1
    4e10:	39 f4       	brne	.+14     	; 0x4e20 <__pack_f+0xee>
    4e12:	27 ff       	sbrs	r18, 7
    4e14:	09 c0       	rjmp	.+18     	; 0x4e28 <__pack_f+0xf6>
    4e16:	20 5c       	subi	r18, 0xC0	; 192
    4e18:	3f 4f       	sbci	r19, 0xFF	; 255
    4e1a:	4f 4f       	sbci	r20, 0xFF	; 255
    4e1c:	5f 4f       	sbci	r21, 0xFF	; 255
    4e1e:	04 c0       	rjmp	.+8      	; 0x4e28 <__pack_f+0xf6>
    4e20:	21 5c       	subi	r18, 0xC1	; 193
    4e22:	3f 4f       	sbci	r19, 0xFF	; 255
    4e24:	4f 4f       	sbci	r20, 0xFF	; 255
    4e26:	5f 4f       	sbci	r21, 0xFF	; 255
    4e28:	e0 e0       	ldi	r30, 0x00	; 0
    4e2a:	f0 e0       	ldi	r31, 0x00	; 0
    4e2c:	20 30       	cpi	r18, 0x00	; 0
    4e2e:	a0 e0       	ldi	r26, 0x00	; 0
    4e30:	3a 07       	cpc	r19, r26
    4e32:	a0 e0       	ldi	r26, 0x00	; 0
    4e34:	4a 07       	cpc	r20, r26
    4e36:	a0 e4       	ldi	r26, 0x40	; 64
    4e38:	5a 07       	cpc	r21, r26
    4e3a:	10 f0       	brcs	.+4      	; 0x4e40 <__pack_f+0x10e>
    4e3c:	e1 e0       	ldi	r30, 0x01	; 1
    4e3e:	f0 e0       	ldi	r31, 0x00	; 0
    4e40:	79 01       	movw	r14, r18
    4e42:	8a 01       	movw	r16, r20
    4e44:	27 c0       	rjmp	.+78     	; 0x4e94 <__pack_f+0x162>
    4e46:	60 38       	cpi	r22, 0x80	; 128
    4e48:	71 05       	cpc	r23, r1
    4e4a:	64 f5       	brge	.+88     	; 0x4ea4 <__pack_f+0x172>
    4e4c:	fb 01       	movw	r30, r22
    4e4e:	e1 58       	subi	r30, 0x81	; 129
    4e50:	ff 4f       	sbci	r31, 0xFF	; 255
    4e52:	d8 01       	movw	r26, r16
    4e54:	c7 01       	movw	r24, r14
    4e56:	8f 77       	andi	r24, 0x7F	; 127
    4e58:	90 70       	andi	r25, 0x00	; 0
    4e5a:	a0 70       	andi	r26, 0x00	; 0
    4e5c:	b0 70       	andi	r27, 0x00	; 0
    4e5e:	80 34       	cpi	r24, 0x40	; 64
    4e60:	91 05       	cpc	r25, r1
    4e62:	a1 05       	cpc	r26, r1
    4e64:	b1 05       	cpc	r27, r1
    4e66:	39 f4       	brne	.+14     	; 0x4e76 <__pack_f+0x144>
    4e68:	e7 fe       	sbrs	r14, 7
    4e6a:	0d c0       	rjmp	.+26     	; 0x4e86 <__pack_f+0x154>
    4e6c:	80 e4       	ldi	r24, 0x40	; 64
    4e6e:	90 e0       	ldi	r25, 0x00	; 0
    4e70:	a0 e0       	ldi	r26, 0x00	; 0
    4e72:	b0 e0       	ldi	r27, 0x00	; 0
    4e74:	04 c0       	rjmp	.+8      	; 0x4e7e <__pack_f+0x14c>
    4e76:	8f e3       	ldi	r24, 0x3F	; 63
    4e78:	90 e0       	ldi	r25, 0x00	; 0
    4e7a:	a0 e0       	ldi	r26, 0x00	; 0
    4e7c:	b0 e0       	ldi	r27, 0x00	; 0
    4e7e:	e8 0e       	add	r14, r24
    4e80:	f9 1e       	adc	r15, r25
    4e82:	0a 1f       	adc	r16, r26
    4e84:	1b 1f       	adc	r17, r27
    4e86:	17 ff       	sbrs	r17, 7
    4e88:	05 c0       	rjmp	.+10     	; 0x4e94 <__pack_f+0x162>
    4e8a:	16 95       	lsr	r17
    4e8c:	07 95       	ror	r16
    4e8e:	f7 94       	ror	r15
    4e90:	e7 94       	ror	r14
    4e92:	31 96       	adiw	r30, 0x01	; 1
    4e94:	87 e0       	ldi	r24, 0x07	; 7
    4e96:	16 95       	lsr	r17
    4e98:	07 95       	ror	r16
    4e9a:	f7 94       	ror	r15
    4e9c:	e7 94       	ror	r14
    4e9e:	8a 95       	dec	r24
    4ea0:	d1 f7       	brne	.-12     	; 0x4e96 <__pack_f+0x164>
    4ea2:	05 c0       	rjmp	.+10     	; 0x4eae <__pack_f+0x17c>
    4ea4:	ee 24       	eor	r14, r14
    4ea6:	ff 24       	eor	r15, r15
    4ea8:	87 01       	movw	r16, r14
    4eaa:	ef ef       	ldi	r30, 0xFF	; 255
    4eac:	f0 e0       	ldi	r31, 0x00	; 0
    4eae:	6e 2f       	mov	r22, r30
    4eb0:	67 95       	ror	r22
    4eb2:	66 27       	eor	r22, r22
    4eb4:	67 95       	ror	r22
    4eb6:	90 2f       	mov	r25, r16
    4eb8:	9f 77       	andi	r25, 0x7F	; 127
    4eba:	d7 94       	ror	r13
    4ebc:	dd 24       	eor	r13, r13
    4ebe:	d7 94       	ror	r13
    4ec0:	8e 2f       	mov	r24, r30
    4ec2:	86 95       	lsr	r24
    4ec4:	49 2f       	mov	r20, r25
    4ec6:	46 2b       	or	r20, r22
    4ec8:	58 2f       	mov	r21, r24
    4eca:	5d 29       	or	r21, r13
    4ecc:	b7 01       	movw	r22, r14
    4ece:	ca 01       	movw	r24, r20
    4ed0:	1f 91       	pop	r17
    4ed2:	0f 91       	pop	r16
    4ed4:	ff 90       	pop	r15
    4ed6:	ef 90       	pop	r14
    4ed8:	df 90       	pop	r13
    4eda:	08 95       	ret

00004edc <__unpack_f>:
    4edc:	fc 01       	movw	r30, r24
    4ede:	db 01       	movw	r26, r22
    4ee0:	40 81       	ld	r20, Z
    4ee2:	51 81       	ldd	r21, Z+1	; 0x01
    4ee4:	22 81       	ldd	r18, Z+2	; 0x02
    4ee6:	62 2f       	mov	r22, r18
    4ee8:	6f 77       	andi	r22, 0x7F	; 127
    4eea:	70 e0       	ldi	r23, 0x00	; 0
    4eec:	22 1f       	adc	r18, r18
    4eee:	22 27       	eor	r18, r18
    4ef0:	22 1f       	adc	r18, r18
    4ef2:	93 81       	ldd	r25, Z+3	; 0x03
    4ef4:	89 2f       	mov	r24, r25
    4ef6:	88 0f       	add	r24, r24
    4ef8:	82 2b       	or	r24, r18
    4efa:	28 2f       	mov	r18, r24
    4efc:	30 e0       	ldi	r19, 0x00	; 0
    4efe:	99 1f       	adc	r25, r25
    4f00:	99 27       	eor	r25, r25
    4f02:	99 1f       	adc	r25, r25
    4f04:	11 96       	adiw	r26, 0x01	; 1
    4f06:	9c 93       	st	X, r25
    4f08:	11 97       	sbiw	r26, 0x01	; 1
    4f0a:	21 15       	cp	r18, r1
    4f0c:	31 05       	cpc	r19, r1
    4f0e:	a9 f5       	brne	.+106    	; 0x4f7a <__unpack_f+0x9e>
    4f10:	41 15       	cp	r20, r1
    4f12:	51 05       	cpc	r21, r1
    4f14:	61 05       	cpc	r22, r1
    4f16:	71 05       	cpc	r23, r1
    4f18:	11 f4       	brne	.+4      	; 0x4f1e <__unpack_f+0x42>
    4f1a:	82 e0       	ldi	r24, 0x02	; 2
    4f1c:	37 c0       	rjmp	.+110    	; 0x4f8c <__unpack_f+0xb0>
    4f1e:	82 e8       	ldi	r24, 0x82	; 130
    4f20:	9f ef       	ldi	r25, 0xFF	; 255
    4f22:	13 96       	adiw	r26, 0x03	; 3
    4f24:	9c 93       	st	X, r25
    4f26:	8e 93       	st	-X, r24
    4f28:	12 97       	sbiw	r26, 0x02	; 2
    4f2a:	9a 01       	movw	r18, r20
    4f2c:	ab 01       	movw	r20, r22
    4f2e:	67 e0       	ldi	r22, 0x07	; 7
    4f30:	22 0f       	add	r18, r18
    4f32:	33 1f       	adc	r19, r19
    4f34:	44 1f       	adc	r20, r20
    4f36:	55 1f       	adc	r21, r21
    4f38:	6a 95       	dec	r22
    4f3a:	d1 f7       	brne	.-12     	; 0x4f30 <__unpack_f+0x54>
    4f3c:	83 e0       	ldi	r24, 0x03	; 3
    4f3e:	8c 93       	st	X, r24
    4f40:	0d c0       	rjmp	.+26     	; 0x4f5c <__unpack_f+0x80>
    4f42:	22 0f       	add	r18, r18
    4f44:	33 1f       	adc	r19, r19
    4f46:	44 1f       	adc	r20, r20
    4f48:	55 1f       	adc	r21, r21
    4f4a:	12 96       	adiw	r26, 0x02	; 2
    4f4c:	8d 91       	ld	r24, X+
    4f4e:	9c 91       	ld	r25, X
    4f50:	13 97       	sbiw	r26, 0x03	; 3
    4f52:	01 97       	sbiw	r24, 0x01	; 1
    4f54:	13 96       	adiw	r26, 0x03	; 3
    4f56:	9c 93       	st	X, r25
    4f58:	8e 93       	st	-X, r24
    4f5a:	12 97       	sbiw	r26, 0x02	; 2
    4f5c:	20 30       	cpi	r18, 0x00	; 0
    4f5e:	80 e0       	ldi	r24, 0x00	; 0
    4f60:	38 07       	cpc	r19, r24
    4f62:	80 e0       	ldi	r24, 0x00	; 0
    4f64:	48 07       	cpc	r20, r24
    4f66:	80 e4       	ldi	r24, 0x40	; 64
    4f68:	58 07       	cpc	r21, r24
    4f6a:	58 f3       	brcs	.-42     	; 0x4f42 <__unpack_f+0x66>
    4f6c:	14 96       	adiw	r26, 0x04	; 4
    4f6e:	2d 93       	st	X+, r18
    4f70:	3d 93       	st	X+, r19
    4f72:	4d 93       	st	X+, r20
    4f74:	5c 93       	st	X, r21
    4f76:	17 97       	sbiw	r26, 0x07	; 7
    4f78:	08 95       	ret
    4f7a:	2f 3f       	cpi	r18, 0xFF	; 255
    4f7c:	31 05       	cpc	r19, r1
    4f7e:	79 f4       	brne	.+30     	; 0x4f9e <__unpack_f+0xc2>
    4f80:	41 15       	cp	r20, r1
    4f82:	51 05       	cpc	r21, r1
    4f84:	61 05       	cpc	r22, r1
    4f86:	71 05       	cpc	r23, r1
    4f88:	19 f4       	brne	.+6      	; 0x4f90 <__unpack_f+0xb4>
    4f8a:	84 e0       	ldi	r24, 0x04	; 4
    4f8c:	8c 93       	st	X, r24
    4f8e:	08 95       	ret
    4f90:	64 ff       	sbrs	r22, 4
    4f92:	03 c0       	rjmp	.+6      	; 0x4f9a <__unpack_f+0xbe>
    4f94:	81 e0       	ldi	r24, 0x01	; 1
    4f96:	8c 93       	st	X, r24
    4f98:	12 c0       	rjmp	.+36     	; 0x4fbe <__unpack_f+0xe2>
    4f9a:	1c 92       	st	X, r1
    4f9c:	10 c0       	rjmp	.+32     	; 0x4fbe <__unpack_f+0xe2>
    4f9e:	2f 57       	subi	r18, 0x7F	; 127
    4fa0:	30 40       	sbci	r19, 0x00	; 0
    4fa2:	13 96       	adiw	r26, 0x03	; 3
    4fa4:	3c 93       	st	X, r19
    4fa6:	2e 93       	st	-X, r18
    4fa8:	12 97       	sbiw	r26, 0x02	; 2
    4faa:	83 e0       	ldi	r24, 0x03	; 3
    4fac:	8c 93       	st	X, r24
    4fae:	87 e0       	ldi	r24, 0x07	; 7
    4fb0:	44 0f       	add	r20, r20
    4fb2:	55 1f       	adc	r21, r21
    4fb4:	66 1f       	adc	r22, r22
    4fb6:	77 1f       	adc	r23, r23
    4fb8:	8a 95       	dec	r24
    4fba:	d1 f7       	brne	.-12     	; 0x4fb0 <__unpack_f+0xd4>
    4fbc:	70 64       	ori	r23, 0x40	; 64
    4fbe:	14 96       	adiw	r26, 0x04	; 4
    4fc0:	4d 93       	st	X+, r20
    4fc2:	5d 93       	st	X+, r21
    4fc4:	6d 93       	st	X+, r22
    4fc6:	7c 93       	st	X, r23
    4fc8:	17 97       	sbiw	r26, 0x07	; 7
    4fca:	08 95       	ret

00004fcc <__fpcmp_parts_f>:
    4fcc:	1f 93       	push	r17
    4fce:	dc 01       	movw	r26, r24
    4fd0:	fb 01       	movw	r30, r22
    4fd2:	9c 91       	ld	r25, X
    4fd4:	92 30       	cpi	r25, 0x02	; 2
    4fd6:	08 f4       	brcc	.+2      	; 0x4fda <__fpcmp_parts_f+0xe>
    4fd8:	47 c0       	rjmp	.+142    	; 0x5068 <__fpcmp_parts_f+0x9c>
    4fda:	80 81       	ld	r24, Z
    4fdc:	82 30       	cpi	r24, 0x02	; 2
    4fde:	08 f4       	brcc	.+2      	; 0x4fe2 <__fpcmp_parts_f+0x16>
    4fe0:	43 c0       	rjmp	.+134    	; 0x5068 <__fpcmp_parts_f+0x9c>
    4fe2:	94 30       	cpi	r25, 0x04	; 4
    4fe4:	51 f4       	brne	.+20     	; 0x4ffa <__fpcmp_parts_f+0x2e>
    4fe6:	11 96       	adiw	r26, 0x01	; 1
    4fe8:	1c 91       	ld	r17, X
    4fea:	84 30       	cpi	r24, 0x04	; 4
    4fec:	99 f5       	brne	.+102    	; 0x5054 <__fpcmp_parts_f+0x88>
    4fee:	81 81       	ldd	r24, Z+1	; 0x01
    4ff0:	68 2f       	mov	r22, r24
    4ff2:	70 e0       	ldi	r23, 0x00	; 0
    4ff4:	61 1b       	sub	r22, r17
    4ff6:	71 09       	sbc	r23, r1
    4ff8:	3f c0       	rjmp	.+126    	; 0x5078 <__fpcmp_parts_f+0xac>
    4ffa:	84 30       	cpi	r24, 0x04	; 4
    4ffc:	21 f0       	breq	.+8      	; 0x5006 <__fpcmp_parts_f+0x3a>
    4ffe:	92 30       	cpi	r25, 0x02	; 2
    5000:	31 f4       	brne	.+12     	; 0x500e <__fpcmp_parts_f+0x42>
    5002:	82 30       	cpi	r24, 0x02	; 2
    5004:	b9 f1       	breq	.+110    	; 0x5074 <__fpcmp_parts_f+0xa8>
    5006:	81 81       	ldd	r24, Z+1	; 0x01
    5008:	88 23       	and	r24, r24
    500a:	89 f1       	breq	.+98     	; 0x506e <__fpcmp_parts_f+0xa2>
    500c:	2d c0       	rjmp	.+90     	; 0x5068 <__fpcmp_parts_f+0x9c>
    500e:	11 96       	adiw	r26, 0x01	; 1
    5010:	1c 91       	ld	r17, X
    5012:	11 97       	sbiw	r26, 0x01	; 1
    5014:	82 30       	cpi	r24, 0x02	; 2
    5016:	f1 f0       	breq	.+60     	; 0x5054 <__fpcmp_parts_f+0x88>
    5018:	81 81       	ldd	r24, Z+1	; 0x01
    501a:	18 17       	cp	r17, r24
    501c:	d9 f4       	brne	.+54     	; 0x5054 <__fpcmp_parts_f+0x88>
    501e:	12 96       	adiw	r26, 0x02	; 2
    5020:	2d 91       	ld	r18, X+
    5022:	3c 91       	ld	r19, X
    5024:	13 97       	sbiw	r26, 0x03	; 3
    5026:	82 81       	ldd	r24, Z+2	; 0x02
    5028:	93 81       	ldd	r25, Z+3	; 0x03
    502a:	82 17       	cp	r24, r18
    502c:	93 07       	cpc	r25, r19
    502e:	94 f0       	brlt	.+36     	; 0x5054 <__fpcmp_parts_f+0x88>
    5030:	28 17       	cp	r18, r24
    5032:	39 07       	cpc	r19, r25
    5034:	bc f0       	brlt	.+46     	; 0x5064 <__fpcmp_parts_f+0x98>
    5036:	14 96       	adiw	r26, 0x04	; 4
    5038:	8d 91       	ld	r24, X+
    503a:	9d 91       	ld	r25, X+
    503c:	0d 90       	ld	r0, X+
    503e:	bc 91       	ld	r27, X
    5040:	a0 2d       	mov	r26, r0
    5042:	24 81       	ldd	r18, Z+4	; 0x04
    5044:	35 81       	ldd	r19, Z+5	; 0x05
    5046:	46 81       	ldd	r20, Z+6	; 0x06
    5048:	57 81       	ldd	r21, Z+7	; 0x07
    504a:	28 17       	cp	r18, r24
    504c:	39 07       	cpc	r19, r25
    504e:	4a 07       	cpc	r20, r26
    5050:	5b 07       	cpc	r21, r27
    5052:	18 f4       	brcc	.+6      	; 0x505a <__fpcmp_parts_f+0x8e>
    5054:	11 23       	and	r17, r17
    5056:	41 f0       	breq	.+16     	; 0x5068 <__fpcmp_parts_f+0x9c>
    5058:	0a c0       	rjmp	.+20     	; 0x506e <__fpcmp_parts_f+0xa2>
    505a:	82 17       	cp	r24, r18
    505c:	93 07       	cpc	r25, r19
    505e:	a4 07       	cpc	r26, r20
    5060:	b5 07       	cpc	r27, r21
    5062:	40 f4       	brcc	.+16     	; 0x5074 <__fpcmp_parts_f+0xa8>
    5064:	11 23       	and	r17, r17
    5066:	19 f0       	breq	.+6      	; 0x506e <__fpcmp_parts_f+0xa2>
    5068:	61 e0       	ldi	r22, 0x01	; 1
    506a:	70 e0       	ldi	r23, 0x00	; 0
    506c:	05 c0       	rjmp	.+10     	; 0x5078 <__fpcmp_parts_f+0xac>
    506e:	6f ef       	ldi	r22, 0xFF	; 255
    5070:	7f ef       	ldi	r23, 0xFF	; 255
    5072:	02 c0       	rjmp	.+4      	; 0x5078 <__fpcmp_parts_f+0xac>
    5074:	60 e0       	ldi	r22, 0x00	; 0
    5076:	70 e0       	ldi	r23, 0x00	; 0
    5078:	cb 01       	movw	r24, r22
    507a:	1f 91       	pop	r17
    507c:	08 95       	ret

0000507e <__prologue_saves__>:
    507e:	2f 92       	push	r2
    5080:	3f 92       	push	r3
    5082:	4f 92       	push	r4
    5084:	5f 92       	push	r5
    5086:	6f 92       	push	r6
    5088:	7f 92       	push	r7
    508a:	8f 92       	push	r8
    508c:	9f 92       	push	r9
    508e:	af 92       	push	r10
    5090:	bf 92       	push	r11
    5092:	cf 92       	push	r12
    5094:	df 92       	push	r13
    5096:	ef 92       	push	r14
    5098:	ff 92       	push	r15
    509a:	0f 93       	push	r16
    509c:	1f 93       	push	r17
    509e:	cf 93       	push	r28
    50a0:	df 93       	push	r29
    50a2:	cd b7       	in	r28, 0x3d	; 61
    50a4:	de b7       	in	r29, 0x3e	; 62
    50a6:	ca 1b       	sub	r28, r26
    50a8:	db 0b       	sbc	r29, r27
    50aa:	0f b6       	in	r0, 0x3f	; 63
    50ac:	f8 94       	cli
    50ae:	de bf       	out	0x3e, r29	; 62
    50b0:	0f be       	out	0x3f, r0	; 63
    50b2:	cd bf       	out	0x3d, r28	; 61
    50b4:	09 94       	ijmp

000050b6 <__epilogue_restores__>:
    50b6:	2a 88       	ldd	r2, Y+18	; 0x12
    50b8:	39 88       	ldd	r3, Y+17	; 0x11
    50ba:	48 88       	ldd	r4, Y+16	; 0x10
    50bc:	5f 84       	ldd	r5, Y+15	; 0x0f
    50be:	6e 84       	ldd	r6, Y+14	; 0x0e
    50c0:	7d 84       	ldd	r7, Y+13	; 0x0d
    50c2:	8c 84       	ldd	r8, Y+12	; 0x0c
    50c4:	9b 84       	ldd	r9, Y+11	; 0x0b
    50c6:	aa 84       	ldd	r10, Y+10	; 0x0a
    50c8:	b9 84       	ldd	r11, Y+9	; 0x09
    50ca:	c8 84       	ldd	r12, Y+8	; 0x08
    50cc:	df 80       	ldd	r13, Y+7	; 0x07
    50ce:	ee 80       	ldd	r14, Y+6	; 0x06
    50d0:	fd 80       	ldd	r15, Y+5	; 0x05
    50d2:	0c 81       	ldd	r16, Y+4	; 0x04
    50d4:	1b 81       	ldd	r17, Y+3	; 0x03
    50d6:	aa 81       	ldd	r26, Y+2	; 0x02
    50d8:	b9 81       	ldd	r27, Y+1	; 0x01
    50da:	ce 0f       	add	r28, r30
    50dc:	d1 1d       	adc	r29, r1
    50de:	0f b6       	in	r0, 0x3f	; 63
    50e0:	f8 94       	cli
    50e2:	de bf       	out	0x3e, r29	; 62
    50e4:	0f be       	out	0x3f, r0	; 63
    50e6:	cd bf       	out	0x3d, r28	; 61
    50e8:	ed 01       	movw	r28, r26
    50ea:	08 95       	ret

000050ec <fdevopen>:
    50ec:	0f 93       	push	r16
    50ee:	1f 93       	push	r17
    50f0:	cf 93       	push	r28
    50f2:	df 93       	push	r29
    50f4:	8c 01       	movw	r16, r24
    50f6:	eb 01       	movw	r28, r22
    50f8:	00 97       	sbiw	r24, 0x00	; 0
    50fa:	31 f4       	brne	.+12     	; 0x5108 <fdevopen+0x1c>
    50fc:	61 15       	cp	r22, r1
    50fe:	71 05       	cpc	r23, r1
    5100:	19 f4       	brne	.+6      	; 0x5108 <fdevopen+0x1c>
    5102:	20 e0       	ldi	r18, 0x00	; 0
    5104:	30 e0       	ldi	r19, 0x00	; 0
    5106:	38 c0       	rjmp	.+112    	; 0x5178 <fdevopen+0x8c>
    5108:	81 e0       	ldi	r24, 0x01	; 1
    510a:	90 e0       	ldi	r25, 0x00	; 0
    510c:	6e e0       	ldi	r22, 0x0E	; 14
    510e:	70 e0       	ldi	r23, 0x00	; 0
    5110:	0e 94 0f 2b 	call	0x561e	; 0x561e <calloc>
    5114:	fc 01       	movw	r30, r24
    5116:	9c 01       	movw	r18, r24
    5118:	00 97       	sbiw	r24, 0x00	; 0
    511a:	71 f1       	breq	.+92     	; 0x5178 <fdevopen+0x8c>
    511c:	80 e8       	ldi	r24, 0x80	; 128
    511e:	83 83       	std	Z+3, r24	; 0x03
    5120:	20 97       	sbiw	r28, 0x00	; 0
    5122:	71 f0       	breq	.+28     	; 0x5140 <fdevopen+0x54>
    5124:	d3 87       	std	Z+11, r29	; 0x0b
    5126:	c2 87       	std	Z+10, r28	; 0x0a
    5128:	81 e8       	ldi	r24, 0x81	; 129
    512a:	83 83       	std	Z+3, r24	; 0x03
    512c:	80 91 c4 01 	lds	r24, 0x01C4
    5130:	90 91 c5 01 	lds	r25, 0x01C5
    5134:	89 2b       	or	r24, r25
    5136:	21 f4       	brne	.+8      	; 0x5140 <fdevopen+0x54>
    5138:	f0 93 c5 01 	sts	0x01C5, r31
    513c:	e0 93 c4 01 	sts	0x01C4, r30
    5140:	01 15       	cp	r16, r1
    5142:	11 05       	cpc	r17, r1
    5144:	c9 f0       	breq	.+50     	; 0x5178 <fdevopen+0x8c>
    5146:	11 87       	std	Z+9, r17	; 0x09
    5148:	00 87       	std	Z+8, r16	; 0x08
    514a:	83 81       	ldd	r24, Z+3	; 0x03
    514c:	82 60       	ori	r24, 0x02	; 2
    514e:	83 83       	std	Z+3, r24	; 0x03
    5150:	80 91 c6 01 	lds	r24, 0x01C6
    5154:	90 91 c7 01 	lds	r25, 0x01C7
    5158:	89 2b       	or	r24, r25
    515a:	71 f4       	brne	.+28     	; 0x5178 <fdevopen+0x8c>
    515c:	f0 93 c7 01 	sts	0x01C7, r31
    5160:	e0 93 c6 01 	sts	0x01C6, r30
    5164:	80 91 c8 01 	lds	r24, 0x01C8
    5168:	90 91 c9 01 	lds	r25, 0x01C9
    516c:	89 2b       	or	r24, r25
    516e:	21 f4       	brne	.+8      	; 0x5178 <fdevopen+0x8c>
    5170:	f0 93 c9 01 	sts	0x01C9, r31
    5174:	e0 93 c8 01 	sts	0x01C8, r30
    5178:	c9 01       	movw	r24, r18
    517a:	df 91       	pop	r29
    517c:	cf 91       	pop	r28
    517e:	1f 91       	pop	r17
    5180:	0f 91       	pop	r16
    5182:	08 95       	ret

00005184 <printf>:
    5184:	df 93       	push	r29
    5186:	cf 93       	push	r28
    5188:	cd b7       	in	r28, 0x3d	; 61
    518a:	de b7       	in	r29, 0x3e	; 62
    518c:	fe 01       	movw	r30, r28
    518e:	35 96       	adiw	r30, 0x05	; 5
    5190:	61 91       	ld	r22, Z+
    5192:	71 91       	ld	r23, Z+
    5194:	80 91 c6 01 	lds	r24, 0x01C6
    5198:	90 91 c7 01 	lds	r25, 0x01C7
    519c:	af 01       	movw	r20, r30
    519e:	0e 94 09 29 	call	0x5212	; 0x5212 <vfprintf>
    51a2:	cf 91       	pop	r28
    51a4:	df 91       	pop	r29
    51a6:	08 95       	ret

000051a8 <puts>:
    51a8:	0f 93       	push	r16
    51aa:	1f 93       	push	r17
    51ac:	cf 93       	push	r28
    51ae:	df 93       	push	r29
    51b0:	8c 01       	movw	r16, r24
    51b2:	e0 91 c6 01 	lds	r30, 0x01C6
    51b6:	f0 91 c7 01 	lds	r31, 0x01C7
    51ba:	83 81       	ldd	r24, Z+3	; 0x03
    51bc:	81 ff       	sbrs	r24, 1
    51be:	21 c0       	rjmp	.+66     	; 0x5202 <puts+0x5a>
    51c0:	c0 e0       	ldi	r28, 0x00	; 0
    51c2:	d0 e0       	ldi	r29, 0x00	; 0
    51c4:	0d c0       	rjmp	.+26     	; 0x51e0 <puts+0x38>
    51c6:	e0 91 c6 01 	lds	r30, 0x01C6
    51ca:	f0 91 c7 01 	lds	r31, 0x01C7
    51ce:	20 85       	ldd	r18, Z+8	; 0x08
    51d0:	31 85       	ldd	r19, Z+9	; 0x09
    51d2:	bf 01       	movw	r22, r30
    51d4:	f9 01       	movw	r30, r18
    51d6:	09 95       	icall
    51d8:	89 2b       	or	r24, r25
    51da:	11 f0       	breq	.+4      	; 0x51e0 <puts+0x38>
    51dc:	cf ef       	ldi	r28, 0xFF	; 255
    51de:	df ef       	ldi	r29, 0xFF	; 255
    51e0:	f8 01       	movw	r30, r16
    51e2:	81 91       	ld	r24, Z+
    51e4:	8f 01       	movw	r16, r30
    51e6:	88 23       	and	r24, r24
    51e8:	71 f7       	brne	.-36     	; 0x51c6 <puts+0x1e>
    51ea:	e0 91 c6 01 	lds	r30, 0x01C6
    51ee:	f0 91 c7 01 	lds	r31, 0x01C7
    51f2:	20 85       	ldd	r18, Z+8	; 0x08
    51f4:	31 85       	ldd	r19, Z+9	; 0x09
    51f6:	8a e0       	ldi	r24, 0x0A	; 10
    51f8:	bf 01       	movw	r22, r30
    51fa:	f9 01       	movw	r30, r18
    51fc:	09 95       	icall
    51fe:	89 2b       	or	r24, r25
    5200:	11 f0       	breq	.+4      	; 0x5206 <puts+0x5e>
    5202:	cf ef       	ldi	r28, 0xFF	; 255
    5204:	df ef       	ldi	r29, 0xFF	; 255
    5206:	ce 01       	movw	r24, r28
    5208:	df 91       	pop	r29
    520a:	cf 91       	pop	r28
    520c:	1f 91       	pop	r17
    520e:	0f 91       	pop	r16
    5210:	08 95       	ret

00005212 <vfprintf>:
    5212:	2f 92       	push	r2
    5214:	3f 92       	push	r3
    5216:	4f 92       	push	r4
    5218:	5f 92       	push	r5
    521a:	6f 92       	push	r6
    521c:	7f 92       	push	r7
    521e:	8f 92       	push	r8
    5220:	9f 92       	push	r9
    5222:	af 92       	push	r10
    5224:	bf 92       	push	r11
    5226:	cf 92       	push	r12
    5228:	df 92       	push	r13
    522a:	ef 92       	push	r14
    522c:	ff 92       	push	r15
    522e:	0f 93       	push	r16
    5230:	1f 93       	push	r17
    5232:	df 93       	push	r29
    5234:	cf 93       	push	r28
    5236:	cd b7       	in	r28, 0x3d	; 61
    5238:	de b7       	in	r29, 0x3e	; 62
    523a:	2b 97       	sbiw	r28, 0x0b	; 11
    523c:	0f b6       	in	r0, 0x3f	; 63
    523e:	f8 94       	cli
    5240:	de bf       	out	0x3e, r29	; 62
    5242:	0f be       	out	0x3f, r0	; 63
    5244:	cd bf       	out	0x3d, r28	; 61
    5246:	3c 01       	movw	r6, r24
    5248:	2b 01       	movw	r4, r22
    524a:	5a 01       	movw	r10, r20
    524c:	fc 01       	movw	r30, r24
    524e:	17 82       	std	Z+7, r1	; 0x07
    5250:	16 82       	std	Z+6, r1	; 0x06
    5252:	83 81       	ldd	r24, Z+3	; 0x03
    5254:	81 fd       	sbrc	r24, 1
    5256:	03 c0       	rjmp	.+6      	; 0x525e <vfprintf+0x4c>
    5258:	6f ef       	ldi	r22, 0xFF	; 255
    525a:	7f ef       	ldi	r23, 0xFF	; 255
    525c:	c6 c1       	rjmp	.+908    	; 0x55ea <vfprintf+0x3d8>
    525e:	9a e0       	ldi	r25, 0x0A	; 10
    5260:	89 2e       	mov	r8, r25
    5262:	1e 01       	movw	r2, r28
    5264:	08 94       	sec
    5266:	21 1c       	adc	r2, r1
    5268:	31 1c       	adc	r3, r1
    526a:	f3 01       	movw	r30, r6
    526c:	23 81       	ldd	r18, Z+3	; 0x03
    526e:	f2 01       	movw	r30, r4
    5270:	23 fd       	sbrc	r18, 3
    5272:	85 91       	lpm	r24, Z+
    5274:	23 ff       	sbrs	r18, 3
    5276:	81 91       	ld	r24, Z+
    5278:	2f 01       	movw	r4, r30
    527a:	88 23       	and	r24, r24
    527c:	09 f4       	brne	.+2      	; 0x5280 <vfprintf+0x6e>
    527e:	b2 c1       	rjmp	.+868    	; 0x55e4 <vfprintf+0x3d2>
    5280:	85 32       	cpi	r24, 0x25	; 37
    5282:	39 f4       	brne	.+14     	; 0x5292 <vfprintf+0x80>
    5284:	23 fd       	sbrc	r18, 3
    5286:	85 91       	lpm	r24, Z+
    5288:	23 ff       	sbrs	r18, 3
    528a:	81 91       	ld	r24, Z+
    528c:	2f 01       	movw	r4, r30
    528e:	85 32       	cpi	r24, 0x25	; 37
    5290:	29 f4       	brne	.+10     	; 0x529c <vfprintf+0x8a>
    5292:	90 e0       	ldi	r25, 0x00	; 0
    5294:	b3 01       	movw	r22, r6
    5296:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    529a:	e7 cf       	rjmp	.-50     	; 0x526a <vfprintf+0x58>
    529c:	98 2f       	mov	r25, r24
    529e:	ff 24       	eor	r15, r15
    52a0:	ee 24       	eor	r14, r14
    52a2:	99 24       	eor	r9, r9
    52a4:	ff e1       	ldi	r31, 0x1F	; 31
    52a6:	ff 15       	cp	r31, r15
    52a8:	d0 f0       	brcs	.+52     	; 0x52de <vfprintf+0xcc>
    52aa:	9b 32       	cpi	r25, 0x2B	; 43
    52ac:	69 f0       	breq	.+26     	; 0x52c8 <vfprintf+0xb6>
    52ae:	9c 32       	cpi	r25, 0x2C	; 44
    52b0:	28 f4       	brcc	.+10     	; 0x52bc <vfprintf+0xaa>
    52b2:	90 32       	cpi	r25, 0x20	; 32
    52b4:	59 f0       	breq	.+22     	; 0x52cc <vfprintf+0xba>
    52b6:	93 32       	cpi	r25, 0x23	; 35
    52b8:	91 f4       	brne	.+36     	; 0x52de <vfprintf+0xcc>
    52ba:	0e c0       	rjmp	.+28     	; 0x52d8 <vfprintf+0xc6>
    52bc:	9d 32       	cpi	r25, 0x2D	; 45
    52be:	49 f0       	breq	.+18     	; 0x52d2 <vfprintf+0xc0>
    52c0:	90 33       	cpi	r25, 0x30	; 48
    52c2:	69 f4       	brne	.+26     	; 0x52de <vfprintf+0xcc>
    52c4:	41 e0       	ldi	r20, 0x01	; 1
    52c6:	24 c0       	rjmp	.+72     	; 0x5310 <vfprintf+0xfe>
    52c8:	52 e0       	ldi	r21, 0x02	; 2
    52ca:	f5 2a       	or	r15, r21
    52cc:	84 e0       	ldi	r24, 0x04	; 4
    52ce:	f8 2a       	or	r15, r24
    52d0:	28 c0       	rjmp	.+80     	; 0x5322 <vfprintf+0x110>
    52d2:	98 e0       	ldi	r25, 0x08	; 8
    52d4:	f9 2a       	or	r15, r25
    52d6:	25 c0       	rjmp	.+74     	; 0x5322 <vfprintf+0x110>
    52d8:	e0 e1       	ldi	r30, 0x10	; 16
    52da:	fe 2a       	or	r15, r30
    52dc:	22 c0       	rjmp	.+68     	; 0x5322 <vfprintf+0x110>
    52de:	f7 fc       	sbrc	r15, 7
    52e0:	29 c0       	rjmp	.+82     	; 0x5334 <vfprintf+0x122>
    52e2:	89 2f       	mov	r24, r25
    52e4:	80 53       	subi	r24, 0x30	; 48
    52e6:	8a 30       	cpi	r24, 0x0A	; 10
    52e8:	70 f4       	brcc	.+28     	; 0x5306 <vfprintf+0xf4>
    52ea:	f6 fe       	sbrs	r15, 6
    52ec:	05 c0       	rjmp	.+10     	; 0x52f8 <vfprintf+0xe6>
    52ee:	98 9c       	mul	r9, r8
    52f0:	90 2c       	mov	r9, r0
    52f2:	11 24       	eor	r1, r1
    52f4:	98 0e       	add	r9, r24
    52f6:	15 c0       	rjmp	.+42     	; 0x5322 <vfprintf+0x110>
    52f8:	e8 9c       	mul	r14, r8
    52fa:	e0 2c       	mov	r14, r0
    52fc:	11 24       	eor	r1, r1
    52fe:	e8 0e       	add	r14, r24
    5300:	f0 e2       	ldi	r31, 0x20	; 32
    5302:	ff 2a       	or	r15, r31
    5304:	0e c0       	rjmp	.+28     	; 0x5322 <vfprintf+0x110>
    5306:	9e 32       	cpi	r25, 0x2E	; 46
    5308:	29 f4       	brne	.+10     	; 0x5314 <vfprintf+0x102>
    530a:	f6 fc       	sbrc	r15, 6
    530c:	6b c1       	rjmp	.+726    	; 0x55e4 <vfprintf+0x3d2>
    530e:	40 e4       	ldi	r20, 0x40	; 64
    5310:	f4 2a       	or	r15, r20
    5312:	07 c0       	rjmp	.+14     	; 0x5322 <vfprintf+0x110>
    5314:	9c 36       	cpi	r25, 0x6C	; 108
    5316:	19 f4       	brne	.+6      	; 0x531e <vfprintf+0x10c>
    5318:	50 e8       	ldi	r21, 0x80	; 128
    531a:	f5 2a       	or	r15, r21
    531c:	02 c0       	rjmp	.+4      	; 0x5322 <vfprintf+0x110>
    531e:	98 36       	cpi	r25, 0x68	; 104
    5320:	49 f4       	brne	.+18     	; 0x5334 <vfprintf+0x122>
    5322:	f2 01       	movw	r30, r4
    5324:	23 fd       	sbrc	r18, 3
    5326:	95 91       	lpm	r25, Z+
    5328:	23 ff       	sbrs	r18, 3
    532a:	91 91       	ld	r25, Z+
    532c:	2f 01       	movw	r4, r30
    532e:	99 23       	and	r25, r25
    5330:	09 f0       	breq	.+2      	; 0x5334 <vfprintf+0x122>
    5332:	b8 cf       	rjmp	.-144    	; 0x52a4 <vfprintf+0x92>
    5334:	89 2f       	mov	r24, r25
    5336:	85 54       	subi	r24, 0x45	; 69
    5338:	83 30       	cpi	r24, 0x03	; 3
    533a:	18 f0       	brcs	.+6      	; 0x5342 <vfprintf+0x130>
    533c:	80 52       	subi	r24, 0x20	; 32
    533e:	83 30       	cpi	r24, 0x03	; 3
    5340:	38 f4       	brcc	.+14     	; 0x5350 <vfprintf+0x13e>
    5342:	44 e0       	ldi	r20, 0x04	; 4
    5344:	50 e0       	ldi	r21, 0x00	; 0
    5346:	a4 0e       	add	r10, r20
    5348:	b5 1e       	adc	r11, r21
    534a:	5f e3       	ldi	r21, 0x3F	; 63
    534c:	59 83       	std	Y+1, r21	; 0x01
    534e:	0f c0       	rjmp	.+30     	; 0x536e <vfprintf+0x15c>
    5350:	93 36       	cpi	r25, 0x63	; 99
    5352:	31 f0       	breq	.+12     	; 0x5360 <vfprintf+0x14e>
    5354:	93 37       	cpi	r25, 0x73	; 115
    5356:	79 f0       	breq	.+30     	; 0x5376 <vfprintf+0x164>
    5358:	93 35       	cpi	r25, 0x53	; 83
    535a:	09 f0       	breq	.+2      	; 0x535e <vfprintf+0x14c>
    535c:	56 c0       	rjmp	.+172    	; 0x540a <vfprintf+0x1f8>
    535e:	20 c0       	rjmp	.+64     	; 0x53a0 <vfprintf+0x18e>
    5360:	f5 01       	movw	r30, r10
    5362:	80 81       	ld	r24, Z
    5364:	89 83       	std	Y+1, r24	; 0x01
    5366:	42 e0       	ldi	r20, 0x02	; 2
    5368:	50 e0       	ldi	r21, 0x00	; 0
    536a:	a4 0e       	add	r10, r20
    536c:	b5 1e       	adc	r11, r21
    536e:	61 01       	movw	r12, r2
    5370:	01 e0       	ldi	r16, 0x01	; 1
    5372:	10 e0       	ldi	r17, 0x00	; 0
    5374:	12 c0       	rjmp	.+36     	; 0x539a <vfprintf+0x188>
    5376:	f5 01       	movw	r30, r10
    5378:	c0 80       	ld	r12, Z
    537a:	d1 80       	ldd	r13, Z+1	; 0x01
    537c:	f6 fc       	sbrc	r15, 6
    537e:	03 c0       	rjmp	.+6      	; 0x5386 <vfprintf+0x174>
    5380:	6f ef       	ldi	r22, 0xFF	; 255
    5382:	7f ef       	ldi	r23, 0xFF	; 255
    5384:	02 c0       	rjmp	.+4      	; 0x538a <vfprintf+0x178>
    5386:	69 2d       	mov	r22, r9
    5388:	70 e0       	ldi	r23, 0x00	; 0
    538a:	42 e0       	ldi	r20, 0x02	; 2
    538c:	50 e0       	ldi	r21, 0x00	; 0
    538e:	a4 0e       	add	r10, r20
    5390:	b5 1e       	adc	r11, r21
    5392:	c6 01       	movw	r24, r12
    5394:	0e 94 42 2c 	call	0x5884	; 0x5884 <strnlen>
    5398:	8c 01       	movw	r16, r24
    539a:	5f e7       	ldi	r21, 0x7F	; 127
    539c:	f5 22       	and	r15, r21
    539e:	14 c0       	rjmp	.+40     	; 0x53c8 <vfprintf+0x1b6>
    53a0:	f5 01       	movw	r30, r10
    53a2:	c0 80       	ld	r12, Z
    53a4:	d1 80       	ldd	r13, Z+1	; 0x01
    53a6:	f6 fc       	sbrc	r15, 6
    53a8:	03 c0       	rjmp	.+6      	; 0x53b0 <vfprintf+0x19e>
    53aa:	6f ef       	ldi	r22, 0xFF	; 255
    53ac:	7f ef       	ldi	r23, 0xFF	; 255
    53ae:	02 c0       	rjmp	.+4      	; 0x53b4 <vfprintf+0x1a2>
    53b0:	69 2d       	mov	r22, r9
    53b2:	70 e0       	ldi	r23, 0x00	; 0
    53b4:	42 e0       	ldi	r20, 0x02	; 2
    53b6:	50 e0       	ldi	r21, 0x00	; 0
    53b8:	a4 0e       	add	r10, r20
    53ba:	b5 1e       	adc	r11, r21
    53bc:	c6 01       	movw	r24, r12
    53be:	0e 94 30 2c 	call	0x5860	; 0x5860 <strnlen_P>
    53c2:	8c 01       	movw	r16, r24
    53c4:	50 e8       	ldi	r21, 0x80	; 128
    53c6:	f5 2a       	or	r15, r21
    53c8:	f3 fe       	sbrs	r15, 3
    53ca:	07 c0       	rjmp	.+14     	; 0x53da <vfprintf+0x1c8>
    53cc:	1a c0       	rjmp	.+52     	; 0x5402 <vfprintf+0x1f0>
    53ce:	80 e2       	ldi	r24, 0x20	; 32
    53d0:	90 e0       	ldi	r25, 0x00	; 0
    53d2:	b3 01       	movw	r22, r6
    53d4:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    53d8:	ea 94       	dec	r14
    53da:	8e 2d       	mov	r24, r14
    53dc:	90 e0       	ldi	r25, 0x00	; 0
    53de:	08 17       	cp	r16, r24
    53e0:	19 07       	cpc	r17, r25
    53e2:	a8 f3       	brcs	.-22     	; 0x53ce <vfprintf+0x1bc>
    53e4:	0e c0       	rjmp	.+28     	; 0x5402 <vfprintf+0x1f0>
    53e6:	f6 01       	movw	r30, r12
    53e8:	f7 fc       	sbrc	r15, 7
    53ea:	85 91       	lpm	r24, Z+
    53ec:	f7 fe       	sbrs	r15, 7
    53ee:	81 91       	ld	r24, Z+
    53f0:	6f 01       	movw	r12, r30
    53f2:	90 e0       	ldi	r25, 0x00	; 0
    53f4:	b3 01       	movw	r22, r6
    53f6:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    53fa:	e1 10       	cpse	r14, r1
    53fc:	ea 94       	dec	r14
    53fe:	01 50       	subi	r16, 0x01	; 1
    5400:	10 40       	sbci	r17, 0x00	; 0
    5402:	01 15       	cp	r16, r1
    5404:	11 05       	cpc	r17, r1
    5406:	79 f7       	brne	.-34     	; 0x53e6 <vfprintf+0x1d4>
    5408:	ea c0       	rjmp	.+468    	; 0x55de <vfprintf+0x3cc>
    540a:	94 36       	cpi	r25, 0x64	; 100
    540c:	11 f0       	breq	.+4      	; 0x5412 <vfprintf+0x200>
    540e:	99 36       	cpi	r25, 0x69	; 105
    5410:	69 f5       	brne	.+90     	; 0x546c <vfprintf+0x25a>
    5412:	f7 fe       	sbrs	r15, 7
    5414:	08 c0       	rjmp	.+16     	; 0x5426 <vfprintf+0x214>
    5416:	f5 01       	movw	r30, r10
    5418:	20 81       	ld	r18, Z
    541a:	31 81       	ldd	r19, Z+1	; 0x01
    541c:	42 81       	ldd	r20, Z+2	; 0x02
    541e:	53 81       	ldd	r21, Z+3	; 0x03
    5420:	84 e0       	ldi	r24, 0x04	; 4
    5422:	90 e0       	ldi	r25, 0x00	; 0
    5424:	0a c0       	rjmp	.+20     	; 0x543a <vfprintf+0x228>
    5426:	f5 01       	movw	r30, r10
    5428:	80 81       	ld	r24, Z
    542a:	91 81       	ldd	r25, Z+1	; 0x01
    542c:	9c 01       	movw	r18, r24
    542e:	44 27       	eor	r20, r20
    5430:	37 fd       	sbrc	r19, 7
    5432:	40 95       	com	r20
    5434:	54 2f       	mov	r21, r20
    5436:	82 e0       	ldi	r24, 0x02	; 2
    5438:	90 e0       	ldi	r25, 0x00	; 0
    543a:	a8 0e       	add	r10, r24
    543c:	b9 1e       	adc	r11, r25
    543e:	9f e6       	ldi	r25, 0x6F	; 111
    5440:	f9 22       	and	r15, r25
    5442:	57 ff       	sbrs	r21, 7
    5444:	09 c0       	rjmp	.+18     	; 0x5458 <vfprintf+0x246>
    5446:	50 95       	com	r21
    5448:	40 95       	com	r20
    544a:	30 95       	com	r19
    544c:	21 95       	neg	r18
    544e:	3f 4f       	sbci	r19, 0xFF	; 255
    5450:	4f 4f       	sbci	r20, 0xFF	; 255
    5452:	5f 4f       	sbci	r21, 0xFF	; 255
    5454:	e0 e8       	ldi	r30, 0x80	; 128
    5456:	fe 2a       	or	r15, r30
    5458:	ca 01       	movw	r24, r20
    545a:	b9 01       	movw	r22, r18
    545c:	a1 01       	movw	r20, r2
    545e:	2a e0       	ldi	r18, 0x0A	; 10
    5460:	30 e0       	ldi	r19, 0x00	; 0
    5462:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <__ultoa_invert>
    5466:	d8 2e       	mov	r13, r24
    5468:	d2 18       	sub	r13, r2
    546a:	40 c0       	rjmp	.+128    	; 0x54ec <vfprintf+0x2da>
    546c:	95 37       	cpi	r25, 0x75	; 117
    546e:	29 f4       	brne	.+10     	; 0x547a <vfprintf+0x268>
    5470:	1f 2d       	mov	r17, r15
    5472:	1f 7e       	andi	r17, 0xEF	; 239
    5474:	2a e0       	ldi	r18, 0x0A	; 10
    5476:	30 e0       	ldi	r19, 0x00	; 0
    5478:	1d c0       	rjmp	.+58     	; 0x54b4 <vfprintf+0x2a2>
    547a:	1f 2d       	mov	r17, r15
    547c:	19 7f       	andi	r17, 0xF9	; 249
    547e:	9f 36       	cpi	r25, 0x6F	; 111
    5480:	61 f0       	breq	.+24     	; 0x549a <vfprintf+0x288>
    5482:	90 37       	cpi	r25, 0x70	; 112
    5484:	20 f4       	brcc	.+8      	; 0x548e <vfprintf+0x27c>
    5486:	98 35       	cpi	r25, 0x58	; 88
    5488:	09 f0       	breq	.+2      	; 0x548c <vfprintf+0x27a>
    548a:	ac c0       	rjmp	.+344    	; 0x55e4 <vfprintf+0x3d2>
    548c:	0f c0       	rjmp	.+30     	; 0x54ac <vfprintf+0x29a>
    548e:	90 37       	cpi	r25, 0x70	; 112
    5490:	39 f0       	breq	.+14     	; 0x54a0 <vfprintf+0x28e>
    5492:	98 37       	cpi	r25, 0x78	; 120
    5494:	09 f0       	breq	.+2      	; 0x5498 <vfprintf+0x286>
    5496:	a6 c0       	rjmp	.+332    	; 0x55e4 <vfprintf+0x3d2>
    5498:	04 c0       	rjmp	.+8      	; 0x54a2 <vfprintf+0x290>
    549a:	28 e0       	ldi	r18, 0x08	; 8
    549c:	30 e0       	ldi	r19, 0x00	; 0
    549e:	0a c0       	rjmp	.+20     	; 0x54b4 <vfprintf+0x2a2>
    54a0:	10 61       	ori	r17, 0x10	; 16
    54a2:	14 fd       	sbrc	r17, 4
    54a4:	14 60       	ori	r17, 0x04	; 4
    54a6:	20 e1       	ldi	r18, 0x10	; 16
    54a8:	30 e0       	ldi	r19, 0x00	; 0
    54aa:	04 c0       	rjmp	.+8      	; 0x54b4 <vfprintf+0x2a2>
    54ac:	14 fd       	sbrc	r17, 4
    54ae:	16 60       	ori	r17, 0x06	; 6
    54b0:	20 e1       	ldi	r18, 0x10	; 16
    54b2:	32 e0       	ldi	r19, 0x02	; 2
    54b4:	17 ff       	sbrs	r17, 7
    54b6:	08 c0       	rjmp	.+16     	; 0x54c8 <vfprintf+0x2b6>
    54b8:	f5 01       	movw	r30, r10
    54ba:	60 81       	ld	r22, Z
    54bc:	71 81       	ldd	r23, Z+1	; 0x01
    54be:	82 81       	ldd	r24, Z+2	; 0x02
    54c0:	93 81       	ldd	r25, Z+3	; 0x03
    54c2:	44 e0       	ldi	r20, 0x04	; 4
    54c4:	50 e0       	ldi	r21, 0x00	; 0
    54c6:	08 c0       	rjmp	.+16     	; 0x54d8 <vfprintf+0x2c6>
    54c8:	f5 01       	movw	r30, r10
    54ca:	80 81       	ld	r24, Z
    54cc:	91 81       	ldd	r25, Z+1	; 0x01
    54ce:	bc 01       	movw	r22, r24
    54d0:	80 e0       	ldi	r24, 0x00	; 0
    54d2:	90 e0       	ldi	r25, 0x00	; 0
    54d4:	42 e0       	ldi	r20, 0x02	; 2
    54d6:	50 e0       	ldi	r21, 0x00	; 0
    54d8:	a4 0e       	add	r10, r20
    54da:	b5 1e       	adc	r11, r21
    54dc:	a1 01       	movw	r20, r2
    54de:	0e 94 79 2c 	call	0x58f2	; 0x58f2 <__ultoa_invert>
    54e2:	d8 2e       	mov	r13, r24
    54e4:	d2 18       	sub	r13, r2
    54e6:	8f e7       	ldi	r24, 0x7F	; 127
    54e8:	f8 2e       	mov	r15, r24
    54ea:	f1 22       	and	r15, r17
    54ec:	f6 fe       	sbrs	r15, 6
    54ee:	0b c0       	rjmp	.+22     	; 0x5506 <vfprintf+0x2f4>
    54f0:	5e ef       	ldi	r21, 0xFE	; 254
    54f2:	f5 22       	and	r15, r21
    54f4:	d9 14       	cp	r13, r9
    54f6:	38 f4       	brcc	.+14     	; 0x5506 <vfprintf+0x2f4>
    54f8:	f4 fe       	sbrs	r15, 4
    54fa:	07 c0       	rjmp	.+14     	; 0x550a <vfprintf+0x2f8>
    54fc:	f2 fc       	sbrc	r15, 2
    54fe:	05 c0       	rjmp	.+10     	; 0x550a <vfprintf+0x2f8>
    5500:	8f ee       	ldi	r24, 0xEF	; 239
    5502:	f8 22       	and	r15, r24
    5504:	02 c0       	rjmp	.+4      	; 0x550a <vfprintf+0x2f8>
    5506:	1d 2d       	mov	r17, r13
    5508:	01 c0       	rjmp	.+2      	; 0x550c <vfprintf+0x2fa>
    550a:	19 2d       	mov	r17, r9
    550c:	f4 fe       	sbrs	r15, 4
    550e:	0d c0       	rjmp	.+26     	; 0x552a <vfprintf+0x318>
    5510:	fe 01       	movw	r30, r28
    5512:	ed 0d       	add	r30, r13
    5514:	f1 1d       	adc	r31, r1
    5516:	80 81       	ld	r24, Z
    5518:	80 33       	cpi	r24, 0x30	; 48
    551a:	19 f4       	brne	.+6      	; 0x5522 <vfprintf+0x310>
    551c:	99 ee       	ldi	r25, 0xE9	; 233
    551e:	f9 22       	and	r15, r25
    5520:	08 c0       	rjmp	.+16     	; 0x5532 <vfprintf+0x320>
    5522:	1f 5f       	subi	r17, 0xFF	; 255
    5524:	f2 fe       	sbrs	r15, 2
    5526:	05 c0       	rjmp	.+10     	; 0x5532 <vfprintf+0x320>
    5528:	03 c0       	rjmp	.+6      	; 0x5530 <vfprintf+0x31e>
    552a:	8f 2d       	mov	r24, r15
    552c:	86 78       	andi	r24, 0x86	; 134
    552e:	09 f0       	breq	.+2      	; 0x5532 <vfprintf+0x320>
    5530:	1f 5f       	subi	r17, 0xFF	; 255
    5532:	0f 2d       	mov	r16, r15
    5534:	f3 fc       	sbrc	r15, 3
    5536:	14 c0       	rjmp	.+40     	; 0x5560 <vfprintf+0x34e>
    5538:	f0 fe       	sbrs	r15, 0
    553a:	0f c0       	rjmp	.+30     	; 0x555a <vfprintf+0x348>
    553c:	1e 15       	cp	r17, r14
    553e:	10 f0       	brcs	.+4      	; 0x5544 <vfprintf+0x332>
    5540:	9d 2c       	mov	r9, r13
    5542:	0b c0       	rjmp	.+22     	; 0x555a <vfprintf+0x348>
    5544:	9d 2c       	mov	r9, r13
    5546:	9e 0c       	add	r9, r14
    5548:	91 1a       	sub	r9, r17
    554a:	1e 2d       	mov	r17, r14
    554c:	06 c0       	rjmp	.+12     	; 0x555a <vfprintf+0x348>
    554e:	80 e2       	ldi	r24, 0x20	; 32
    5550:	90 e0       	ldi	r25, 0x00	; 0
    5552:	b3 01       	movw	r22, r6
    5554:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    5558:	1f 5f       	subi	r17, 0xFF	; 255
    555a:	1e 15       	cp	r17, r14
    555c:	c0 f3       	brcs	.-16     	; 0x554e <vfprintf+0x33c>
    555e:	04 c0       	rjmp	.+8      	; 0x5568 <vfprintf+0x356>
    5560:	1e 15       	cp	r17, r14
    5562:	10 f4       	brcc	.+4      	; 0x5568 <vfprintf+0x356>
    5564:	e1 1a       	sub	r14, r17
    5566:	01 c0       	rjmp	.+2      	; 0x556a <vfprintf+0x358>
    5568:	ee 24       	eor	r14, r14
    556a:	04 ff       	sbrs	r16, 4
    556c:	0f c0       	rjmp	.+30     	; 0x558c <vfprintf+0x37a>
    556e:	80 e3       	ldi	r24, 0x30	; 48
    5570:	90 e0       	ldi	r25, 0x00	; 0
    5572:	b3 01       	movw	r22, r6
    5574:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    5578:	02 ff       	sbrs	r16, 2
    557a:	1d c0       	rjmp	.+58     	; 0x55b6 <vfprintf+0x3a4>
    557c:	01 fd       	sbrc	r16, 1
    557e:	03 c0       	rjmp	.+6      	; 0x5586 <vfprintf+0x374>
    5580:	88 e7       	ldi	r24, 0x78	; 120
    5582:	90 e0       	ldi	r25, 0x00	; 0
    5584:	0e c0       	rjmp	.+28     	; 0x55a2 <vfprintf+0x390>
    5586:	88 e5       	ldi	r24, 0x58	; 88
    5588:	90 e0       	ldi	r25, 0x00	; 0
    558a:	0b c0       	rjmp	.+22     	; 0x55a2 <vfprintf+0x390>
    558c:	80 2f       	mov	r24, r16
    558e:	86 78       	andi	r24, 0x86	; 134
    5590:	91 f0       	breq	.+36     	; 0x55b6 <vfprintf+0x3a4>
    5592:	01 ff       	sbrs	r16, 1
    5594:	02 c0       	rjmp	.+4      	; 0x559a <vfprintf+0x388>
    5596:	8b e2       	ldi	r24, 0x2B	; 43
    5598:	01 c0       	rjmp	.+2      	; 0x559c <vfprintf+0x38a>
    559a:	80 e2       	ldi	r24, 0x20	; 32
    559c:	f7 fc       	sbrc	r15, 7
    559e:	8d e2       	ldi	r24, 0x2D	; 45
    55a0:	90 e0       	ldi	r25, 0x00	; 0
    55a2:	b3 01       	movw	r22, r6
    55a4:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    55a8:	06 c0       	rjmp	.+12     	; 0x55b6 <vfprintf+0x3a4>
    55aa:	80 e3       	ldi	r24, 0x30	; 48
    55ac:	90 e0       	ldi	r25, 0x00	; 0
    55ae:	b3 01       	movw	r22, r6
    55b0:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    55b4:	9a 94       	dec	r9
    55b6:	d9 14       	cp	r13, r9
    55b8:	c0 f3       	brcs	.-16     	; 0x55aa <vfprintf+0x398>
    55ba:	da 94       	dec	r13
    55bc:	f1 01       	movw	r30, r2
    55be:	ed 0d       	add	r30, r13
    55c0:	f1 1d       	adc	r31, r1
    55c2:	80 81       	ld	r24, Z
    55c4:	90 e0       	ldi	r25, 0x00	; 0
    55c6:	b3 01       	movw	r22, r6
    55c8:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    55cc:	dd 20       	and	r13, r13
    55ce:	a9 f7       	brne	.-22     	; 0x55ba <vfprintf+0x3a8>
    55d0:	06 c0       	rjmp	.+12     	; 0x55de <vfprintf+0x3cc>
    55d2:	80 e2       	ldi	r24, 0x20	; 32
    55d4:	90 e0       	ldi	r25, 0x00	; 0
    55d6:	b3 01       	movw	r22, r6
    55d8:	0e 94 4d 2c 	call	0x589a	; 0x589a <fputc>
    55dc:	ea 94       	dec	r14
    55de:	ee 20       	and	r14, r14
    55e0:	c1 f7       	brne	.-16     	; 0x55d2 <vfprintf+0x3c0>
    55e2:	43 ce       	rjmp	.-890    	; 0x526a <vfprintf+0x58>
    55e4:	f3 01       	movw	r30, r6
    55e6:	66 81       	ldd	r22, Z+6	; 0x06
    55e8:	77 81       	ldd	r23, Z+7	; 0x07
    55ea:	cb 01       	movw	r24, r22
    55ec:	2b 96       	adiw	r28, 0x0b	; 11
    55ee:	0f b6       	in	r0, 0x3f	; 63
    55f0:	f8 94       	cli
    55f2:	de bf       	out	0x3e, r29	; 62
    55f4:	0f be       	out	0x3f, r0	; 63
    55f6:	cd bf       	out	0x3d, r28	; 61
    55f8:	cf 91       	pop	r28
    55fa:	df 91       	pop	r29
    55fc:	1f 91       	pop	r17
    55fe:	0f 91       	pop	r16
    5600:	ff 90       	pop	r15
    5602:	ef 90       	pop	r14
    5604:	df 90       	pop	r13
    5606:	cf 90       	pop	r12
    5608:	bf 90       	pop	r11
    560a:	af 90       	pop	r10
    560c:	9f 90       	pop	r9
    560e:	8f 90       	pop	r8
    5610:	7f 90       	pop	r7
    5612:	6f 90       	pop	r6
    5614:	5f 90       	pop	r5
    5616:	4f 90       	pop	r4
    5618:	3f 90       	pop	r3
    561a:	2f 90       	pop	r2
    561c:	08 95       	ret

0000561e <calloc>:
    561e:	0f 93       	push	r16
    5620:	1f 93       	push	r17
    5622:	cf 93       	push	r28
    5624:	df 93       	push	r29
    5626:	68 9f       	mul	r22, r24
    5628:	80 01       	movw	r16, r0
    562a:	69 9f       	mul	r22, r25
    562c:	10 0d       	add	r17, r0
    562e:	78 9f       	mul	r23, r24
    5630:	10 0d       	add	r17, r0
    5632:	11 24       	eor	r1, r1
    5634:	c8 01       	movw	r24, r16
    5636:	0e 94 2b 2b 	call	0x5656	; 0x5656 <malloc>
    563a:	ec 01       	movw	r28, r24
    563c:	00 97       	sbiw	r24, 0x00	; 0
    563e:	29 f0       	breq	.+10     	; 0x564a <calloc+0x2c>
    5640:	60 e0       	ldi	r22, 0x00	; 0
    5642:	70 e0       	ldi	r23, 0x00	; 0
    5644:	a8 01       	movw	r20, r16
    5646:	0e 94 3b 2c 	call	0x5876	; 0x5876 <memset>
    564a:	ce 01       	movw	r24, r28
    564c:	df 91       	pop	r29
    564e:	cf 91       	pop	r28
    5650:	1f 91       	pop	r17
    5652:	0f 91       	pop	r16
    5654:	08 95       	ret

00005656 <malloc>:
    5656:	cf 93       	push	r28
    5658:	df 93       	push	r29
    565a:	bc 01       	movw	r22, r24
    565c:	82 30       	cpi	r24, 0x02	; 2
    565e:	91 05       	cpc	r25, r1
    5660:	10 f4       	brcc	.+4      	; 0x5666 <malloc+0x10>
    5662:	62 e0       	ldi	r22, 0x02	; 2
    5664:	70 e0       	ldi	r23, 0x00	; 0
    5666:	a0 91 cc 01 	lds	r26, 0x01CC
    566a:	b0 91 cd 01 	lds	r27, 0x01CD
    566e:	ed 01       	movw	r28, r26
    5670:	e0 e0       	ldi	r30, 0x00	; 0
    5672:	f0 e0       	ldi	r31, 0x00	; 0
    5674:	40 e0       	ldi	r20, 0x00	; 0
    5676:	50 e0       	ldi	r21, 0x00	; 0
    5678:	21 c0       	rjmp	.+66     	; 0x56bc <malloc+0x66>
    567a:	88 81       	ld	r24, Y
    567c:	99 81       	ldd	r25, Y+1	; 0x01
    567e:	86 17       	cp	r24, r22
    5680:	97 07       	cpc	r25, r23
    5682:	69 f4       	brne	.+26     	; 0x569e <malloc+0x48>
    5684:	8a 81       	ldd	r24, Y+2	; 0x02
    5686:	9b 81       	ldd	r25, Y+3	; 0x03
    5688:	30 97       	sbiw	r30, 0x00	; 0
    568a:	19 f0       	breq	.+6      	; 0x5692 <malloc+0x3c>
    568c:	93 83       	std	Z+3, r25	; 0x03
    568e:	82 83       	std	Z+2, r24	; 0x02
    5690:	04 c0       	rjmp	.+8      	; 0x569a <malloc+0x44>
    5692:	90 93 cd 01 	sts	0x01CD, r25
    5696:	80 93 cc 01 	sts	0x01CC, r24
    569a:	fe 01       	movw	r30, r28
    569c:	34 c0       	rjmp	.+104    	; 0x5706 <malloc+0xb0>
    569e:	68 17       	cp	r22, r24
    56a0:	79 07       	cpc	r23, r25
    56a2:	38 f4       	brcc	.+14     	; 0x56b2 <malloc+0x5c>
    56a4:	41 15       	cp	r20, r1
    56a6:	51 05       	cpc	r21, r1
    56a8:	19 f0       	breq	.+6      	; 0x56b0 <malloc+0x5a>
    56aa:	84 17       	cp	r24, r20
    56ac:	95 07       	cpc	r25, r21
    56ae:	08 f4       	brcc	.+2      	; 0x56b2 <malloc+0x5c>
    56b0:	ac 01       	movw	r20, r24
    56b2:	fe 01       	movw	r30, r28
    56b4:	8a 81       	ldd	r24, Y+2	; 0x02
    56b6:	9b 81       	ldd	r25, Y+3	; 0x03
    56b8:	9c 01       	movw	r18, r24
    56ba:	e9 01       	movw	r28, r18
    56bc:	20 97       	sbiw	r28, 0x00	; 0
    56be:	e9 f6       	brne	.-70     	; 0x567a <malloc+0x24>
    56c0:	41 15       	cp	r20, r1
    56c2:	51 05       	cpc	r21, r1
    56c4:	a9 f1       	breq	.+106    	; 0x5730 <malloc+0xda>
    56c6:	ca 01       	movw	r24, r20
    56c8:	86 1b       	sub	r24, r22
    56ca:	97 0b       	sbc	r25, r23
    56cc:	04 97       	sbiw	r24, 0x04	; 4
    56ce:	08 f4       	brcc	.+2      	; 0x56d2 <malloc+0x7c>
    56d0:	ba 01       	movw	r22, r20
    56d2:	e0 e0       	ldi	r30, 0x00	; 0
    56d4:	f0 e0       	ldi	r31, 0x00	; 0
    56d6:	2a c0       	rjmp	.+84     	; 0x572c <malloc+0xd6>
    56d8:	8d 91       	ld	r24, X+
    56da:	9c 91       	ld	r25, X
    56dc:	11 97       	sbiw	r26, 0x01	; 1
    56de:	84 17       	cp	r24, r20
    56e0:	95 07       	cpc	r25, r21
    56e2:	f9 f4       	brne	.+62     	; 0x5722 <malloc+0xcc>
    56e4:	64 17       	cp	r22, r20
    56e6:	75 07       	cpc	r23, r21
    56e8:	81 f4       	brne	.+32     	; 0x570a <malloc+0xb4>
    56ea:	12 96       	adiw	r26, 0x02	; 2
    56ec:	8d 91       	ld	r24, X+
    56ee:	9c 91       	ld	r25, X
    56f0:	13 97       	sbiw	r26, 0x03	; 3
    56f2:	30 97       	sbiw	r30, 0x00	; 0
    56f4:	19 f0       	breq	.+6      	; 0x56fc <malloc+0xa6>
    56f6:	93 83       	std	Z+3, r25	; 0x03
    56f8:	82 83       	std	Z+2, r24	; 0x02
    56fa:	04 c0       	rjmp	.+8      	; 0x5704 <malloc+0xae>
    56fc:	90 93 cd 01 	sts	0x01CD, r25
    5700:	80 93 cc 01 	sts	0x01CC, r24
    5704:	fd 01       	movw	r30, r26
    5706:	32 96       	adiw	r30, 0x02	; 2
    5708:	4f c0       	rjmp	.+158    	; 0x57a8 <malloc+0x152>
    570a:	ca 01       	movw	r24, r20
    570c:	86 1b       	sub	r24, r22
    570e:	97 0b       	sbc	r25, r23
    5710:	fd 01       	movw	r30, r26
    5712:	e8 0f       	add	r30, r24
    5714:	f9 1f       	adc	r31, r25
    5716:	61 93       	st	Z+, r22
    5718:	71 93       	st	Z+, r23
    571a:	02 97       	sbiw	r24, 0x02	; 2
    571c:	8d 93       	st	X+, r24
    571e:	9c 93       	st	X, r25
    5720:	43 c0       	rjmp	.+134    	; 0x57a8 <malloc+0x152>
    5722:	fd 01       	movw	r30, r26
    5724:	82 81       	ldd	r24, Z+2	; 0x02
    5726:	93 81       	ldd	r25, Z+3	; 0x03
    5728:	9c 01       	movw	r18, r24
    572a:	d9 01       	movw	r26, r18
    572c:	10 97       	sbiw	r26, 0x00	; 0
    572e:	a1 f6       	brne	.-88     	; 0x56d8 <malloc+0x82>
    5730:	80 91 ca 01 	lds	r24, 0x01CA
    5734:	90 91 cb 01 	lds	r25, 0x01CB
    5738:	89 2b       	or	r24, r25
    573a:	41 f4       	brne	.+16     	; 0x574c <malloc+0xf6>
    573c:	80 91 a9 01 	lds	r24, 0x01A9
    5740:	90 91 aa 01 	lds	r25, 0x01AA
    5744:	90 93 cb 01 	sts	0x01CB, r25
    5748:	80 93 ca 01 	sts	0x01CA, r24
    574c:	40 91 ab 01 	lds	r20, 0x01AB
    5750:	50 91 ac 01 	lds	r21, 0x01AC
    5754:	41 15       	cp	r20, r1
    5756:	51 05       	cpc	r21, r1
    5758:	41 f4       	brne	.+16     	; 0x576a <malloc+0x114>
    575a:	4d b7       	in	r20, 0x3d	; 61
    575c:	5e b7       	in	r21, 0x3e	; 62
    575e:	80 91 a7 01 	lds	r24, 0x01A7
    5762:	90 91 a8 01 	lds	r25, 0x01A8
    5766:	48 1b       	sub	r20, r24
    5768:	59 0b       	sbc	r21, r25
    576a:	20 91 ca 01 	lds	r18, 0x01CA
    576e:	30 91 cb 01 	lds	r19, 0x01CB
    5772:	24 17       	cp	r18, r20
    5774:	35 07       	cpc	r19, r21
    5776:	b0 f4       	brcc	.+44     	; 0x57a4 <malloc+0x14e>
    5778:	ca 01       	movw	r24, r20
    577a:	82 1b       	sub	r24, r18
    577c:	93 0b       	sbc	r25, r19
    577e:	86 17       	cp	r24, r22
    5780:	97 07       	cpc	r25, r23
    5782:	80 f0       	brcs	.+32     	; 0x57a4 <malloc+0x14e>
    5784:	ab 01       	movw	r20, r22
    5786:	4e 5f       	subi	r20, 0xFE	; 254
    5788:	5f 4f       	sbci	r21, 0xFF	; 255
    578a:	84 17       	cp	r24, r20
    578c:	95 07       	cpc	r25, r21
    578e:	50 f0       	brcs	.+20     	; 0x57a4 <malloc+0x14e>
    5790:	42 0f       	add	r20, r18
    5792:	53 1f       	adc	r21, r19
    5794:	50 93 cb 01 	sts	0x01CB, r21
    5798:	40 93 ca 01 	sts	0x01CA, r20
    579c:	f9 01       	movw	r30, r18
    579e:	61 93       	st	Z+, r22
    57a0:	71 93       	st	Z+, r23
    57a2:	02 c0       	rjmp	.+4      	; 0x57a8 <malloc+0x152>
    57a4:	e0 e0       	ldi	r30, 0x00	; 0
    57a6:	f0 e0       	ldi	r31, 0x00	; 0
    57a8:	cf 01       	movw	r24, r30
    57aa:	df 91       	pop	r29
    57ac:	cf 91       	pop	r28
    57ae:	08 95       	ret

000057b0 <free>:
    57b0:	cf 93       	push	r28
    57b2:	df 93       	push	r29
    57b4:	00 97       	sbiw	r24, 0x00	; 0
    57b6:	09 f4       	brne	.+2      	; 0x57ba <free+0xa>
    57b8:	50 c0       	rjmp	.+160    	; 0x585a <free+0xaa>
    57ba:	ec 01       	movw	r28, r24
    57bc:	22 97       	sbiw	r28, 0x02	; 2
    57be:	1b 82       	std	Y+3, r1	; 0x03
    57c0:	1a 82       	std	Y+2, r1	; 0x02
    57c2:	a0 91 cc 01 	lds	r26, 0x01CC
    57c6:	b0 91 cd 01 	lds	r27, 0x01CD
    57ca:	10 97       	sbiw	r26, 0x00	; 0
    57cc:	09 f1       	breq	.+66     	; 0x5810 <free+0x60>
    57ce:	40 e0       	ldi	r20, 0x00	; 0
    57d0:	50 e0       	ldi	r21, 0x00	; 0
    57d2:	ac 17       	cp	r26, r28
    57d4:	bd 07       	cpc	r27, r29
    57d6:	08 f1       	brcs	.+66     	; 0x581a <free+0x6a>
    57d8:	bb 83       	std	Y+3, r27	; 0x03
    57da:	aa 83       	std	Y+2, r26	; 0x02
    57dc:	fe 01       	movw	r30, r28
    57de:	21 91       	ld	r18, Z+
    57e0:	31 91       	ld	r19, Z+
    57e2:	e2 0f       	add	r30, r18
    57e4:	f3 1f       	adc	r31, r19
    57e6:	ae 17       	cp	r26, r30
    57e8:	bf 07       	cpc	r27, r31
    57ea:	79 f4       	brne	.+30     	; 0x580a <free+0x5a>
    57ec:	8d 91       	ld	r24, X+
    57ee:	9c 91       	ld	r25, X
    57f0:	11 97       	sbiw	r26, 0x01	; 1
    57f2:	28 0f       	add	r18, r24
    57f4:	39 1f       	adc	r19, r25
    57f6:	2e 5f       	subi	r18, 0xFE	; 254
    57f8:	3f 4f       	sbci	r19, 0xFF	; 255
    57fa:	39 83       	std	Y+1, r19	; 0x01
    57fc:	28 83       	st	Y, r18
    57fe:	12 96       	adiw	r26, 0x02	; 2
    5800:	8d 91       	ld	r24, X+
    5802:	9c 91       	ld	r25, X
    5804:	13 97       	sbiw	r26, 0x03	; 3
    5806:	9b 83       	std	Y+3, r25	; 0x03
    5808:	8a 83       	std	Y+2, r24	; 0x02
    580a:	41 15       	cp	r20, r1
    580c:	51 05       	cpc	r21, r1
    580e:	71 f4       	brne	.+28     	; 0x582c <free+0x7c>
    5810:	d0 93 cd 01 	sts	0x01CD, r29
    5814:	c0 93 cc 01 	sts	0x01CC, r28
    5818:	20 c0       	rjmp	.+64     	; 0x585a <free+0xaa>
    581a:	12 96       	adiw	r26, 0x02	; 2
    581c:	8d 91       	ld	r24, X+
    581e:	9c 91       	ld	r25, X
    5820:	13 97       	sbiw	r26, 0x03	; 3
    5822:	ad 01       	movw	r20, r26
    5824:	00 97       	sbiw	r24, 0x00	; 0
    5826:	11 f0       	breq	.+4      	; 0x582c <free+0x7c>
    5828:	dc 01       	movw	r26, r24
    582a:	d3 cf       	rjmp	.-90     	; 0x57d2 <free+0x22>
    582c:	fa 01       	movw	r30, r20
    582e:	d3 83       	std	Z+3, r29	; 0x03
    5830:	c2 83       	std	Z+2, r28	; 0x02
    5832:	21 91       	ld	r18, Z+
    5834:	31 91       	ld	r19, Z+
    5836:	e2 0f       	add	r30, r18
    5838:	f3 1f       	adc	r31, r19
    583a:	ce 17       	cp	r28, r30
    583c:	df 07       	cpc	r29, r31
    583e:	69 f4       	brne	.+26     	; 0x585a <free+0xaa>
    5840:	88 81       	ld	r24, Y
    5842:	99 81       	ldd	r25, Y+1	; 0x01
    5844:	28 0f       	add	r18, r24
    5846:	39 1f       	adc	r19, r25
    5848:	2e 5f       	subi	r18, 0xFE	; 254
    584a:	3f 4f       	sbci	r19, 0xFF	; 255
    584c:	fa 01       	movw	r30, r20
    584e:	31 83       	std	Z+1, r19	; 0x01
    5850:	20 83       	st	Z, r18
    5852:	8a 81       	ldd	r24, Y+2	; 0x02
    5854:	9b 81       	ldd	r25, Y+3	; 0x03
    5856:	93 83       	std	Z+3, r25	; 0x03
    5858:	82 83       	std	Z+2, r24	; 0x02
    585a:	df 91       	pop	r29
    585c:	cf 91       	pop	r28
    585e:	08 95       	ret

00005860 <strnlen_P>:
    5860:	fc 01       	movw	r30, r24
    5862:	05 90       	lpm	r0, Z+
    5864:	61 50       	subi	r22, 0x01	; 1
    5866:	70 40       	sbci	r23, 0x00	; 0
    5868:	01 10       	cpse	r0, r1
    586a:	d8 f7       	brcc	.-10     	; 0x5862 <strnlen_P+0x2>
    586c:	80 95       	com	r24
    586e:	90 95       	com	r25
    5870:	8e 0f       	add	r24, r30
    5872:	9f 1f       	adc	r25, r31
    5874:	08 95       	ret

00005876 <memset>:
    5876:	dc 01       	movw	r26, r24
    5878:	01 c0       	rjmp	.+2      	; 0x587c <memset+0x6>
    587a:	6d 93       	st	X+, r22
    587c:	41 50       	subi	r20, 0x01	; 1
    587e:	50 40       	sbci	r21, 0x00	; 0
    5880:	e0 f7       	brcc	.-8      	; 0x587a <memset+0x4>
    5882:	08 95       	ret

00005884 <strnlen>:
    5884:	fc 01       	movw	r30, r24
    5886:	61 50       	subi	r22, 0x01	; 1
    5888:	70 40       	sbci	r23, 0x00	; 0
    588a:	01 90       	ld	r0, Z+
    588c:	01 10       	cpse	r0, r1
    588e:	d8 f7       	brcc	.-10     	; 0x5886 <strnlen+0x2>
    5890:	80 95       	com	r24
    5892:	90 95       	com	r25
    5894:	8e 0f       	add	r24, r30
    5896:	9f 1f       	adc	r25, r31
    5898:	08 95       	ret

0000589a <fputc>:
    589a:	0f 93       	push	r16
    589c:	1f 93       	push	r17
    589e:	cf 93       	push	r28
    58a0:	df 93       	push	r29
    58a2:	8c 01       	movw	r16, r24
    58a4:	eb 01       	movw	r28, r22
    58a6:	8b 81       	ldd	r24, Y+3	; 0x03
    58a8:	81 ff       	sbrs	r24, 1
    58aa:	1b c0       	rjmp	.+54     	; 0x58e2 <fputc+0x48>
    58ac:	82 ff       	sbrs	r24, 2
    58ae:	0d c0       	rjmp	.+26     	; 0x58ca <fputc+0x30>
    58b0:	2e 81       	ldd	r18, Y+6	; 0x06
    58b2:	3f 81       	ldd	r19, Y+7	; 0x07
    58b4:	8c 81       	ldd	r24, Y+4	; 0x04
    58b6:	9d 81       	ldd	r25, Y+5	; 0x05
    58b8:	28 17       	cp	r18, r24
    58ba:	39 07       	cpc	r19, r25
    58bc:	64 f4       	brge	.+24     	; 0x58d6 <fputc+0x3c>
    58be:	e8 81       	ld	r30, Y
    58c0:	f9 81       	ldd	r31, Y+1	; 0x01
    58c2:	01 93       	st	Z+, r16
    58c4:	f9 83       	std	Y+1, r31	; 0x01
    58c6:	e8 83       	st	Y, r30
    58c8:	06 c0       	rjmp	.+12     	; 0x58d6 <fputc+0x3c>
    58ca:	e8 85       	ldd	r30, Y+8	; 0x08
    58cc:	f9 85       	ldd	r31, Y+9	; 0x09
    58ce:	80 2f       	mov	r24, r16
    58d0:	09 95       	icall
    58d2:	89 2b       	or	r24, r25
    58d4:	31 f4       	brne	.+12     	; 0x58e2 <fputc+0x48>
    58d6:	8e 81       	ldd	r24, Y+6	; 0x06
    58d8:	9f 81       	ldd	r25, Y+7	; 0x07
    58da:	01 96       	adiw	r24, 0x01	; 1
    58dc:	9f 83       	std	Y+7, r25	; 0x07
    58de:	8e 83       	std	Y+6, r24	; 0x06
    58e0:	02 c0       	rjmp	.+4      	; 0x58e6 <fputc+0x4c>
    58e2:	0f ef       	ldi	r16, 0xFF	; 255
    58e4:	1f ef       	ldi	r17, 0xFF	; 255
    58e6:	c8 01       	movw	r24, r16
    58e8:	df 91       	pop	r29
    58ea:	cf 91       	pop	r28
    58ec:	1f 91       	pop	r17
    58ee:	0f 91       	pop	r16
    58f0:	08 95       	ret

000058f2 <__ultoa_invert>:
    58f2:	fa 01       	movw	r30, r20
    58f4:	aa 27       	eor	r26, r26
    58f6:	28 30       	cpi	r18, 0x08	; 8
    58f8:	51 f1       	breq	.+84     	; 0x594e <__ultoa_invert+0x5c>
    58fa:	20 31       	cpi	r18, 0x10	; 16
    58fc:	81 f1       	breq	.+96     	; 0x595e <__ultoa_invert+0x6c>
    58fe:	e8 94       	clt
    5900:	6f 93       	push	r22
    5902:	6e 7f       	andi	r22, 0xFE	; 254
    5904:	6e 5f       	subi	r22, 0xFE	; 254
    5906:	7f 4f       	sbci	r23, 0xFF	; 255
    5908:	8f 4f       	sbci	r24, 0xFF	; 255
    590a:	9f 4f       	sbci	r25, 0xFF	; 255
    590c:	af 4f       	sbci	r26, 0xFF	; 255
    590e:	b1 e0       	ldi	r27, 0x01	; 1
    5910:	3e d0       	rcall	.+124    	; 0x598e <__ultoa_invert+0x9c>
    5912:	b4 e0       	ldi	r27, 0x04	; 4
    5914:	3c d0       	rcall	.+120    	; 0x598e <__ultoa_invert+0x9c>
    5916:	67 0f       	add	r22, r23
    5918:	78 1f       	adc	r23, r24
    591a:	89 1f       	adc	r24, r25
    591c:	9a 1f       	adc	r25, r26
    591e:	a1 1d       	adc	r26, r1
    5920:	68 0f       	add	r22, r24
    5922:	79 1f       	adc	r23, r25
    5924:	8a 1f       	adc	r24, r26
    5926:	91 1d       	adc	r25, r1
    5928:	a1 1d       	adc	r26, r1
    592a:	6a 0f       	add	r22, r26
    592c:	71 1d       	adc	r23, r1
    592e:	81 1d       	adc	r24, r1
    5930:	91 1d       	adc	r25, r1
    5932:	a1 1d       	adc	r26, r1
    5934:	20 d0       	rcall	.+64     	; 0x5976 <__ultoa_invert+0x84>
    5936:	09 f4       	brne	.+2      	; 0x593a <__ultoa_invert+0x48>
    5938:	68 94       	set
    593a:	3f 91       	pop	r19
    593c:	2a e0       	ldi	r18, 0x0A	; 10
    593e:	26 9f       	mul	r18, r22
    5940:	11 24       	eor	r1, r1
    5942:	30 19       	sub	r19, r0
    5944:	30 5d       	subi	r19, 0xD0	; 208
    5946:	31 93       	st	Z+, r19
    5948:	de f6       	brtc	.-74     	; 0x5900 <__ultoa_invert+0xe>
    594a:	cf 01       	movw	r24, r30
    594c:	08 95       	ret
    594e:	46 2f       	mov	r20, r22
    5950:	47 70       	andi	r20, 0x07	; 7
    5952:	40 5d       	subi	r20, 0xD0	; 208
    5954:	41 93       	st	Z+, r20
    5956:	b3 e0       	ldi	r27, 0x03	; 3
    5958:	0f d0       	rcall	.+30     	; 0x5978 <__ultoa_invert+0x86>
    595a:	c9 f7       	brne	.-14     	; 0x594e <__ultoa_invert+0x5c>
    595c:	f6 cf       	rjmp	.-20     	; 0x594a <__ultoa_invert+0x58>
    595e:	46 2f       	mov	r20, r22
    5960:	4f 70       	andi	r20, 0x0F	; 15
    5962:	40 5d       	subi	r20, 0xD0	; 208
    5964:	4a 33       	cpi	r20, 0x3A	; 58
    5966:	18 f0       	brcs	.+6      	; 0x596e <__ultoa_invert+0x7c>
    5968:	49 5d       	subi	r20, 0xD9	; 217
    596a:	31 fd       	sbrc	r19, 1
    596c:	40 52       	subi	r20, 0x20	; 32
    596e:	41 93       	st	Z+, r20
    5970:	02 d0       	rcall	.+4      	; 0x5976 <__ultoa_invert+0x84>
    5972:	a9 f7       	brne	.-22     	; 0x595e <__ultoa_invert+0x6c>
    5974:	ea cf       	rjmp	.-44     	; 0x594a <__ultoa_invert+0x58>
    5976:	b4 e0       	ldi	r27, 0x04	; 4
    5978:	a6 95       	lsr	r26
    597a:	97 95       	ror	r25
    597c:	87 95       	ror	r24
    597e:	77 95       	ror	r23
    5980:	67 95       	ror	r22
    5982:	ba 95       	dec	r27
    5984:	c9 f7       	brne	.-14     	; 0x5978 <__ultoa_invert+0x86>
    5986:	00 97       	sbiw	r24, 0x00	; 0
    5988:	61 05       	cpc	r22, r1
    598a:	71 05       	cpc	r23, r1
    598c:	08 95       	ret
    598e:	9b 01       	movw	r18, r22
    5990:	ac 01       	movw	r20, r24
    5992:	0a 2e       	mov	r0, r26
    5994:	06 94       	lsr	r0
    5996:	57 95       	ror	r21
    5998:	47 95       	ror	r20
    599a:	37 95       	ror	r19
    599c:	27 95       	ror	r18
    599e:	ba 95       	dec	r27
    59a0:	c9 f7       	brne	.-14     	; 0x5994 <__ultoa_invert+0xa2>
    59a2:	62 0f       	add	r22, r18
    59a4:	73 1f       	adc	r23, r19
    59a6:	84 1f       	adc	r24, r20
    59a8:	95 1f       	adc	r25, r21
    59aa:	a0 1d       	adc	r26, r0
    59ac:	08 95       	ret

000059ae <_exit>:
    59ae:	f8 94       	cli

000059b0 <__stop_program>:
    59b0:	ff cf       	rjmp	.-2      	; 0x59b0 <__stop_program>
