
Timer_ADC_1004.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  00000d56  00000dea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d56  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800146  00800146  00000e30  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000e30  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000000b6  00000000  00000000  00000e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000028b  00000000  00000000  00000f06  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000116  00000000  00000000  00001191  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000341  00000000  00000000  000012a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000090  00000000  00000000  000015e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000011c  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_14>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e5       	ldi	r30, 0x56	; 86
  a0:	fd e0       	ldi	r31, 0x0D	; 13
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 34       	cpi	r26, 0x46	; 70
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	11 e0       	ldi	r17, 0x01	; 1
  b4:	a6 e4       	ldi	r26, 0x46	; 70
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ab 35       	cpi	r26, 0x5B	; 91
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 af 01 	call	0x35e	; 0x35e <main>
  c6:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <port_init>:
int val0=0, val1=0, val2 =0;		//좌, 우의 센서값 저장
int sensor_flag = 0;	//센서플래그
char right_h=0, left_h=0, front_h=0;

void port_init(void)
{}
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	cd b7       	in	r28, 0x3d	; 61
  d4:	de b7       	in	r29, 0x3e	; 62
  d6:	cf 91       	pop	r28
  d8:	df 91       	pop	r29
  da:	08 95       	ret

000000dc <Putchar>:

static int Putchar(char c, FILE *stream)//FILE 사용안함, 송신, avr->컴퓨터
{
  dc:	df 93       	push	r29
  de:	cf 93       	push	r28
  e0:	00 d0       	rcall	.+0      	; 0xe2 <Putchar+0x6>
  e2:	0f 92       	push	r0
  e4:	cd b7       	in	r28, 0x3d	; 61
  e6:	de b7       	in	r29, 0x3e	; 62
  e8:	89 83       	std	Y+1, r24	; 0x01
  ea:	7b 83       	std	Y+3, r23	; 0x03
  ec:	6a 83       	std	Y+2, r22	; 0x02
 if(c == '\n')
  ee:	89 81       	ldd	r24, Y+1	; 0x01
  f0:	8a 30       	cpi	r24, 0x0A	; 10
  f2:	29 f4       	brne	.+10     	; 0xfe <Putchar+0x22>
  Putchar('\r', 0); 
  f4:	8d e0       	ldi	r24, 0x0D	; 13
  f6:	60 e0       	ldi	r22, 0x00	; 0
  f8:	70 e0       	ldi	r23, 0x00	; 0
  fa:	0e 94 6e 00 	call	0xdc	; 0xdc <Putchar>

 while(!(UCSR1A & 0x20)); // UDRE, data register empty
  fe:	eb e9       	ldi	r30, 0x9B	; 155
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	88 2f       	mov	r24, r24
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	80 72       	andi	r24, 0x20	; 32
 10a:	90 70       	andi	r25, 0x00	; 0
 10c:	00 97       	sbiw	r24, 0x00	; 0
 10e:	b9 f3       	breq	.-18     	; 0xfe <Putchar+0x22>
   UDR1 = c;
 110:	ec e9       	ldi	r30, 0x9C	; 156
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	89 81       	ldd	r24, Y+1	; 0x01
 116:	80 83       	st	Z, r24
 return 0;
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	90 e0       	ldi	r25, 0x00	; 0
}
 11c:	0f 90       	pop	r0
 11e:	0f 90       	pop	r0
 120:	0f 90       	pop	r0
 122:	cf 91       	pop	r28
 124:	df 91       	pop	r29
 126:	08 95       	ret

00000128 <Getchar>:
 
static int Getchar(FILE *stream)//수신, 컴퓨터->avr
{
 128:	df 93       	push	r29
 12a:	cf 93       	push	r28
 12c:	00 d0       	rcall	.+0      	; 0x12e <Getchar+0x6>
 12e:	cd b7       	in	r28, 0x3d	; 61
 130:	de b7       	in	r29, 0x3e	; 62
 132:	9a 83       	std	Y+2, r25	; 0x02
 134:	89 83       	std	Y+1, r24	; 0x01
 while(!(UCSR1A & 0x80));
 136:	eb e9       	ldi	r30, 0x9B	; 155
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	88 23       	and	r24, r24
 13e:	dc f7       	brge	.-10     	; 0x136 <Getchar+0xe>
 return UDR1;
 140:	ec e9       	ldi	r30, 0x9C	; 156
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	88 2f       	mov	r24, r24
 148:	90 e0       	ldi	r25, 0x00	; 0
}
 14a:	0f 90       	pop	r0
 14c:	0f 90       	pop	r0
 14e:	cf 91       	pop	r28
 150:	df 91       	pop	r29
 152:	08 95       	ret

00000154 <uart0_init>:

void uart0_init(void) //
{
 154:	df 93       	push	r29
 156:	cf 93       	push	r28
 158:	cd b7       	in	r28, 0x3d	; 61
 15a:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
 15c:	ea e2       	ldi	r30, 0x2A	; 42
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	10 82       	st	Z, r1
 UCSR0A = 0x00;
 162:	eb e2       	ldi	r30, 0x2B	; 43
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	10 82       	st	Z, r1
 UCSR0C = 0x06;
 168:	e5 e9       	ldi	r30, 0x95	; 149
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	86 e0       	ldi	r24, 0x06	; 6
 16e:	80 83       	st	Z, r24
 UBRR0L = 0x08; //1152
 170:	e9 e2       	ldi	r30, 0x29	; 41
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	88 e0       	ldi	r24, 0x08	; 8
 176:	80 83       	st	Z, r24
 UBRR0H = 0x00; 
 178:	e0 e9       	ldi	r30, 0x90	; 144
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	10 82       	st	Z, r1
 UCSR0B = 0b10011000; //수신만
 17e:	ea e2       	ldi	r30, 0x2A	; 42
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	88 e9       	ldi	r24, 0x98	; 152
 184:	80 83       	st	Z, r24
}
 186:	cf 91       	pop	r28
 188:	df 91       	pop	r29
 18a:	08 95       	ret

0000018c <uart1_init>:

void uart1_init(void) //PC와 통신
{
 18c:	df 93       	push	r29
 18e:	cf 93       	push	r28
 190:	cd b7       	in	r28, 0x3d	; 61
 192:	de b7       	in	r29, 0x3e	; 62
 UCSR1B = 0x00; //disable while setting baud rate
 194:	ea e9       	ldi	r30, 0x9A	; 154
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	10 82       	st	Z, r1
 UCSR1A = 0x00;
 19a:	eb e9       	ldi	r30, 0x9B	; 155
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	10 82       	st	Z, r1
 UCSR1C = 0x06;
 1a0:	ed e9       	ldi	r30, 0x9D	; 157
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	86 e0       	ldi	r24, 0x06	; 6
 1a6:	80 83       	st	Z, r24
 UBRR1L = 0x08; //set baud rate 115200
 1a8:	e9 e9       	ldi	r30, 0x99	; 153
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	88 e0       	ldi	r24, 0x08	; 8
 1ae:	80 83       	st	Z, r24
 UBRR1H = 0x00; 
 1b0:	e8 e9       	ldi	r30, 0x98	; 152
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	10 82       	st	Z, r1
 UCSR1B = 0b10011000; //송신 인터럽트 개방
 1b6:	ea e9       	ldi	r30, 0x9A	; 154
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	88 e9       	ldi	r24, 0x98	; 152
 1bc:	80 83       	st	Z, r24
}
 1be:	cf 91       	pop	r28
 1c0:	df 91       	pop	r29
 1c2:	08 95       	ret

000001c4 <__vector_14>:

ISR(TIMER1_OVF_vect)
{
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	00 90 5b 00 	lds	r0, 0x005B
 1d0:	0f 92       	push	r0
 1d2:	11 24       	eor	r1, r1
 1d4:	8f 93       	push	r24
 1d6:	9f 93       	push	r25
 1d8:	ef 93       	push	r30
 1da:	ff 93       	push	r31
 1dc:	df 93       	push	r29
 1de:	cf 93       	push	r28
 1e0:	00 d0       	rcall	.+0      	; 0x1e2 <__vector_14+0x1e>
 1e2:	cd b7       	in	r28, 0x3d	; 61
 1e4:	de b7       	in	r29, 0x3e	; 62
	ADCSRA = 0xFF;
 1e6:	e6 e2       	ldi	r30, 0x26	; 38
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	8f ef       	ldi	r24, 0xFF	; 255
 1ec:	80 83       	st	Z, r24

	switch(sensor_flag)
 1ee:	80 91 4c 01 	lds	r24, 0x014C
 1f2:	90 91 4d 01 	lds	r25, 0x014D
 1f6:	9a 83       	std	Y+2, r25	; 0x02
 1f8:	89 83       	std	Y+1, r24	; 0x01
 1fa:	89 81       	ldd	r24, Y+1	; 0x01
 1fc:	9a 81       	ldd	r25, Y+2	; 0x02
 1fe:	81 30       	cpi	r24, 0x01	; 1
 200:	91 05       	cpc	r25, r1
 202:	71 f1       	breq	.+92     	; 0x260 <__vector_14+0x9c>
 204:	89 81       	ldd	r24, Y+1	; 0x01
 206:	9a 81       	ldd	r25, Y+2	; 0x02
 208:	82 30       	cpi	r24, 0x02	; 2
 20a:	91 05       	cpc	r25, r1
 20c:	09 f4       	brne	.+2      	; 0x210 <__vector_14+0x4c>
 20e:	4b c0       	rjmp	.+150    	; 0x2a6 <__vector_14+0xe2>
 210:	89 81       	ldd	r24, Y+1	; 0x01
 212:	9a 81       	ldd	r25, Y+2	; 0x02
 214:	00 97       	sbiw	r24, 0x00	; 0
 216:	09 f0       	breq	.+2      	; 0x21a <__vector_14+0x56>
 218:	63 c0       	rjmp	.+198    	; 0x2e0 <__vector_14+0x11c>
	{
	case 0: 
	  ADMUX = 0xC0;	//// 내부 클럭 사용, 오른쪽 
 21a:	e7 e2       	ldi	r30, 0x27	; 39
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	80 ec       	ldi	r24, 0xC0	; 192
 220:	80 83       	st	Z, r24
	  while((ADCSRA & 0x10) == 0);
 222:	e6 e2       	ldi	r30, 0x26	; 38
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	80 81       	ld	r24, Z
 228:	88 2f       	mov	r24, r24
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	80 71       	andi	r24, 0x10	; 16
 22e:	90 70       	andi	r25, 0x00	; 0
 230:	00 97       	sbiw	r24, 0x00	; 0
 232:	b9 f3       	breq	.-18     	; 0x222 <__vector_14+0x5e>
	  	val0 = ADCW;
 234:	e4 e2       	ldi	r30, 0x24	; 36
 236:	f0 e0       	ldi	r31, 0x00	; 0
 238:	80 81       	ld	r24, Z
 23a:	91 81       	ldd	r25, Z+1	; 0x01
 23c:	90 93 47 01 	sts	0x0147, r25
 240:	80 93 46 01 	sts	0x0146, r24
		ADCW = 0;
 244:	e4 e2       	ldi	r30, 0x24	; 36
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	11 82       	std	Z+1, r1	; 0x01
 24a:	10 82       	st	Z, r1
		sensor_flag++;
 24c:	80 91 4c 01 	lds	r24, 0x014C
 250:	90 91 4d 01 	lds	r25, 0x014D
 254:	01 96       	adiw	r24, 0x01	; 1
 256:	90 93 4d 01 	sts	0x014D, r25
 25a:	80 93 4c 01 	sts	0x014C, r24
 25e:	40 c0       	rjmp	.+128    	; 0x2e0 <__vector_14+0x11c>
	  break;
	case 1:
	  ADMUX = 0xC1;	//// 왼쪽
 260:	e7 e2       	ldi	r30, 0x27	; 39
 262:	f0 e0       	ldi	r31, 0x00	; 0
 264:	81 ec       	ldi	r24, 0xC1	; 193
 266:	80 83       	st	Z, r24
	  while((ADCSRA & 0x10) == 0);
 268:	e6 e2       	ldi	r30, 0x26	; 38
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	88 2f       	mov	r24, r24
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	80 71       	andi	r24, 0x10	; 16
 274:	90 70       	andi	r25, 0x00	; 0
 276:	00 97       	sbiw	r24, 0x00	; 0
 278:	b9 f3       	breq	.-18     	; 0x268 <__vector_14+0xa4>
	  	val1 = ADCW;
 27a:	e4 e2       	ldi	r30, 0x24	; 36
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	91 81       	ldd	r25, Z+1	; 0x01
 282:	90 93 49 01 	sts	0x0149, r25
 286:	80 93 48 01 	sts	0x0148, r24
		ADCW = 0;
 28a:	e4 e2       	ldi	r30, 0x24	; 36
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	11 82       	std	Z+1, r1	; 0x01
 290:	10 82       	st	Z, r1
		sensor_flag++;
 292:	80 91 4c 01 	lds	r24, 0x014C
 296:	90 91 4d 01 	lds	r25, 0x014D
 29a:	01 96       	adiw	r24, 0x01	; 1
 29c:	90 93 4d 01 	sts	0x014D, r25
 2a0:	80 93 4c 01 	sts	0x014C, r24
 2a4:	1d c0       	rjmp	.+58     	; 0x2e0 <__vector_14+0x11c>
	  break;
	case 2:
	  ADMUX = 0xC2; // 가슴 적외선
 2a6:	e7 e2       	ldi	r30, 0x27	; 39
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	82 ec       	ldi	r24, 0xC2	; 194
 2ac:	80 83       	st	Z, r24
	  while((ADCSRA & 0x10) == 0);
 2ae:	e6 e2       	ldi	r30, 0x26	; 38
 2b0:	f0 e0       	ldi	r31, 0x00	; 0
 2b2:	80 81       	ld	r24, Z
 2b4:	88 2f       	mov	r24, r24
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	80 71       	andi	r24, 0x10	; 16
 2ba:	90 70       	andi	r25, 0x00	; 0
 2bc:	00 97       	sbiw	r24, 0x00	; 0
 2be:	b9 f3       	breq	.-18     	; 0x2ae <__vector_14+0xea>
	  val2 = ADCW;
 2c0:	e4 e2       	ldi	r30, 0x24	; 36
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	91 81       	ldd	r25, Z+1	; 0x01
 2c8:	90 93 4b 01 	sts	0x014B, r25
 2cc:	80 93 4a 01 	sts	0x014A, r24
	  ADCW = 0;
 2d0:	e4 e2       	ldi	r30, 0x24	; 36
 2d2:	f0 e0       	ldi	r31, 0x00	; 0
 2d4:	11 82       	std	Z+1, r1	; 0x01
 2d6:	10 82       	st	Z, r1
	  sensor_flag = 0;
 2d8:	10 92 4d 01 	sts	0x014D, r1
 2dc:	10 92 4c 01 	sts	0x014C, r1
	  break;
	}

	ADCSRA = 0x00;
 2e0:	e6 e2       	ldi	r30, 0x26	; 38
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	10 82       	st	Z, r1
}
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	cf 91       	pop	r28
 2ec:	df 91       	pop	r29
 2ee:	ff 91       	pop	r31
 2f0:	ef 91       	pop	r30
 2f2:	9f 91       	pop	r25
 2f4:	8f 91       	pop	r24
 2f6:	0f 90       	pop	r0
 2f8:	00 92 5b 00 	sts	0x005B, r0
 2fc:	0f 90       	pop	r0
 2fe:	0f be       	out	0x3f, r0	; 63
 300:	0f 90       	pop	r0
 302:	1f 90       	pop	r1
 304:	18 95       	reti

00000306 <init_devices>:

void init_devices(void)
{
 306:	df 93       	push	r29
 308:	cf 93       	push	r28
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
  cli(); //disable all interrupts
 30e:	f8 94       	cli
  port_init();
 310:	0e 94 67 00 	call	0xce	; 0xce <port_init>
  uart0_init();  
 314:	0e 94 aa 00 	call	0x154	; 0x154 <uart0_init>
  uart1_init();
 318:	0e 94 c6 00 	call	0x18c	; 0x18c <uart1_init>
  fdevopen(Putchar, Getchar);//file stream 0
 31c:	8e e6       	ldi	r24, 0x6E	; 110
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	24 e9       	ldi	r18, 0x94	; 148
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	b9 01       	movw	r22, r18
 326:	0e 94 48 02 	call	0x490	; 0x490 <fdevopen>
  sei(); 
 32a:	78 94       	sei

  DDRF=0xF8;	//F 0, 1, 2(가슴)번 핀 입력 설정
 32c:	e1 e6       	ldi	r30, 0x61	; 97
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	88 ef       	ldi	r24, 0xF8	; 248
 332:	80 83       	st	Z, r24
  ADCSRA = 0x00;	//처음에는 DISABLE -> 타이머 카운트를 이용하여 ENABLE 할 예정
 334:	e6 e2       	ldi	r30, 0x26	; 38
 336:	f0 e0       	ldi	r31, 0x00	; 0
 338:	10 82       	st	Z, r1

  DDRA=0x07;	//A 0, 1번 핀 출력 설정(진동) || 2번 핀 출력 설정 (LED)
 33a:	ea e3       	ldi	r30, 0x3A	; 58
 33c:	f0 e0       	ldi	r31, 0x00	; 0
 33e:	87 e0       	ldi	r24, 0x07	; 7
 340:	80 83       	st	Z, r24
  
  TIMSK = 0x04;		// 타이머, 카운트 1 오버플로 인터럽트 허용
 342:	e7 e5       	ldi	r30, 0x57	; 87
 344:	f0 e0       	ldi	r31, 0x00	; 0
 346:	84 e0       	ldi	r24, 0x04	; 4
 348:	80 83       	st	Z, r24
  TCCR1A = 0x00;	//
 34a:	ef e4       	ldi	r30, 0x4F	; 79
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	10 82       	st	Z, r1
  TCCR1B = 0x03;	//분주비 64
 350:	ee e4       	ldi	r30, 0x4E	; 78
 352:	f0 e0       	ldi	r31, 0x00	; 0
 354:	83 e0       	ldi	r24, 0x03	; 3
 356:	80 83       	st	Z, r24
}
 358:	cf 91       	pop	r28
 35a:	df 91       	pop	r29
 35c:	08 95       	ret

0000035e <main>:

int main(void)
{
 35e:	df 93       	push	r29
 360:	cf 93       	push	r28
 362:	cd b7       	in	r28, 0x3d	; 61
 364:	de b7       	in	r29, 0x3e	; 62
	init_devices();
 366:	0e 94 83 01 	call	0x306	; 0x306 <init_devices>

	printf("\r\n\r\nConnect with Timer_ADC\r\n");
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	0e 94 a6 02 	call	0x54c	; 0x54c <puts>
	while(1)
	{

	// *** 센서부분 *** //
	//센서부 값이 하나씩 밀렸기 때문에 값을 한번씩 밀어주기로 한다. -> 완료
	if(val1 > 300)	{	//왼쪽
 372:	80 91 48 01 	lds	r24, 0x0148
 376:	90 91 49 01 	lds	r25, 0x0149
 37a:	21 e0       	ldi	r18, 0x01	; 1
 37c:	8d 32       	cpi	r24, 0x2D	; 45
 37e:	92 07       	cpc	r25, r18
 380:	5c f0       	brlt	.+22     	; 0x398 <main+0x3a>
		PORTA |= 0x02;
 382:	ab e3       	ldi	r26, 0x3B	; 59
 384:	b0 e0       	ldi	r27, 0x00	; 0
 386:	eb e3       	ldi	r30, 0x3B	; 59
 388:	f0 e0       	ldi	r31, 0x00	; 0
 38a:	80 81       	ld	r24, Z
 38c:	82 60       	ori	r24, 0x02	; 2
 38e:	8c 93       	st	X, r24
		right_h = 1;
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	80 93 4e 01 	sts	0x014E, r24
 396:	0e c0       	rjmp	.+28     	; 0x3b4 <main+0x56>
	}
	else if(right_h == 1)	{
 398:	80 91 4e 01 	lds	r24, 0x014E
 39c:	81 30       	cpi	r24, 0x01	; 1
 39e:	51 f4       	brne	.+20     	; 0x3b4 <main+0x56>
		PORTA ^= 0x02;
 3a0:	ab e3       	ldi	r26, 0x3B	; 59
 3a2:	b0 e0       	ldi	r27, 0x00	; 0
 3a4:	eb e3       	ldi	r30, 0x3B	; 59
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	90 81       	ld	r25, Z
 3aa:	82 e0       	ldi	r24, 0x02	; 2
 3ac:	89 27       	eor	r24, r25
 3ae:	8c 93       	st	X, r24
		right_h = 0;
 3b0:	10 92 4e 01 	sts	0x014E, r1
	}
	if(val0 > 300)	{	//오른쪽
 3b4:	80 91 46 01 	lds	r24, 0x0146
 3b8:	90 91 47 01 	lds	r25, 0x0147
 3bc:	21 e0       	ldi	r18, 0x01	; 1
 3be:	8d 32       	cpi	r24, 0x2D	; 45
 3c0:	92 07       	cpc	r25, r18
 3c2:	5c f0       	brlt	.+22     	; 0x3da <main+0x7c>
		PORTA |= 0x01;
 3c4:	ab e3       	ldi	r26, 0x3B	; 59
 3c6:	b0 e0       	ldi	r27, 0x00	; 0
 3c8:	eb e3       	ldi	r30, 0x3B	; 59
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	81 60       	ori	r24, 0x01	; 1
 3d0:	8c 93       	st	X, r24
		left_h = 1;	//진동없는 상태 : 0, 진동있는 상태 : 1
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	80 93 4f 01 	sts	0x014F, r24
 3d8:	0e c0       	rjmp	.+28     	; 0x3f6 <main+0x98>
	}
	else if(left_h == 1)	{
 3da:	80 91 4f 01 	lds	r24, 0x014F
 3de:	81 30       	cpi	r24, 0x01	; 1
 3e0:	51 f4       	brne	.+20     	; 0x3f6 <main+0x98>
		PORTA ^= 0x01;
 3e2:	ab e3       	ldi	r26, 0x3B	; 59
 3e4:	b0 e0       	ldi	r27, 0x00	; 0
 3e6:	eb e3       	ldi	r30, 0x3B	; 59
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	90 81       	ld	r25, Z
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	89 27       	eor	r24, r25
 3f0:	8c 93       	st	X, r24
		left_h = 0;
 3f2:	10 92 4f 01 	sts	0x014F, r1
	}
	if(val2 > 500)	{	//가슴
 3f6:	80 91 4a 01 	lds	r24, 0x014A
 3fa:	90 91 4b 01 	lds	r25, 0x014B
 3fe:	21 e0       	ldi	r18, 0x01	; 1
 400:	85 3f       	cpi	r24, 0xF5	; 245
 402:	92 07       	cpc	r25, r18
 404:	5c f0       	brlt	.+22     	; 0x41c <main+0xbe>
		PORTA |= 0x03;
 406:	ab e3       	ldi	r26, 0x3B	; 59
 408:	b0 e0       	ldi	r27, 0x00	; 0
 40a:	eb e3       	ldi	r30, 0x3B	; 59
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	80 81       	ld	r24, Z
 410:	83 60       	ori	r24, 0x03	; 3
 412:	8c 93       	st	X, r24
		front_h = 1;
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	80 93 50 01 	sts	0x0150, r24
 41a:	0e c0       	rjmp	.+28     	; 0x438 <main+0xda>
	}
	else if(front_h == 1)	{
 41c:	80 91 50 01 	lds	r24, 0x0150
 420:	81 30       	cpi	r24, 0x01	; 1
 422:	51 f4       	brne	.+20     	; 0x438 <main+0xda>
		PORTA ^= 0x03;
 424:	ab e3       	ldi	r26, 0x3B	; 59
 426:	b0 e0       	ldi	r27, 0x00	; 0
 428:	eb e3       	ldi	r30, 0x3B	; 59
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	90 81       	ld	r25, Z
 42e:	83 e0       	ldi	r24, 0x03	; 3
 430:	89 27       	eor	r24, r25
 432:	8c 93       	st	X, r24
		front_h = 0;
 434:	10 92 50 01 	sts	0x0150, r1
	}
		printf("val0 : %3d, val1 : %3d, val2 : %3d\n", val0, val1, val2);
 438:	20 91 46 01 	lds	r18, 0x0146
 43c:	30 91 47 01 	lds	r19, 0x0147
 440:	40 91 48 01 	lds	r20, 0x0148
 444:	50 91 49 01 	lds	r21, 0x0149
 448:	60 91 4a 01 	lds	r22, 0x014A
 44c:	70 91 4b 01 	lds	r23, 0x014B
 450:	8d b7       	in	r24, 0x3d	; 61
 452:	9e b7       	in	r25, 0x3e	; 62
 454:	08 97       	sbiw	r24, 0x08	; 8
 456:	0f b6       	in	r0, 0x3f	; 63
 458:	f8 94       	cli
 45a:	9e bf       	out	0x3e, r25	; 62
 45c:	0f be       	out	0x3f, r0	; 63
 45e:	8d bf       	out	0x3d, r24	; 61
 460:	ed b7       	in	r30, 0x3d	; 61
 462:	fe b7       	in	r31, 0x3e	; 62
 464:	31 96       	adiw	r30, 0x01	; 1
 466:	8c e1       	ldi	r24, 0x1C	; 28
 468:	91 e0       	ldi	r25, 0x01	; 1
 46a:	91 83       	std	Z+1, r25	; 0x01
 46c:	80 83       	st	Z, r24
 46e:	33 83       	std	Z+3, r19	; 0x03
 470:	22 83       	std	Z+2, r18	; 0x02
 472:	55 83       	std	Z+5, r21	; 0x05
 474:	44 83       	std	Z+4, r20	; 0x04
 476:	77 83       	std	Z+7, r23	; 0x07
 478:	66 83       	std	Z+6, r22	; 0x06
 47a:	0e 94 94 02 	call	0x528	; 0x528 <printf>
 47e:	8d b7       	in	r24, 0x3d	; 61
 480:	9e b7       	in	r25, 0x3e	; 62
 482:	08 96       	adiw	r24, 0x08	; 8
 484:	0f b6       	in	r0, 0x3f	; 63
 486:	f8 94       	cli
 488:	9e bf       	out	0x3e, r25	; 62
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	8d bf       	out	0x3d, r24	; 61
 48e:	71 cf       	rjmp	.-286    	; 0x372 <main+0x14>

00000490 <fdevopen>:
 490:	0f 93       	push	r16
 492:	1f 93       	push	r17
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	8c 01       	movw	r16, r24
 49a:	eb 01       	movw	r28, r22
 49c:	00 97       	sbiw	r24, 0x00	; 0
 49e:	31 f4       	brne	.+12     	; 0x4ac <fdevopen+0x1c>
 4a0:	61 15       	cp	r22, r1
 4a2:	71 05       	cpc	r23, r1
 4a4:	19 f4       	brne	.+6      	; 0x4ac <fdevopen+0x1c>
 4a6:	20 e0       	ldi	r18, 0x00	; 0
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	38 c0       	rjmp	.+112    	; 0x51c <fdevopen+0x8c>
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	6e e0       	ldi	r22, 0x0E	; 14
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <calloc>
 4b8:	fc 01       	movw	r30, r24
 4ba:	9c 01       	movw	r18, r24
 4bc:	00 97       	sbiw	r24, 0x00	; 0
 4be:	71 f1       	breq	.+92     	; 0x51c <fdevopen+0x8c>
 4c0:	80 e8       	ldi	r24, 0x80	; 128
 4c2:	83 83       	std	Z+3, r24	; 0x03
 4c4:	20 97       	sbiw	r28, 0x00	; 0
 4c6:	71 f0       	breq	.+28     	; 0x4e4 <fdevopen+0x54>
 4c8:	d3 87       	std	Z+11, r29	; 0x0b
 4ca:	c2 87       	std	Z+10, r28	; 0x0a
 4cc:	81 e8       	ldi	r24, 0x81	; 129
 4ce:	83 83       	std	Z+3, r24	; 0x03
 4d0:	80 91 51 01 	lds	r24, 0x0151
 4d4:	90 91 52 01 	lds	r25, 0x0152
 4d8:	89 2b       	or	r24, r25
 4da:	21 f4       	brne	.+8      	; 0x4e4 <fdevopen+0x54>
 4dc:	f0 93 52 01 	sts	0x0152, r31
 4e0:	e0 93 51 01 	sts	0x0151, r30
 4e4:	01 15       	cp	r16, r1
 4e6:	11 05       	cpc	r17, r1
 4e8:	c9 f0       	breq	.+50     	; 0x51c <fdevopen+0x8c>
 4ea:	11 87       	std	Z+9, r17	; 0x09
 4ec:	00 87       	std	Z+8, r16	; 0x08
 4ee:	83 81       	ldd	r24, Z+3	; 0x03
 4f0:	82 60       	ori	r24, 0x02	; 2
 4f2:	83 83       	std	Z+3, r24	; 0x03
 4f4:	80 91 53 01 	lds	r24, 0x0153
 4f8:	90 91 54 01 	lds	r25, 0x0154
 4fc:	89 2b       	or	r24, r25
 4fe:	71 f4       	brne	.+28     	; 0x51c <fdevopen+0x8c>
 500:	f0 93 54 01 	sts	0x0154, r31
 504:	e0 93 53 01 	sts	0x0153, r30
 508:	80 91 55 01 	lds	r24, 0x0155
 50c:	90 91 56 01 	lds	r25, 0x0156
 510:	89 2b       	or	r24, r25
 512:	21 f4       	brne	.+8      	; 0x51c <fdevopen+0x8c>
 514:	f0 93 56 01 	sts	0x0156, r31
 518:	e0 93 55 01 	sts	0x0155, r30
 51c:	c9 01       	movw	r24, r18
 51e:	df 91       	pop	r29
 520:	cf 91       	pop	r28
 522:	1f 91       	pop	r17
 524:	0f 91       	pop	r16
 526:	08 95       	ret

00000528 <printf>:
 528:	df 93       	push	r29
 52a:	cf 93       	push	r28
 52c:	cd b7       	in	r28, 0x3d	; 61
 52e:	de b7       	in	r29, 0x3e	; 62
 530:	fe 01       	movw	r30, r28
 532:	35 96       	adiw	r30, 0x05	; 5
 534:	61 91       	ld	r22, Z+
 536:	71 91       	ld	r23, Z+
 538:	80 91 53 01 	lds	r24, 0x0153
 53c:	90 91 54 01 	lds	r25, 0x0154
 540:	af 01       	movw	r20, r30
 542:	0e 94 db 02 	call	0x5b6	; 0x5b6 <vfprintf>
 546:	cf 91       	pop	r28
 548:	df 91       	pop	r29
 54a:	08 95       	ret

0000054c <puts>:
 54c:	0f 93       	push	r16
 54e:	1f 93       	push	r17
 550:	cf 93       	push	r28
 552:	df 93       	push	r29
 554:	8c 01       	movw	r16, r24
 556:	e0 91 53 01 	lds	r30, 0x0153
 55a:	f0 91 54 01 	lds	r31, 0x0154
 55e:	83 81       	ldd	r24, Z+3	; 0x03
 560:	81 ff       	sbrs	r24, 1
 562:	21 c0       	rjmp	.+66     	; 0x5a6 <puts+0x5a>
 564:	c0 e0       	ldi	r28, 0x00	; 0
 566:	d0 e0       	ldi	r29, 0x00	; 0
 568:	0d c0       	rjmp	.+26     	; 0x584 <puts+0x38>
 56a:	e0 91 53 01 	lds	r30, 0x0153
 56e:	f0 91 54 01 	lds	r31, 0x0154
 572:	20 85       	ldd	r18, Z+8	; 0x08
 574:	31 85       	ldd	r19, Z+9	; 0x09
 576:	bf 01       	movw	r22, r30
 578:	f9 01       	movw	r30, r18
 57a:	09 95       	icall
 57c:	89 2b       	or	r24, r25
 57e:	11 f0       	breq	.+4      	; 0x584 <puts+0x38>
 580:	cf ef       	ldi	r28, 0xFF	; 255
 582:	df ef       	ldi	r29, 0xFF	; 255
 584:	f8 01       	movw	r30, r16
 586:	81 91       	ld	r24, Z+
 588:	8f 01       	movw	r16, r30
 58a:	88 23       	and	r24, r24
 58c:	71 f7       	brne	.-36     	; 0x56a <puts+0x1e>
 58e:	e0 91 53 01 	lds	r30, 0x0153
 592:	f0 91 54 01 	lds	r31, 0x0154
 596:	20 85       	ldd	r18, Z+8	; 0x08
 598:	31 85       	ldd	r19, Z+9	; 0x09
 59a:	8a e0       	ldi	r24, 0x0A	; 10
 59c:	bf 01       	movw	r22, r30
 59e:	f9 01       	movw	r30, r18
 5a0:	09 95       	icall
 5a2:	89 2b       	or	r24, r25
 5a4:	11 f0       	breq	.+4      	; 0x5aa <puts+0x5e>
 5a6:	cf ef       	ldi	r28, 0xFF	; 255
 5a8:	df ef       	ldi	r29, 0xFF	; 255
 5aa:	ce 01       	movw	r24, r28
 5ac:	df 91       	pop	r29
 5ae:	cf 91       	pop	r28
 5b0:	1f 91       	pop	r17
 5b2:	0f 91       	pop	r16
 5b4:	08 95       	ret

000005b6 <vfprintf>:
 5b6:	2f 92       	push	r2
 5b8:	3f 92       	push	r3
 5ba:	4f 92       	push	r4
 5bc:	5f 92       	push	r5
 5be:	6f 92       	push	r6
 5c0:	7f 92       	push	r7
 5c2:	8f 92       	push	r8
 5c4:	9f 92       	push	r9
 5c6:	af 92       	push	r10
 5c8:	bf 92       	push	r11
 5ca:	cf 92       	push	r12
 5cc:	df 92       	push	r13
 5ce:	ef 92       	push	r14
 5d0:	ff 92       	push	r15
 5d2:	0f 93       	push	r16
 5d4:	1f 93       	push	r17
 5d6:	df 93       	push	r29
 5d8:	cf 93       	push	r28
 5da:	cd b7       	in	r28, 0x3d	; 61
 5dc:	de b7       	in	r29, 0x3e	; 62
 5de:	2b 97       	sbiw	r28, 0x0b	; 11
 5e0:	0f b6       	in	r0, 0x3f	; 63
 5e2:	f8 94       	cli
 5e4:	de bf       	out	0x3e, r29	; 62
 5e6:	0f be       	out	0x3f, r0	; 63
 5e8:	cd bf       	out	0x3d, r28	; 61
 5ea:	3c 01       	movw	r6, r24
 5ec:	2b 01       	movw	r4, r22
 5ee:	5a 01       	movw	r10, r20
 5f0:	fc 01       	movw	r30, r24
 5f2:	17 82       	std	Z+7, r1	; 0x07
 5f4:	16 82       	std	Z+6, r1	; 0x06
 5f6:	83 81       	ldd	r24, Z+3	; 0x03
 5f8:	81 fd       	sbrc	r24, 1
 5fa:	03 c0       	rjmp	.+6      	; 0x602 <vfprintf+0x4c>
 5fc:	6f ef       	ldi	r22, 0xFF	; 255
 5fe:	7f ef       	ldi	r23, 0xFF	; 255
 600:	c6 c1       	rjmp	.+908    	; 0x98e <vfprintf+0x3d8>
 602:	9a e0       	ldi	r25, 0x0A	; 10
 604:	89 2e       	mov	r8, r25
 606:	1e 01       	movw	r2, r28
 608:	08 94       	sec
 60a:	21 1c       	adc	r2, r1
 60c:	31 1c       	adc	r3, r1
 60e:	f3 01       	movw	r30, r6
 610:	23 81       	ldd	r18, Z+3	; 0x03
 612:	f2 01       	movw	r30, r4
 614:	23 fd       	sbrc	r18, 3
 616:	85 91       	lpm	r24, Z+
 618:	23 ff       	sbrs	r18, 3
 61a:	81 91       	ld	r24, Z+
 61c:	2f 01       	movw	r4, r30
 61e:	88 23       	and	r24, r24
 620:	09 f4       	brne	.+2      	; 0x624 <vfprintf+0x6e>
 622:	b2 c1       	rjmp	.+868    	; 0x988 <vfprintf+0x3d2>
 624:	85 32       	cpi	r24, 0x25	; 37
 626:	39 f4       	brne	.+14     	; 0x636 <vfprintf+0x80>
 628:	23 fd       	sbrc	r18, 3
 62a:	85 91       	lpm	r24, Z+
 62c:	23 ff       	sbrs	r18, 3
 62e:	81 91       	ld	r24, Z+
 630:	2f 01       	movw	r4, r30
 632:	85 32       	cpi	r24, 0x25	; 37
 634:	29 f4       	brne	.+10     	; 0x640 <vfprintf+0x8a>
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	b3 01       	movw	r22, r6
 63a:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 63e:	e7 cf       	rjmp	.-50     	; 0x60e <vfprintf+0x58>
 640:	98 2f       	mov	r25, r24
 642:	ff 24       	eor	r15, r15
 644:	ee 24       	eor	r14, r14
 646:	99 24       	eor	r9, r9
 648:	ff e1       	ldi	r31, 0x1F	; 31
 64a:	ff 15       	cp	r31, r15
 64c:	d0 f0       	brcs	.+52     	; 0x682 <vfprintf+0xcc>
 64e:	9b 32       	cpi	r25, 0x2B	; 43
 650:	69 f0       	breq	.+26     	; 0x66c <vfprintf+0xb6>
 652:	9c 32       	cpi	r25, 0x2C	; 44
 654:	28 f4       	brcc	.+10     	; 0x660 <vfprintf+0xaa>
 656:	90 32       	cpi	r25, 0x20	; 32
 658:	59 f0       	breq	.+22     	; 0x670 <vfprintf+0xba>
 65a:	93 32       	cpi	r25, 0x23	; 35
 65c:	91 f4       	brne	.+36     	; 0x682 <vfprintf+0xcc>
 65e:	0e c0       	rjmp	.+28     	; 0x67c <vfprintf+0xc6>
 660:	9d 32       	cpi	r25, 0x2D	; 45
 662:	49 f0       	breq	.+18     	; 0x676 <vfprintf+0xc0>
 664:	90 33       	cpi	r25, 0x30	; 48
 666:	69 f4       	brne	.+26     	; 0x682 <vfprintf+0xcc>
 668:	41 e0       	ldi	r20, 0x01	; 1
 66a:	24 c0       	rjmp	.+72     	; 0x6b4 <vfprintf+0xfe>
 66c:	52 e0       	ldi	r21, 0x02	; 2
 66e:	f5 2a       	or	r15, r21
 670:	84 e0       	ldi	r24, 0x04	; 4
 672:	f8 2a       	or	r15, r24
 674:	28 c0       	rjmp	.+80     	; 0x6c6 <vfprintf+0x110>
 676:	98 e0       	ldi	r25, 0x08	; 8
 678:	f9 2a       	or	r15, r25
 67a:	25 c0       	rjmp	.+74     	; 0x6c6 <vfprintf+0x110>
 67c:	e0 e1       	ldi	r30, 0x10	; 16
 67e:	fe 2a       	or	r15, r30
 680:	22 c0       	rjmp	.+68     	; 0x6c6 <vfprintf+0x110>
 682:	f7 fc       	sbrc	r15, 7
 684:	29 c0       	rjmp	.+82     	; 0x6d8 <vfprintf+0x122>
 686:	89 2f       	mov	r24, r25
 688:	80 53       	subi	r24, 0x30	; 48
 68a:	8a 30       	cpi	r24, 0x0A	; 10
 68c:	70 f4       	brcc	.+28     	; 0x6aa <vfprintf+0xf4>
 68e:	f6 fe       	sbrs	r15, 6
 690:	05 c0       	rjmp	.+10     	; 0x69c <vfprintf+0xe6>
 692:	98 9c       	mul	r9, r8
 694:	90 2c       	mov	r9, r0
 696:	11 24       	eor	r1, r1
 698:	98 0e       	add	r9, r24
 69a:	15 c0       	rjmp	.+42     	; 0x6c6 <vfprintf+0x110>
 69c:	e8 9c       	mul	r14, r8
 69e:	e0 2c       	mov	r14, r0
 6a0:	11 24       	eor	r1, r1
 6a2:	e8 0e       	add	r14, r24
 6a4:	f0 e2       	ldi	r31, 0x20	; 32
 6a6:	ff 2a       	or	r15, r31
 6a8:	0e c0       	rjmp	.+28     	; 0x6c6 <vfprintf+0x110>
 6aa:	9e 32       	cpi	r25, 0x2E	; 46
 6ac:	29 f4       	brne	.+10     	; 0x6b8 <vfprintf+0x102>
 6ae:	f6 fc       	sbrc	r15, 6
 6b0:	6b c1       	rjmp	.+726    	; 0x988 <vfprintf+0x3d2>
 6b2:	40 e4       	ldi	r20, 0x40	; 64
 6b4:	f4 2a       	or	r15, r20
 6b6:	07 c0       	rjmp	.+14     	; 0x6c6 <vfprintf+0x110>
 6b8:	9c 36       	cpi	r25, 0x6C	; 108
 6ba:	19 f4       	brne	.+6      	; 0x6c2 <vfprintf+0x10c>
 6bc:	50 e8       	ldi	r21, 0x80	; 128
 6be:	f5 2a       	or	r15, r21
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <vfprintf+0x110>
 6c2:	98 36       	cpi	r25, 0x68	; 104
 6c4:	49 f4       	brne	.+18     	; 0x6d8 <vfprintf+0x122>
 6c6:	f2 01       	movw	r30, r4
 6c8:	23 fd       	sbrc	r18, 3
 6ca:	95 91       	lpm	r25, Z+
 6cc:	23 ff       	sbrs	r18, 3
 6ce:	91 91       	ld	r25, Z+
 6d0:	2f 01       	movw	r4, r30
 6d2:	99 23       	and	r25, r25
 6d4:	09 f0       	breq	.+2      	; 0x6d8 <vfprintf+0x122>
 6d6:	b8 cf       	rjmp	.-144    	; 0x648 <vfprintf+0x92>
 6d8:	89 2f       	mov	r24, r25
 6da:	85 54       	subi	r24, 0x45	; 69
 6dc:	83 30       	cpi	r24, 0x03	; 3
 6de:	18 f0       	brcs	.+6      	; 0x6e6 <vfprintf+0x130>
 6e0:	80 52       	subi	r24, 0x20	; 32
 6e2:	83 30       	cpi	r24, 0x03	; 3
 6e4:	38 f4       	brcc	.+14     	; 0x6f4 <vfprintf+0x13e>
 6e6:	44 e0       	ldi	r20, 0x04	; 4
 6e8:	50 e0       	ldi	r21, 0x00	; 0
 6ea:	a4 0e       	add	r10, r20
 6ec:	b5 1e       	adc	r11, r21
 6ee:	5f e3       	ldi	r21, 0x3F	; 63
 6f0:	59 83       	std	Y+1, r21	; 0x01
 6f2:	0f c0       	rjmp	.+30     	; 0x712 <vfprintf+0x15c>
 6f4:	93 36       	cpi	r25, 0x63	; 99
 6f6:	31 f0       	breq	.+12     	; 0x704 <vfprintf+0x14e>
 6f8:	93 37       	cpi	r25, 0x73	; 115
 6fa:	79 f0       	breq	.+30     	; 0x71a <vfprintf+0x164>
 6fc:	93 35       	cpi	r25, 0x53	; 83
 6fe:	09 f0       	breq	.+2      	; 0x702 <vfprintf+0x14c>
 700:	56 c0       	rjmp	.+172    	; 0x7ae <vfprintf+0x1f8>
 702:	20 c0       	rjmp	.+64     	; 0x744 <vfprintf+0x18e>
 704:	f5 01       	movw	r30, r10
 706:	80 81       	ld	r24, Z
 708:	89 83       	std	Y+1, r24	; 0x01
 70a:	42 e0       	ldi	r20, 0x02	; 2
 70c:	50 e0       	ldi	r21, 0x00	; 0
 70e:	a4 0e       	add	r10, r20
 710:	b5 1e       	adc	r11, r21
 712:	61 01       	movw	r12, r2
 714:	01 e0       	ldi	r16, 0x01	; 1
 716:	10 e0       	ldi	r17, 0x00	; 0
 718:	12 c0       	rjmp	.+36     	; 0x73e <vfprintf+0x188>
 71a:	f5 01       	movw	r30, r10
 71c:	c0 80       	ld	r12, Z
 71e:	d1 80       	ldd	r13, Z+1	; 0x01
 720:	f6 fc       	sbrc	r15, 6
 722:	03 c0       	rjmp	.+6      	; 0x72a <vfprintf+0x174>
 724:	6f ef       	ldi	r22, 0xFF	; 255
 726:	7f ef       	ldi	r23, 0xFF	; 255
 728:	02 c0       	rjmp	.+4      	; 0x72e <vfprintf+0x178>
 72a:	69 2d       	mov	r22, r9
 72c:	70 e0       	ldi	r23, 0x00	; 0
 72e:	42 e0       	ldi	r20, 0x02	; 2
 730:	50 e0       	ldi	r21, 0x00	; 0
 732:	a4 0e       	add	r10, r20
 734:	b5 1e       	adc	r11, r21
 736:	c6 01       	movw	r24, r12
 738:	0e 94 14 06 	call	0xc28	; 0xc28 <strnlen>
 73c:	8c 01       	movw	r16, r24
 73e:	5f e7       	ldi	r21, 0x7F	; 127
 740:	f5 22       	and	r15, r21
 742:	14 c0       	rjmp	.+40     	; 0x76c <vfprintf+0x1b6>
 744:	f5 01       	movw	r30, r10
 746:	c0 80       	ld	r12, Z
 748:	d1 80       	ldd	r13, Z+1	; 0x01
 74a:	f6 fc       	sbrc	r15, 6
 74c:	03 c0       	rjmp	.+6      	; 0x754 <vfprintf+0x19e>
 74e:	6f ef       	ldi	r22, 0xFF	; 255
 750:	7f ef       	ldi	r23, 0xFF	; 255
 752:	02 c0       	rjmp	.+4      	; 0x758 <vfprintf+0x1a2>
 754:	69 2d       	mov	r22, r9
 756:	70 e0       	ldi	r23, 0x00	; 0
 758:	42 e0       	ldi	r20, 0x02	; 2
 75a:	50 e0       	ldi	r21, 0x00	; 0
 75c:	a4 0e       	add	r10, r20
 75e:	b5 1e       	adc	r11, r21
 760:	c6 01       	movw	r24, r12
 762:	0e 94 02 06 	call	0xc04	; 0xc04 <strnlen_P>
 766:	8c 01       	movw	r16, r24
 768:	50 e8       	ldi	r21, 0x80	; 128
 76a:	f5 2a       	or	r15, r21
 76c:	f3 fe       	sbrs	r15, 3
 76e:	07 c0       	rjmp	.+14     	; 0x77e <vfprintf+0x1c8>
 770:	1a c0       	rjmp	.+52     	; 0x7a6 <vfprintf+0x1f0>
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	b3 01       	movw	r22, r6
 778:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 77c:	ea 94       	dec	r14
 77e:	8e 2d       	mov	r24, r14
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	08 17       	cp	r16, r24
 784:	19 07       	cpc	r17, r25
 786:	a8 f3       	brcs	.-22     	; 0x772 <vfprintf+0x1bc>
 788:	0e c0       	rjmp	.+28     	; 0x7a6 <vfprintf+0x1f0>
 78a:	f6 01       	movw	r30, r12
 78c:	f7 fc       	sbrc	r15, 7
 78e:	85 91       	lpm	r24, Z+
 790:	f7 fe       	sbrs	r15, 7
 792:	81 91       	ld	r24, Z+
 794:	6f 01       	movw	r12, r30
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	b3 01       	movw	r22, r6
 79a:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 79e:	e1 10       	cpse	r14, r1
 7a0:	ea 94       	dec	r14
 7a2:	01 50       	subi	r16, 0x01	; 1
 7a4:	10 40       	sbci	r17, 0x00	; 0
 7a6:	01 15       	cp	r16, r1
 7a8:	11 05       	cpc	r17, r1
 7aa:	79 f7       	brne	.-34     	; 0x78a <vfprintf+0x1d4>
 7ac:	ea c0       	rjmp	.+468    	; 0x982 <vfprintf+0x3cc>
 7ae:	94 36       	cpi	r25, 0x64	; 100
 7b0:	11 f0       	breq	.+4      	; 0x7b6 <vfprintf+0x200>
 7b2:	99 36       	cpi	r25, 0x69	; 105
 7b4:	69 f5       	brne	.+90     	; 0x810 <vfprintf+0x25a>
 7b6:	f7 fe       	sbrs	r15, 7
 7b8:	08 c0       	rjmp	.+16     	; 0x7ca <vfprintf+0x214>
 7ba:	f5 01       	movw	r30, r10
 7bc:	20 81       	ld	r18, Z
 7be:	31 81       	ldd	r19, Z+1	; 0x01
 7c0:	42 81       	ldd	r20, Z+2	; 0x02
 7c2:	53 81       	ldd	r21, Z+3	; 0x03
 7c4:	84 e0       	ldi	r24, 0x04	; 4
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	0a c0       	rjmp	.+20     	; 0x7de <vfprintf+0x228>
 7ca:	f5 01       	movw	r30, r10
 7cc:	80 81       	ld	r24, Z
 7ce:	91 81       	ldd	r25, Z+1	; 0x01
 7d0:	9c 01       	movw	r18, r24
 7d2:	44 27       	eor	r20, r20
 7d4:	37 fd       	sbrc	r19, 7
 7d6:	40 95       	com	r20
 7d8:	54 2f       	mov	r21, r20
 7da:	82 e0       	ldi	r24, 0x02	; 2
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	a8 0e       	add	r10, r24
 7e0:	b9 1e       	adc	r11, r25
 7e2:	9f e6       	ldi	r25, 0x6F	; 111
 7e4:	f9 22       	and	r15, r25
 7e6:	57 ff       	sbrs	r21, 7
 7e8:	09 c0       	rjmp	.+18     	; 0x7fc <vfprintf+0x246>
 7ea:	50 95       	com	r21
 7ec:	40 95       	com	r20
 7ee:	30 95       	com	r19
 7f0:	21 95       	neg	r18
 7f2:	3f 4f       	sbci	r19, 0xFF	; 255
 7f4:	4f 4f       	sbci	r20, 0xFF	; 255
 7f6:	5f 4f       	sbci	r21, 0xFF	; 255
 7f8:	e0 e8       	ldi	r30, 0x80	; 128
 7fa:	fe 2a       	or	r15, r30
 7fc:	ca 01       	movw	r24, r20
 7fe:	b9 01       	movw	r22, r18
 800:	a1 01       	movw	r20, r2
 802:	2a e0       	ldi	r18, 0x0A	; 10
 804:	30 e0       	ldi	r19, 0x00	; 0
 806:	0e 94 4b 06 	call	0xc96	; 0xc96 <__ultoa_invert>
 80a:	d8 2e       	mov	r13, r24
 80c:	d2 18       	sub	r13, r2
 80e:	40 c0       	rjmp	.+128    	; 0x890 <vfprintf+0x2da>
 810:	95 37       	cpi	r25, 0x75	; 117
 812:	29 f4       	brne	.+10     	; 0x81e <vfprintf+0x268>
 814:	1f 2d       	mov	r17, r15
 816:	1f 7e       	andi	r17, 0xEF	; 239
 818:	2a e0       	ldi	r18, 0x0A	; 10
 81a:	30 e0       	ldi	r19, 0x00	; 0
 81c:	1d c0       	rjmp	.+58     	; 0x858 <vfprintf+0x2a2>
 81e:	1f 2d       	mov	r17, r15
 820:	19 7f       	andi	r17, 0xF9	; 249
 822:	9f 36       	cpi	r25, 0x6F	; 111
 824:	61 f0       	breq	.+24     	; 0x83e <vfprintf+0x288>
 826:	90 37       	cpi	r25, 0x70	; 112
 828:	20 f4       	brcc	.+8      	; 0x832 <vfprintf+0x27c>
 82a:	98 35       	cpi	r25, 0x58	; 88
 82c:	09 f0       	breq	.+2      	; 0x830 <vfprintf+0x27a>
 82e:	ac c0       	rjmp	.+344    	; 0x988 <vfprintf+0x3d2>
 830:	0f c0       	rjmp	.+30     	; 0x850 <vfprintf+0x29a>
 832:	90 37       	cpi	r25, 0x70	; 112
 834:	39 f0       	breq	.+14     	; 0x844 <vfprintf+0x28e>
 836:	98 37       	cpi	r25, 0x78	; 120
 838:	09 f0       	breq	.+2      	; 0x83c <vfprintf+0x286>
 83a:	a6 c0       	rjmp	.+332    	; 0x988 <vfprintf+0x3d2>
 83c:	04 c0       	rjmp	.+8      	; 0x846 <vfprintf+0x290>
 83e:	28 e0       	ldi	r18, 0x08	; 8
 840:	30 e0       	ldi	r19, 0x00	; 0
 842:	0a c0       	rjmp	.+20     	; 0x858 <vfprintf+0x2a2>
 844:	10 61       	ori	r17, 0x10	; 16
 846:	14 fd       	sbrc	r17, 4
 848:	14 60       	ori	r17, 0x04	; 4
 84a:	20 e1       	ldi	r18, 0x10	; 16
 84c:	30 e0       	ldi	r19, 0x00	; 0
 84e:	04 c0       	rjmp	.+8      	; 0x858 <vfprintf+0x2a2>
 850:	14 fd       	sbrc	r17, 4
 852:	16 60       	ori	r17, 0x06	; 6
 854:	20 e1       	ldi	r18, 0x10	; 16
 856:	32 e0       	ldi	r19, 0x02	; 2
 858:	17 ff       	sbrs	r17, 7
 85a:	08 c0       	rjmp	.+16     	; 0x86c <vfprintf+0x2b6>
 85c:	f5 01       	movw	r30, r10
 85e:	60 81       	ld	r22, Z
 860:	71 81       	ldd	r23, Z+1	; 0x01
 862:	82 81       	ldd	r24, Z+2	; 0x02
 864:	93 81       	ldd	r25, Z+3	; 0x03
 866:	44 e0       	ldi	r20, 0x04	; 4
 868:	50 e0       	ldi	r21, 0x00	; 0
 86a:	08 c0       	rjmp	.+16     	; 0x87c <vfprintf+0x2c6>
 86c:	f5 01       	movw	r30, r10
 86e:	80 81       	ld	r24, Z
 870:	91 81       	ldd	r25, Z+1	; 0x01
 872:	bc 01       	movw	r22, r24
 874:	80 e0       	ldi	r24, 0x00	; 0
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	42 e0       	ldi	r20, 0x02	; 2
 87a:	50 e0       	ldi	r21, 0x00	; 0
 87c:	a4 0e       	add	r10, r20
 87e:	b5 1e       	adc	r11, r21
 880:	a1 01       	movw	r20, r2
 882:	0e 94 4b 06 	call	0xc96	; 0xc96 <__ultoa_invert>
 886:	d8 2e       	mov	r13, r24
 888:	d2 18       	sub	r13, r2
 88a:	8f e7       	ldi	r24, 0x7F	; 127
 88c:	f8 2e       	mov	r15, r24
 88e:	f1 22       	and	r15, r17
 890:	f6 fe       	sbrs	r15, 6
 892:	0b c0       	rjmp	.+22     	; 0x8aa <vfprintf+0x2f4>
 894:	5e ef       	ldi	r21, 0xFE	; 254
 896:	f5 22       	and	r15, r21
 898:	d9 14       	cp	r13, r9
 89a:	38 f4       	brcc	.+14     	; 0x8aa <vfprintf+0x2f4>
 89c:	f4 fe       	sbrs	r15, 4
 89e:	07 c0       	rjmp	.+14     	; 0x8ae <vfprintf+0x2f8>
 8a0:	f2 fc       	sbrc	r15, 2
 8a2:	05 c0       	rjmp	.+10     	; 0x8ae <vfprintf+0x2f8>
 8a4:	8f ee       	ldi	r24, 0xEF	; 239
 8a6:	f8 22       	and	r15, r24
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <vfprintf+0x2f8>
 8aa:	1d 2d       	mov	r17, r13
 8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <vfprintf+0x2fa>
 8ae:	19 2d       	mov	r17, r9
 8b0:	f4 fe       	sbrs	r15, 4
 8b2:	0d c0       	rjmp	.+26     	; 0x8ce <vfprintf+0x318>
 8b4:	fe 01       	movw	r30, r28
 8b6:	ed 0d       	add	r30, r13
 8b8:	f1 1d       	adc	r31, r1
 8ba:	80 81       	ld	r24, Z
 8bc:	80 33       	cpi	r24, 0x30	; 48
 8be:	19 f4       	brne	.+6      	; 0x8c6 <vfprintf+0x310>
 8c0:	99 ee       	ldi	r25, 0xE9	; 233
 8c2:	f9 22       	and	r15, r25
 8c4:	08 c0       	rjmp	.+16     	; 0x8d6 <vfprintf+0x320>
 8c6:	1f 5f       	subi	r17, 0xFF	; 255
 8c8:	f2 fe       	sbrs	r15, 2
 8ca:	05 c0       	rjmp	.+10     	; 0x8d6 <vfprintf+0x320>
 8cc:	03 c0       	rjmp	.+6      	; 0x8d4 <vfprintf+0x31e>
 8ce:	8f 2d       	mov	r24, r15
 8d0:	86 78       	andi	r24, 0x86	; 134
 8d2:	09 f0       	breq	.+2      	; 0x8d6 <vfprintf+0x320>
 8d4:	1f 5f       	subi	r17, 0xFF	; 255
 8d6:	0f 2d       	mov	r16, r15
 8d8:	f3 fc       	sbrc	r15, 3
 8da:	14 c0       	rjmp	.+40     	; 0x904 <vfprintf+0x34e>
 8dc:	f0 fe       	sbrs	r15, 0
 8de:	0f c0       	rjmp	.+30     	; 0x8fe <vfprintf+0x348>
 8e0:	1e 15       	cp	r17, r14
 8e2:	10 f0       	brcs	.+4      	; 0x8e8 <vfprintf+0x332>
 8e4:	9d 2c       	mov	r9, r13
 8e6:	0b c0       	rjmp	.+22     	; 0x8fe <vfprintf+0x348>
 8e8:	9d 2c       	mov	r9, r13
 8ea:	9e 0c       	add	r9, r14
 8ec:	91 1a       	sub	r9, r17
 8ee:	1e 2d       	mov	r17, r14
 8f0:	06 c0       	rjmp	.+12     	; 0x8fe <vfprintf+0x348>
 8f2:	80 e2       	ldi	r24, 0x20	; 32
 8f4:	90 e0       	ldi	r25, 0x00	; 0
 8f6:	b3 01       	movw	r22, r6
 8f8:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 8fc:	1f 5f       	subi	r17, 0xFF	; 255
 8fe:	1e 15       	cp	r17, r14
 900:	c0 f3       	brcs	.-16     	; 0x8f2 <vfprintf+0x33c>
 902:	04 c0       	rjmp	.+8      	; 0x90c <vfprintf+0x356>
 904:	1e 15       	cp	r17, r14
 906:	10 f4       	brcc	.+4      	; 0x90c <vfprintf+0x356>
 908:	e1 1a       	sub	r14, r17
 90a:	01 c0       	rjmp	.+2      	; 0x90e <vfprintf+0x358>
 90c:	ee 24       	eor	r14, r14
 90e:	04 ff       	sbrs	r16, 4
 910:	0f c0       	rjmp	.+30     	; 0x930 <vfprintf+0x37a>
 912:	80 e3       	ldi	r24, 0x30	; 48
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	b3 01       	movw	r22, r6
 918:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 91c:	02 ff       	sbrs	r16, 2
 91e:	1d c0       	rjmp	.+58     	; 0x95a <vfprintf+0x3a4>
 920:	01 fd       	sbrc	r16, 1
 922:	03 c0       	rjmp	.+6      	; 0x92a <vfprintf+0x374>
 924:	88 e7       	ldi	r24, 0x78	; 120
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	0e c0       	rjmp	.+28     	; 0x946 <vfprintf+0x390>
 92a:	88 e5       	ldi	r24, 0x58	; 88
 92c:	90 e0       	ldi	r25, 0x00	; 0
 92e:	0b c0       	rjmp	.+22     	; 0x946 <vfprintf+0x390>
 930:	80 2f       	mov	r24, r16
 932:	86 78       	andi	r24, 0x86	; 134
 934:	91 f0       	breq	.+36     	; 0x95a <vfprintf+0x3a4>
 936:	01 ff       	sbrs	r16, 1
 938:	02 c0       	rjmp	.+4      	; 0x93e <vfprintf+0x388>
 93a:	8b e2       	ldi	r24, 0x2B	; 43
 93c:	01 c0       	rjmp	.+2      	; 0x940 <vfprintf+0x38a>
 93e:	80 e2       	ldi	r24, 0x20	; 32
 940:	f7 fc       	sbrc	r15, 7
 942:	8d e2       	ldi	r24, 0x2D	; 45
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	b3 01       	movw	r22, r6
 948:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 94c:	06 c0       	rjmp	.+12     	; 0x95a <vfprintf+0x3a4>
 94e:	80 e3       	ldi	r24, 0x30	; 48
 950:	90 e0       	ldi	r25, 0x00	; 0
 952:	b3 01       	movw	r22, r6
 954:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 958:	9a 94       	dec	r9
 95a:	d9 14       	cp	r13, r9
 95c:	c0 f3       	brcs	.-16     	; 0x94e <vfprintf+0x398>
 95e:	da 94       	dec	r13
 960:	f1 01       	movw	r30, r2
 962:	ed 0d       	add	r30, r13
 964:	f1 1d       	adc	r31, r1
 966:	80 81       	ld	r24, Z
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	b3 01       	movw	r22, r6
 96c:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 970:	dd 20       	and	r13, r13
 972:	a9 f7       	brne	.-22     	; 0x95e <vfprintf+0x3a8>
 974:	06 c0       	rjmp	.+12     	; 0x982 <vfprintf+0x3cc>
 976:	80 e2       	ldi	r24, 0x20	; 32
 978:	90 e0       	ldi	r25, 0x00	; 0
 97a:	b3 01       	movw	r22, r6
 97c:	0e 94 1f 06 	call	0xc3e	; 0xc3e <fputc>
 980:	ea 94       	dec	r14
 982:	ee 20       	and	r14, r14
 984:	c1 f7       	brne	.-16     	; 0x976 <vfprintf+0x3c0>
 986:	43 ce       	rjmp	.-890    	; 0x60e <vfprintf+0x58>
 988:	f3 01       	movw	r30, r6
 98a:	66 81       	ldd	r22, Z+6	; 0x06
 98c:	77 81       	ldd	r23, Z+7	; 0x07
 98e:	cb 01       	movw	r24, r22
 990:	2b 96       	adiw	r28, 0x0b	; 11
 992:	0f b6       	in	r0, 0x3f	; 63
 994:	f8 94       	cli
 996:	de bf       	out	0x3e, r29	; 62
 998:	0f be       	out	0x3f, r0	; 63
 99a:	cd bf       	out	0x3d, r28	; 61
 99c:	cf 91       	pop	r28
 99e:	df 91       	pop	r29
 9a0:	1f 91       	pop	r17
 9a2:	0f 91       	pop	r16
 9a4:	ff 90       	pop	r15
 9a6:	ef 90       	pop	r14
 9a8:	df 90       	pop	r13
 9aa:	cf 90       	pop	r12
 9ac:	bf 90       	pop	r11
 9ae:	af 90       	pop	r10
 9b0:	9f 90       	pop	r9
 9b2:	8f 90       	pop	r8
 9b4:	7f 90       	pop	r7
 9b6:	6f 90       	pop	r6
 9b8:	5f 90       	pop	r5
 9ba:	4f 90       	pop	r4
 9bc:	3f 90       	pop	r3
 9be:	2f 90       	pop	r2
 9c0:	08 95       	ret

000009c2 <calloc>:
 9c2:	0f 93       	push	r16
 9c4:	1f 93       	push	r17
 9c6:	cf 93       	push	r28
 9c8:	df 93       	push	r29
 9ca:	68 9f       	mul	r22, r24
 9cc:	80 01       	movw	r16, r0
 9ce:	69 9f       	mul	r22, r25
 9d0:	10 0d       	add	r17, r0
 9d2:	78 9f       	mul	r23, r24
 9d4:	10 0d       	add	r17, r0
 9d6:	11 24       	eor	r1, r1
 9d8:	c8 01       	movw	r24, r16
 9da:	0e 94 fd 04 	call	0x9fa	; 0x9fa <malloc>
 9de:	ec 01       	movw	r28, r24
 9e0:	00 97       	sbiw	r24, 0x00	; 0
 9e2:	29 f0       	breq	.+10     	; 0x9ee <calloc+0x2c>
 9e4:	60 e0       	ldi	r22, 0x00	; 0
 9e6:	70 e0       	ldi	r23, 0x00	; 0
 9e8:	a8 01       	movw	r20, r16
 9ea:	0e 94 0d 06 	call	0xc1a	; 0xc1a <memset>
 9ee:	ce 01       	movw	r24, r28
 9f0:	df 91       	pop	r29
 9f2:	cf 91       	pop	r28
 9f4:	1f 91       	pop	r17
 9f6:	0f 91       	pop	r16
 9f8:	08 95       	ret

000009fa <malloc>:
 9fa:	cf 93       	push	r28
 9fc:	df 93       	push	r29
 9fe:	bc 01       	movw	r22, r24
 a00:	82 30       	cpi	r24, 0x02	; 2
 a02:	91 05       	cpc	r25, r1
 a04:	10 f4       	brcc	.+4      	; 0xa0a <malloc+0x10>
 a06:	62 e0       	ldi	r22, 0x02	; 2
 a08:	70 e0       	ldi	r23, 0x00	; 0
 a0a:	a0 91 59 01 	lds	r26, 0x0159
 a0e:	b0 91 5a 01 	lds	r27, 0x015A
 a12:	ed 01       	movw	r28, r26
 a14:	e0 e0       	ldi	r30, 0x00	; 0
 a16:	f0 e0       	ldi	r31, 0x00	; 0
 a18:	40 e0       	ldi	r20, 0x00	; 0
 a1a:	50 e0       	ldi	r21, 0x00	; 0
 a1c:	21 c0       	rjmp	.+66     	; 0xa60 <malloc+0x66>
 a1e:	88 81       	ld	r24, Y
 a20:	99 81       	ldd	r25, Y+1	; 0x01
 a22:	86 17       	cp	r24, r22
 a24:	97 07       	cpc	r25, r23
 a26:	69 f4       	brne	.+26     	; 0xa42 <malloc+0x48>
 a28:	8a 81       	ldd	r24, Y+2	; 0x02
 a2a:	9b 81       	ldd	r25, Y+3	; 0x03
 a2c:	30 97       	sbiw	r30, 0x00	; 0
 a2e:	19 f0       	breq	.+6      	; 0xa36 <malloc+0x3c>
 a30:	93 83       	std	Z+3, r25	; 0x03
 a32:	82 83       	std	Z+2, r24	; 0x02
 a34:	04 c0       	rjmp	.+8      	; 0xa3e <malloc+0x44>
 a36:	90 93 5a 01 	sts	0x015A, r25
 a3a:	80 93 59 01 	sts	0x0159, r24
 a3e:	fe 01       	movw	r30, r28
 a40:	34 c0       	rjmp	.+104    	; 0xaaa <malloc+0xb0>
 a42:	68 17       	cp	r22, r24
 a44:	79 07       	cpc	r23, r25
 a46:	38 f4       	brcc	.+14     	; 0xa56 <malloc+0x5c>
 a48:	41 15       	cp	r20, r1
 a4a:	51 05       	cpc	r21, r1
 a4c:	19 f0       	breq	.+6      	; 0xa54 <malloc+0x5a>
 a4e:	84 17       	cp	r24, r20
 a50:	95 07       	cpc	r25, r21
 a52:	08 f4       	brcc	.+2      	; 0xa56 <malloc+0x5c>
 a54:	ac 01       	movw	r20, r24
 a56:	fe 01       	movw	r30, r28
 a58:	8a 81       	ldd	r24, Y+2	; 0x02
 a5a:	9b 81       	ldd	r25, Y+3	; 0x03
 a5c:	9c 01       	movw	r18, r24
 a5e:	e9 01       	movw	r28, r18
 a60:	20 97       	sbiw	r28, 0x00	; 0
 a62:	e9 f6       	brne	.-70     	; 0xa1e <malloc+0x24>
 a64:	41 15       	cp	r20, r1
 a66:	51 05       	cpc	r21, r1
 a68:	a9 f1       	breq	.+106    	; 0xad4 <malloc+0xda>
 a6a:	ca 01       	movw	r24, r20
 a6c:	86 1b       	sub	r24, r22
 a6e:	97 0b       	sbc	r25, r23
 a70:	04 97       	sbiw	r24, 0x04	; 4
 a72:	08 f4       	brcc	.+2      	; 0xa76 <malloc+0x7c>
 a74:	ba 01       	movw	r22, r20
 a76:	e0 e0       	ldi	r30, 0x00	; 0
 a78:	f0 e0       	ldi	r31, 0x00	; 0
 a7a:	2a c0       	rjmp	.+84     	; 0xad0 <malloc+0xd6>
 a7c:	8d 91       	ld	r24, X+
 a7e:	9c 91       	ld	r25, X
 a80:	11 97       	sbiw	r26, 0x01	; 1
 a82:	84 17       	cp	r24, r20
 a84:	95 07       	cpc	r25, r21
 a86:	f9 f4       	brne	.+62     	; 0xac6 <malloc+0xcc>
 a88:	64 17       	cp	r22, r20
 a8a:	75 07       	cpc	r23, r21
 a8c:	81 f4       	brne	.+32     	; 0xaae <malloc+0xb4>
 a8e:	12 96       	adiw	r26, 0x02	; 2
 a90:	8d 91       	ld	r24, X+
 a92:	9c 91       	ld	r25, X
 a94:	13 97       	sbiw	r26, 0x03	; 3
 a96:	30 97       	sbiw	r30, 0x00	; 0
 a98:	19 f0       	breq	.+6      	; 0xaa0 <malloc+0xa6>
 a9a:	93 83       	std	Z+3, r25	; 0x03
 a9c:	82 83       	std	Z+2, r24	; 0x02
 a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <malloc+0xae>
 aa0:	90 93 5a 01 	sts	0x015A, r25
 aa4:	80 93 59 01 	sts	0x0159, r24
 aa8:	fd 01       	movw	r30, r26
 aaa:	32 96       	adiw	r30, 0x02	; 2
 aac:	4f c0       	rjmp	.+158    	; 0xb4c <malloc+0x152>
 aae:	ca 01       	movw	r24, r20
 ab0:	86 1b       	sub	r24, r22
 ab2:	97 0b       	sbc	r25, r23
 ab4:	fd 01       	movw	r30, r26
 ab6:	e8 0f       	add	r30, r24
 ab8:	f9 1f       	adc	r31, r25
 aba:	61 93       	st	Z+, r22
 abc:	71 93       	st	Z+, r23
 abe:	02 97       	sbiw	r24, 0x02	; 2
 ac0:	8d 93       	st	X+, r24
 ac2:	9c 93       	st	X, r25
 ac4:	43 c0       	rjmp	.+134    	; 0xb4c <malloc+0x152>
 ac6:	fd 01       	movw	r30, r26
 ac8:	82 81       	ldd	r24, Z+2	; 0x02
 aca:	93 81       	ldd	r25, Z+3	; 0x03
 acc:	9c 01       	movw	r18, r24
 ace:	d9 01       	movw	r26, r18
 ad0:	10 97       	sbiw	r26, 0x00	; 0
 ad2:	a1 f6       	brne	.-88     	; 0xa7c <malloc+0x82>
 ad4:	80 91 57 01 	lds	r24, 0x0157
 ad8:	90 91 58 01 	lds	r25, 0x0158
 adc:	89 2b       	or	r24, r25
 ade:	41 f4       	brne	.+16     	; 0xaf0 <malloc+0xf6>
 ae0:	80 91 42 01 	lds	r24, 0x0142
 ae4:	90 91 43 01 	lds	r25, 0x0143
 ae8:	90 93 58 01 	sts	0x0158, r25
 aec:	80 93 57 01 	sts	0x0157, r24
 af0:	40 91 44 01 	lds	r20, 0x0144
 af4:	50 91 45 01 	lds	r21, 0x0145
 af8:	41 15       	cp	r20, r1
 afa:	51 05       	cpc	r21, r1
 afc:	41 f4       	brne	.+16     	; 0xb0e <malloc+0x114>
 afe:	4d b7       	in	r20, 0x3d	; 61
 b00:	5e b7       	in	r21, 0x3e	; 62
 b02:	80 91 40 01 	lds	r24, 0x0140
 b06:	90 91 41 01 	lds	r25, 0x0141
 b0a:	48 1b       	sub	r20, r24
 b0c:	59 0b       	sbc	r21, r25
 b0e:	20 91 57 01 	lds	r18, 0x0157
 b12:	30 91 58 01 	lds	r19, 0x0158
 b16:	24 17       	cp	r18, r20
 b18:	35 07       	cpc	r19, r21
 b1a:	b0 f4       	brcc	.+44     	; 0xb48 <malloc+0x14e>
 b1c:	ca 01       	movw	r24, r20
 b1e:	82 1b       	sub	r24, r18
 b20:	93 0b       	sbc	r25, r19
 b22:	86 17       	cp	r24, r22
 b24:	97 07       	cpc	r25, r23
 b26:	80 f0       	brcs	.+32     	; 0xb48 <malloc+0x14e>
 b28:	ab 01       	movw	r20, r22
 b2a:	4e 5f       	subi	r20, 0xFE	; 254
 b2c:	5f 4f       	sbci	r21, 0xFF	; 255
 b2e:	84 17       	cp	r24, r20
 b30:	95 07       	cpc	r25, r21
 b32:	50 f0       	brcs	.+20     	; 0xb48 <malloc+0x14e>
 b34:	42 0f       	add	r20, r18
 b36:	53 1f       	adc	r21, r19
 b38:	50 93 58 01 	sts	0x0158, r21
 b3c:	40 93 57 01 	sts	0x0157, r20
 b40:	f9 01       	movw	r30, r18
 b42:	61 93       	st	Z+, r22
 b44:	71 93       	st	Z+, r23
 b46:	02 c0       	rjmp	.+4      	; 0xb4c <malloc+0x152>
 b48:	e0 e0       	ldi	r30, 0x00	; 0
 b4a:	f0 e0       	ldi	r31, 0x00	; 0
 b4c:	cf 01       	movw	r24, r30
 b4e:	df 91       	pop	r29
 b50:	cf 91       	pop	r28
 b52:	08 95       	ret

00000b54 <free>:
 b54:	cf 93       	push	r28
 b56:	df 93       	push	r29
 b58:	00 97       	sbiw	r24, 0x00	; 0
 b5a:	09 f4       	brne	.+2      	; 0xb5e <free+0xa>
 b5c:	50 c0       	rjmp	.+160    	; 0xbfe <free+0xaa>
 b5e:	ec 01       	movw	r28, r24
 b60:	22 97       	sbiw	r28, 0x02	; 2
 b62:	1b 82       	std	Y+3, r1	; 0x03
 b64:	1a 82       	std	Y+2, r1	; 0x02
 b66:	a0 91 59 01 	lds	r26, 0x0159
 b6a:	b0 91 5a 01 	lds	r27, 0x015A
 b6e:	10 97       	sbiw	r26, 0x00	; 0
 b70:	09 f1       	breq	.+66     	; 0xbb4 <free+0x60>
 b72:	40 e0       	ldi	r20, 0x00	; 0
 b74:	50 e0       	ldi	r21, 0x00	; 0
 b76:	ac 17       	cp	r26, r28
 b78:	bd 07       	cpc	r27, r29
 b7a:	08 f1       	brcs	.+66     	; 0xbbe <free+0x6a>
 b7c:	bb 83       	std	Y+3, r27	; 0x03
 b7e:	aa 83       	std	Y+2, r26	; 0x02
 b80:	fe 01       	movw	r30, r28
 b82:	21 91       	ld	r18, Z+
 b84:	31 91       	ld	r19, Z+
 b86:	e2 0f       	add	r30, r18
 b88:	f3 1f       	adc	r31, r19
 b8a:	ae 17       	cp	r26, r30
 b8c:	bf 07       	cpc	r27, r31
 b8e:	79 f4       	brne	.+30     	; 0xbae <free+0x5a>
 b90:	8d 91       	ld	r24, X+
 b92:	9c 91       	ld	r25, X
 b94:	11 97       	sbiw	r26, 0x01	; 1
 b96:	28 0f       	add	r18, r24
 b98:	39 1f       	adc	r19, r25
 b9a:	2e 5f       	subi	r18, 0xFE	; 254
 b9c:	3f 4f       	sbci	r19, 0xFF	; 255
 b9e:	39 83       	std	Y+1, r19	; 0x01
 ba0:	28 83       	st	Y, r18
 ba2:	12 96       	adiw	r26, 0x02	; 2
 ba4:	8d 91       	ld	r24, X+
 ba6:	9c 91       	ld	r25, X
 ba8:	13 97       	sbiw	r26, 0x03	; 3
 baa:	9b 83       	std	Y+3, r25	; 0x03
 bac:	8a 83       	std	Y+2, r24	; 0x02
 bae:	41 15       	cp	r20, r1
 bb0:	51 05       	cpc	r21, r1
 bb2:	71 f4       	brne	.+28     	; 0xbd0 <free+0x7c>
 bb4:	d0 93 5a 01 	sts	0x015A, r29
 bb8:	c0 93 59 01 	sts	0x0159, r28
 bbc:	20 c0       	rjmp	.+64     	; 0xbfe <free+0xaa>
 bbe:	12 96       	adiw	r26, 0x02	; 2
 bc0:	8d 91       	ld	r24, X+
 bc2:	9c 91       	ld	r25, X
 bc4:	13 97       	sbiw	r26, 0x03	; 3
 bc6:	ad 01       	movw	r20, r26
 bc8:	00 97       	sbiw	r24, 0x00	; 0
 bca:	11 f0       	breq	.+4      	; 0xbd0 <free+0x7c>
 bcc:	dc 01       	movw	r26, r24
 bce:	d3 cf       	rjmp	.-90     	; 0xb76 <free+0x22>
 bd0:	fa 01       	movw	r30, r20
 bd2:	d3 83       	std	Z+3, r29	; 0x03
 bd4:	c2 83       	std	Z+2, r28	; 0x02
 bd6:	21 91       	ld	r18, Z+
 bd8:	31 91       	ld	r19, Z+
 bda:	e2 0f       	add	r30, r18
 bdc:	f3 1f       	adc	r31, r19
 bde:	ce 17       	cp	r28, r30
 be0:	df 07       	cpc	r29, r31
 be2:	69 f4       	brne	.+26     	; 0xbfe <free+0xaa>
 be4:	88 81       	ld	r24, Y
 be6:	99 81       	ldd	r25, Y+1	; 0x01
 be8:	28 0f       	add	r18, r24
 bea:	39 1f       	adc	r19, r25
 bec:	2e 5f       	subi	r18, 0xFE	; 254
 bee:	3f 4f       	sbci	r19, 0xFF	; 255
 bf0:	fa 01       	movw	r30, r20
 bf2:	31 83       	std	Z+1, r19	; 0x01
 bf4:	20 83       	st	Z, r18
 bf6:	8a 81       	ldd	r24, Y+2	; 0x02
 bf8:	9b 81       	ldd	r25, Y+3	; 0x03
 bfa:	93 83       	std	Z+3, r25	; 0x03
 bfc:	82 83       	std	Z+2, r24	; 0x02
 bfe:	df 91       	pop	r29
 c00:	cf 91       	pop	r28
 c02:	08 95       	ret

00000c04 <strnlen_P>:
 c04:	fc 01       	movw	r30, r24
 c06:	05 90       	lpm	r0, Z+
 c08:	61 50       	subi	r22, 0x01	; 1
 c0a:	70 40       	sbci	r23, 0x00	; 0
 c0c:	01 10       	cpse	r0, r1
 c0e:	d8 f7       	brcc	.-10     	; 0xc06 <strnlen_P+0x2>
 c10:	80 95       	com	r24
 c12:	90 95       	com	r25
 c14:	8e 0f       	add	r24, r30
 c16:	9f 1f       	adc	r25, r31
 c18:	08 95       	ret

00000c1a <memset>:
 c1a:	dc 01       	movw	r26, r24
 c1c:	01 c0       	rjmp	.+2      	; 0xc20 <memset+0x6>
 c1e:	6d 93       	st	X+, r22
 c20:	41 50       	subi	r20, 0x01	; 1
 c22:	50 40       	sbci	r21, 0x00	; 0
 c24:	e0 f7       	brcc	.-8      	; 0xc1e <memset+0x4>
 c26:	08 95       	ret

00000c28 <strnlen>:
 c28:	fc 01       	movw	r30, r24
 c2a:	61 50       	subi	r22, 0x01	; 1
 c2c:	70 40       	sbci	r23, 0x00	; 0
 c2e:	01 90       	ld	r0, Z+
 c30:	01 10       	cpse	r0, r1
 c32:	d8 f7       	brcc	.-10     	; 0xc2a <strnlen+0x2>
 c34:	80 95       	com	r24
 c36:	90 95       	com	r25
 c38:	8e 0f       	add	r24, r30
 c3a:	9f 1f       	adc	r25, r31
 c3c:	08 95       	ret

00000c3e <fputc>:
 c3e:	0f 93       	push	r16
 c40:	1f 93       	push	r17
 c42:	cf 93       	push	r28
 c44:	df 93       	push	r29
 c46:	8c 01       	movw	r16, r24
 c48:	eb 01       	movw	r28, r22
 c4a:	8b 81       	ldd	r24, Y+3	; 0x03
 c4c:	81 ff       	sbrs	r24, 1
 c4e:	1b c0       	rjmp	.+54     	; 0xc86 <fputc+0x48>
 c50:	82 ff       	sbrs	r24, 2
 c52:	0d c0       	rjmp	.+26     	; 0xc6e <fputc+0x30>
 c54:	2e 81       	ldd	r18, Y+6	; 0x06
 c56:	3f 81       	ldd	r19, Y+7	; 0x07
 c58:	8c 81       	ldd	r24, Y+4	; 0x04
 c5a:	9d 81       	ldd	r25, Y+5	; 0x05
 c5c:	28 17       	cp	r18, r24
 c5e:	39 07       	cpc	r19, r25
 c60:	64 f4       	brge	.+24     	; 0xc7a <fputc+0x3c>
 c62:	e8 81       	ld	r30, Y
 c64:	f9 81       	ldd	r31, Y+1	; 0x01
 c66:	01 93       	st	Z+, r16
 c68:	f9 83       	std	Y+1, r31	; 0x01
 c6a:	e8 83       	st	Y, r30
 c6c:	06 c0       	rjmp	.+12     	; 0xc7a <fputc+0x3c>
 c6e:	e8 85       	ldd	r30, Y+8	; 0x08
 c70:	f9 85       	ldd	r31, Y+9	; 0x09
 c72:	80 2f       	mov	r24, r16
 c74:	09 95       	icall
 c76:	89 2b       	or	r24, r25
 c78:	31 f4       	brne	.+12     	; 0xc86 <fputc+0x48>
 c7a:	8e 81       	ldd	r24, Y+6	; 0x06
 c7c:	9f 81       	ldd	r25, Y+7	; 0x07
 c7e:	01 96       	adiw	r24, 0x01	; 1
 c80:	9f 83       	std	Y+7, r25	; 0x07
 c82:	8e 83       	std	Y+6, r24	; 0x06
 c84:	02 c0       	rjmp	.+4      	; 0xc8a <fputc+0x4c>
 c86:	0f ef       	ldi	r16, 0xFF	; 255
 c88:	1f ef       	ldi	r17, 0xFF	; 255
 c8a:	c8 01       	movw	r24, r16
 c8c:	df 91       	pop	r29
 c8e:	cf 91       	pop	r28
 c90:	1f 91       	pop	r17
 c92:	0f 91       	pop	r16
 c94:	08 95       	ret

00000c96 <__ultoa_invert>:
 c96:	fa 01       	movw	r30, r20
 c98:	aa 27       	eor	r26, r26
 c9a:	28 30       	cpi	r18, 0x08	; 8
 c9c:	51 f1       	breq	.+84     	; 0xcf2 <__ultoa_invert+0x5c>
 c9e:	20 31       	cpi	r18, 0x10	; 16
 ca0:	81 f1       	breq	.+96     	; 0xd02 <__ultoa_invert+0x6c>
 ca2:	e8 94       	clt
 ca4:	6f 93       	push	r22
 ca6:	6e 7f       	andi	r22, 0xFE	; 254
 ca8:	6e 5f       	subi	r22, 0xFE	; 254
 caa:	7f 4f       	sbci	r23, 0xFF	; 255
 cac:	8f 4f       	sbci	r24, 0xFF	; 255
 cae:	9f 4f       	sbci	r25, 0xFF	; 255
 cb0:	af 4f       	sbci	r26, 0xFF	; 255
 cb2:	b1 e0       	ldi	r27, 0x01	; 1
 cb4:	3e d0       	rcall	.+124    	; 0xd32 <__ultoa_invert+0x9c>
 cb6:	b4 e0       	ldi	r27, 0x04	; 4
 cb8:	3c d0       	rcall	.+120    	; 0xd32 <__ultoa_invert+0x9c>
 cba:	67 0f       	add	r22, r23
 cbc:	78 1f       	adc	r23, r24
 cbe:	89 1f       	adc	r24, r25
 cc0:	9a 1f       	adc	r25, r26
 cc2:	a1 1d       	adc	r26, r1
 cc4:	68 0f       	add	r22, r24
 cc6:	79 1f       	adc	r23, r25
 cc8:	8a 1f       	adc	r24, r26
 cca:	91 1d       	adc	r25, r1
 ccc:	a1 1d       	adc	r26, r1
 cce:	6a 0f       	add	r22, r26
 cd0:	71 1d       	adc	r23, r1
 cd2:	81 1d       	adc	r24, r1
 cd4:	91 1d       	adc	r25, r1
 cd6:	a1 1d       	adc	r26, r1
 cd8:	20 d0       	rcall	.+64     	; 0xd1a <__ultoa_invert+0x84>
 cda:	09 f4       	brne	.+2      	; 0xcde <__ultoa_invert+0x48>
 cdc:	68 94       	set
 cde:	3f 91       	pop	r19
 ce0:	2a e0       	ldi	r18, 0x0A	; 10
 ce2:	26 9f       	mul	r18, r22
 ce4:	11 24       	eor	r1, r1
 ce6:	30 19       	sub	r19, r0
 ce8:	30 5d       	subi	r19, 0xD0	; 208
 cea:	31 93       	st	Z+, r19
 cec:	de f6       	brtc	.-74     	; 0xca4 <__ultoa_invert+0xe>
 cee:	cf 01       	movw	r24, r30
 cf0:	08 95       	ret
 cf2:	46 2f       	mov	r20, r22
 cf4:	47 70       	andi	r20, 0x07	; 7
 cf6:	40 5d       	subi	r20, 0xD0	; 208
 cf8:	41 93       	st	Z+, r20
 cfa:	b3 e0       	ldi	r27, 0x03	; 3
 cfc:	0f d0       	rcall	.+30     	; 0xd1c <__ultoa_invert+0x86>
 cfe:	c9 f7       	brne	.-14     	; 0xcf2 <__ultoa_invert+0x5c>
 d00:	f6 cf       	rjmp	.-20     	; 0xcee <__ultoa_invert+0x58>
 d02:	46 2f       	mov	r20, r22
 d04:	4f 70       	andi	r20, 0x0F	; 15
 d06:	40 5d       	subi	r20, 0xD0	; 208
 d08:	4a 33       	cpi	r20, 0x3A	; 58
 d0a:	18 f0       	brcs	.+6      	; 0xd12 <__ultoa_invert+0x7c>
 d0c:	49 5d       	subi	r20, 0xD9	; 217
 d0e:	31 fd       	sbrc	r19, 1
 d10:	40 52       	subi	r20, 0x20	; 32
 d12:	41 93       	st	Z+, r20
 d14:	02 d0       	rcall	.+4      	; 0xd1a <__ultoa_invert+0x84>
 d16:	a9 f7       	brne	.-22     	; 0xd02 <__ultoa_invert+0x6c>
 d18:	ea cf       	rjmp	.-44     	; 0xcee <__ultoa_invert+0x58>
 d1a:	b4 e0       	ldi	r27, 0x04	; 4
 d1c:	a6 95       	lsr	r26
 d1e:	97 95       	ror	r25
 d20:	87 95       	ror	r24
 d22:	77 95       	ror	r23
 d24:	67 95       	ror	r22
 d26:	ba 95       	dec	r27
 d28:	c9 f7       	brne	.-14     	; 0xd1c <__ultoa_invert+0x86>
 d2a:	00 97       	sbiw	r24, 0x00	; 0
 d2c:	61 05       	cpc	r22, r1
 d2e:	71 05       	cpc	r23, r1
 d30:	08 95       	ret
 d32:	9b 01       	movw	r18, r22
 d34:	ac 01       	movw	r20, r24
 d36:	0a 2e       	mov	r0, r26
 d38:	06 94       	lsr	r0
 d3a:	57 95       	ror	r21
 d3c:	47 95       	ror	r20
 d3e:	37 95       	ror	r19
 d40:	27 95       	ror	r18
 d42:	ba 95       	dec	r27
 d44:	c9 f7       	brne	.-14     	; 0xd38 <__ultoa_invert+0xa2>
 d46:	62 0f       	add	r22, r18
 d48:	73 1f       	adc	r23, r19
 d4a:	84 1f       	adc	r24, r20
 d4c:	95 1f       	adc	r25, r21
 d4e:	a0 1d       	adc	r26, r0
 d50:	08 95       	ret

00000d52 <_exit>:
 d52:	f8 94       	cli

00000d54 <__stop_program>:
 d54:	ff cf       	rjmp	.-2      	; 0xd54 <__stop_program>
