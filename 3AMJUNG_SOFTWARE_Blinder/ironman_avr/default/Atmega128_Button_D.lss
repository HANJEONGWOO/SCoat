
Atmega128_Button_D.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ae  00800100  00005b84  00005c18  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005b84  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  008001ae  008001ae  00005cc6  2**0
                  ALLOC
  3 .debug_aranges 00000160  00000000  00000000  00005cc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000002a9  00000000  00000000  00005e26  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000031c8  00000000  00000000  000060cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000010eb  00000000  00000000  00009297  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00002a49  00000000  00000000  0000a382  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002c0  00000000  00000000  0000cdcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000400  00000000  00000000  0000d08c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ce  00000000  00000000  0000d48c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  0000dc5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_1>
       8:	0c 94 98 00 	jmp	0x130	; 0x130 <__vector_2>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 ae 22 	jmp	0x455c	; 0x455c <__vector_18>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 00 23 	jmp	0x4600	; 0x4600 <__vector_30>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e4 e8       	ldi	r30, 0x84	; 132
      a0:	fb e5       	ldi	r31, 0x5B	; 91
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ae 3a       	cpi	r26, 0xAE	; 174
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	11 e0       	ldi	r17, 0x01	; 1
      b4:	ae ea       	ldi	r26, 0xAE	; 174
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a0 3d       	cpi	r26, 0xD0	; 208
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 18 22 	call	0x4430	; 0x4430 <main>
      c6:	0c 94 c0 2d 	jmp	0x5b80	; 0x5b80 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__vector_1>:
int callflag;

int idle_flag = 0;

ISR(INT0_vect)
{	
      ce:	1f 92       	push	r1
      d0:	0f 92       	push	r0
      d2:	0f b6       	in	r0, 0x3f	; 63
      d4:	0f 92       	push	r0
      d6:	00 90 5b 00 	lds	r0, 0x005B
      da:	0f 92       	push	r0
      dc:	11 24       	eor	r1, r1
      de:	8f 93       	push	r24
      e0:	9f 93       	push	r25
      e2:	ef 93       	push	r30
      e4:	ff 93       	push	r31
      e6:	df 93       	push	r29
      e8:	cf 93       	push	r28
      ea:	cd b7       	in	r28, 0x3d	; 61
      ec:	de b7       	in	r29, 0x3e	; 62
	//printf("INT0 CALL!\n");
	idle_flag = 1;
      ee:	81 e0       	ldi	r24, 0x01	; 1
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	90 93 af 01 	sts	0x01AF, r25
      f6:	80 93 ae 01 	sts	0x01AE, r24

	while(~PIND & 0x01);	//스위치 해제를 기다림
      fa:	e0 e3       	ldi	r30, 0x30	; 48
      fc:	f0 e0       	ldi	r31, 0x00	; 0
      fe:	80 81       	ld	r24, Z
     100:	88 2f       	mov	r24, r24
     102:	90 e0       	ldi	r25, 0x00	; 0
     104:	81 70       	andi	r24, 0x01	; 1
     106:	90 70       	andi	r25, 0x00	; 0
     108:	00 97       	sbiw	r24, 0x00	; 0
     10a:	b9 f3       	breq	.-18     	; 0xfa <__vector_1+0x2c>

	EIFR = 0x01;
     10c:	e8 e5       	ldi	r30, 0x58	; 88
     10e:	f0 e0       	ldi	r31, 0x00	; 0
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	80 83       	st	Z, r24
}
     114:	cf 91       	pop	r28
     116:	df 91       	pop	r29
     118:	ff 91       	pop	r31
     11a:	ef 91       	pop	r30
     11c:	9f 91       	pop	r25
     11e:	8f 91       	pop	r24
     120:	0f 90       	pop	r0
     122:	00 92 5b 00 	sts	0x005B, r0
     126:	0f 90       	pop	r0
     128:	0f be       	out	0x3f, r0	; 63
     12a:	0f 90       	pop	r0
     12c:	1f 90       	pop	r1
     12e:	18 95       	reti

00000130 <__vector_2>:

ISR(INT1_vect)
{	
     130:	1f 92       	push	r1
     132:	0f 92       	push	r0
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	0f 92       	push	r0
     138:	00 90 5b 00 	lds	r0, 0x005B
     13c:	0f 92       	push	r0
     13e:	11 24       	eor	r1, r1
     140:	8f 93       	push	r24
     142:	9f 93       	push	r25
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
     148:	df 93       	push	r29
     14a:	cf 93       	push	r28
     14c:	cd b7       	in	r28, 0x3d	; 61
     14e:	de b7       	in	r29, 0x3e	; 62
	//printf("INT1 CALL!\n");
	
	//_delay_ms(10);
	while(~PIND & 0x02);	//스위치 해제를 기다림
     150:	e0 e3       	ldi	r30, 0x30	; 48
     152:	f0 e0       	ldi	r31, 0x00	; 0
     154:	80 81       	ld	r24, Z
     156:	88 2f       	mov	r24, r24
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	82 70       	andi	r24, 0x02	; 2
     15c:	90 70       	andi	r25, 0x00	; 0
     15e:	00 97       	sbiw	r24, 0x00	; 0
     160:	b9 f3       	breq	.-18     	; 0x150 <__vector_2+0x20>
	//_delay_ms(10);

	EIFR = 0x02;
     162:	e8 e5       	ldi	r30, 0x58	; 88
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	82 e0       	ldi	r24, 0x02	; 2
     168:	80 83       	st	Z, r24
}
     16a:	cf 91       	pop	r28
     16c:	df 91       	pop	r29
     16e:	ff 91       	pop	r31
     170:	ef 91       	pop	r30
     172:	9f 91       	pop	r25
     174:	8f 91       	pop	r24
     176:	0f 90       	pop	r0
     178:	00 92 5b 00 	sts	0x005B, r0
     17c:	0f 90       	pop	r0
     17e:	0f be       	out	0x3f, r0	; 63
     180:	0f 90       	pop	r0
     182:	1f 90       	pop	r1
     184:	18 95       	reti

00000186 <port_init>:

void port_init(void)
{}
     186:	df 93       	push	r29
     188:	cf 93       	push	r28
     18a:	cd b7       	in	r28, 0x3d	; 61
     18c:	de b7       	in	r29, 0x3e	; 62
     18e:	cf 91       	pop	r28
     190:	df 91       	pop	r29
     192:	08 95       	ret

00000194 <Putchar>:
 
static int Putchar(char c, FILE *stream)//FILE 사용안함, 송신, avr->컴퓨터
{
     194:	df 93       	push	r29
     196:	cf 93       	push	r28
     198:	00 d0       	rcall	.+0      	; 0x19a <Putchar+0x6>
     19a:	0f 92       	push	r0
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
     1a0:	89 83       	std	Y+1, r24	; 0x01
     1a2:	7b 83       	std	Y+3, r23	; 0x03
     1a4:	6a 83       	std	Y+2, r22	; 0x02
 if(c == '\n')
     1a6:	89 81       	ldd	r24, Y+1	; 0x01
     1a8:	8a 30       	cpi	r24, 0x0A	; 10
     1aa:	29 f4       	brne	.+10     	; 0x1b6 <Putchar+0x22>
  Putchar('\r', 0); 
     1ac:	8d e0       	ldi	r24, 0x0D	; 13
     1ae:	60 e0       	ldi	r22, 0x00	; 0
     1b0:	70 e0       	ldi	r23, 0x00	; 0
     1b2:	0e 94 ca 00 	call	0x194	; 0x194 <Putchar>

 while(!(UCSR1A & 0x20)); // UDRE, data register empty        
     1b6:	eb e9       	ldi	r30, 0x9B	; 155
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	88 2f       	mov	r24, r24
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	80 72       	andi	r24, 0x20	; 32
     1c2:	90 70       	andi	r25, 0x00	; 0
     1c4:	00 97       	sbiw	r24, 0x00	; 0
     1c6:	b9 f3       	breq	.-18     	; 0x1b6 <Putchar+0x22>
   UDR1 = c;
     1c8:	ec e9       	ldi	r30, 0x9C	; 156
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	89 81       	ldd	r24, Y+1	; 0x01
     1ce:	80 83       	st	Z, r24
 return 0;
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	90 e0       	ldi	r25, 0x00	; 0
      
}
     1d4:	0f 90       	pop	r0
     1d6:	0f 90       	pop	r0
     1d8:	0f 90       	pop	r0
     1da:	cf 91       	pop	r28
     1dc:	df 91       	pop	r29
     1de:	08 95       	ret

000001e0 <Getchar>:
 
static int Getchar(FILE *stream)//수신, 컴퓨터->avr
{
     1e0:	df 93       	push	r29
     1e2:	cf 93       	push	r28
     1e4:	00 d0       	rcall	.+0      	; 0x1e6 <Getchar+0x6>
     1e6:	cd b7       	in	r28, 0x3d	; 61
     1e8:	de b7       	in	r29, 0x3e	; 62
     1ea:	9a 83       	std	Y+2, r25	; 0x02
     1ec:	89 83       	std	Y+1, r24	; 0x01
 while(!(UCSR1A & 0x80));
     1ee:	eb e9       	ldi	r30, 0x9B	; 155
     1f0:	f0 e0       	ldi	r31, 0x00	; 0
     1f2:	80 81       	ld	r24, Z
     1f4:	88 23       	and	r24, r24
     1f6:	dc f7       	brge	.-10     	; 0x1ee <Getchar+0xe>
 return UDR1;
     1f8:	ec e9       	ldi	r30, 0x9C	; 156
     1fa:	f0 e0       	ldi	r31, 0x00	; 0
     1fc:	80 81       	ld	r24, Z
     1fe:	88 2f       	mov	r24, r24
     200:	90 e0       	ldi	r25, 0x00	; 0
}
     202:	0f 90       	pop	r0
     204:	0f 90       	pop	r0
     206:	cf 91       	pop	r28
     208:	df 91       	pop	r29
     20a:	08 95       	ret

0000020c <reset>:

void reset(){
     20c:	df 93       	push	r29
     20e:	cf 93       	push	r28
     210:	cd b7       	in	r28, 0x3d	; 61
     212:	de b7       	in	r29, 0x3e	; 62
     214:	aa 97       	sbiw	r28, 0x2a	; 42
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nRESET  ");
     220:	00 d0       	rcall	.+0      	; 0x222 <reset+0x16>
     222:	ed b7       	in	r30, 0x3d	; 61
     224:	fe b7       	in	r31, 0x3e	; 62
     226:	31 96       	adiw	r30, 0x01	; 1
     228:	80 e0       	ldi	r24, 0x00	; 0
     22a:	91 e0       	ldi	r25, 0x01	; 1
     22c:	91 83       	std	Z+1, r25	; 0x01
     22e:	80 83       	st	Z, r24
     230:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
     238:	ec e2       	ldi	r30, 0x2C	; 44
     23a:	f0 e0       	ldi	r31, 0x00	; 0
     23c:	86 e5       	ldi	r24, 0x56	; 86
     23e:	80 83       	st	Z, r24
     240:	80 e0       	ldi	r24, 0x00	; 0
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	a0 e8       	ldi	r26, 0x80	; 128
     246:	bf e3       	ldi	r27, 0x3F	; 63
     248:	8f a3       	std	Y+39, r24	; 0x27
     24a:	98 a7       	std	Y+40, r25	; 0x28
     24c:	a9 a7       	std	Y+41, r26	; 0x29
     24e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     250:	6f a1       	ldd	r22, Y+39	; 0x27
     252:	78 a5       	ldd	r23, Y+40	; 0x28
     254:	89 a5       	ldd	r24, Y+41	; 0x29
     256:	9a a5       	ldd	r25, Y+42	; 0x2a
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	4a e7       	ldi	r20, 0x7A	; 122
     25e:	55 e4       	ldi	r21, 0x45	; 69
     260:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     264:	dc 01       	movw	r26, r24
     266:	cb 01       	movw	r24, r22
     268:	8b a3       	std	Y+35, r24	; 0x23
     26a:	9c a3       	std	Y+36, r25	; 0x24
     26c:	ad a3       	std	Y+37, r26	; 0x25
     26e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     270:	6b a1       	ldd	r22, Y+35	; 0x23
     272:	7c a1       	ldd	r23, Y+36	; 0x24
     274:	8d a1       	ldd	r24, Y+37	; 0x25
     276:	9e a1       	ldd	r25, Y+38	; 0x26
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	40 e8       	ldi	r20, 0x80	; 128
     27e:	5f e3       	ldi	r21, 0x3F	; 63
     280:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     284:	88 23       	and	r24, r24
     286:	2c f4       	brge	.+10     	; 0x292 <reset+0x86>
		__ticks = 1;
     288:	81 e0       	ldi	r24, 0x01	; 1
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	9a a3       	std	Y+34, r25	; 0x22
     28e:	89 a3       	std	Y+33, r24	; 0x21
     290:	3f c0       	rjmp	.+126    	; 0x310 <reset+0x104>
	else if (__tmp > 65535)
     292:	6b a1       	ldd	r22, Y+35	; 0x23
     294:	7c a1       	ldd	r23, Y+36	; 0x24
     296:	8d a1       	ldd	r24, Y+37	; 0x25
     298:	9e a1       	ldd	r25, Y+38	; 0x26
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	3f ef       	ldi	r19, 0xFF	; 255
     29e:	4f e7       	ldi	r20, 0x7F	; 127
     2a0:	57 e4       	ldi	r21, 0x47	; 71
     2a2:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     2a6:	18 16       	cp	r1, r24
     2a8:	4c f5       	brge	.+82     	; 0x2fc <reset+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2aa:	6f a1       	ldd	r22, Y+39	; 0x27
     2ac:	78 a5       	ldd	r23, Y+40	; 0x28
     2ae:	89 a5       	ldd	r24, Y+41	; 0x29
     2b0:	9a a5       	ldd	r25, Y+42	; 0x2a
     2b2:	20 e0       	ldi	r18, 0x00	; 0
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	40 e2       	ldi	r20, 0x20	; 32
     2b8:	51 e4       	ldi	r21, 0x41	; 65
     2ba:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     2be:	dc 01       	movw	r26, r24
     2c0:	cb 01       	movw	r24, r22
     2c2:	bc 01       	movw	r22, r24
     2c4:	cd 01       	movw	r24, r26
     2c6:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     2ca:	dc 01       	movw	r26, r24
     2cc:	cb 01       	movw	r24, r22
     2ce:	9a a3       	std	Y+34, r25	; 0x22
     2d0:	89 a3       	std	Y+33, r24	; 0x21
     2d2:	0f c0       	rjmp	.+30     	; 0x2f2 <reset+0xe6>
     2d4:	80 e9       	ldi	r24, 0x90	; 144
     2d6:	91 e0       	ldi	r25, 0x01	; 1
     2d8:	98 a3       	std	Y+32, r25	; 0x20
     2da:	8f 8f       	std	Y+31, r24	; 0x1f
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2dc:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2de:	98 a1       	ldd	r25, Y+32	; 0x20
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <reset+0xd4>
     2e4:	98 a3       	std	Y+32, r25	; 0x20
     2e6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2e8:	89 a1       	ldd	r24, Y+33	; 0x21
     2ea:	9a a1       	ldd	r25, Y+34	; 0x22
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	9a a3       	std	Y+34, r25	; 0x22
     2f0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2f2:	89 a1       	ldd	r24, Y+33	; 0x21
     2f4:	9a a1       	ldd	r25, Y+34	; 0x22
     2f6:	00 97       	sbiw	r24, 0x00	; 0
     2f8:	69 f7       	brne	.-38     	; 0x2d4 <reset+0xc8>
     2fa:	14 c0       	rjmp	.+40     	; 0x324 <reset+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2fc:	6b a1       	ldd	r22, Y+35	; 0x23
     2fe:	7c a1       	ldd	r23, Y+36	; 0x24
     300:	8d a1       	ldd	r24, Y+37	; 0x25
     302:	9e a1       	ldd	r25, Y+38	; 0x26
     304:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     308:	dc 01       	movw	r26, r24
     30a:	cb 01       	movw	r24, r22
     30c:	9a a3       	std	Y+34, r25	; 0x22
     30e:	89 a3       	std	Y+33, r24	; 0x21
     310:	89 a1       	ldd	r24, Y+33	; 0x21
     312:	9a a1       	ldd	r25, Y+34	; 0x22
     314:	9e 8f       	std	Y+30, r25	; 0x1e
     316:	8d 8f       	std	Y+29, r24	; 0x1d
     318:	8d 8d       	ldd	r24, Y+29	; 0x1d
     31a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     31c:	01 97       	sbiw	r24, 0x01	; 1
     31e:	f1 f7       	brne	.-4      	; 0x31c <reset+0x110>
     320:	9e 8f       	std	Y+30, r25	; 0x1e
     322:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x00; _delay_ms(1);
     324:	ec e2       	ldi	r30, 0x2C	; 44
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	10 82       	st	Z, r1
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	a0 e8       	ldi	r26, 0x80	; 128
     330:	bf e3       	ldi	r27, 0x3F	; 63
     332:	89 8f       	std	Y+25, r24	; 0x19
     334:	9a 8f       	std	Y+26, r25	; 0x1a
     336:	ab 8f       	std	Y+27, r26	; 0x1b
     338:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     33a:	69 8d       	ldd	r22, Y+25	; 0x19
     33c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     33e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     340:	9c 8d       	ldd	r25, Y+28	; 0x1c
     342:	20 e0       	ldi	r18, 0x00	; 0
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	4a e7       	ldi	r20, 0x7A	; 122
     348:	55 e4       	ldi	r21, 0x45	; 69
     34a:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     34e:	dc 01       	movw	r26, r24
     350:	cb 01       	movw	r24, r22
     352:	8d 8b       	std	Y+21, r24	; 0x15
     354:	9e 8b       	std	Y+22, r25	; 0x16
     356:	af 8b       	std	Y+23, r26	; 0x17
     358:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     35a:	6d 89       	ldd	r22, Y+21	; 0x15
     35c:	7e 89       	ldd	r23, Y+22	; 0x16
     35e:	8f 89       	ldd	r24, Y+23	; 0x17
     360:	98 8d       	ldd	r25, Y+24	; 0x18
     362:	20 e0       	ldi	r18, 0x00	; 0
     364:	30 e0       	ldi	r19, 0x00	; 0
     366:	40 e8       	ldi	r20, 0x80	; 128
     368:	5f e3       	ldi	r21, 0x3F	; 63
     36a:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     36e:	88 23       	and	r24, r24
     370:	2c f4       	brge	.+10     	; 0x37c <reset+0x170>
		__ticks = 1;
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	90 e0       	ldi	r25, 0x00	; 0
     376:	9c 8b       	std	Y+20, r25	; 0x14
     378:	8b 8b       	std	Y+19, r24	; 0x13
     37a:	3f c0       	rjmp	.+126    	; 0x3fa <reset+0x1ee>
	else if (__tmp > 65535)
     37c:	6d 89       	ldd	r22, Y+21	; 0x15
     37e:	7e 89       	ldd	r23, Y+22	; 0x16
     380:	8f 89       	ldd	r24, Y+23	; 0x17
     382:	98 8d       	ldd	r25, Y+24	; 0x18
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	3f ef       	ldi	r19, 0xFF	; 255
     388:	4f e7       	ldi	r20, 0x7F	; 127
     38a:	57 e4       	ldi	r21, 0x47	; 71
     38c:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     390:	18 16       	cp	r1, r24
     392:	4c f5       	brge	.+82     	; 0x3e6 <reset+0x1da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     394:	69 8d       	ldd	r22, Y+25	; 0x19
     396:	7a 8d       	ldd	r23, Y+26	; 0x1a
     398:	8b 8d       	ldd	r24, Y+27	; 0x1b
     39a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	40 e2       	ldi	r20, 0x20	; 32
     3a2:	51 e4       	ldi	r21, 0x41	; 65
     3a4:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     3a8:	dc 01       	movw	r26, r24
     3aa:	cb 01       	movw	r24, r22
     3ac:	bc 01       	movw	r22, r24
     3ae:	cd 01       	movw	r24, r26
     3b0:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     3b4:	dc 01       	movw	r26, r24
     3b6:	cb 01       	movw	r24, r22
     3b8:	9c 8b       	std	Y+20, r25	; 0x14
     3ba:	8b 8b       	std	Y+19, r24	; 0x13
     3bc:	0f c0       	rjmp	.+30     	; 0x3dc <reset+0x1d0>
     3be:	80 e9       	ldi	r24, 0x90	; 144
     3c0:	91 e0       	ldi	r25, 0x01	; 1
     3c2:	9a 8b       	std	Y+18, r25	; 0x12
     3c4:	89 8b       	std	Y+17, r24	; 0x11
     3c6:	89 89       	ldd	r24, Y+17	; 0x11
     3c8:	9a 89       	ldd	r25, Y+18	; 0x12
     3ca:	01 97       	sbiw	r24, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <reset+0x1be>
     3ce:	9a 8b       	std	Y+18, r25	; 0x12
     3d0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3d2:	8b 89       	ldd	r24, Y+19	; 0x13
     3d4:	9c 89       	ldd	r25, Y+20	; 0x14
     3d6:	01 97       	sbiw	r24, 0x01	; 1
     3d8:	9c 8b       	std	Y+20, r25	; 0x14
     3da:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3dc:	8b 89       	ldd	r24, Y+19	; 0x13
     3de:	9c 89       	ldd	r25, Y+20	; 0x14
     3e0:	00 97       	sbiw	r24, 0x00	; 0
     3e2:	69 f7       	brne	.-38     	; 0x3be <reset+0x1b2>
     3e4:	14 c0       	rjmp	.+40     	; 0x40e <reset+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3e6:	6d 89       	ldd	r22, Y+21	; 0x15
     3e8:	7e 89       	ldd	r23, Y+22	; 0x16
     3ea:	8f 89       	ldd	r24, Y+23	; 0x17
     3ec:	98 8d       	ldd	r25, Y+24	; 0x18
     3ee:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     3f2:	dc 01       	movw	r26, r24
     3f4:	cb 01       	movw	r24, r22
     3f6:	9c 8b       	std	Y+20, r25	; 0x14
     3f8:	8b 8b       	std	Y+19, r24	; 0x13
     3fa:	8b 89       	ldd	r24, Y+19	; 0x13
     3fc:	9c 89       	ldd	r25, Y+20	; 0x14
     3fe:	98 8b       	std	Y+16, r25	; 0x10
     400:	8f 87       	std	Y+15, r24	; 0x0f
     402:	8f 85       	ldd	r24, Y+15	; 0x0f
     404:	98 89       	ldd	r25, Y+16	; 0x10
     406:	01 97       	sbiw	r24, 0x01	; 1
     408:	f1 f7       	brne	.-4      	; 0x406 <reset+0x1fa>
     40a:	98 8b       	std	Y+16, r25	; 0x10
     40c:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x26; _delay_ms(1);
     40e:	ec e2       	ldi	r30, 0x2C	; 44
     410:	f0 e0       	ldi	r31, 0x00	; 0
     412:	86 e2       	ldi	r24, 0x26	; 38
     414:	80 83       	st	Z, r24
     416:	80 e0       	ldi	r24, 0x00	; 0
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	a0 e8       	ldi	r26, 0x80	; 128
     41c:	bf e3       	ldi	r27, 0x3F	; 63
     41e:	8b 87       	std	Y+11, r24	; 0x0b
     420:	9c 87       	std	Y+12, r25	; 0x0c
     422:	ad 87       	std	Y+13, r26	; 0x0d
     424:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     426:	6b 85       	ldd	r22, Y+11	; 0x0b
     428:	7c 85       	ldd	r23, Y+12	; 0x0c
     42a:	8d 85       	ldd	r24, Y+13	; 0x0d
     42c:	9e 85       	ldd	r25, Y+14	; 0x0e
     42e:	20 e0       	ldi	r18, 0x00	; 0
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	4a e7       	ldi	r20, 0x7A	; 122
     434:	55 e4       	ldi	r21, 0x45	; 69
     436:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     43a:	dc 01       	movw	r26, r24
     43c:	cb 01       	movw	r24, r22
     43e:	8f 83       	std	Y+7, r24	; 0x07
     440:	98 87       	std	Y+8, r25	; 0x08
     442:	a9 87       	std	Y+9, r26	; 0x09
     444:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     446:	6f 81       	ldd	r22, Y+7	; 0x07
     448:	78 85       	ldd	r23, Y+8	; 0x08
     44a:	89 85       	ldd	r24, Y+9	; 0x09
     44c:	9a 85       	ldd	r25, Y+10	; 0x0a
     44e:	20 e0       	ldi	r18, 0x00	; 0
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	40 e8       	ldi	r20, 0x80	; 128
     454:	5f e3       	ldi	r21, 0x3F	; 63
     456:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     45a:	88 23       	and	r24, r24
     45c:	2c f4       	brge	.+10     	; 0x468 <reset+0x25c>
		__ticks = 1;
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	9e 83       	std	Y+6, r25	; 0x06
     464:	8d 83       	std	Y+5, r24	; 0x05
     466:	3f c0       	rjmp	.+126    	; 0x4e6 <reset+0x2da>
	else if (__tmp > 65535)
     468:	6f 81       	ldd	r22, Y+7	; 0x07
     46a:	78 85       	ldd	r23, Y+8	; 0x08
     46c:	89 85       	ldd	r24, Y+9	; 0x09
     46e:	9a 85       	ldd	r25, Y+10	; 0x0a
     470:	20 e0       	ldi	r18, 0x00	; 0
     472:	3f ef       	ldi	r19, 0xFF	; 255
     474:	4f e7       	ldi	r20, 0x7F	; 127
     476:	57 e4       	ldi	r21, 0x47	; 71
     478:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     47c:	18 16       	cp	r1, r24
     47e:	4c f5       	brge	.+82     	; 0x4d2 <reset+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     480:	6b 85       	ldd	r22, Y+11	; 0x0b
     482:	7c 85       	ldd	r23, Y+12	; 0x0c
     484:	8d 85       	ldd	r24, Y+13	; 0x0d
     486:	9e 85       	ldd	r25, Y+14	; 0x0e
     488:	20 e0       	ldi	r18, 0x00	; 0
     48a:	30 e0       	ldi	r19, 0x00	; 0
     48c:	40 e2       	ldi	r20, 0x20	; 32
     48e:	51 e4       	ldi	r21, 0x41	; 65
     490:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     494:	dc 01       	movw	r26, r24
     496:	cb 01       	movw	r24, r22
     498:	bc 01       	movw	r22, r24
     49a:	cd 01       	movw	r24, r26
     49c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     4a0:	dc 01       	movw	r26, r24
     4a2:	cb 01       	movw	r24, r22
     4a4:	9e 83       	std	Y+6, r25	; 0x06
     4a6:	8d 83       	std	Y+5, r24	; 0x05
     4a8:	0f c0       	rjmp	.+30     	; 0x4c8 <reset+0x2bc>
     4aa:	80 e9       	ldi	r24, 0x90	; 144
     4ac:	91 e0       	ldi	r25, 0x01	; 1
     4ae:	9c 83       	std	Y+4, r25	; 0x04
     4b0:	8b 83       	std	Y+3, r24	; 0x03
     4b2:	8b 81       	ldd	r24, Y+3	; 0x03
     4b4:	9c 81       	ldd	r25, Y+4	; 0x04
     4b6:	01 97       	sbiw	r24, 0x01	; 1
     4b8:	f1 f7       	brne	.-4      	; 0x4b6 <reset+0x2aa>
     4ba:	9c 83       	std	Y+4, r25	; 0x04
     4bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4be:	8d 81       	ldd	r24, Y+5	; 0x05
     4c0:	9e 81       	ldd	r25, Y+6	; 0x06
     4c2:	01 97       	sbiw	r24, 0x01	; 1
     4c4:	9e 83       	std	Y+6, r25	; 0x06
     4c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4c8:	8d 81       	ldd	r24, Y+5	; 0x05
     4ca:	9e 81       	ldd	r25, Y+6	; 0x06
     4cc:	00 97       	sbiw	r24, 0x00	; 0
     4ce:	69 f7       	brne	.-38     	; 0x4aa <reset+0x29e>
     4d0:	14 c0       	rjmp	.+40     	; 0x4fa <reset+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4d2:	6f 81       	ldd	r22, Y+7	; 0x07
     4d4:	78 85       	ldd	r23, Y+8	; 0x08
     4d6:	89 85       	ldd	r24, Y+9	; 0x09
     4d8:	9a 85       	ldd	r25, Y+10	; 0x0a
     4da:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     4de:	dc 01       	movw	r26, r24
     4e0:	cb 01       	movw	r24, r22
     4e2:	9e 83       	std	Y+6, r25	; 0x06
     4e4:	8d 83       	std	Y+5, r24	; 0x05
     4e6:	8d 81       	ldd	r24, Y+5	; 0x05
     4e8:	9e 81       	ldd	r25, Y+6	; 0x06
     4ea:	9a 83       	std	Y+2, r25	; 0x02
     4ec:	89 83       	std	Y+1, r24	; 0x01
     4ee:	89 81       	ldd	r24, Y+1	; 0x01
     4f0:	9a 81       	ldd	r25, Y+2	; 0x02
     4f2:	01 97       	sbiw	r24, 0x01	; 1
     4f4:	f1 f7       	brne	.-4      	; 0x4f2 <reset+0x2e6>
     4f6:	9a 83       	std	Y+2, r25	; 0x02
     4f8:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x00;
     4fa:	ec e2       	ldi	r30, 0x2C	; 44
     4fc:	f0 e0       	ldi	r31, 0x00	; 0
     4fe:	10 82       	st	Z, r1
}
     500:	aa 96       	adiw	r28, 0x2a	; 42
     502:	0f b6       	in	r0, 0x3f	; 63
     504:	f8 94       	cli
     506:	de bf       	out	0x3e, r29	; 62
     508:	0f be       	out	0x3f, r0	; 63
     50a:	cd bf       	out	0x3d, r28	; 61
     50c:	cf 91       	pop	r28
     50e:	df 91       	pop	r29
     510:	08 95       	ret

00000512 <resize>:
 
void resize(){
     512:	0f 93       	push	r16
     514:	1f 93       	push	r17
     516:	df 93       	push	r29
     518:	cf 93       	push	r28
     51a:	cd b7       	in	r28, 0x3d	; 61
     51c:	de b7       	in	r29, 0x3e	; 62
     51e:	c0 57       	subi	r28, 0x70	; 112
     520:	d0 40       	sbci	r29, 0x00	; 0
     522:	0f b6       	in	r0, 0x3f	; 63
     524:	f8 94       	cli
     526:	de bf       	out	0x3e, r29	; 62
     528:	0f be       	out	0x3f, r0	; 63
     52a:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nRESIZE  ");
     52c:	00 d0       	rcall	.+0      	; 0x52e <resize+0x1c>
     52e:	ed b7       	in	r30, 0x3d	; 61
     530:	fe b7       	in	r31, 0x3e	; 62
     532:	31 96       	adiw	r30, 0x01	; 1
     534:	8a e0       	ldi	r24, 0x0A	; 10
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	91 83       	std	Z+1, r25	; 0x01
     53a:	80 83       	st	Z, r24
     53c:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
     540:	0f 90       	pop	r0
     542:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
     544:	ec e2       	ldi	r30, 0x2C	; 44
     546:	f0 e0       	ldi	r31, 0x00	; 0
     548:	86 e5       	ldi	r24, 0x56	; 86
     54a:	80 83       	st	Z, r24
     54c:	fe 01       	movw	r30, r28
     54e:	e3 59       	subi	r30, 0x93	; 147
     550:	ff 4f       	sbci	r31, 0xFF	; 255
     552:	80 e0       	ldi	r24, 0x00	; 0
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	a0 e8       	ldi	r26, 0x80	; 128
     558:	bf e3       	ldi	r27, 0x3F	; 63
     55a:	80 83       	st	Z, r24
     55c:	91 83       	std	Z+1, r25	; 0x01
     55e:	a2 83       	std	Z+2, r26	; 0x02
     560:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     562:	8e 01       	movw	r16, r28
     564:	07 59       	subi	r16, 0x97	; 151
     566:	1f 4f       	sbci	r17, 0xFF	; 255
     568:	fe 01       	movw	r30, r28
     56a:	e3 59       	subi	r30, 0x93	; 147
     56c:	ff 4f       	sbci	r31, 0xFF	; 255
     56e:	60 81       	ld	r22, Z
     570:	71 81       	ldd	r23, Z+1	; 0x01
     572:	82 81       	ldd	r24, Z+2	; 0x02
     574:	93 81       	ldd	r25, Z+3	; 0x03
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	4a e7       	ldi	r20, 0x7A	; 122
     57c:	55 e4       	ldi	r21, 0x45	; 69
     57e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     582:	dc 01       	movw	r26, r24
     584:	cb 01       	movw	r24, r22
     586:	f8 01       	movw	r30, r16
     588:	80 83       	st	Z, r24
     58a:	91 83       	std	Z+1, r25	; 0x01
     58c:	a2 83       	std	Z+2, r26	; 0x02
     58e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     590:	fe 01       	movw	r30, r28
     592:	e7 59       	subi	r30, 0x97	; 151
     594:	ff 4f       	sbci	r31, 0xFF	; 255
     596:	60 81       	ld	r22, Z
     598:	71 81       	ldd	r23, Z+1	; 0x01
     59a:	82 81       	ldd	r24, Z+2	; 0x02
     59c:	93 81       	ldd	r25, Z+3	; 0x03
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	40 e8       	ldi	r20, 0x80	; 128
     5a4:	5f e3       	ldi	r21, 0x3F	; 63
     5a6:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     5aa:	88 23       	and	r24, r24
     5ac:	44 f4       	brge	.+16     	; 0x5be <resize+0xac>
		__ticks = 1;
     5ae:	fe 01       	movw	r30, r28
     5b0:	e9 59       	subi	r30, 0x99	; 153
     5b2:	ff 4f       	sbci	r31, 0xFF	; 255
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	91 83       	std	Z+1, r25	; 0x01
     5ba:	80 83       	st	Z, r24
     5bc:	64 c0       	rjmp	.+200    	; 0x686 <resize+0x174>
	else if (__tmp > 65535)
     5be:	fe 01       	movw	r30, r28
     5c0:	e7 59       	subi	r30, 0x97	; 151
     5c2:	ff 4f       	sbci	r31, 0xFF	; 255
     5c4:	60 81       	ld	r22, Z
     5c6:	71 81       	ldd	r23, Z+1	; 0x01
     5c8:	82 81       	ldd	r24, Z+2	; 0x02
     5ca:	93 81       	ldd	r25, Z+3	; 0x03
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	3f ef       	ldi	r19, 0xFF	; 255
     5d0:	4f e7       	ldi	r20, 0x7F	; 127
     5d2:	57 e4       	ldi	r21, 0x47	; 71
     5d4:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     5d8:	18 16       	cp	r1, r24
     5da:	0c f0       	brlt	.+2      	; 0x5de <resize+0xcc>
     5dc:	43 c0       	rjmp	.+134    	; 0x664 <resize+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5de:	fe 01       	movw	r30, r28
     5e0:	e3 59       	subi	r30, 0x93	; 147
     5e2:	ff 4f       	sbci	r31, 0xFF	; 255
     5e4:	60 81       	ld	r22, Z
     5e6:	71 81       	ldd	r23, Z+1	; 0x01
     5e8:	82 81       	ldd	r24, Z+2	; 0x02
     5ea:	93 81       	ldd	r25, Z+3	; 0x03
     5ec:	20 e0       	ldi	r18, 0x00	; 0
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	40 e2       	ldi	r20, 0x20	; 32
     5f2:	51 e4       	ldi	r21, 0x41	; 65
     5f4:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     5f8:	dc 01       	movw	r26, r24
     5fa:	cb 01       	movw	r24, r22
     5fc:	8e 01       	movw	r16, r28
     5fe:	09 59       	subi	r16, 0x99	; 153
     600:	1f 4f       	sbci	r17, 0xFF	; 255
     602:	bc 01       	movw	r22, r24
     604:	cd 01       	movw	r24, r26
     606:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     60a:	dc 01       	movw	r26, r24
     60c:	cb 01       	movw	r24, r22
     60e:	f8 01       	movw	r30, r16
     610:	91 83       	std	Z+1, r25	; 0x01
     612:	80 83       	st	Z, r24
     614:	1f c0       	rjmp	.+62     	; 0x654 <resize+0x142>
     616:	fe 01       	movw	r30, r28
     618:	eb 59       	subi	r30, 0x9B	; 155
     61a:	ff 4f       	sbci	r31, 0xFF	; 255
     61c:	80 e9       	ldi	r24, 0x90	; 144
     61e:	91 e0       	ldi	r25, 0x01	; 1
     620:	91 83       	std	Z+1, r25	; 0x01
     622:	80 83       	st	Z, r24
     624:	fe 01       	movw	r30, r28
     626:	eb 59       	subi	r30, 0x9B	; 155
     628:	ff 4f       	sbci	r31, 0xFF	; 255
     62a:	80 81       	ld	r24, Z
     62c:	91 81       	ldd	r25, Z+1	; 0x01
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	f1 f7       	brne	.-4      	; 0x62e <resize+0x11c>
     632:	fe 01       	movw	r30, r28
     634:	eb 59       	subi	r30, 0x9B	; 155
     636:	ff 4f       	sbci	r31, 0xFF	; 255
     638:	91 83       	std	Z+1, r25	; 0x01
     63a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     63c:	de 01       	movw	r26, r28
     63e:	a9 59       	subi	r26, 0x99	; 153
     640:	bf 4f       	sbci	r27, 0xFF	; 255
     642:	fe 01       	movw	r30, r28
     644:	e9 59       	subi	r30, 0x99	; 153
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	80 81       	ld	r24, Z
     64a:	91 81       	ldd	r25, Z+1	; 0x01
     64c:	01 97       	sbiw	r24, 0x01	; 1
     64e:	11 96       	adiw	r26, 0x01	; 1
     650:	9c 93       	st	X, r25
     652:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     654:	fe 01       	movw	r30, r28
     656:	e9 59       	subi	r30, 0x99	; 153
     658:	ff 4f       	sbci	r31, 0xFF	; 255
     65a:	80 81       	ld	r24, Z
     65c:	91 81       	ldd	r25, Z+1	; 0x01
     65e:	00 97       	sbiw	r24, 0x00	; 0
     660:	d1 f6       	brne	.-76     	; 0x616 <resize+0x104>
     662:	27 c0       	rjmp	.+78     	; 0x6b2 <resize+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     664:	8e 01       	movw	r16, r28
     666:	09 59       	subi	r16, 0x99	; 153
     668:	1f 4f       	sbci	r17, 0xFF	; 255
     66a:	fe 01       	movw	r30, r28
     66c:	e7 59       	subi	r30, 0x97	; 151
     66e:	ff 4f       	sbci	r31, 0xFF	; 255
     670:	60 81       	ld	r22, Z
     672:	71 81       	ldd	r23, Z+1	; 0x01
     674:	82 81       	ldd	r24, Z+2	; 0x02
     676:	93 81       	ldd	r25, Z+3	; 0x03
     678:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     67c:	dc 01       	movw	r26, r24
     67e:	cb 01       	movw	r24, r22
     680:	f8 01       	movw	r30, r16
     682:	91 83       	std	Z+1, r25	; 0x01
     684:	80 83       	st	Z, r24
     686:	de 01       	movw	r26, r28
     688:	ad 59       	subi	r26, 0x9D	; 157
     68a:	bf 4f       	sbci	r27, 0xFF	; 255
     68c:	fe 01       	movw	r30, r28
     68e:	e9 59       	subi	r30, 0x99	; 153
     690:	ff 4f       	sbci	r31, 0xFF	; 255
     692:	80 81       	ld	r24, Z
     694:	91 81       	ldd	r25, Z+1	; 0x01
     696:	8d 93       	st	X+, r24
     698:	9c 93       	st	X, r25
     69a:	fe 01       	movw	r30, r28
     69c:	ed 59       	subi	r30, 0x9D	; 157
     69e:	ff 4f       	sbci	r31, 0xFF	; 255
     6a0:	80 81       	ld	r24, Z
     6a2:	91 81       	ldd	r25, Z+1	; 0x01
     6a4:	01 97       	sbiw	r24, 0x01	; 1
     6a6:	f1 f7       	brne	.-4      	; 0x6a4 <resize+0x192>
     6a8:	fe 01       	movw	r30, r28
     6aa:	ed 59       	subi	r30, 0x9D	; 157
     6ac:	ff 4f       	sbci	r31, 0xFF	; 255
     6ae:	91 83       	std	Z+1, r25	; 0x01
     6b0:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
     6b2:	ec e2       	ldi	r30, 0x2C	; 44
     6b4:	f0 e0       	ldi	r31, 0x00	; 0
     6b6:	10 82       	st	Z, r1
     6b8:	fe 01       	movw	r30, r28
     6ba:	e1 5a       	subi	r30, 0xA1	; 161
     6bc:	ff 4f       	sbci	r31, 0xFF	; 255
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	a0 e8       	ldi	r26, 0x80	; 128
     6c4:	bf e3       	ldi	r27, 0x3F	; 63
     6c6:	80 83       	st	Z, r24
     6c8:	91 83       	std	Z+1, r25	; 0x01
     6ca:	a2 83       	std	Z+2, r26	; 0x02
     6cc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     6ce:	8e 01       	movw	r16, r28
     6d0:	05 5a       	subi	r16, 0xA5	; 165
     6d2:	1f 4f       	sbci	r17, 0xFF	; 255
     6d4:	fe 01       	movw	r30, r28
     6d6:	e1 5a       	subi	r30, 0xA1	; 161
     6d8:	ff 4f       	sbci	r31, 0xFF	; 255
     6da:	60 81       	ld	r22, Z
     6dc:	71 81       	ldd	r23, Z+1	; 0x01
     6de:	82 81       	ldd	r24, Z+2	; 0x02
     6e0:	93 81       	ldd	r25, Z+3	; 0x03
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	4a e7       	ldi	r20, 0x7A	; 122
     6e8:	55 e4       	ldi	r21, 0x45	; 69
     6ea:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     6ee:	dc 01       	movw	r26, r24
     6f0:	cb 01       	movw	r24, r22
     6f2:	f8 01       	movw	r30, r16
     6f4:	80 83       	st	Z, r24
     6f6:	91 83       	std	Z+1, r25	; 0x01
     6f8:	a2 83       	std	Z+2, r26	; 0x02
     6fa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6fc:	fe 01       	movw	r30, r28
     6fe:	e5 5a       	subi	r30, 0xA5	; 165
     700:	ff 4f       	sbci	r31, 0xFF	; 255
     702:	60 81       	ld	r22, Z
     704:	71 81       	ldd	r23, Z+1	; 0x01
     706:	82 81       	ldd	r24, Z+2	; 0x02
     708:	93 81       	ldd	r25, Z+3	; 0x03
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	40 e8       	ldi	r20, 0x80	; 128
     710:	5f e3       	ldi	r21, 0x3F	; 63
     712:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     716:	88 23       	and	r24, r24
     718:	44 f4       	brge	.+16     	; 0x72a <resize+0x218>
		__ticks = 1;
     71a:	fe 01       	movw	r30, r28
     71c:	e7 5a       	subi	r30, 0xA7	; 167
     71e:	ff 4f       	sbci	r31, 0xFF	; 255
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	91 83       	std	Z+1, r25	; 0x01
     726:	80 83       	st	Z, r24
     728:	64 c0       	rjmp	.+200    	; 0x7f2 <resize+0x2e0>
	else if (__tmp > 65535)
     72a:	fe 01       	movw	r30, r28
     72c:	e5 5a       	subi	r30, 0xA5	; 165
     72e:	ff 4f       	sbci	r31, 0xFF	; 255
     730:	60 81       	ld	r22, Z
     732:	71 81       	ldd	r23, Z+1	; 0x01
     734:	82 81       	ldd	r24, Z+2	; 0x02
     736:	93 81       	ldd	r25, Z+3	; 0x03
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	3f ef       	ldi	r19, 0xFF	; 255
     73c:	4f e7       	ldi	r20, 0x7F	; 127
     73e:	57 e4       	ldi	r21, 0x47	; 71
     740:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     744:	18 16       	cp	r1, r24
     746:	0c f0       	brlt	.+2      	; 0x74a <resize+0x238>
     748:	43 c0       	rjmp	.+134    	; 0x7d0 <resize+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     74a:	fe 01       	movw	r30, r28
     74c:	e1 5a       	subi	r30, 0xA1	; 161
     74e:	ff 4f       	sbci	r31, 0xFF	; 255
     750:	60 81       	ld	r22, Z
     752:	71 81       	ldd	r23, Z+1	; 0x01
     754:	82 81       	ldd	r24, Z+2	; 0x02
     756:	93 81       	ldd	r25, Z+3	; 0x03
     758:	20 e0       	ldi	r18, 0x00	; 0
     75a:	30 e0       	ldi	r19, 0x00	; 0
     75c:	40 e2       	ldi	r20, 0x20	; 32
     75e:	51 e4       	ldi	r21, 0x41	; 65
     760:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     764:	dc 01       	movw	r26, r24
     766:	cb 01       	movw	r24, r22
     768:	8e 01       	movw	r16, r28
     76a:	07 5a       	subi	r16, 0xA7	; 167
     76c:	1f 4f       	sbci	r17, 0xFF	; 255
     76e:	bc 01       	movw	r22, r24
     770:	cd 01       	movw	r24, r26
     772:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     776:	dc 01       	movw	r26, r24
     778:	cb 01       	movw	r24, r22
     77a:	f8 01       	movw	r30, r16
     77c:	91 83       	std	Z+1, r25	; 0x01
     77e:	80 83       	st	Z, r24
     780:	1f c0       	rjmp	.+62     	; 0x7c0 <resize+0x2ae>
     782:	fe 01       	movw	r30, r28
     784:	e9 5a       	subi	r30, 0xA9	; 169
     786:	ff 4f       	sbci	r31, 0xFF	; 255
     788:	80 e9       	ldi	r24, 0x90	; 144
     78a:	91 e0       	ldi	r25, 0x01	; 1
     78c:	91 83       	std	Z+1, r25	; 0x01
     78e:	80 83       	st	Z, r24
     790:	fe 01       	movw	r30, r28
     792:	e9 5a       	subi	r30, 0xA9	; 169
     794:	ff 4f       	sbci	r31, 0xFF	; 255
     796:	80 81       	ld	r24, Z
     798:	91 81       	ldd	r25, Z+1	; 0x01
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	f1 f7       	brne	.-4      	; 0x79a <resize+0x288>
     79e:	fe 01       	movw	r30, r28
     7a0:	e9 5a       	subi	r30, 0xA9	; 169
     7a2:	ff 4f       	sbci	r31, 0xFF	; 255
     7a4:	91 83       	std	Z+1, r25	; 0x01
     7a6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     7a8:	de 01       	movw	r26, r28
     7aa:	a7 5a       	subi	r26, 0xA7	; 167
     7ac:	bf 4f       	sbci	r27, 0xFF	; 255
     7ae:	fe 01       	movw	r30, r28
     7b0:	e7 5a       	subi	r30, 0xA7	; 167
     7b2:	ff 4f       	sbci	r31, 0xFF	; 255
     7b4:	80 81       	ld	r24, Z
     7b6:	91 81       	ldd	r25, Z+1	; 0x01
     7b8:	01 97       	sbiw	r24, 0x01	; 1
     7ba:	11 96       	adiw	r26, 0x01	; 1
     7bc:	9c 93       	st	X, r25
     7be:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     7c0:	fe 01       	movw	r30, r28
     7c2:	e7 5a       	subi	r30, 0xA7	; 167
     7c4:	ff 4f       	sbci	r31, 0xFF	; 255
     7c6:	80 81       	ld	r24, Z
     7c8:	91 81       	ldd	r25, Z+1	; 0x01
     7ca:	00 97       	sbiw	r24, 0x00	; 0
     7cc:	d1 f6       	brne	.-76     	; 0x782 <resize+0x270>
     7ce:	27 c0       	rjmp	.+78     	; 0x81e <resize+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7d0:	8e 01       	movw	r16, r28
     7d2:	07 5a       	subi	r16, 0xA7	; 167
     7d4:	1f 4f       	sbci	r17, 0xFF	; 255
     7d6:	fe 01       	movw	r30, r28
     7d8:	e5 5a       	subi	r30, 0xA5	; 165
     7da:	ff 4f       	sbci	r31, 0xFF	; 255
     7dc:	60 81       	ld	r22, Z
     7de:	71 81       	ldd	r23, Z+1	; 0x01
     7e0:	82 81       	ldd	r24, Z+2	; 0x02
     7e2:	93 81       	ldd	r25, Z+3	; 0x03
     7e4:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     7e8:	dc 01       	movw	r26, r24
     7ea:	cb 01       	movw	r24, r22
     7ec:	f8 01       	movw	r30, r16
     7ee:	91 83       	std	Z+1, r25	; 0x01
     7f0:	80 83       	st	Z, r24
     7f2:	de 01       	movw	r26, r28
     7f4:	ab 5a       	subi	r26, 0xAB	; 171
     7f6:	bf 4f       	sbci	r27, 0xFF	; 255
     7f8:	fe 01       	movw	r30, r28
     7fa:	e7 5a       	subi	r30, 0xA7	; 167
     7fc:	ff 4f       	sbci	r31, 0xFF	; 255
     7fe:	80 81       	ld	r24, Z
     800:	91 81       	ldd	r25, Z+1	; 0x01
     802:	8d 93       	st	X+, r24
     804:	9c 93       	st	X, r25
     806:	fe 01       	movw	r30, r28
     808:	eb 5a       	subi	r30, 0xAB	; 171
     80a:	ff 4f       	sbci	r31, 0xFF	; 255
     80c:	80 81       	ld	r24, Z
     80e:	91 81       	ldd	r25, Z+1	; 0x01
     810:	01 97       	sbiw	r24, 0x01	; 1
     812:	f1 f7       	brne	.-4      	; 0x810 <resize+0x2fe>
     814:	fe 01       	movw	r30, r28
     816:	eb 5a       	subi	r30, 0xAB	; 171
     818:	ff 4f       	sbci	r31, 0xFF	; 255
     81a:	91 83       	std	Z+1, r25	; 0x01
     81c:	80 83       	st	Z, r24
 UDR0=0x31; _delay_ms(1);
     81e:	ec e2       	ldi	r30, 0x2C	; 44
     820:	f0 e0       	ldi	r31, 0x00	; 0
     822:	81 e3       	ldi	r24, 0x31	; 49
     824:	80 83       	st	Z, r24
     826:	fe 01       	movw	r30, r28
     828:	ef 5a       	subi	r30, 0xAF	; 175
     82a:	ff 4f       	sbci	r31, 0xFF	; 255
     82c:	80 e0       	ldi	r24, 0x00	; 0
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	a0 e8       	ldi	r26, 0x80	; 128
     832:	bf e3       	ldi	r27, 0x3F	; 63
     834:	80 83       	st	Z, r24
     836:	91 83       	std	Z+1, r25	; 0x01
     838:	a2 83       	std	Z+2, r26	; 0x02
     83a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     83c:	8e 01       	movw	r16, r28
     83e:	03 5b       	subi	r16, 0xB3	; 179
     840:	1f 4f       	sbci	r17, 0xFF	; 255
     842:	fe 01       	movw	r30, r28
     844:	ef 5a       	subi	r30, 0xAF	; 175
     846:	ff 4f       	sbci	r31, 0xFF	; 255
     848:	60 81       	ld	r22, Z
     84a:	71 81       	ldd	r23, Z+1	; 0x01
     84c:	82 81       	ldd	r24, Z+2	; 0x02
     84e:	93 81       	ldd	r25, Z+3	; 0x03
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	4a e7       	ldi	r20, 0x7A	; 122
     856:	55 e4       	ldi	r21, 0x45	; 69
     858:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     85c:	dc 01       	movw	r26, r24
     85e:	cb 01       	movw	r24, r22
     860:	f8 01       	movw	r30, r16
     862:	80 83       	st	Z, r24
     864:	91 83       	std	Z+1, r25	; 0x01
     866:	a2 83       	std	Z+2, r26	; 0x02
     868:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     86a:	fe 01       	movw	r30, r28
     86c:	e3 5b       	subi	r30, 0xB3	; 179
     86e:	ff 4f       	sbci	r31, 0xFF	; 255
     870:	60 81       	ld	r22, Z
     872:	71 81       	ldd	r23, Z+1	; 0x01
     874:	82 81       	ldd	r24, Z+2	; 0x02
     876:	93 81       	ldd	r25, Z+3	; 0x03
     878:	20 e0       	ldi	r18, 0x00	; 0
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	40 e8       	ldi	r20, 0x80	; 128
     87e:	5f e3       	ldi	r21, 0x3F	; 63
     880:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     884:	88 23       	and	r24, r24
     886:	44 f4       	brge	.+16     	; 0x898 <resize+0x386>
		__ticks = 1;
     888:	fe 01       	movw	r30, r28
     88a:	e5 5b       	subi	r30, 0xB5	; 181
     88c:	ff 4f       	sbci	r31, 0xFF	; 255
     88e:	81 e0       	ldi	r24, 0x01	; 1
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	91 83       	std	Z+1, r25	; 0x01
     894:	80 83       	st	Z, r24
     896:	64 c0       	rjmp	.+200    	; 0x960 <resize+0x44e>
	else if (__tmp > 65535)
     898:	fe 01       	movw	r30, r28
     89a:	e3 5b       	subi	r30, 0xB3	; 179
     89c:	ff 4f       	sbci	r31, 0xFF	; 255
     89e:	60 81       	ld	r22, Z
     8a0:	71 81       	ldd	r23, Z+1	; 0x01
     8a2:	82 81       	ldd	r24, Z+2	; 0x02
     8a4:	93 81       	ldd	r25, Z+3	; 0x03
     8a6:	20 e0       	ldi	r18, 0x00	; 0
     8a8:	3f ef       	ldi	r19, 0xFF	; 255
     8aa:	4f e7       	ldi	r20, 0x7F	; 127
     8ac:	57 e4       	ldi	r21, 0x47	; 71
     8ae:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     8b2:	18 16       	cp	r1, r24
     8b4:	0c f0       	brlt	.+2      	; 0x8b8 <resize+0x3a6>
     8b6:	43 c0       	rjmp	.+134    	; 0x93e <resize+0x42c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8b8:	fe 01       	movw	r30, r28
     8ba:	ef 5a       	subi	r30, 0xAF	; 175
     8bc:	ff 4f       	sbci	r31, 0xFF	; 255
     8be:	60 81       	ld	r22, Z
     8c0:	71 81       	ldd	r23, Z+1	; 0x01
     8c2:	82 81       	ldd	r24, Z+2	; 0x02
     8c4:	93 81       	ldd	r25, Z+3	; 0x03
     8c6:	20 e0       	ldi	r18, 0x00	; 0
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	40 e2       	ldi	r20, 0x20	; 32
     8cc:	51 e4       	ldi	r21, 0x41	; 65
     8ce:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     8d2:	dc 01       	movw	r26, r24
     8d4:	cb 01       	movw	r24, r22
     8d6:	8e 01       	movw	r16, r28
     8d8:	05 5b       	subi	r16, 0xB5	; 181
     8da:	1f 4f       	sbci	r17, 0xFF	; 255
     8dc:	bc 01       	movw	r22, r24
     8de:	cd 01       	movw	r24, r26
     8e0:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     8e4:	dc 01       	movw	r26, r24
     8e6:	cb 01       	movw	r24, r22
     8e8:	f8 01       	movw	r30, r16
     8ea:	91 83       	std	Z+1, r25	; 0x01
     8ec:	80 83       	st	Z, r24
     8ee:	1f c0       	rjmp	.+62     	; 0x92e <resize+0x41c>
     8f0:	fe 01       	movw	r30, r28
     8f2:	e7 5b       	subi	r30, 0xB7	; 183
     8f4:	ff 4f       	sbci	r31, 0xFF	; 255
     8f6:	80 e9       	ldi	r24, 0x90	; 144
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	91 83       	std	Z+1, r25	; 0x01
     8fc:	80 83       	st	Z, r24
     8fe:	fe 01       	movw	r30, r28
     900:	e7 5b       	subi	r30, 0xB7	; 183
     902:	ff 4f       	sbci	r31, 0xFF	; 255
     904:	80 81       	ld	r24, Z
     906:	91 81       	ldd	r25, Z+1	; 0x01
     908:	01 97       	sbiw	r24, 0x01	; 1
     90a:	f1 f7       	brne	.-4      	; 0x908 <resize+0x3f6>
     90c:	fe 01       	movw	r30, r28
     90e:	e7 5b       	subi	r30, 0xB7	; 183
     910:	ff 4f       	sbci	r31, 0xFF	; 255
     912:	91 83       	std	Z+1, r25	; 0x01
     914:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     916:	de 01       	movw	r26, r28
     918:	a5 5b       	subi	r26, 0xB5	; 181
     91a:	bf 4f       	sbci	r27, 0xFF	; 255
     91c:	fe 01       	movw	r30, r28
     91e:	e5 5b       	subi	r30, 0xB5	; 181
     920:	ff 4f       	sbci	r31, 0xFF	; 255
     922:	80 81       	ld	r24, Z
     924:	91 81       	ldd	r25, Z+1	; 0x01
     926:	01 97       	sbiw	r24, 0x01	; 1
     928:	11 96       	adiw	r26, 0x01	; 1
     92a:	9c 93       	st	X, r25
     92c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     92e:	fe 01       	movw	r30, r28
     930:	e5 5b       	subi	r30, 0xB5	; 181
     932:	ff 4f       	sbci	r31, 0xFF	; 255
     934:	80 81       	ld	r24, Z
     936:	91 81       	ldd	r25, Z+1	; 0x01
     938:	00 97       	sbiw	r24, 0x00	; 0
     93a:	d1 f6       	brne	.-76     	; 0x8f0 <resize+0x3de>
     93c:	27 c0       	rjmp	.+78     	; 0x98c <resize+0x47a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     93e:	8e 01       	movw	r16, r28
     940:	05 5b       	subi	r16, 0xB5	; 181
     942:	1f 4f       	sbci	r17, 0xFF	; 255
     944:	fe 01       	movw	r30, r28
     946:	e3 5b       	subi	r30, 0xB3	; 179
     948:	ff 4f       	sbci	r31, 0xFF	; 255
     94a:	60 81       	ld	r22, Z
     94c:	71 81       	ldd	r23, Z+1	; 0x01
     94e:	82 81       	ldd	r24, Z+2	; 0x02
     950:	93 81       	ldd	r25, Z+3	; 0x03
     952:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     956:	dc 01       	movw	r26, r24
     958:	cb 01       	movw	r24, r22
     95a:	f8 01       	movw	r30, r16
     95c:	91 83       	std	Z+1, r25	; 0x01
     95e:	80 83       	st	Z, r24
     960:	de 01       	movw	r26, r28
     962:	a9 5b       	subi	r26, 0xB9	; 185
     964:	bf 4f       	sbci	r27, 0xFF	; 255
     966:	fe 01       	movw	r30, r28
     968:	e5 5b       	subi	r30, 0xB5	; 181
     96a:	ff 4f       	sbci	r31, 0xFF	; 255
     96c:	80 81       	ld	r24, Z
     96e:	91 81       	ldd	r25, Z+1	; 0x01
     970:	8d 93       	st	X+, r24
     972:	9c 93       	st	X, r25
     974:	fe 01       	movw	r30, r28
     976:	e9 5b       	subi	r30, 0xB9	; 185
     978:	ff 4f       	sbci	r31, 0xFF	; 255
     97a:	80 81       	ld	r24, Z
     97c:	91 81       	ldd	r25, Z+1	; 0x01
     97e:	01 97       	sbiw	r24, 0x01	; 1
     980:	f1 f7       	brne	.-4      	; 0x97e <resize+0x46c>
     982:	fe 01       	movw	r30, r28
     984:	e9 5b       	subi	r30, 0xB9	; 185
     986:	ff 4f       	sbci	r31, 0xFF	; 255
     988:	91 83       	std	Z+1, r25	; 0x01
     98a:	80 83       	st	Z, r24
 UDR0=0x05; _delay_ms(1);
     98c:	ec e2       	ldi	r30, 0x2C	; 44
     98e:	f0 e0       	ldi	r31, 0x00	; 0
     990:	85 e0       	ldi	r24, 0x05	; 5
     992:	80 83       	st	Z, r24
     994:	fe 01       	movw	r30, r28
     996:	ed 5b       	subi	r30, 0xBD	; 189
     998:	ff 4f       	sbci	r31, 0xFF	; 255
     99a:	80 e0       	ldi	r24, 0x00	; 0
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	a0 e8       	ldi	r26, 0x80	; 128
     9a0:	bf e3       	ldi	r27, 0x3F	; 63
     9a2:	80 83       	st	Z, r24
     9a4:	91 83       	std	Z+1, r25	; 0x01
     9a6:	a2 83       	std	Z+2, r26	; 0x02
     9a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     9aa:	8e 01       	movw	r16, r28
     9ac:	01 5c       	subi	r16, 0xC1	; 193
     9ae:	1f 4f       	sbci	r17, 0xFF	; 255
     9b0:	fe 01       	movw	r30, r28
     9b2:	ed 5b       	subi	r30, 0xBD	; 189
     9b4:	ff 4f       	sbci	r31, 0xFF	; 255
     9b6:	60 81       	ld	r22, Z
     9b8:	71 81       	ldd	r23, Z+1	; 0x01
     9ba:	82 81       	ldd	r24, Z+2	; 0x02
     9bc:	93 81       	ldd	r25, Z+3	; 0x03
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	4a e7       	ldi	r20, 0x7A	; 122
     9c4:	55 e4       	ldi	r21, 0x45	; 69
     9c6:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     9ca:	dc 01       	movw	r26, r24
     9cc:	cb 01       	movw	r24, r22
     9ce:	f8 01       	movw	r30, r16
     9d0:	80 83       	st	Z, r24
     9d2:	91 83       	std	Z+1, r25	; 0x01
     9d4:	a2 83       	std	Z+2, r26	; 0x02
     9d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9d8:	fe 01       	movw	r30, r28
     9da:	ff 96       	adiw	r30, 0x3f	; 63
     9dc:	60 81       	ld	r22, Z
     9de:	71 81       	ldd	r23, Z+1	; 0x01
     9e0:	82 81       	ldd	r24, Z+2	; 0x02
     9e2:	93 81       	ldd	r25, Z+3	; 0x03
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	40 e8       	ldi	r20, 0x80	; 128
     9ea:	5f e3       	ldi	r21, 0x3F	; 63
     9ec:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     9f0:	88 23       	and	r24, r24
     9f2:	2c f4       	brge	.+10     	; 0x9fe <resize+0x4ec>
		__ticks = 1;
     9f4:	81 e0       	ldi	r24, 0x01	; 1
     9f6:	90 e0       	ldi	r25, 0x00	; 0
     9f8:	9e af       	std	Y+62, r25	; 0x3e
     9fa:	8d af       	std	Y+61, r24	; 0x3d
     9fc:	46 c0       	rjmp	.+140    	; 0xa8a <resize+0x578>
	else if (__tmp > 65535)
     9fe:	fe 01       	movw	r30, r28
     a00:	ff 96       	adiw	r30, 0x3f	; 63
     a02:	60 81       	ld	r22, Z
     a04:	71 81       	ldd	r23, Z+1	; 0x01
     a06:	82 81       	ldd	r24, Z+2	; 0x02
     a08:	93 81       	ldd	r25, Z+3	; 0x03
     a0a:	20 e0       	ldi	r18, 0x00	; 0
     a0c:	3f ef       	ldi	r19, 0xFF	; 255
     a0e:	4f e7       	ldi	r20, 0x7F	; 127
     a10:	57 e4       	ldi	r21, 0x47	; 71
     a12:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     a16:	18 16       	cp	r1, r24
     a18:	64 f5       	brge	.+88     	; 0xa72 <resize+0x560>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a1a:	fe 01       	movw	r30, r28
     a1c:	ed 5b       	subi	r30, 0xBD	; 189
     a1e:	ff 4f       	sbci	r31, 0xFF	; 255
     a20:	60 81       	ld	r22, Z
     a22:	71 81       	ldd	r23, Z+1	; 0x01
     a24:	82 81       	ldd	r24, Z+2	; 0x02
     a26:	93 81       	ldd	r25, Z+3	; 0x03
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	30 e0       	ldi	r19, 0x00	; 0
     a2c:	40 e2       	ldi	r20, 0x20	; 32
     a2e:	51 e4       	ldi	r21, 0x41	; 65
     a30:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     a34:	dc 01       	movw	r26, r24
     a36:	cb 01       	movw	r24, r22
     a38:	bc 01       	movw	r22, r24
     a3a:	cd 01       	movw	r24, r26
     a3c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     a40:	dc 01       	movw	r26, r24
     a42:	cb 01       	movw	r24, r22
     a44:	9e af       	std	Y+62, r25	; 0x3e
     a46:	8d af       	std	Y+61, r24	; 0x3d
     a48:	0f c0       	rjmp	.+30     	; 0xa68 <resize+0x556>
     a4a:	80 e9       	ldi	r24, 0x90	; 144
     a4c:	91 e0       	ldi	r25, 0x01	; 1
     a4e:	9c af       	std	Y+60, r25	; 0x3c
     a50:	8b af       	std	Y+59, r24	; 0x3b
     a52:	8b ad       	ldd	r24, Y+59	; 0x3b
     a54:	9c ad       	ldd	r25, Y+60	; 0x3c
     a56:	01 97       	sbiw	r24, 0x01	; 1
     a58:	f1 f7       	brne	.-4      	; 0xa56 <resize+0x544>
     a5a:	9c af       	std	Y+60, r25	; 0x3c
     a5c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a5e:	8d ad       	ldd	r24, Y+61	; 0x3d
     a60:	9e ad       	ldd	r25, Y+62	; 0x3e
     a62:	01 97       	sbiw	r24, 0x01	; 1
     a64:	9e af       	std	Y+62, r25	; 0x3e
     a66:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a68:	8d ad       	ldd	r24, Y+61	; 0x3d
     a6a:	9e ad       	ldd	r25, Y+62	; 0x3e
     a6c:	00 97       	sbiw	r24, 0x00	; 0
     a6e:	69 f7       	brne	.-38     	; 0xa4a <resize+0x538>
     a70:	16 c0       	rjmp	.+44     	; 0xa9e <resize+0x58c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a72:	fe 01       	movw	r30, r28
     a74:	ff 96       	adiw	r30, 0x3f	; 63
     a76:	60 81       	ld	r22, Z
     a78:	71 81       	ldd	r23, Z+1	; 0x01
     a7a:	82 81       	ldd	r24, Z+2	; 0x02
     a7c:	93 81       	ldd	r25, Z+3	; 0x03
     a7e:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     a82:	dc 01       	movw	r26, r24
     a84:	cb 01       	movw	r24, r22
     a86:	9e af       	std	Y+62, r25	; 0x3e
     a88:	8d af       	std	Y+61, r24	; 0x3d
     a8a:	8d ad       	ldd	r24, Y+61	; 0x3d
     a8c:	9e ad       	ldd	r25, Y+62	; 0x3e
     a8e:	9a af       	std	Y+58, r25	; 0x3a
     a90:	89 af       	std	Y+57, r24	; 0x39
     a92:	89 ad       	ldd	r24, Y+57	; 0x39
     a94:	9a ad       	ldd	r25, Y+58	; 0x3a
     a96:	01 97       	sbiw	r24, 0x01	; 1
     a98:	f1 f7       	brne	.-4      	; 0xa96 <resize+0x584>
     a9a:	9a af       	std	Y+58, r25	; 0x3a
     a9c:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x04; _delay_ms(1);
     a9e:	ec e2       	ldi	r30, 0x2C	; 44
     aa0:	f0 e0       	ldi	r31, 0x00	; 0
     aa2:	84 e0       	ldi	r24, 0x04	; 4
     aa4:	80 83       	st	Z, r24
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	a0 e8       	ldi	r26, 0x80	; 128
     aac:	bf e3       	ldi	r27, 0x3F	; 63
     aae:	8d ab       	std	Y+53, r24	; 0x35
     ab0:	9e ab       	std	Y+54, r25	; 0x36
     ab2:	af ab       	std	Y+55, r26	; 0x37
     ab4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ab6:	6d a9       	ldd	r22, Y+53	; 0x35
     ab8:	7e a9       	ldd	r23, Y+54	; 0x36
     aba:	8f a9       	ldd	r24, Y+55	; 0x37
     abc:	98 ad       	ldd	r25, Y+56	; 0x38
     abe:	20 e0       	ldi	r18, 0x00	; 0
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	4a e7       	ldi	r20, 0x7A	; 122
     ac4:	55 e4       	ldi	r21, 0x45	; 69
     ac6:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     aca:	dc 01       	movw	r26, r24
     acc:	cb 01       	movw	r24, r22
     ace:	89 ab       	std	Y+49, r24	; 0x31
     ad0:	9a ab       	std	Y+50, r25	; 0x32
     ad2:	ab ab       	std	Y+51, r26	; 0x33
     ad4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     ad6:	69 a9       	ldd	r22, Y+49	; 0x31
     ad8:	7a a9       	ldd	r23, Y+50	; 0x32
     ada:	8b a9       	ldd	r24, Y+51	; 0x33
     adc:	9c a9       	ldd	r25, Y+52	; 0x34
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	40 e8       	ldi	r20, 0x80	; 128
     ae4:	5f e3       	ldi	r21, 0x3F	; 63
     ae6:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     aea:	88 23       	and	r24, r24
     aec:	2c f4       	brge	.+10     	; 0xaf8 <resize+0x5e6>
		__ticks = 1;
     aee:	81 e0       	ldi	r24, 0x01	; 1
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	98 ab       	std	Y+48, r25	; 0x30
     af4:	8f a7       	std	Y+47, r24	; 0x2f
     af6:	3f c0       	rjmp	.+126    	; 0xb76 <resize+0x664>
	else if (__tmp > 65535)
     af8:	69 a9       	ldd	r22, Y+49	; 0x31
     afa:	7a a9       	ldd	r23, Y+50	; 0x32
     afc:	8b a9       	ldd	r24, Y+51	; 0x33
     afe:	9c a9       	ldd	r25, Y+52	; 0x34
     b00:	20 e0       	ldi	r18, 0x00	; 0
     b02:	3f ef       	ldi	r19, 0xFF	; 255
     b04:	4f e7       	ldi	r20, 0x7F	; 127
     b06:	57 e4       	ldi	r21, 0x47	; 71
     b08:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     b0c:	18 16       	cp	r1, r24
     b0e:	4c f5       	brge	.+82     	; 0xb62 <resize+0x650>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b10:	6d a9       	ldd	r22, Y+53	; 0x35
     b12:	7e a9       	ldd	r23, Y+54	; 0x36
     b14:	8f a9       	ldd	r24, Y+55	; 0x37
     b16:	98 ad       	ldd	r25, Y+56	; 0x38
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	40 e2       	ldi	r20, 0x20	; 32
     b1e:	51 e4       	ldi	r21, 0x41	; 65
     b20:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     b24:	dc 01       	movw	r26, r24
     b26:	cb 01       	movw	r24, r22
     b28:	bc 01       	movw	r22, r24
     b2a:	cd 01       	movw	r24, r26
     b2c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     b30:	dc 01       	movw	r26, r24
     b32:	cb 01       	movw	r24, r22
     b34:	98 ab       	std	Y+48, r25	; 0x30
     b36:	8f a7       	std	Y+47, r24	; 0x2f
     b38:	0f c0       	rjmp	.+30     	; 0xb58 <resize+0x646>
     b3a:	80 e9       	ldi	r24, 0x90	; 144
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	9e a7       	std	Y+46, r25	; 0x2e
     b40:	8d a7       	std	Y+45, r24	; 0x2d
     b42:	8d a5       	ldd	r24, Y+45	; 0x2d
     b44:	9e a5       	ldd	r25, Y+46	; 0x2e
     b46:	01 97       	sbiw	r24, 0x01	; 1
     b48:	f1 f7       	brne	.-4      	; 0xb46 <resize+0x634>
     b4a:	9e a7       	std	Y+46, r25	; 0x2e
     b4c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b4e:	8f a5       	ldd	r24, Y+47	; 0x2f
     b50:	98 a9       	ldd	r25, Y+48	; 0x30
     b52:	01 97       	sbiw	r24, 0x01	; 1
     b54:	98 ab       	std	Y+48, r25	; 0x30
     b56:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b58:	8f a5       	ldd	r24, Y+47	; 0x2f
     b5a:	98 a9       	ldd	r25, Y+48	; 0x30
     b5c:	00 97       	sbiw	r24, 0x00	; 0
     b5e:	69 f7       	brne	.-38     	; 0xb3a <resize+0x628>
     b60:	14 c0       	rjmp	.+40     	; 0xb8a <resize+0x678>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b62:	69 a9       	ldd	r22, Y+49	; 0x31
     b64:	7a a9       	ldd	r23, Y+50	; 0x32
     b66:	8b a9       	ldd	r24, Y+51	; 0x33
     b68:	9c a9       	ldd	r25, Y+52	; 0x34
     b6a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     b6e:	dc 01       	movw	r26, r24
     b70:	cb 01       	movw	r24, r22
     b72:	98 ab       	std	Y+48, r25	; 0x30
     b74:	8f a7       	std	Y+47, r24	; 0x2f
     b76:	8f a5       	ldd	r24, Y+47	; 0x2f
     b78:	98 a9       	ldd	r25, Y+48	; 0x30
     b7a:	9c a7       	std	Y+44, r25	; 0x2c
     b7c:	8b a7       	std	Y+43, r24	; 0x2b
     b7e:	8b a5       	ldd	r24, Y+43	; 0x2b
     b80:	9c a5       	ldd	r25, Y+44	; 0x2c
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	f1 f7       	brne	.-4      	; 0xb82 <resize+0x670>
     b86:	9c a7       	std	Y+44, r25	; 0x2c
     b88:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x01; _delay_ms(1);
     b8a:	ec e2       	ldi	r30, 0x2C	; 44
     b8c:	f0 e0       	ldi	r31, 0x00	; 0
     b8e:	81 e0       	ldi	r24, 0x01	; 1
     b90:	80 83       	st	Z, r24
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	a0 e8       	ldi	r26, 0x80	; 128
     b98:	bf e3       	ldi	r27, 0x3F	; 63
     b9a:	8f a3       	std	Y+39, r24	; 0x27
     b9c:	98 a7       	std	Y+40, r25	; 0x28
     b9e:	a9 a7       	std	Y+41, r26	; 0x29
     ba0:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ba2:	6f a1       	ldd	r22, Y+39	; 0x27
     ba4:	78 a5       	ldd	r23, Y+40	; 0x28
     ba6:	89 a5       	ldd	r24, Y+41	; 0x29
     ba8:	9a a5       	ldd	r25, Y+42	; 0x2a
     baa:	20 e0       	ldi	r18, 0x00	; 0
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	4a e7       	ldi	r20, 0x7A	; 122
     bb0:	55 e4       	ldi	r21, 0x45	; 69
     bb2:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     bb6:	dc 01       	movw	r26, r24
     bb8:	cb 01       	movw	r24, r22
     bba:	8b a3       	std	Y+35, r24	; 0x23
     bbc:	9c a3       	std	Y+36, r25	; 0x24
     bbe:	ad a3       	std	Y+37, r26	; 0x25
     bc0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     bc2:	6b a1       	ldd	r22, Y+35	; 0x23
     bc4:	7c a1       	ldd	r23, Y+36	; 0x24
     bc6:	8d a1       	ldd	r24, Y+37	; 0x25
     bc8:	9e a1       	ldd	r25, Y+38	; 0x26
     bca:	20 e0       	ldi	r18, 0x00	; 0
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	40 e8       	ldi	r20, 0x80	; 128
     bd0:	5f e3       	ldi	r21, 0x3F	; 63
     bd2:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     bd6:	88 23       	and	r24, r24
     bd8:	2c f4       	brge	.+10     	; 0xbe4 <resize+0x6d2>
		__ticks = 1;
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	9a a3       	std	Y+34, r25	; 0x22
     be0:	89 a3       	std	Y+33, r24	; 0x21
     be2:	3f c0       	rjmp	.+126    	; 0xc62 <resize+0x750>
	else if (__tmp > 65535)
     be4:	6b a1       	ldd	r22, Y+35	; 0x23
     be6:	7c a1       	ldd	r23, Y+36	; 0x24
     be8:	8d a1       	ldd	r24, Y+37	; 0x25
     bea:	9e a1       	ldd	r25, Y+38	; 0x26
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	3f ef       	ldi	r19, 0xFF	; 255
     bf0:	4f e7       	ldi	r20, 0x7F	; 127
     bf2:	57 e4       	ldi	r21, 0x47	; 71
     bf4:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     bf8:	18 16       	cp	r1, r24
     bfa:	4c f5       	brge	.+82     	; 0xc4e <resize+0x73c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bfc:	6f a1       	ldd	r22, Y+39	; 0x27
     bfe:	78 a5       	ldd	r23, Y+40	; 0x28
     c00:	89 a5       	ldd	r24, Y+41	; 0x29
     c02:	9a a5       	ldd	r25, Y+42	; 0x2a
     c04:	20 e0       	ldi	r18, 0x00	; 0
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	40 e2       	ldi	r20, 0x20	; 32
     c0a:	51 e4       	ldi	r21, 0x41	; 65
     c0c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     c10:	dc 01       	movw	r26, r24
     c12:	cb 01       	movw	r24, r22
     c14:	bc 01       	movw	r22, r24
     c16:	cd 01       	movw	r24, r26
     c18:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     c1c:	dc 01       	movw	r26, r24
     c1e:	cb 01       	movw	r24, r22
     c20:	9a a3       	std	Y+34, r25	; 0x22
     c22:	89 a3       	std	Y+33, r24	; 0x21
     c24:	0f c0       	rjmp	.+30     	; 0xc44 <resize+0x732>
     c26:	80 e9       	ldi	r24, 0x90	; 144
     c28:	91 e0       	ldi	r25, 0x01	; 1
     c2a:	98 a3       	std	Y+32, r25	; 0x20
     c2c:	8f 8f       	std	Y+31, r24	; 0x1f
     c2e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     c30:	98 a1       	ldd	r25, Y+32	; 0x20
     c32:	01 97       	sbiw	r24, 0x01	; 1
     c34:	f1 f7       	brne	.-4      	; 0xc32 <resize+0x720>
     c36:	98 a3       	std	Y+32, r25	; 0x20
     c38:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c3a:	89 a1       	ldd	r24, Y+33	; 0x21
     c3c:	9a a1       	ldd	r25, Y+34	; 0x22
     c3e:	01 97       	sbiw	r24, 0x01	; 1
     c40:	9a a3       	std	Y+34, r25	; 0x22
     c42:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c44:	89 a1       	ldd	r24, Y+33	; 0x21
     c46:	9a a1       	ldd	r25, Y+34	; 0x22
     c48:	00 97       	sbiw	r24, 0x00	; 0
     c4a:	69 f7       	brne	.-38     	; 0xc26 <resize+0x714>
     c4c:	14 c0       	rjmp	.+40     	; 0xc76 <resize+0x764>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c4e:	6b a1       	ldd	r22, Y+35	; 0x23
     c50:	7c a1       	ldd	r23, Y+36	; 0x24
     c52:	8d a1       	ldd	r24, Y+37	; 0x25
     c54:	9e a1       	ldd	r25, Y+38	; 0x26
     c56:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     c5a:	dc 01       	movw	r26, r24
     c5c:	cb 01       	movw	r24, r22
     c5e:	9a a3       	std	Y+34, r25	; 0x22
     c60:	89 a3       	std	Y+33, r24	; 0x21
     c62:	89 a1       	ldd	r24, Y+33	; 0x21
     c64:	9a a1       	ldd	r25, Y+34	; 0x22
     c66:	9e 8f       	std	Y+30, r25	; 0x1e
     c68:	8d 8f       	std	Y+29, r24	; 0x1d
     c6a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c6c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c6e:	01 97       	sbiw	r24, 0x01	; 1
     c70:	f1 f7       	brne	.-4      	; 0xc6e <resize+0x75c>
     c72:	9e 8f       	std	Y+30, r25	; 0x1e
     c74:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x00; _delay_ms(1);
     c76:	ec e2       	ldi	r30, 0x2C	; 44
     c78:	f0 e0       	ldi	r31, 0x00	; 0
     c7a:	10 82       	st	Z, r1
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	a0 e8       	ldi	r26, 0x80	; 128
     c82:	bf e3       	ldi	r27, 0x3F	; 63
     c84:	89 8f       	std	Y+25, r24	; 0x19
     c86:	9a 8f       	std	Y+26, r25	; 0x1a
     c88:	ab 8f       	std	Y+27, r26	; 0x1b
     c8a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     c8c:	69 8d       	ldd	r22, Y+25	; 0x19
     c8e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c90:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c92:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c94:	20 e0       	ldi	r18, 0x00	; 0
     c96:	30 e0       	ldi	r19, 0x00	; 0
     c98:	4a e7       	ldi	r20, 0x7A	; 122
     c9a:	55 e4       	ldi	r21, 0x45	; 69
     c9c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     ca0:	dc 01       	movw	r26, r24
     ca2:	cb 01       	movw	r24, r22
     ca4:	8d 8b       	std	Y+21, r24	; 0x15
     ca6:	9e 8b       	std	Y+22, r25	; 0x16
     ca8:	af 8b       	std	Y+23, r26	; 0x17
     caa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     cac:	6d 89       	ldd	r22, Y+21	; 0x15
     cae:	7e 89       	ldd	r23, Y+22	; 0x16
     cb0:	8f 89       	ldd	r24, Y+23	; 0x17
     cb2:	98 8d       	ldd	r25, Y+24	; 0x18
     cb4:	20 e0       	ldi	r18, 0x00	; 0
     cb6:	30 e0       	ldi	r19, 0x00	; 0
     cb8:	40 e8       	ldi	r20, 0x80	; 128
     cba:	5f e3       	ldi	r21, 0x3F	; 63
     cbc:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     cc0:	88 23       	and	r24, r24
     cc2:	2c f4       	brge	.+10     	; 0xcce <resize+0x7bc>
		__ticks = 1;
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	9c 8b       	std	Y+20, r25	; 0x14
     cca:	8b 8b       	std	Y+19, r24	; 0x13
     ccc:	3f c0       	rjmp	.+126    	; 0xd4c <resize+0x83a>
	else if (__tmp > 65535)
     cce:	6d 89       	ldd	r22, Y+21	; 0x15
     cd0:	7e 89       	ldd	r23, Y+22	; 0x16
     cd2:	8f 89       	ldd	r24, Y+23	; 0x17
     cd4:	98 8d       	ldd	r25, Y+24	; 0x18
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	3f ef       	ldi	r19, 0xFF	; 255
     cda:	4f e7       	ldi	r20, 0x7F	; 127
     cdc:	57 e4       	ldi	r21, 0x47	; 71
     cde:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     ce2:	18 16       	cp	r1, r24
     ce4:	4c f5       	brge	.+82     	; 0xd38 <resize+0x826>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ce6:	69 8d       	ldd	r22, Y+25	; 0x19
     ce8:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cea:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cec:	9c 8d       	ldd	r25, Y+28	; 0x1c
     cee:	20 e0       	ldi	r18, 0x00	; 0
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	40 e2       	ldi	r20, 0x20	; 32
     cf4:	51 e4       	ldi	r21, 0x41	; 65
     cf6:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     cfa:	dc 01       	movw	r26, r24
     cfc:	cb 01       	movw	r24, r22
     cfe:	bc 01       	movw	r22, r24
     d00:	cd 01       	movw	r24, r26
     d02:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     d06:	dc 01       	movw	r26, r24
     d08:	cb 01       	movw	r24, r22
     d0a:	9c 8b       	std	Y+20, r25	; 0x14
     d0c:	8b 8b       	std	Y+19, r24	; 0x13
     d0e:	0f c0       	rjmp	.+30     	; 0xd2e <resize+0x81c>
     d10:	80 e9       	ldi	r24, 0x90	; 144
     d12:	91 e0       	ldi	r25, 0x01	; 1
     d14:	9a 8b       	std	Y+18, r25	; 0x12
     d16:	89 8b       	std	Y+17, r24	; 0x11
     d18:	89 89       	ldd	r24, Y+17	; 0x11
     d1a:	9a 89       	ldd	r25, Y+18	; 0x12
     d1c:	01 97       	sbiw	r24, 0x01	; 1
     d1e:	f1 f7       	brne	.-4      	; 0xd1c <resize+0x80a>
     d20:	9a 8b       	std	Y+18, r25	; 0x12
     d22:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d24:	8b 89       	ldd	r24, Y+19	; 0x13
     d26:	9c 89       	ldd	r25, Y+20	; 0x14
     d28:	01 97       	sbiw	r24, 0x01	; 1
     d2a:	9c 8b       	std	Y+20, r25	; 0x14
     d2c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d2e:	8b 89       	ldd	r24, Y+19	; 0x13
     d30:	9c 89       	ldd	r25, Y+20	; 0x14
     d32:	00 97       	sbiw	r24, 0x00	; 0
     d34:	69 f7       	brne	.-38     	; 0xd10 <resize+0x7fe>
     d36:	14 c0       	rjmp	.+40     	; 0xd60 <resize+0x84e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d38:	6d 89       	ldd	r22, Y+21	; 0x15
     d3a:	7e 89       	ldd	r23, Y+22	; 0x16
     d3c:	8f 89       	ldd	r24, Y+23	; 0x17
     d3e:	98 8d       	ldd	r25, Y+24	; 0x18
     d40:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     d44:	dc 01       	movw	r26, r24
     d46:	cb 01       	movw	r24, r22
     d48:	9c 8b       	std	Y+20, r25	; 0x14
     d4a:	8b 8b       	std	Y+19, r24	; 0x13
     d4c:	8b 89       	ldd	r24, Y+19	; 0x13
     d4e:	9c 89       	ldd	r25, Y+20	; 0x14
     d50:	98 8b       	std	Y+16, r25	; 0x10
     d52:	8f 87       	std	Y+15, r24	; 0x0f
     d54:	8f 85       	ldd	r24, Y+15	; 0x0f
     d56:	98 89       	ldd	r25, Y+16	; 0x10
     d58:	01 97       	sbiw	r24, 0x01	; 1
     d5a:	f1 f7       	brne	.-4      	; 0xd58 <resize+0x846>
     d5c:	98 8b       	std	Y+16, r25	; 0x10
     d5e:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x19; _delay_ms(1);
     d60:	ec e2       	ldi	r30, 0x2C	; 44
     d62:	f0 e0       	ldi	r31, 0x00	; 0
     d64:	89 e1       	ldi	r24, 0x19	; 25
     d66:	80 83       	st	Z, r24
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	a0 e8       	ldi	r26, 0x80	; 128
     d6e:	bf e3       	ldi	r27, 0x3F	; 63
     d70:	8b 87       	std	Y+11, r24	; 0x0b
     d72:	9c 87       	std	Y+12, r25	; 0x0c
     d74:	ad 87       	std	Y+13, r26	; 0x0d
     d76:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d78:	6b 85       	ldd	r22, Y+11	; 0x0b
     d7a:	7c 85       	ldd	r23, Y+12	; 0x0c
     d7c:	8d 85       	ldd	r24, Y+13	; 0x0d
     d7e:	9e 85       	ldd	r25, Y+14	; 0x0e
     d80:	20 e0       	ldi	r18, 0x00	; 0
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	4a e7       	ldi	r20, 0x7A	; 122
     d86:	55 e4       	ldi	r21, 0x45	; 69
     d88:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     d8c:	dc 01       	movw	r26, r24
     d8e:	cb 01       	movw	r24, r22
     d90:	8f 83       	std	Y+7, r24	; 0x07
     d92:	98 87       	std	Y+8, r25	; 0x08
     d94:	a9 87       	std	Y+9, r26	; 0x09
     d96:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     d98:	6f 81       	ldd	r22, Y+7	; 0x07
     d9a:	78 85       	ldd	r23, Y+8	; 0x08
     d9c:	89 85       	ldd	r24, Y+9	; 0x09
     d9e:	9a 85       	ldd	r25, Y+10	; 0x0a
     da0:	20 e0       	ldi	r18, 0x00	; 0
     da2:	30 e0       	ldi	r19, 0x00	; 0
     da4:	40 e8       	ldi	r20, 0x80	; 128
     da6:	5f e3       	ldi	r21, 0x3F	; 63
     da8:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     dac:	88 23       	and	r24, r24
     dae:	2c f4       	brge	.+10     	; 0xdba <resize+0x8a8>
		__ticks = 1;
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	9e 83       	std	Y+6, r25	; 0x06
     db6:	8d 83       	std	Y+5, r24	; 0x05
     db8:	3f c0       	rjmp	.+126    	; 0xe38 <resize+0x926>
	else if (__tmp > 65535)
     dba:	6f 81       	ldd	r22, Y+7	; 0x07
     dbc:	78 85       	ldd	r23, Y+8	; 0x08
     dbe:	89 85       	ldd	r24, Y+9	; 0x09
     dc0:	9a 85       	ldd	r25, Y+10	; 0x0a
     dc2:	20 e0       	ldi	r18, 0x00	; 0
     dc4:	3f ef       	ldi	r19, 0xFF	; 255
     dc6:	4f e7       	ldi	r20, 0x7F	; 127
     dc8:	57 e4       	ldi	r21, 0x47	; 71
     dca:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     dce:	18 16       	cp	r1, r24
     dd0:	4c f5       	brge	.+82     	; 0xe24 <resize+0x912>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     dd2:	6b 85       	ldd	r22, Y+11	; 0x0b
     dd4:	7c 85       	ldd	r23, Y+12	; 0x0c
     dd6:	8d 85       	ldd	r24, Y+13	; 0x0d
     dd8:	9e 85       	ldd	r25, Y+14	; 0x0e
     dda:	20 e0       	ldi	r18, 0x00	; 0
     ddc:	30 e0       	ldi	r19, 0x00	; 0
     dde:	40 e2       	ldi	r20, 0x20	; 32
     de0:	51 e4       	ldi	r21, 0x41	; 65
     de2:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     de6:	dc 01       	movw	r26, r24
     de8:	cb 01       	movw	r24, r22
     dea:	bc 01       	movw	r22, r24
     dec:	cd 01       	movw	r24, r26
     dee:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     df2:	dc 01       	movw	r26, r24
     df4:	cb 01       	movw	r24, r22
     df6:	9e 83       	std	Y+6, r25	; 0x06
     df8:	8d 83       	std	Y+5, r24	; 0x05
     dfa:	0f c0       	rjmp	.+30     	; 0xe1a <resize+0x908>
     dfc:	80 e9       	ldi	r24, 0x90	; 144
     dfe:	91 e0       	ldi	r25, 0x01	; 1
     e00:	9c 83       	std	Y+4, r25	; 0x04
     e02:	8b 83       	std	Y+3, r24	; 0x03
     e04:	8b 81       	ldd	r24, Y+3	; 0x03
     e06:	9c 81       	ldd	r25, Y+4	; 0x04
     e08:	01 97       	sbiw	r24, 0x01	; 1
     e0a:	f1 f7       	brne	.-4      	; 0xe08 <resize+0x8f6>
     e0c:	9c 83       	std	Y+4, r25	; 0x04
     e0e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e10:	8d 81       	ldd	r24, Y+5	; 0x05
     e12:	9e 81       	ldd	r25, Y+6	; 0x06
     e14:	01 97       	sbiw	r24, 0x01	; 1
     e16:	9e 83       	std	Y+6, r25	; 0x06
     e18:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e1a:	8d 81       	ldd	r24, Y+5	; 0x05
     e1c:	9e 81       	ldd	r25, Y+6	; 0x06
     e1e:	00 97       	sbiw	r24, 0x00	; 0
     e20:	69 f7       	brne	.-38     	; 0xdfc <resize+0x8ea>
     e22:	14 c0       	rjmp	.+40     	; 0xe4c <resize+0x93a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e24:	6f 81       	ldd	r22, Y+7	; 0x07
     e26:	78 85       	ldd	r23, Y+8	; 0x08
     e28:	89 85       	ldd	r24, Y+9	; 0x09
     e2a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e2c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     e30:	dc 01       	movw	r26, r24
     e32:	cb 01       	movw	r24, r22
     e34:	9e 83       	std	Y+6, r25	; 0x06
     e36:	8d 83       	std	Y+5, r24	; 0x05
     e38:	8d 81       	ldd	r24, Y+5	; 0x05
     e3a:	9e 81       	ldd	r25, Y+6	; 0x06
     e3c:	9a 83       	std	Y+2, r25	; 0x02
     e3e:	89 83       	std	Y+1, r24	; 0x01
     e40:	89 81       	ldd	r24, Y+1	; 0x01
     e42:	9a 81       	ldd	r25, Y+2	; 0x02
     e44:	01 97       	sbiw	r24, 0x01	; 1
     e46:	f1 f7       	brne	.-4      	; 0xe44 <resize+0x932>
     e48:	9a 83       	std	Y+2, r25	; 0x02
     e4a:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x11;
     e4c:	ec e2       	ldi	r30, 0x2C	; 44
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	81 e1       	ldi	r24, 0x11	; 17
     e52:	80 83       	st	Z, r24
}
     e54:	c0 59       	subi	r28, 0x90	; 144
     e56:	df 4f       	sbci	r29, 0xFF	; 255
     e58:	0f b6       	in	r0, 0x3f	; 63
     e5a:	f8 94       	cli
     e5c:	de bf       	out	0x3e, r29	; 62
     e5e:	0f be       	out	0x3f, r0	; 63
     e60:	cd bf       	out	0x3d, r28	; 61
     e62:	cf 91       	pop	r28
     e64:	df 91       	pop	r29
     e66:	1f 91       	pop	r17
     e68:	0f 91       	pop	r16
     e6a:	08 95       	ret

00000e6c <set_rate>:
 
void set_rate(){
     e6c:	0f 93       	push	r16
     e6e:	1f 93       	push	r17
     e70:	df 93       	push	r29
     e72:	cf 93       	push	r28
     e74:	cd b7       	in	r28, 0x3d	; 61
     e76:	de b7       	in	r29, 0x3e	; 62
     e78:	c4 55       	subi	r28, 0x54	; 84
     e7a:	d0 40       	sbci	r29, 0x00	; 0
     e7c:	0f b6       	in	r0, 0x3f	; 63
     e7e:	f8 94       	cli
     e80:	de bf       	out	0x3e, r29	; 62
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nSET_RATE ");
     e86:	00 d0       	rcall	.+0      	; 0xe88 <set_rate+0x1c>
     e88:	ed b7       	in	r30, 0x3d	; 61
     e8a:	fe b7       	in	r31, 0x3e	; 62
     e8c:	31 96       	adiw	r30, 0x01	; 1
     e8e:	85 e1       	ldi	r24, 0x15	; 21
     e90:	91 e0       	ldi	r25, 0x01	; 1
     e92:	91 83       	std	Z+1, r25	; 0x01
     e94:	80 83       	st	Z, r24
     e96:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
     e9a:	0f 90       	pop	r0
     e9c:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
     e9e:	ec e2       	ldi	r30, 0x2C	; 44
     ea0:	f0 e0       	ldi	r31, 0x00	; 0
     ea2:	86 e5       	ldi	r24, 0x56	; 86
     ea4:	80 83       	st	Z, r24
     ea6:	fe 01       	movw	r30, r28
     ea8:	ef 5a       	subi	r30, 0xAF	; 175
     eaa:	ff 4f       	sbci	r31, 0xFF	; 255
     eac:	80 e0       	ldi	r24, 0x00	; 0
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	a0 e8       	ldi	r26, 0x80	; 128
     eb2:	bf e3       	ldi	r27, 0x3F	; 63
     eb4:	80 83       	st	Z, r24
     eb6:	91 83       	std	Z+1, r25	; 0x01
     eb8:	a2 83       	std	Z+2, r26	; 0x02
     eba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ebc:	8e 01       	movw	r16, r28
     ebe:	03 5b       	subi	r16, 0xB3	; 179
     ec0:	1f 4f       	sbci	r17, 0xFF	; 255
     ec2:	fe 01       	movw	r30, r28
     ec4:	ef 5a       	subi	r30, 0xAF	; 175
     ec6:	ff 4f       	sbci	r31, 0xFF	; 255
     ec8:	60 81       	ld	r22, Z
     eca:	71 81       	ldd	r23, Z+1	; 0x01
     ecc:	82 81       	ldd	r24, Z+2	; 0x02
     ece:	93 81       	ldd	r25, Z+3	; 0x03
     ed0:	20 e0       	ldi	r18, 0x00	; 0
     ed2:	30 e0       	ldi	r19, 0x00	; 0
     ed4:	4a e7       	ldi	r20, 0x7A	; 122
     ed6:	55 e4       	ldi	r21, 0x45	; 69
     ed8:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     edc:	dc 01       	movw	r26, r24
     ede:	cb 01       	movw	r24, r22
     ee0:	f8 01       	movw	r30, r16
     ee2:	80 83       	st	Z, r24
     ee4:	91 83       	std	Z+1, r25	; 0x01
     ee6:	a2 83       	std	Z+2, r26	; 0x02
     ee8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     eea:	fe 01       	movw	r30, r28
     eec:	e3 5b       	subi	r30, 0xB3	; 179
     eee:	ff 4f       	sbci	r31, 0xFF	; 255
     ef0:	60 81       	ld	r22, Z
     ef2:	71 81       	ldd	r23, Z+1	; 0x01
     ef4:	82 81       	ldd	r24, Z+2	; 0x02
     ef6:	93 81       	ldd	r25, Z+3	; 0x03
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	40 e8       	ldi	r20, 0x80	; 128
     efe:	5f e3       	ldi	r21, 0x3F	; 63
     f00:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
     f04:	88 23       	and	r24, r24
     f06:	44 f4       	brge	.+16     	; 0xf18 <set_rate+0xac>
		__ticks = 1;
     f08:	fe 01       	movw	r30, r28
     f0a:	e5 5b       	subi	r30, 0xB5	; 181
     f0c:	ff 4f       	sbci	r31, 0xFF	; 255
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	91 83       	std	Z+1, r25	; 0x01
     f14:	80 83       	st	Z, r24
     f16:	64 c0       	rjmp	.+200    	; 0xfe0 <set_rate+0x174>
	else if (__tmp > 65535)
     f18:	fe 01       	movw	r30, r28
     f1a:	e3 5b       	subi	r30, 0xB3	; 179
     f1c:	ff 4f       	sbci	r31, 0xFF	; 255
     f1e:	60 81       	ld	r22, Z
     f20:	71 81       	ldd	r23, Z+1	; 0x01
     f22:	82 81       	ldd	r24, Z+2	; 0x02
     f24:	93 81       	ldd	r25, Z+3	; 0x03
     f26:	20 e0       	ldi	r18, 0x00	; 0
     f28:	3f ef       	ldi	r19, 0xFF	; 255
     f2a:	4f e7       	ldi	r20, 0x7F	; 127
     f2c:	57 e4       	ldi	r21, 0x47	; 71
     f2e:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
     f32:	18 16       	cp	r1, r24
     f34:	0c f0       	brlt	.+2      	; 0xf38 <set_rate+0xcc>
     f36:	43 c0       	rjmp	.+134    	; 0xfbe <set_rate+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f38:	fe 01       	movw	r30, r28
     f3a:	ef 5a       	subi	r30, 0xAF	; 175
     f3c:	ff 4f       	sbci	r31, 0xFF	; 255
     f3e:	60 81       	ld	r22, Z
     f40:	71 81       	ldd	r23, Z+1	; 0x01
     f42:	82 81       	ldd	r24, Z+2	; 0x02
     f44:	93 81       	ldd	r25, Z+3	; 0x03
     f46:	20 e0       	ldi	r18, 0x00	; 0
     f48:	30 e0       	ldi	r19, 0x00	; 0
     f4a:	40 e2       	ldi	r20, 0x20	; 32
     f4c:	51 e4       	ldi	r21, 0x41	; 65
     f4e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
     f52:	dc 01       	movw	r26, r24
     f54:	cb 01       	movw	r24, r22
     f56:	8e 01       	movw	r16, r28
     f58:	05 5b       	subi	r16, 0xB5	; 181
     f5a:	1f 4f       	sbci	r17, 0xFF	; 255
     f5c:	bc 01       	movw	r22, r24
     f5e:	cd 01       	movw	r24, r26
     f60:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     f64:	dc 01       	movw	r26, r24
     f66:	cb 01       	movw	r24, r22
     f68:	f8 01       	movw	r30, r16
     f6a:	91 83       	std	Z+1, r25	; 0x01
     f6c:	80 83       	st	Z, r24
     f6e:	1f c0       	rjmp	.+62     	; 0xfae <set_rate+0x142>
     f70:	fe 01       	movw	r30, r28
     f72:	e7 5b       	subi	r30, 0xB7	; 183
     f74:	ff 4f       	sbci	r31, 0xFF	; 255
     f76:	80 e9       	ldi	r24, 0x90	; 144
     f78:	91 e0       	ldi	r25, 0x01	; 1
     f7a:	91 83       	std	Z+1, r25	; 0x01
     f7c:	80 83       	st	Z, r24
     f7e:	fe 01       	movw	r30, r28
     f80:	e7 5b       	subi	r30, 0xB7	; 183
     f82:	ff 4f       	sbci	r31, 0xFF	; 255
     f84:	80 81       	ld	r24, Z
     f86:	91 81       	ldd	r25, Z+1	; 0x01
     f88:	01 97       	sbiw	r24, 0x01	; 1
     f8a:	f1 f7       	brne	.-4      	; 0xf88 <set_rate+0x11c>
     f8c:	fe 01       	movw	r30, r28
     f8e:	e7 5b       	subi	r30, 0xB7	; 183
     f90:	ff 4f       	sbci	r31, 0xFF	; 255
     f92:	91 83       	std	Z+1, r25	; 0x01
     f94:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f96:	de 01       	movw	r26, r28
     f98:	a5 5b       	subi	r26, 0xB5	; 181
     f9a:	bf 4f       	sbci	r27, 0xFF	; 255
     f9c:	fe 01       	movw	r30, r28
     f9e:	e5 5b       	subi	r30, 0xB5	; 181
     fa0:	ff 4f       	sbci	r31, 0xFF	; 255
     fa2:	80 81       	ld	r24, Z
     fa4:	91 81       	ldd	r25, Z+1	; 0x01
     fa6:	01 97       	sbiw	r24, 0x01	; 1
     fa8:	11 96       	adiw	r26, 0x01	; 1
     faa:	9c 93       	st	X, r25
     fac:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fae:	fe 01       	movw	r30, r28
     fb0:	e5 5b       	subi	r30, 0xB5	; 181
     fb2:	ff 4f       	sbci	r31, 0xFF	; 255
     fb4:	80 81       	ld	r24, Z
     fb6:	91 81       	ldd	r25, Z+1	; 0x01
     fb8:	00 97       	sbiw	r24, 0x00	; 0
     fba:	d1 f6       	brne	.-76     	; 0xf70 <set_rate+0x104>
     fbc:	27 c0       	rjmp	.+78     	; 0x100c <set_rate+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fbe:	8e 01       	movw	r16, r28
     fc0:	05 5b       	subi	r16, 0xB5	; 181
     fc2:	1f 4f       	sbci	r17, 0xFF	; 255
     fc4:	fe 01       	movw	r30, r28
     fc6:	e3 5b       	subi	r30, 0xB3	; 179
     fc8:	ff 4f       	sbci	r31, 0xFF	; 255
     fca:	60 81       	ld	r22, Z
     fcc:	71 81       	ldd	r23, Z+1	; 0x01
     fce:	82 81       	ldd	r24, Z+2	; 0x02
     fd0:	93 81       	ldd	r25, Z+3	; 0x03
     fd2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
     fd6:	dc 01       	movw	r26, r24
     fd8:	cb 01       	movw	r24, r22
     fda:	f8 01       	movw	r30, r16
     fdc:	91 83       	std	Z+1, r25	; 0x01
     fde:	80 83       	st	Z, r24
     fe0:	de 01       	movw	r26, r28
     fe2:	a9 5b       	subi	r26, 0xB9	; 185
     fe4:	bf 4f       	sbci	r27, 0xFF	; 255
     fe6:	fe 01       	movw	r30, r28
     fe8:	e5 5b       	subi	r30, 0xB5	; 181
     fea:	ff 4f       	sbci	r31, 0xFF	; 255
     fec:	80 81       	ld	r24, Z
     fee:	91 81       	ldd	r25, Z+1	; 0x01
     ff0:	8d 93       	st	X+, r24
     ff2:	9c 93       	st	X, r25
     ff4:	fe 01       	movw	r30, r28
     ff6:	e9 5b       	subi	r30, 0xB9	; 185
     ff8:	ff 4f       	sbci	r31, 0xFF	; 255
     ffa:	80 81       	ld	r24, Z
     ffc:	91 81       	ldd	r25, Z+1	; 0x01
     ffe:	01 97       	sbiw	r24, 0x01	; 1
    1000:	f1 f7       	brne	.-4      	; 0xffe <set_rate+0x192>
    1002:	fe 01       	movw	r30, r28
    1004:	e9 5b       	subi	r30, 0xB9	; 185
    1006:	ff 4f       	sbci	r31, 0xFF	; 255
    1008:	91 83       	std	Z+1, r25	; 0x01
    100a:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    100c:	ec e2       	ldi	r30, 0x2C	; 44
    100e:	f0 e0       	ldi	r31, 0x00	; 0
    1010:	10 82       	st	Z, r1
    1012:	fe 01       	movw	r30, r28
    1014:	ed 5b       	subi	r30, 0xBD	; 189
    1016:	ff 4f       	sbci	r31, 0xFF	; 255
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	a0 e8       	ldi	r26, 0x80	; 128
    101e:	bf e3       	ldi	r27, 0x3F	; 63
    1020:	80 83       	st	Z, r24
    1022:	91 83       	std	Z+1, r25	; 0x01
    1024:	a2 83       	std	Z+2, r26	; 0x02
    1026:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1028:	8e 01       	movw	r16, r28
    102a:	01 5c       	subi	r16, 0xC1	; 193
    102c:	1f 4f       	sbci	r17, 0xFF	; 255
    102e:	fe 01       	movw	r30, r28
    1030:	ed 5b       	subi	r30, 0xBD	; 189
    1032:	ff 4f       	sbci	r31, 0xFF	; 255
    1034:	60 81       	ld	r22, Z
    1036:	71 81       	ldd	r23, Z+1	; 0x01
    1038:	82 81       	ldd	r24, Z+2	; 0x02
    103a:	93 81       	ldd	r25, Z+3	; 0x03
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	4a e7       	ldi	r20, 0x7A	; 122
    1042:	55 e4       	ldi	r21, 0x45	; 69
    1044:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1048:	dc 01       	movw	r26, r24
    104a:	cb 01       	movw	r24, r22
    104c:	f8 01       	movw	r30, r16
    104e:	80 83       	st	Z, r24
    1050:	91 83       	std	Z+1, r25	; 0x01
    1052:	a2 83       	std	Z+2, r26	; 0x02
    1054:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1056:	fe 01       	movw	r30, r28
    1058:	ff 96       	adiw	r30, 0x3f	; 63
    105a:	60 81       	ld	r22, Z
    105c:	71 81       	ldd	r23, Z+1	; 0x01
    105e:	82 81       	ldd	r24, Z+2	; 0x02
    1060:	93 81       	ldd	r25, Z+3	; 0x03
    1062:	20 e0       	ldi	r18, 0x00	; 0
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	40 e8       	ldi	r20, 0x80	; 128
    1068:	5f e3       	ldi	r21, 0x3F	; 63
    106a:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    106e:	88 23       	and	r24, r24
    1070:	2c f4       	brge	.+10     	; 0x107c <set_rate+0x210>
		__ticks = 1;
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	9e af       	std	Y+62, r25	; 0x3e
    1078:	8d af       	std	Y+61, r24	; 0x3d
    107a:	46 c0       	rjmp	.+140    	; 0x1108 <__stack+0x9>
	else if (__tmp > 65535)
    107c:	fe 01       	movw	r30, r28
    107e:	ff 96       	adiw	r30, 0x3f	; 63
    1080:	60 81       	ld	r22, Z
    1082:	71 81       	ldd	r23, Z+1	; 0x01
    1084:	82 81       	ldd	r24, Z+2	; 0x02
    1086:	93 81       	ldd	r25, Z+3	; 0x03
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	3f ef       	ldi	r19, 0xFF	; 255
    108c:	4f e7       	ldi	r20, 0x7F	; 127
    108e:	57 e4       	ldi	r21, 0x47	; 71
    1090:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1094:	18 16       	cp	r1, r24
    1096:	64 f5       	brge	.+88     	; 0x10f0 <set_rate+0x284>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1098:	fe 01       	movw	r30, r28
    109a:	ed 5b       	subi	r30, 0xBD	; 189
    109c:	ff 4f       	sbci	r31, 0xFF	; 255
    109e:	60 81       	ld	r22, Z
    10a0:	71 81       	ldd	r23, Z+1	; 0x01
    10a2:	82 81       	ldd	r24, Z+2	; 0x02
    10a4:	93 81       	ldd	r25, Z+3	; 0x03
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	40 e2       	ldi	r20, 0x20	; 32
    10ac:	51 e4       	ldi	r21, 0x41	; 65
    10ae:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    10b2:	dc 01       	movw	r26, r24
    10b4:	cb 01       	movw	r24, r22
    10b6:	bc 01       	movw	r22, r24
    10b8:	cd 01       	movw	r24, r26
    10ba:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    10be:	dc 01       	movw	r26, r24
    10c0:	cb 01       	movw	r24, r22
    10c2:	9e af       	std	Y+62, r25	; 0x3e
    10c4:	8d af       	std	Y+61, r24	; 0x3d
    10c6:	0f c0       	rjmp	.+30     	; 0x10e6 <set_rate+0x27a>
    10c8:	80 e9       	ldi	r24, 0x90	; 144
    10ca:	91 e0       	ldi	r25, 0x01	; 1
    10cc:	9c af       	std	Y+60, r25	; 0x3c
    10ce:	8b af       	std	Y+59, r24	; 0x3b
    10d0:	8b ad       	ldd	r24, Y+59	; 0x3b
    10d2:	9c ad       	ldd	r25, Y+60	; 0x3c
    10d4:	01 97       	sbiw	r24, 0x01	; 1
    10d6:	f1 f7       	brne	.-4      	; 0x10d4 <set_rate+0x268>
    10d8:	9c af       	std	Y+60, r25	; 0x3c
    10da:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10dc:	8d ad       	ldd	r24, Y+61	; 0x3d
    10de:	9e ad       	ldd	r25, Y+62	; 0x3e
    10e0:	01 97       	sbiw	r24, 0x01	; 1
    10e2:	9e af       	std	Y+62, r25	; 0x3e
    10e4:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10e6:	8d ad       	ldd	r24, Y+61	; 0x3d
    10e8:	9e ad       	ldd	r25, Y+62	; 0x3e
    10ea:	00 97       	sbiw	r24, 0x00	; 0
    10ec:	69 f7       	brne	.-38     	; 0x10c8 <set_rate+0x25c>
    10ee:	16 c0       	rjmp	.+44     	; 0x111c <__stack+0x1d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10f0:	fe 01       	movw	r30, r28
    10f2:	ff 96       	adiw	r30, 0x3f	; 63
    10f4:	60 81       	ld	r22, Z
    10f6:	71 81       	ldd	r23, Z+1	; 0x01
    10f8:	82 81       	ldd	r24, Z+2	; 0x02
    10fa:	93 81       	ldd	r25, Z+3	; 0x03
    10fc:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1100:	dc 01       	movw	r26, r24
    1102:	cb 01       	movw	r24, r22
    1104:	9e af       	std	Y+62, r25	; 0x3e
    1106:	8d af       	std	Y+61, r24	; 0x3d
    1108:	8d ad       	ldd	r24, Y+61	; 0x3d
    110a:	9e ad       	ldd	r25, Y+62	; 0x3e
    110c:	9a af       	std	Y+58, r25	; 0x3a
    110e:	89 af       	std	Y+57, r24	; 0x39
    1110:	89 ad       	ldd	r24, Y+57	; 0x39
    1112:	9a ad       	ldd	r25, Y+58	; 0x3a
    1114:	01 97       	sbiw	r24, 0x01	; 1
    1116:	f1 f7       	brne	.-4      	; 0x1114 <__stack+0x15>
    1118:	9a af       	std	Y+58, r25	; 0x3a
    111a:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x24; _delay_ms(1);
    111c:	ec e2       	ldi	r30, 0x2C	; 44
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	84 e2       	ldi	r24, 0x24	; 36
    1122:	80 83       	st	Z, r24
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	a0 e8       	ldi	r26, 0x80	; 128
    112a:	bf e3       	ldi	r27, 0x3F	; 63
    112c:	8d ab       	std	Y+53, r24	; 0x35
    112e:	9e ab       	std	Y+54, r25	; 0x36
    1130:	af ab       	std	Y+55, r26	; 0x37
    1132:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1134:	6d a9       	ldd	r22, Y+53	; 0x35
    1136:	7e a9       	ldd	r23, Y+54	; 0x36
    1138:	8f a9       	ldd	r24, Y+55	; 0x37
    113a:	98 ad       	ldd	r25, Y+56	; 0x38
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	4a e7       	ldi	r20, 0x7A	; 122
    1142:	55 e4       	ldi	r21, 0x45	; 69
    1144:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1148:	dc 01       	movw	r26, r24
    114a:	cb 01       	movw	r24, r22
    114c:	89 ab       	std	Y+49, r24	; 0x31
    114e:	9a ab       	std	Y+50, r25	; 0x32
    1150:	ab ab       	std	Y+51, r26	; 0x33
    1152:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1154:	69 a9       	ldd	r22, Y+49	; 0x31
    1156:	7a a9       	ldd	r23, Y+50	; 0x32
    1158:	8b a9       	ldd	r24, Y+51	; 0x33
    115a:	9c a9       	ldd	r25, Y+52	; 0x34
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	40 e8       	ldi	r20, 0x80	; 128
    1162:	5f e3       	ldi	r21, 0x3F	; 63
    1164:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1168:	88 23       	and	r24, r24
    116a:	2c f4       	brge	.+10     	; 0x1176 <__stack+0x77>
		__ticks = 1;
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	98 ab       	std	Y+48, r25	; 0x30
    1172:	8f a7       	std	Y+47, r24	; 0x2f
    1174:	3f c0       	rjmp	.+126    	; 0x11f4 <__stack+0xf5>
	else if (__tmp > 65535)
    1176:	69 a9       	ldd	r22, Y+49	; 0x31
    1178:	7a a9       	ldd	r23, Y+50	; 0x32
    117a:	8b a9       	ldd	r24, Y+51	; 0x33
    117c:	9c a9       	ldd	r25, Y+52	; 0x34
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	3f ef       	ldi	r19, 0xFF	; 255
    1182:	4f e7       	ldi	r20, 0x7F	; 127
    1184:	57 e4       	ldi	r21, 0x47	; 71
    1186:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    118a:	18 16       	cp	r1, r24
    118c:	4c f5       	brge	.+82     	; 0x11e0 <__stack+0xe1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    118e:	6d a9       	ldd	r22, Y+53	; 0x35
    1190:	7e a9       	ldd	r23, Y+54	; 0x36
    1192:	8f a9       	ldd	r24, Y+55	; 0x37
    1194:	98 ad       	ldd	r25, Y+56	; 0x38
    1196:	20 e0       	ldi	r18, 0x00	; 0
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	40 e2       	ldi	r20, 0x20	; 32
    119c:	51 e4       	ldi	r21, 0x41	; 65
    119e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    11a2:	dc 01       	movw	r26, r24
    11a4:	cb 01       	movw	r24, r22
    11a6:	bc 01       	movw	r22, r24
    11a8:	cd 01       	movw	r24, r26
    11aa:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    11ae:	dc 01       	movw	r26, r24
    11b0:	cb 01       	movw	r24, r22
    11b2:	98 ab       	std	Y+48, r25	; 0x30
    11b4:	8f a7       	std	Y+47, r24	; 0x2f
    11b6:	0f c0       	rjmp	.+30     	; 0x11d6 <__stack+0xd7>
    11b8:	80 e9       	ldi	r24, 0x90	; 144
    11ba:	91 e0       	ldi	r25, 0x01	; 1
    11bc:	9e a7       	std	Y+46, r25	; 0x2e
    11be:	8d a7       	std	Y+45, r24	; 0x2d
    11c0:	8d a5       	ldd	r24, Y+45	; 0x2d
    11c2:	9e a5       	ldd	r25, Y+46	; 0x2e
    11c4:	01 97       	sbiw	r24, 0x01	; 1
    11c6:	f1 f7       	brne	.-4      	; 0x11c4 <__stack+0xc5>
    11c8:	9e a7       	std	Y+46, r25	; 0x2e
    11ca:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11cc:	8f a5       	ldd	r24, Y+47	; 0x2f
    11ce:	98 a9       	ldd	r25, Y+48	; 0x30
    11d0:	01 97       	sbiw	r24, 0x01	; 1
    11d2:	98 ab       	std	Y+48, r25	; 0x30
    11d4:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11d6:	8f a5       	ldd	r24, Y+47	; 0x2f
    11d8:	98 a9       	ldd	r25, Y+48	; 0x30
    11da:	00 97       	sbiw	r24, 0x00	; 0
    11dc:	69 f7       	brne	.-38     	; 0x11b8 <__stack+0xb9>
    11de:	14 c0       	rjmp	.+40     	; 0x1208 <__stack+0x109>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11e0:	69 a9       	ldd	r22, Y+49	; 0x31
    11e2:	7a a9       	ldd	r23, Y+50	; 0x32
    11e4:	8b a9       	ldd	r24, Y+51	; 0x33
    11e6:	9c a9       	ldd	r25, Y+52	; 0x34
    11e8:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    11ec:	dc 01       	movw	r26, r24
    11ee:	cb 01       	movw	r24, r22
    11f0:	98 ab       	std	Y+48, r25	; 0x30
    11f2:	8f a7       	std	Y+47, r24	; 0x2f
    11f4:	8f a5       	ldd	r24, Y+47	; 0x2f
    11f6:	98 a9       	ldd	r25, Y+48	; 0x30
    11f8:	9c a7       	std	Y+44, r25	; 0x2c
    11fa:	8b a7       	std	Y+43, r24	; 0x2b
    11fc:	8b a5       	ldd	r24, Y+43	; 0x2b
    11fe:	9c a5       	ldd	r25, Y+44	; 0x2c
    1200:	01 97       	sbiw	r24, 0x01	; 1
    1202:	f1 f7       	brne	.-4      	; 0x1200 <__stack+0x101>
    1204:	9c a7       	std	Y+44, r25	; 0x2c
    1206:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x03; _delay_ms(1);
    1208:	ec e2       	ldi	r30, 0x2C	; 44
    120a:	f0 e0       	ldi	r31, 0x00	; 0
    120c:	83 e0       	ldi	r24, 0x03	; 3
    120e:	80 83       	st	Z, r24
    1210:	80 e0       	ldi	r24, 0x00	; 0
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	a0 e8       	ldi	r26, 0x80	; 128
    1216:	bf e3       	ldi	r27, 0x3F	; 63
    1218:	8f a3       	std	Y+39, r24	; 0x27
    121a:	98 a7       	std	Y+40, r25	; 0x28
    121c:	a9 a7       	std	Y+41, r26	; 0x29
    121e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1220:	6f a1       	ldd	r22, Y+39	; 0x27
    1222:	78 a5       	ldd	r23, Y+40	; 0x28
    1224:	89 a5       	ldd	r24, Y+41	; 0x29
    1226:	9a a5       	ldd	r25, Y+42	; 0x2a
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	30 e0       	ldi	r19, 0x00	; 0
    122c:	4a e7       	ldi	r20, 0x7A	; 122
    122e:	55 e4       	ldi	r21, 0x45	; 69
    1230:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1234:	dc 01       	movw	r26, r24
    1236:	cb 01       	movw	r24, r22
    1238:	8b a3       	std	Y+35, r24	; 0x23
    123a:	9c a3       	std	Y+36, r25	; 0x24
    123c:	ad a3       	std	Y+37, r26	; 0x25
    123e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1240:	6b a1       	ldd	r22, Y+35	; 0x23
    1242:	7c a1       	ldd	r23, Y+36	; 0x24
    1244:	8d a1       	ldd	r24, Y+37	; 0x25
    1246:	9e a1       	ldd	r25, Y+38	; 0x26
    1248:	20 e0       	ldi	r18, 0x00	; 0
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	40 e8       	ldi	r20, 0x80	; 128
    124e:	5f e3       	ldi	r21, 0x3F	; 63
    1250:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1254:	88 23       	and	r24, r24
    1256:	2c f4       	brge	.+10     	; 0x1262 <__stack+0x163>
		__ticks = 1;
    1258:	81 e0       	ldi	r24, 0x01	; 1
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	9a a3       	std	Y+34, r25	; 0x22
    125e:	89 a3       	std	Y+33, r24	; 0x21
    1260:	3f c0       	rjmp	.+126    	; 0x12e0 <__stack+0x1e1>
	else if (__tmp > 65535)
    1262:	6b a1       	ldd	r22, Y+35	; 0x23
    1264:	7c a1       	ldd	r23, Y+36	; 0x24
    1266:	8d a1       	ldd	r24, Y+37	; 0x25
    1268:	9e a1       	ldd	r25, Y+38	; 0x26
    126a:	20 e0       	ldi	r18, 0x00	; 0
    126c:	3f ef       	ldi	r19, 0xFF	; 255
    126e:	4f e7       	ldi	r20, 0x7F	; 127
    1270:	57 e4       	ldi	r21, 0x47	; 71
    1272:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1276:	18 16       	cp	r1, r24
    1278:	4c f5       	brge	.+82     	; 0x12cc <__stack+0x1cd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    127a:	6f a1       	ldd	r22, Y+39	; 0x27
    127c:	78 a5       	ldd	r23, Y+40	; 0x28
    127e:	89 a5       	ldd	r24, Y+41	; 0x29
    1280:	9a a5       	ldd	r25, Y+42	; 0x2a
    1282:	20 e0       	ldi	r18, 0x00	; 0
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	40 e2       	ldi	r20, 0x20	; 32
    1288:	51 e4       	ldi	r21, 0x41	; 65
    128a:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    128e:	dc 01       	movw	r26, r24
    1290:	cb 01       	movw	r24, r22
    1292:	bc 01       	movw	r22, r24
    1294:	cd 01       	movw	r24, r26
    1296:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    129a:	dc 01       	movw	r26, r24
    129c:	cb 01       	movw	r24, r22
    129e:	9a a3       	std	Y+34, r25	; 0x22
    12a0:	89 a3       	std	Y+33, r24	; 0x21
    12a2:	0f c0       	rjmp	.+30     	; 0x12c2 <__stack+0x1c3>
    12a4:	80 e9       	ldi	r24, 0x90	; 144
    12a6:	91 e0       	ldi	r25, 0x01	; 1
    12a8:	98 a3       	std	Y+32, r25	; 0x20
    12aa:	8f 8f       	std	Y+31, r24	; 0x1f
    12ac:	8f 8d       	ldd	r24, Y+31	; 0x1f
    12ae:	98 a1       	ldd	r25, Y+32	; 0x20
    12b0:	01 97       	sbiw	r24, 0x01	; 1
    12b2:	f1 f7       	brne	.-4      	; 0x12b0 <__stack+0x1b1>
    12b4:	98 a3       	std	Y+32, r25	; 0x20
    12b6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12b8:	89 a1       	ldd	r24, Y+33	; 0x21
    12ba:	9a a1       	ldd	r25, Y+34	; 0x22
    12bc:	01 97       	sbiw	r24, 0x01	; 1
    12be:	9a a3       	std	Y+34, r25	; 0x22
    12c0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12c2:	89 a1       	ldd	r24, Y+33	; 0x21
    12c4:	9a a1       	ldd	r25, Y+34	; 0x22
    12c6:	00 97       	sbiw	r24, 0x00	; 0
    12c8:	69 f7       	brne	.-38     	; 0x12a4 <__stack+0x1a5>
    12ca:	14 c0       	rjmp	.+40     	; 0x12f4 <__stack+0x1f5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12cc:	6b a1       	ldd	r22, Y+35	; 0x23
    12ce:	7c a1       	ldd	r23, Y+36	; 0x24
    12d0:	8d a1       	ldd	r24, Y+37	; 0x25
    12d2:	9e a1       	ldd	r25, Y+38	; 0x26
    12d4:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    12d8:	dc 01       	movw	r26, r24
    12da:	cb 01       	movw	r24, r22
    12dc:	9a a3       	std	Y+34, r25	; 0x22
    12de:	89 a3       	std	Y+33, r24	; 0x21
    12e0:	89 a1       	ldd	r24, Y+33	; 0x21
    12e2:	9a a1       	ldd	r25, Y+34	; 0x22
    12e4:	9e 8f       	std	Y+30, r25	; 0x1e
    12e6:	8d 8f       	std	Y+29, r24	; 0x1d
    12e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    12ea:	9e 8d       	ldd	r25, Y+30	; 0x1e
    12ec:	01 97       	sbiw	r24, 0x01	; 1
    12ee:	f1 f7       	brne	.-4      	; 0x12ec <__stack+0x1ed>
    12f0:	9e 8f       	std	Y+30, r25	; 0x1e
    12f2:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x01; _delay_ms(1);
    12f4:	ec e2       	ldi	r30, 0x2C	; 44
    12f6:	f0 e0       	ldi	r31, 0x00	; 0
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	80 83       	st	Z, r24
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	a0 e8       	ldi	r26, 0x80	; 128
    1302:	bf e3       	ldi	r27, 0x3F	; 63
    1304:	89 8f       	std	Y+25, r24	; 0x19
    1306:	9a 8f       	std	Y+26, r25	; 0x1a
    1308:	ab 8f       	std	Y+27, r26	; 0x1b
    130a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    130c:	69 8d       	ldd	r22, Y+25	; 0x19
    130e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1310:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1312:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1314:	20 e0       	ldi	r18, 0x00	; 0
    1316:	30 e0       	ldi	r19, 0x00	; 0
    1318:	4a e7       	ldi	r20, 0x7A	; 122
    131a:	55 e4       	ldi	r21, 0x45	; 69
    131c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1320:	dc 01       	movw	r26, r24
    1322:	cb 01       	movw	r24, r22
    1324:	8d 8b       	std	Y+21, r24	; 0x15
    1326:	9e 8b       	std	Y+22, r25	; 0x16
    1328:	af 8b       	std	Y+23, r26	; 0x17
    132a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    132c:	6d 89       	ldd	r22, Y+21	; 0x15
    132e:	7e 89       	ldd	r23, Y+22	; 0x16
    1330:	8f 89       	ldd	r24, Y+23	; 0x17
    1332:	98 8d       	ldd	r25, Y+24	; 0x18
    1334:	20 e0       	ldi	r18, 0x00	; 0
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	40 e8       	ldi	r20, 0x80	; 128
    133a:	5f e3       	ldi	r21, 0x3F	; 63
    133c:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1340:	88 23       	and	r24, r24
    1342:	2c f4       	brge	.+10     	; 0x134e <__stack+0x24f>
		__ticks = 1;
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	9c 8b       	std	Y+20, r25	; 0x14
    134a:	8b 8b       	std	Y+19, r24	; 0x13
    134c:	3f c0       	rjmp	.+126    	; 0x13cc <__stack+0x2cd>
	else if (__tmp > 65535)
    134e:	6d 89       	ldd	r22, Y+21	; 0x15
    1350:	7e 89       	ldd	r23, Y+22	; 0x16
    1352:	8f 89       	ldd	r24, Y+23	; 0x17
    1354:	98 8d       	ldd	r25, Y+24	; 0x18
    1356:	20 e0       	ldi	r18, 0x00	; 0
    1358:	3f ef       	ldi	r19, 0xFF	; 255
    135a:	4f e7       	ldi	r20, 0x7F	; 127
    135c:	57 e4       	ldi	r21, 0x47	; 71
    135e:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1362:	18 16       	cp	r1, r24
    1364:	4c f5       	brge	.+82     	; 0x13b8 <__stack+0x2b9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1366:	69 8d       	ldd	r22, Y+25	; 0x19
    1368:	7a 8d       	ldd	r23, Y+26	; 0x1a
    136a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    136c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    136e:	20 e0       	ldi	r18, 0x00	; 0
    1370:	30 e0       	ldi	r19, 0x00	; 0
    1372:	40 e2       	ldi	r20, 0x20	; 32
    1374:	51 e4       	ldi	r21, 0x41	; 65
    1376:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    137a:	dc 01       	movw	r26, r24
    137c:	cb 01       	movw	r24, r22
    137e:	bc 01       	movw	r22, r24
    1380:	cd 01       	movw	r24, r26
    1382:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1386:	dc 01       	movw	r26, r24
    1388:	cb 01       	movw	r24, r22
    138a:	9c 8b       	std	Y+20, r25	; 0x14
    138c:	8b 8b       	std	Y+19, r24	; 0x13
    138e:	0f c0       	rjmp	.+30     	; 0x13ae <__stack+0x2af>
    1390:	80 e9       	ldi	r24, 0x90	; 144
    1392:	91 e0       	ldi	r25, 0x01	; 1
    1394:	9a 8b       	std	Y+18, r25	; 0x12
    1396:	89 8b       	std	Y+17, r24	; 0x11
    1398:	89 89       	ldd	r24, Y+17	; 0x11
    139a:	9a 89       	ldd	r25, Y+18	; 0x12
    139c:	01 97       	sbiw	r24, 0x01	; 1
    139e:	f1 f7       	brne	.-4      	; 0x139c <__stack+0x29d>
    13a0:	9a 8b       	std	Y+18, r25	; 0x12
    13a2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13a4:	8b 89       	ldd	r24, Y+19	; 0x13
    13a6:	9c 89       	ldd	r25, Y+20	; 0x14
    13a8:	01 97       	sbiw	r24, 0x01	; 1
    13aa:	9c 8b       	std	Y+20, r25	; 0x14
    13ac:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13ae:	8b 89       	ldd	r24, Y+19	; 0x13
    13b0:	9c 89       	ldd	r25, Y+20	; 0x14
    13b2:	00 97       	sbiw	r24, 0x00	; 0
    13b4:	69 f7       	brne	.-38     	; 0x1390 <__stack+0x291>
    13b6:	14 c0       	rjmp	.+40     	; 0x13e0 <__stack+0x2e1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13b8:	6d 89       	ldd	r22, Y+21	; 0x15
    13ba:	7e 89       	ldd	r23, Y+22	; 0x16
    13bc:	8f 89       	ldd	r24, Y+23	; 0x17
    13be:	98 8d       	ldd	r25, Y+24	; 0x18
    13c0:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    13c4:	dc 01       	movw	r26, r24
    13c6:	cb 01       	movw	r24, r22
    13c8:	9c 8b       	std	Y+20, r25	; 0x14
    13ca:	8b 8b       	std	Y+19, r24	; 0x13
    13cc:	8b 89       	ldd	r24, Y+19	; 0x13
    13ce:	9c 89       	ldd	r25, Y+20	; 0x14
    13d0:	98 8b       	std	Y+16, r25	; 0x10
    13d2:	8f 87       	std	Y+15, r24	; 0x0f
    13d4:	8f 85       	ldd	r24, Y+15	; 0x0f
    13d6:	98 89       	ldd	r25, Y+16	; 0x10
    13d8:	01 97       	sbiw	r24, 0x01	; 1
    13da:	f1 f7       	brne	.-4      	; 0x13d8 <__stack+0x2d9>
    13dc:	98 8b       	std	Y+16, r25	; 0x10
    13de:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x0D; _delay_ms(1);
    13e0:	ec e2       	ldi	r30, 0x2C	; 44
    13e2:	f0 e0       	ldi	r31, 0x00	; 0
    13e4:	8d e0       	ldi	r24, 0x0D	; 13
    13e6:	80 83       	st	Z, r24
    13e8:	80 e0       	ldi	r24, 0x00	; 0
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	a0 e8       	ldi	r26, 0x80	; 128
    13ee:	bf e3       	ldi	r27, 0x3F	; 63
    13f0:	8b 87       	std	Y+11, r24	; 0x0b
    13f2:	9c 87       	std	Y+12, r25	; 0x0c
    13f4:	ad 87       	std	Y+13, r26	; 0x0d
    13f6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13f8:	6b 85       	ldd	r22, Y+11	; 0x0b
    13fa:	7c 85       	ldd	r23, Y+12	; 0x0c
    13fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    13fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    1400:	20 e0       	ldi	r18, 0x00	; 0
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	4a e7       	ldi	r20, 0x7A	; 122
    1406:	55 e4       	ldi	r21, 0x45	; 69
    1408:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	8f 83       	std	Y+7, r24	; 0x07
    1412:	98 87       	std	Y+8, r25	; 0x08
    1414:	a9 87       	std	Y+9, r26	; 0x09
    1416:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1418:	6f 81       	ldd	r22, Y+7	; 0x07
    141a:	78 85       	ldd	r23, Y+8	; 0x08
    141c:	89 85       	ldd	r24, Y+9	; 0x09
    141e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1420:	20 e0       	ldi	r18, 0x00	; 0
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	40 e8       	ldi	r20, 0x80	; 128
    1426:	5f e3       	ldi	r21, 0x3F	; 63
    1428:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    142c:	88 23       	and	r24, r24
    142e:	2c f4       	brge	.+10     	; 0x143a <__stack+0x33b>
		__ticks = 1;
    1430:	81 e0       	ldi	r24, 0x01	; 1
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	9e 83       	std	Y+6, r25	; 0x06
    1436:	8d 83       	std	Y+5, r24	; 0x05
    1438:	3f c0       	rjmp	.+126    	; 0x14b8 <__stack+0x3b9>
	else if (__tmp > 65535)
    143a:	6f 81       	ldd	r22, Y+7	; 0x07
    143c:	78 85       	ldd	r23, Y+8	; 0x08
    143e:	89 85       	ldd	r24, Y+9	; 0x09
    1440:	9a 85       	ldd	r25, Y+10	; 0x0a
    1442:	20 e0       	ldi	r18, 0x00	; 0
    1444:	3f ef       	ldi	r19, 0xFF	; 255
    1446:	4f e7       	ldi	r20, 0x7F	; 127
    1448:	57 e4       	ldi	r21, 0x47	; 71
    144a:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    144e:	18 16       	cp	r1, r24
    1450:	4c f5       	brge	.+82     	; 0x14a4 <__stack+0x3a5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1452:	6b 85       	ldd	r22, Y+11	; 0x0b
    1454:	7c 85       	ldd	r23, Y+12	; 0x0c
    1456:	8d 85       	ldd	r24, Y+13	; 0x0d
    1458:	9e 85       	ldd	r25, Y+14	; 0x0e
    145a:	20 e0       	ldi	r18, 0x00	; 0
    145c:	30 e0       	ldi	r19, 0x00	; 0
    145e:	40 e2       	ldi	r20, 0x20	; 32
    1460:	51 e4       	ldi	r21, 0x41	; 65
    1462:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1466:	dc 01       	movw	r26, r24
    1468:	cb 01       	movw	r24, r22
    146a:	bc 01       	movw	r22, r24
    146c:	cd 01       	movw	r24, r26
    146e:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1472:	dc 01       	movw	r26, r24
    1474:	cb 01       	movw	r24, r22
    1476:	9e 83       	std	Y+6, r25	; 0x06
    1478:	8d 83       	std	Y+5, r24	; 0x05
    147a:	0f c0       	rjmp	.+30     	; 0x149a <__stack+0x39b>
    147c:	80 e9       	ldi	r24, 0x90	; 144
    147e:	91 e0       	ldi	r25, 0x01	; 1
    1480:	9c 83       	std	Y+4, r25	; 0x04
    1482:	8b 83       	std	Y+3, r24	; 0x03
    1484:	8b 81       	ldd	r24, Y+3	; 0x03
    1486:	9c 81       	ldd	r25, Y+4	; 0x04
    1488:	01 97       	sbiw	r24, 0x01	; 1
    148a:	f1 f7       	brne	.-4      	; 0x1488 <__stack+0x389>
    148c:	9c 83       	std	Y+4, r25	; 0x04
    148e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1490:	8d 81       	ldd	r24, Y+5	; 0x05
    1492:	9e 81       	ldd	r25, Y+6	; 0x06
    1494:	01 97       	sbiw	r24, 0x01	; 1
    1496:	9e 83       	std	Y+6, r25	; 0x06
    1498:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    149a:	8d 81       	ldd	r24, Y+5	; 0x05
    149c:	9e 81       	ldd	r25, Y+6	; 0x06
    149e:	00 97       	sbiw	r24, 0x00	; 0
    14a0:	69 f7       	brne	.-38     	; 0x147c <__stack+0x37d>
    14a2:	14 c0       	rjmp	.+40     	; 0x14cc <__stack+0x3cd>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14a4:	6f 81       	ldd	r22, Y+7	; 0x07
    14a6:	78 85       	ldd	r23, Y+8	; 0x08
    14a8:	89 85       	ldd	r24, Y+9	; 0x09
    14aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    14ac:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    14b0:	dc 01       	movw	r26, r24
    14b2:	cb 01       	movw	r24, r22
    14b4:	9e 83       	std	Y+6, r25	; 0x06
    14b6:	8d 83       	std	Y+5, r24	; 0x05
    14b8:	8d 81       	ldd	r24, Y+5	; 0x05
    14ba:	9e 81       	ldd	r25, Y+6	; 0x06
    14bc:	9a 83       	std	Y+2, r25	; 0x02
    14be:	89 83       	std	Y+1, r24	; 0x01
    14c0:	89 81       	ldd	r24, Y+1	; 0x01
    14c2:	9a 81       	ldd	r25, Y+2	; 0x02
    14c4:	01 97       	sbiw	r24, 0x01	; 1
    14c6:	f1 f7       	brne	.-4      	; 0x14c4 <__stack+0x3c5>
    14c8:	9a 83       	std	Y+2, r25	; 0x02
    14ca:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0xA6;
    14cc:	ec e2       	ldi	r30, 0x2C	; 44
    14ce:	f0 e0       	ldi	r31, 0x00	; 0
    14d0:	86 ea       	ldi	r24, 0xA6	; 166
    14d2:	80 83       	st	Z, r24
}
    14d4:	cc 5a       	subi	r28, 0xAC	; 172
    14d6:	df 4f       	sbci	r29, 0xFF	; 255
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	f8 94       	cli
    14dc:	de bf       	out	0x3e, r29	; 62
    14de:	0f be       	out	0x3f, r0	; 63
    14e0:	cd bf       	out	0x3d, r28	; 61
    14e2:	cf 91       	pop	r28
    14e4:	df 91       	pop	r29
    14e6:	1f 91       	pop	r17
    14e8:	0f 91       	pop	r16
    14ea:	08 95       	ret

000014ec <idle>:
 
void idle(){
    14ec:	df 93       	push	r29
    14ee:	cf 93       	push	r28
    14f0:	cd b7       	in	r28, 0x3d	; 61
    14f2:	de b7       	in	r29, 0x3e	; 62
    14f4:	e8 97       	sbiw	r28, 0x38	; 56
    14f6:	0f b6       	in	r0, 0x3f	; 63
    14f8:	f8 94       	cli
    14fa:	de bf       	out	0x3e, r29	; 62
    14fc:	0f be       	out	0x3f, r0	; 63
    14fe:	cd bf       	out	0x3d, r28	; 61
 idle_flag = 0;
    1500:	10 92 af 01 	sts	0x01AF, r1
    1504:	10 92 ae 01 	sts	0x01AE, r1

 printf("\r\nIDLE  ");
    1508:	00 d0       	rcall	.+0      	; 0x150a <idle+0x1e>
    150a:	ed b7       	in	r30, 0x3d	; 61
    150c:	fe b7       	in	r31, 0x3e	; 62
    150e:	31 96       	adiw	r30, 0x01	; 1
    1510:	81 e2       	ldi	r24, 0x21	; 33
    1512:	91 e0       	ldi	r25, 0x01	; 1
    1514:	91 83       	std	Z+1, r25	; 0x01
    1516:	80 83       	st	Z, r24
    1518:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
    151c:	0f 90       	pop	r0
    151e:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    1520:	ec e2       	ldi	r30, 0x2C	; 44
    1522:	f0 e0       	ldi	r31, 0x00	; 0
    1524:	86 e5       	ldi	r24, 0x56	; 86
    1526:	80 83       	st	Z, r24
    1528:	80 e0       	ldi	r24, 0x00	; 0
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	a0 e8       	ldi	r26, 0x80	; 128
    152e:	bf e3       	ldi	r27, 0x3F	; 63
    1530:	8d ab       	std	Y+53, r24	; 0x35
    1532:	9e ab       	std	Y+54, r25	; 0x36
    1534:	af ab       	std	Y+55, r26	; 0x37
    1536:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1538:	6d a9       	ldd	r22, Y+53	; 0x35
    153a:	7e a9       	ldd	r23, Y+54	; 0x36
    153c:	8f a9       	ldd	r24, Y+55	; 0x37
    153e:	98 ad       	ldd	r25, Y+56	; 0x38
    1540:	20 e0       	ldi	r18, 0x00	; 0
    1542:	30 e0       	ldi	r19, 0x00	; 0
    1544:	4a e7       	ldi	r20, 0x7A	; 122
    1546:	55 e4       	ldi	r21, 0x45	; 69
    1548:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    154c:	dc 01       	movw	r26, r24
    154e:	cb 01       	movw	r24, r22
    1550:	89 ab       	std	Y+49, r24	; 0x31
    1552:	9a ab       	std	Y+50, r25	; 0x32
    1554:	ab ab       	std	Y+51, r26	; 0x33
    1556:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1558:	69 a9       	ldd	r22, Y+49	; 0x31
    155a:	7a a9       	ldd	r23, Y+50	; 0x32
    155c:	8b a9       	ldd	r24, Y+51	; 0x33
    155e:	9c a9       	ldd	r25, Y+52	; 0x34
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	30 e0       	ldi	r19, 0x00	; 0
    1564:	40 e8       	ldi	r20, 0x80	; 128
    1566:	5f e3       	ldi	r21, 0x3F	; 63
    1568:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    156c:	88 23       	and	r24, r24
    156e:	2c f4       	brge	.+10     	; 0x157a <idle+0x8e>
		__ticks = 1;
    1570:	81 e0       	ldi	r24, 0x01	; 1
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	98 ab       	std	Y+48, r25	; 0x30
    1576:	8f a7       	std	Y+47, r24	; 0x2f
    1578:	3f c0       	rjmp	.+126    	; 0x15f8 <idle+0x10c>
	else if (__tmp > 65535)
    157a:	69 a9       	ldd	r22, Y+49	; 0x31
    157c:	7a a9       	ldd	r23, Y+50	; 0x32
    157e:	8b a9       	ldd	r24, Y+51	; 0x33
    1580:	9c a9       	ldd	r25, Y+52	; 0x34
    1582:	20 e0       	ldi	r18, 0x00	; 0
    1584:	3f ef       	ldi	r19, 0xFF	; 255
    1586:	4f e7       	ldi	r20, 0x7F	; 127
    1588:	57 e4       	ldi	r21, 0x47	; 71
    158a:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    158e:	18 16       	cp	r1, r24
    1590:	4c f5       	brge	.+82     	; 0x15e4 <idle+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1592:	6d a9       	ldd	r22, Y+53	; 0x35
    1594:	7e a9       	ldd	r23, Y+54	; 0x36
    1596:	8f a9       	ldd	r24, Y+55	; 0x37
    1598:	98 ad       	ldd	r25, Y+56	; 0x38
    159a:	20 e0       	ldi	r18, 0x00	; 0
    159c:	30 e0       	ldi	r19, 0x00	; 0
    159e:	40 e2       	ldi	r20, 0x20	; 32
    15a0:	51 e4       	ldi	r21, 0x41	; 65
    15a2:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    15a6:	dc 01       	movw	r26, r24
    15a8:	cb 01       	movw	r24, r22
    15aa:	bc 01       	movw	r22, r24
    15ac:	cd 01       	movw	r24, r26
    15ae:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    15b2:	dc 01       	movw	r26, r24
    15b4:	cb 01       	movw	r24, r22
    15b6:	98 ab       	std	Y+48, r25	; 0x30
    15b8:	8f a7       	std	Y+47, r24	; 0x2f
    15ba:	0f c0       	rjmp	.+30     	; 0x15da <idle+0xee>
    15bc:	80 e9       	ldi	r24, 0x90	; 144
    15be:	91 e0       	ldi	r25, 0x01	; 1
    15c0:	9e a7       	std	Y+46, r25	; 0x2e
    15c2:	8d a7       	std	Y+45, r24	; 0x2d
    15c4:	8d a5       	ldd	r24, Y+45	; 0x2d
    15c6:	9e a5       	ldd	r25, Y+46	; 0x2e
    15c8:	01 97       	sbiw	r24, 0x01	; 1
    15ca:	f1 f7       	brne	.-4      	; 0x15c8 <idle+0xdc>
    15cc:	9e a7       	std	Y+46, r25	; 0x2e
    15ce:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15d0:	8f a5       	ldd	r24, Y+47	; 0x2f
    15d2:	98 a9       	ldd	r25, Y+48	; 0x30
    15d4:	01 97       	sbiw	r24, 0x01	; 1
    15d6:	98 ab       	std	Y+48, r25	; 0x30
    15d8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15da:	8f a5       	ldd	r24, Y+47	; 0x2f
    15dc:	98 a9       	ldd	r25, Y+48	; 0x30
    15de:	00 97       	sbiw	r24, 0x00	; 0
    15e0:	69 f7       	brne	.-38     	; 0x15bc <idle+0xd0>
    15e2:	14 c0       	rjmp	.+40     	; 0x160c <idle+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15e4:	69 a9       	ldd	r22, Y+49	; 0x31
    15e6:	7a a9       	ldd	r23, Y+50	; 0x32
    15e8:	8b a9       	ldd	r24, Y+51	; 0x33
    15ea:	9c a9       	ldd	r25, Y+52	; 0x34
    15ec:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    15f0:	dc 01       	movw	r26, r24
    15f2:	cb 01       	movw	r24, r22
    15f4:	98 ab       	std	Y+48, r25	; 0x30
    15f6:	8f a7       	std	Y+47, r24	; 0x2f
    15f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    15fa:	98 a9       	ldd	r25, Y+48	; 0x30
    15fc:	9c a7       	std	Y+44, r25	; 0x2c
    15fe:	8b a7       	std	Y+43, r24	; 0x2b
    1600:	8b a5       	ldd	r24, Y+43	; 0x2b
    1602:	9c a5       	ldd	r25, Y+44	; 0x2c
    1604:	01 97       	sbiw	r24, 0x01	; 1
    1606:	f1 f7       	brne	.-4      	; 0x1604 <idle+0x118>
    1608:	9c a7       	std	Y+44, r25	; 0x2c
    160a:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x00; _delay_ms(1);
    160c:	ec e2       	ldi	r30, 0x2C	; 44
    160e:	f0 e0       	ldi	r31, 0x00	; 0
    1610:	10 82       	st	Z, r1
    1612:	80 e0       	ldi	r24, 0x00	; 0
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	a0 e8       	ldi	r26, 0x80	; 128
    1618:	bf e3       	ldi	r27, 0x3F	; 63
    161a:	8f a3       	std	Y+39, r24	; 0x27
    161c:	98 a7       	std	Y+40, r25	; 0x28
    161e:	a9 a7       	std	Y+41, r26	; 0x29
    1620:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1622:	6f a1       	ldd	r22, Y+39	; 0x27
    1624:	78 a5       	ldd	r23, Y+40	; 0x28
    1626:	89 a5       	ldd	r24, Y+41	; 0x29
    1628:	9a a5       	ldd	r25, Y+42	; 0x2a
    162a:	20 e0       	ldi	r18, 0x00	; 0
    162c:	30 e0       	ldi	r19, 0x00	; 0
    162e:	4a e7       	ldi	r20, 0x7A	; 122
    1630:	55 e4       	ldi	r21, 0x45	; 69
    1632:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1636:	dc 01       	movw	r26, r24
    1638:	cb 01       	movw	r24, r22
    163a:	8b a3       	std	Y+35, r24	; 0x23
    163c:	9c a3       	std	Y+36, r25	; 0x24
    163e:	ad a3       	std	Y+37, r26	; 0x25
    1640:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1642:	6b a1       	ldd	r22, Y+35	; 0x23
    1644:	7c a1       	ldd	r23, Y+36	; 0x24
    1646:	8d a1       	ldd	r24, Y+37	; 0x25
    1648:	9e a1       	ldd	r25, Y+38	; 0x26
    164a:	20 e0       	ldi	r18, 0x00	; 0
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	40 e8       	ldi	r20, 0x80	; 128
    1650:	5f e3       	ldi	r21, 0x3F	; 63
    1652:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1656:	88 23       	and	r24, r24
    1658:	2c f4       	brge	.+10     	; 0x1664 <idle+0x178>
		__ticks = 1;
    165a:	81 e0       	ldi	r24, 0x01	; 1
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	9a a3       	std	Y+34, r25	; 0x22
    1660:	89 a3       	std	Y+33, r24	; 0x21
    1662:	3f c0       	rjmp	.+126    	; 0x16e2 <idle+0x1f6>
	else if (__tmp > 65535)
    1664:	6b a1       	ldd	r22, Y+35	; 0x23
    1666:	7c a1       	ldd	r23, Y+36	; 0x24
    1668:	8d a1       	ldd	r24, Y+37	; 0x25
    166a:	9e a1       	ldd	r25, Y+38	; 0x26
    166c:	20 e0       	ldi	r18, 0x00	; 0
    166e:	3f ef       	ldi	r19, 0xFF	; 255
    1670:	4f e7       	ldi	r20, 0x7F	; 127
    1672:	57 e4       	ldi	r21, 0x47	; 71
    1674:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1678:	18 16       	cp	r1, r24
    167a:	4c f5       	brge	.+82     	; 0x16ce <idle+0x1e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    167c:	6f a1       	ldd	r22, Y+39	; 0x27
    167e:	78 a5       	ldd	r23, Y+40	; 0x28
    1680:	89 a5       	ldd	r24, Y+41	; 0x29
    1682:	9a a5       	ldd	r25, Y+42	; 0x2a
    1684:	20 e0       	ldi	r18, 0x00	; 0
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	40 e2       	ldi	r20, 0x20	; 32
    168a:	51 e4       	ldi	r21, 0x41	; 65
    168c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1690:	dc 01       	movw	r26, r24
    1692:	cb 01       	movw	r24, r22
    1694:	bc 01       	movw	r22, r24
    1696:	cd 01       	movw	r24, r26
    1698:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    169c:	dc 01       	movw	r26, r24
    169e:	cb 01       	movw	r24, r22
    16a0:	9a a3       	std	Y+34, r25	; 0x22
    16a2:	89 a3       	std	Y+33, r24	; 0x21
    16a4:	0f c0       	rjmp	.+30     	; 0x16c4 <idle+0x1d8>
    16a6:	80 e9       	ldi	r24, 0x90	; 144
    16a8:	91 e0       	ldi	r25, 0x01	; 1
    16aa:	98 a3       	std	Y+32, r25	; 0x20
    16ac:	8f 8f       	std	Y+31, r24	; 0x1f
    16ae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    16b0:	98 a1       	ldd	r25, Y+32	; 0x20
    16b2:	01 97       	sbiw	r24, 0x01	; 1
    16b4:	f1 f7       	brne	.-4      	; 0x16b2 <idle+0x1c6>
    16b6:	98 a3       	std	Y+32, r25	; 0x20
    16b8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16ba:	89 a1       	ldd	r24, Y+33	; 0x21
    16bc:	9a a1       	ldd	r25, Y+34	; 0x22
    16be:	01 97       	sbiw	r24, 0x01	; 1
    16c0:	9a a3       	std	Y+34, r25	; 0x22
    16c2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16c4:	89 a1       	ldd	r24, Y+33	; 0x21
    16c6:	9a a1       	ldd	r25, Y+34	; 0x22
    16c8:	00 97       	sbiw	r24, 0x00	; 0
    16ca:	69 f7       	brne	.-38     	; 0x16a6 <idle+0x1ba>
    16cc:	14 c0       	rjmp	.+40     	; 0x16f6 <idle+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16ce:	6b a1       	ldd	r22, Y+35	; 0x23
    16d0:	7c a1       	ldd	r23, Y+36	; 0x24
    16d2:	8d a1       	ldd	r24, Y+37	; 0x25
    16d4:	9e a1       	ldd	r25, Y+38	; 0x26
    16d6:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    16da:	dc 01       	movw	r26, r24
    16dc:	cb 01       	movw	r24, r22
    16de:	9a a3       	std	Y+34, r25	; 0x22
    16e0:	89 a3       	std	Y+33, r24	; 0x21
    16e2:	89 a1       	ldd	r24, Y+33	; 0x21
    16e4:	9a a1       	ldd	r25, Y+34	; 0x22
    16e6:	9e 8f       	std	Y+30, r25	; 0x1e
    16e8:	8d 8f       	std	Y+29, r24	; 0x1d
    16ea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    16ec:	9e 8d       	ldd	r25, Y+30	; 0x1e
    16ee:	01 97       	sbiw	r24, 0x01	; 1
    16f0:	f1 f7       	brne	.-4      	; 0x16ee <idle+0x202>
    16f2:	9e 8f       	std	Y+30, r25	; 0x1e
    16f4:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x36; _delay_ms(1);
    16f6:	ec e2       	ldi	r30, 0x2C	; 44
    16f8:	f0 e0       	ldi	r31, 0x00	; 0
    16fa:	86 e3       	ldi	r24, 0x36	; 54
    16fc:	80 83       	st	Z, r24
    16fe:	80 e0       	ldi	r24, 0x00	; 0
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	a0 e8       	ldi	r26, 0x80	; 128
    1704:	bf e3       	ldi	r27, 0x3F	; 63
    1706:	89 8f       	std	Y+25, r24	; 0x19
    1708:	9a 8f       	std	Y+26, r25	; 0x1a
    170a:	ab 8f       	std	Y+27, r26	; 0x1b
    170c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    170e:	69 8d       	ldd	r22, Y+25	; 0x19
    1710:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1712:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1714:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	4a e7       	ldi	r20, 0x7A	; 122
    171c:	55 e4       	ldi	r21, 0x45	; 69
    171e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1722:	dc 01       	movw	r26, r24
    1724:	cb 01       	movw	r24, r22
    1726:	8d 8b       	std	Y+21, r24	; 0x15
    1728:	9e 8b       	std	Y+22, r25	; 0x16
    172a:	af 8b       	std	Y+23, r26	; 0x17
    172c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    172e:	6d 89       	ldd	r22, Y+21	; 0x15
    1730:	7e 89       	ldd	r23, Y+22	; 0x16
    1732:	8f 89       	ldd	r24, Y+23	; 0x17
    1734:	98 8d       	ldd	r25, Y+24	; 0x18
    1736:	20 e0       	ldi	r18, 0x00	; 0
    1738:	30 e0       	ldi	r19, 0x00	; 0
    173a:	40 e8       	ldi	r20, 0x80	; 128
    173c:	5f e3       	ldi	r21, 0x3F	; 63
    173e:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1742:	88 23       	and	r24, r24
    1744:	2c f4       	brge	.+10     	; 0x1750 <idle+0x264>
		__ticks = 1;
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	9c 8b       	std	Y+20, r25	; 0x14
    174c:	8b 8b       	std	Y+19, r24	; 0x13
    174e:	3f c0       	rjmp	.+126    	; 0x17ce <idle+0x2e2>
	else if (__tmp > 65535)
    1750:	6d 89       	ldd	r22, Y+21	; 0x15
    1752:	7e 89       	ldd	r23, Y+22	; 0x16
    1754:	8f 89       	ldd	r24, Y+23	; 0x17
    1756:	98 8d       	ldd	r25, Y+24	; 0x18
    1758:	20 e0       	ldi	r18, 0x00	; 0
    175a:	3f ef       	ldi	r19, 0xFF	; 255
    175c:	4f e7       	ldi	r20, 0x7F	; 127
    175e:	57 e4       	ldi	r21, 0x47	; 71
    1760:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1764:	18 16       	cp	r1, r24
    1766:	4c f5       	brge	.+82     	; 0x17ba <idle+0x2ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1768:	69 8d       	ldd	r22, Y+25	; 0x19
    176a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    176c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    176e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	40 e2       	ldi	r20, 0x20	; 32
    1776:	51 e4       	ldi	r21, 0x41	; 65
    1778:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    177c:	dc 01       	movw	r26, r24
    177e:	cb 01       	movw	r24, r22
    1780:	bc 01       	movw	r22, r24
    1782:	cd 01       	movw	r24, r26
    1784:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1788:	dc 01       	movw	r26, r24
    178a:	cb 01       	movw	r24, r22
    178c:	9c 8b       	std	Y+20, r25	; 0x14
    178e:	8b 8b       	std	Y+19, r24	; 0x13
    1790:	0f c0       	rjmp	.+30     	; 0x17b0 <idle+0x2c4>
    1792:	80 e9       	ldi	r24, 0x90	; 144
    1794:	91 e0       	ldi	r25, 0x01	; 1
    1796:	9a 8b       	std	Y+18, r25	; 0x12
    1798:	89 8b       	std	Y+17, r24	; 0x11
    179a:	89 89       	ldd	r24, Y+17	; 0x11
    179c:	9a 89       	ldd	r25, Y+18	; 0x12
    179e:	01 97       	sbiw	r24, 0x01	; 1
    17a0:	f1 f7       	brne	.-4      	; 0x179e <idle+0x2b2>
    17a2:	9a 8b       	std	Y+18, r25	; 0x12
    17a4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17a6:	8b 89       	ldd	r24, Y+19	; 0x13
    17a8:	9c 89       	ldd	r25, Y+20	; 0x14
    17aa:	01 97       	sbiw	r24, 0x01	; 1
    17ac:	9c 8b       	std	Y+20, r25	; 0x14
    17ae:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17b0:	8b 89       	ldd	r24, Y+19	; 0x13
    17b2:	9c 89       	ldd	r25, Y+20	; 0x14
    17b4:	00 97       	sbiw	r24, 0x00	; 0
    17b6:	69 f7       	brne	.-38     	; 0x1792 <idle+0x2a6>
    17b8:	14 c0       	rjmp	.+40     	; 0x17e2 <idle+0x2f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17ba:	6d 89       	ldd	r22, Y+21	; 0x15
    17bc:	7e 89       	ldd	r23, Y+22	; 0x16
    17be:	8f 89       	ldd	r24, Y+23	; 0x17
    17c0:	98 8d       	ldd	r25, Y+24	; 0x18
    17c2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    17c6:	dc 01       	movw	r26, r24
    17c8:	cb 01       	movw	r24, r22
    17ca:	9c 8b       	std	Y+20, r25	; 0x14
    17cc:	8b 8b       	std	Y+19, r24	; 0x13
    17ce:	8b 89       	ldd	r24, Y+19	; 0x13
    17d0:	9c 89       	ldd	r25, Y+20	; 0x14
    17d2:	98 8b       	std	Y+16, r25	; 0x10
    17d4:	8f 87       	std	Y+15, r24	; 0x0f
    17d6:	8f 85       	ldd	r24, Y+15	; 0x0f
    17d8:	98 89       	ldd	r25, Y+16	; 0x10
    17da:	01 97       	sbiw	r24, 0x01	; 1
    17dc:	f1 f7       	brne	.-4      	; 0x17da <idle+0x2ee>
    17de:	98 8b       	std	Y+16, r25	; 0x10
    17e0:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x01; _delay_ms(1);
    17e2:	ec e2       	ldi	r30, 0x2C	; 44
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	81 e0       	ldi	r24, 0x01	; 1
    17e8:	80 83       	st	Z, r24
    17ea:	80 e0       	ldi	r24, 0x00	; 0
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	a0 e8       	ldi	r26, 0x80	; 128
    17f0:	bf e3       	ldi	r27, 0x3F	; 63
    17f2:	8b 87       	std	Y+11, r24	; 0x0b
    17f4:	9c 87       	std	Y+12, r25	; 0x0c
    17f6:	ad 87       	std	Y+13, r26	; 0x0d
    17f8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17fa:	6b 85       	ldd	r22, Y+11	; 0x0b
    17fc:	7c 85       	ldd	r23, Y+12	; 0x0c
    17fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1800:	9e 85       	ldd	r25, Y+14	; 0x0e
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	4a e7       	ldi	r20, 0x7A	; 122
    1808:	55 e4       	ldi	r21, 0x45	; 69
    180a:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    180e:	dc 01       	movw	r26, r24
    1810:	cb 01       	movw	r24, r22
    1812:	8f 83       	std	Y+7, r24	; 0x07
    1814:	98 87       	std	Y+8, r25	; 0x08
    1816:	a9 87       	std	Y+9, r26	; 0x09
    1818:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    181a:	6f 81       	ldd	r22, Y+7	; 0x07
    181c:	78 85       	ldd	r23, Y+8	; 0x08
    181e:	89 85       	ldd	r24, Y+9	; 0x09
    1820:	9a 85       	ldd	r25, Y+10	; 0x0a
    1822:	20 e0       	ldi	r18, 0x00	; 0
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	40 e8       	ldi	r20, 0x80	; 128
    1828:	5f e3       	ldi	r21, 0x3F	; 63
    182a:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    182e:	88 23       	and	r24, r24
    1830:	2c f4       	brge	.+10     	; 0x183c <idle+0x350>
		__ticks = 1;
    1832:	81 e0       	ldi	r24, 0x01	; 1
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	9e 83       	std	Y+6, r25	; 0x06
    1838:	8d 83       	std	Y+5, r24	; 0x05
    183a:	3f c0       	rjmp	.+126    	; 0x18ba <idle+0x3ce>
	else if (__tmp > 65535)
    183c:	6f 81       	ldd	r22, Y+7	; 0x07
    183e:	78 85       	ldd	r23, Y+8	; 0x08
    1840:	89 85       	ldd	r24, Y+9	; 0x09
    1842:	9a 85       	ldd	r25, Y+10	; 0x0a
    1844:	20 e0       	ldi	r18, 0x00	; 0
    1846:	3f ef       	ldi	r19, 0xFF	; 255
    1848:	4f e7       	ldi	r20, 0x7F	; 127
    184a:	57 e4       	ldi	r21, 0x47	; 71
    184c:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1850:	18 16       	cp	r1, r24
    1852:	4c f5       	brge	.+82     	; 0x18a6 <idle+0x3ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1854:	6b 85       	ldd	r22, Y+11	; 0x0b
    1856:	7c 85       	ldd	r23, Y+12	; 0x0c
    1858:	8d 85       	ldd	r24, Y+13	; 0x0d
    185a:	9e 85       	ldd	r25, Y+14	; 0x0e
    185c:	20 e0       	ldi	r18, 0x00	; 0
    185e:	30 e0       	ldi	r19, 0x00	; 0
    1860:	40 e2       	ldi	r20, 0x20	; 32
    1862:	51 e4       	ldi	r21, 0x41	; 65
    1864:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1868:	dc 01       	movw	r26, r24
    186a:	cb 01       	movw	r24, r22
    186c:	bc 01       	movw	r22, r24
    186e:	cd 01       	movw	r24, r26
    1870:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1874:	dc 01       	movw	r26, r24
    1876:	cb 01       	movw	r24, r22
    1878:	9e 83       	std	Y+6, r25	; 0x06
    187a:	8d 83       	std	Y+5, r24	; 0x05
    187c:	0f c0       	rjmp	.+30     	; 0x189c <idle+0x3b0>
    187e:	80 e9       	ldi	r24, 0x90	; 144
    1880:	91 e0       	ldi	r25, 0x01	; 1
    1882:	9c 83       	std	Y+4, r25	; 0x04
    1884:	8b 83       	std	Y+3, r24	; 0x03
    1886:	8b 81       	ldd	r24, Y+3	; 0x03
    1888:	9c 81       	ldd	r25, Y+4	; 0x04
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	f1 f7       	brne	.-4      	; 0x188a <idle+0x39e>
    188e:	9c 83       	std	Y+4, r25	; 0x04
    1890:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1892:	8d 81       	ldd	r24, Y+5	; 0x05
    1894:	9e 81       	ldd	r25, Y+6	; 0x06
    1896:	01 97       	sbiw	r24, 0x01	; 1
    1898:	9e 83       	std	Y+6, r25	; 0x06
    189a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    189c:	8d 81       	ldd	r24, Y+5	; 0x05
    189e:	9e 81       	ldd	r25, Y+6	; 0x06
    18a0:	00 97       	sbiw	r24, 0x00	; 0
    18a2:	69 f7       	brne	.-38     	; 0x187e <idle+0x392>
    18a4:	14 c0       	rjmp	.+40     	; 0x18ce <idle+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18a6:	6f 81       	ldd	r22, Y+7	; 0x07
    18a8:	78 85       	ldd	r23, Y+8	; 0x08
    18aa:	89 85       	ldd	r24, Y+9	; 0x09
    18ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    18ae:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    18b2:	dc 01       	movw	r26, r24
    18b4:	cb 01       	movw	r24, r22
    18b6:	9e 83       	std	Y+6, r25	; 0x06
    18b8:	8d 83       	std	Y+5, r24	; 0x05
    18ba:	8d 81       	ldd	r24, Y+5	; 0x05
    18bc:	9e 81       	ldd	r25, Y+6	; 0x06
    18be:	9a 83       	std	Y+2, r25	; 0x02
    18c0:	89 83       	std	Y+1, r24	; 0x01
    18c2:	89 81       	ldd	r24, Y+1	; 0x01
    18c4:	9a 81       	ldd	r25, Y+2	; 0x02
    18c6:	01 97       	sbiw	r24, 0x01	; 1
    18c8:	f1 f7       	brne	.-4      	; 0x18c6 <idle+0x3da>
    18ca:	9a 83       	std	Y+2, r25	; 0x02
    18cc:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x03;
    18ce:	ec e2       	ldi	r30, 0x2C	; 44
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	83 e0       	ldi	r24, 0x03	; 3
    18d4:	80 83       	st	Z, r24
}
    18d6:	e8 96       	adiw	r28, 0x38	; 56
    18d8:	0f b6       	in	r0, 0x3f	; 63
    18da:	f8 94       	cli
    18dc:	de bf       	out	0x3e, r29	; 62
    18de:	0f be       	out	0x3f, r0	; 63
    18e0:	cd bf       	out	0x3d, r28	; 61
    18e2:	cf 91       	pop	r28
    18e4:	df 91       	pop	r29
    18e6:	08 95       	ret

000018e8 <shot>:
 
void shot(){
    18e8:	df 93       	push	r29
    18ea:	cf 93       	push	r28
    18ec:	cd b7       	in	r28, 0x3d	; 61
    18ee:	de b7       	in	r29, 0x3e	; 62
    18f0:	e8 97       	sbiw	r28, 0x38	; 56
    18f2:	0f b6       	in	r0, 0x3f	; 63
    18f4:	f8 94       	cli
    18f6:	de bf       	out	0x3e, r29	; 62
    18f8:	0f be       	out	0x3f, r0	; 63
    18fa:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nSHOT  ");
    18fc:	00 d0       	rcall	.+0      	; 0x18fe <shot+0x16>
    18fe:	ed b7       	in	r30, 0x3d	; 61
    1900:	fe b7       	in	r31, 0x3e	; 62
    1902:	31 96       	adiw	r30, 0x01	; 1
    1904:	8a e2       	ldi	r24, 0x2A	; 42
    1906:	91 e0       	ldi	r25, 0x01	; 1
    1908:	91 83       	std	Z+1, r25	; 0x01
    190a:	80 83       	st	Z, r24
    190c:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
    1910:	0f 90       	pop	r0
    1912:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    1914:	ec e2       	ldi	r30, 0x2C	; 44
    1916:	f0 e0       	ldi	r31, 0x00	; 0
    1918:	86 e5       	ldi	r24, 0x56	; 86
    191a:	80 83       	st	Z, r24
    191c:	80 e0       	ldi	r24, 0x00	; 0
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	a0 e8       	ldi	r26, 0x80	; 128
    1922:	bf e3       	ldi	r27, 0x3F	; 63
    1924:	8d ab       	std	Y+53, r24	; 0x35
    1926:	9e ab       	std	Y+54, r25	; 0x36
    1928:	af ab       	std	Y+55, r26	; 0x37
    192a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    192c:	6d a9       	ldd	r22, Y+53	; 0x35
    192e:	7e a9       	ldd	r23, Y+54	; 0x36
    1930:	8f a9       	ldd	r24, Y+55	; 0x37
    1932:	98 ad       	ldd	r25, Y+56	; 0x38
    1934:	20 e0       	ldi	r18, 0x00	; 0
    1936:	30 e0       	ldi	r19, 0x00	; 0
    1938:	4a e7       	ldi	r20, 0x7A	; 122
    193a:	55 e4       	ldi	r21, 0x45	; 69
    193c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1940:	dc 01       	movw	r26, r24
    1942:	cb 01       	movw	r24, r22
    1944:	89 ab       	std	Y+49, r24	; 0x31
    1946:	9a ab       	std	Y+50, r25	; 0x32
    1948:	ab ab       	std	Y+51, r26	; 0x33
    194a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    194c:	69 a9       	ldd	r22, Y+49	; 0x31
    194e:	7a a9       	ldd	r23, Y+50	; 0x32
    1950:	8b a9       	ldd	r24, Y+51	; 0x33
    1952:	9c a9       	ldd	r25, Y+52	; 0x34
    1954:	20 e0       	ldi	r18, 0x00	; 0
    1956:	30 e0       	ldi	r19, 0x00	; 0
    1958:	40 e8       	ldi	r20, 0x80	; 128
    195a:	5f e3       	ldi	r21, 0x3F	; 63
    195c:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1960:	88 23       	and	r24, r24
    1962:	2c f4       	brge	.+10     	; 0x196e <shot+0x86>
		__ticks = 1;
    1964:	81 e0       	ldi	r24, 0x01	; 1
    1966:	90 e0       	ldi	r25, 0x00	; 0
    1968:	98 ab       	std	Y+48, r25	; 0x30
    196a:	8f a7       	std	Y+47, r24	; 0x2f
    196c:	3f c0       	rjmp	.+126    	; 0x19ec <shot+0x104>
	else if (__tmp > 65535)
    196e:	69 a9       	ldd	r22, Y+49	; 0x31
    1970:	7a a9       	ldd	r23, Y+50	; 0x32
    1972:	8b a9       	ldd	r24, Y+51	; 0x33
    1974:	9c a9       	ldd	r25, Y+52	; 0x34
    1976:	20 e0       	ldi	r18, 0x00	; 0
    1978:	3f ef       	ldi	r19, 0xFF	; 255
    197a:	4f e7       	ldi	r20, 0x7F	; 127
    197c:	57 e4       	ldi	r21, 0x47	; 71
    197e:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1982:	18 16       	cp	r1, r24
    1984:	4c f5       	brge	.+82     	; 0x19d8 <shot+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1986:	6d a9       	ldd	r22, Y+53	; 0x35
    1988:	7e a9       	ldd	r23, Y+54	; 0x36
    198a:	8f a9       	ldd	r24, Y+55	; 0x37
    198c:	98 ad       	ldd	r25, Y+56	; 0x38
    198e:	20 e0       	ldi	r18, 0x00	; 0
    1990:	30 e0       	ldi	r19, 0x00	; 0
    1992:	40 e2       	ldi	r20, 0x20	; 32
    1994:	51 e4       	ldi	r21, 0x41	; 65
    1996:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    199a:	dc 01       	movw	r26, r24
    199c:	cb 01       	movw	r24, r22
    199e:	bc 01       	movw	r22, r24
    19a0:	cd 01       	movw	r24, r26
    19a2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    19a6:	dc 01       	movw	r26, r24
    19a8:	cb 01       	movw	r24, r22
    19aa:	98 ab       	std	Y+48, r25	; 0x30
    19ac:	8f a7       	std	Y+47, r24	; 0x2f
    19ae:	0f c0       	rjmp	.+30     	; 0x19ce <shot+0xe6>
    19b0:	80 e9       	ldi	r24, 0x90	; 144
    19b2:	91 e0       	ldi	r25, 0x01	; 1
    19b4:	9e a7       	std	Y+46, r25	; 0x2e
    19b6:	8d a7       	std	Y+45, r24	; 0x2d
    19b8:	8d a5       	ldd	r24, Y+45	; 0x2d
    19ba:	9e a5       	ldd	r25, Y+46	; 0x2e
    19bc:	01 97       	sbiw	r24, 0x01	; 1
    19be:	f1 f7       	brne	.-4      	; 0x19bc <shot+0xd4>
    19c0:	9e a7       	std	Y+46, r25	; 0x2e
    19c2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19c4:	8f a5       	ldd	r24, Y+47	; 0x2f
    19c6:	98 a9       	ldd	r25, Y+48	; 0x30
    19c8:	01 97       	sbiw	r24, 0x01	; 1
    19ca:	98 ab       	std	Y+48, r25	; 0x30
    19cc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19ce:	8f a5       	ldd	r24, Y+47	; 0x2f
    19d0:	98 a9       	ldd	r25, Y+48	; 0x30
    19d2:	00 97       	sbiw	r24, 0x00	; 0
    19d4:	69 f7       	brne	.-38     	; 0x19b0 <shot+0xc8>
    19d6:	14 c0       	rjmp	.+40     	; 0x1a00 <shot+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19d8:	69 a9       	ldd	r22, Y+49	; 0x31
    19da:	7a a9       	ldd	r23, Y+50	; 0x32
    19dc:	8b a9       	ldd	r24, Y+51	; 0x33
    19de:	9c a9       	ldd	r25, Y+52	; 0x34
    19e0:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	98 ab       	std	Y+48, r25	; 0x30
    19ea:	8f a7       	std	Y+47, r24	; 0x2f
    19ec:	8f a5       	ldd	r24, Y+47	; 0x2f
    19ee:	98 a9       	ldd	r25, Y+48	; 0x30
    19f0:	9c a7       	std	Y+44, r25	; 0x2c
    19f2:	8b a7       	std	Y+43, r24	; 0x2b
    19f4:	8b a5       	ldd	r24, Y+43	; 0x2b
    19f6:	9c a5       	ldd	r25, Y+44	; 0x2c
    19f8:	01 97       	sbiw	r24, 0x01	; 1
    19fa:	f1 f7       	brne	.-4      	; 0x19f8 <shot+0x110>
    19fc:	9c a7       	std	Y+44, r25	; 0x2c
    19fe:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x00; _delay_ms(1);
    1a00:	ec e2       	ldi	r30, 0x2C	; 44
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	10 82       	st	Z, r1
    1a06:	80 e0       	ldi	r24, 0x00	; 0
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	a0 e8       	ldi	r26, 0x80	; 128
    1a0c:	bf e3       	ldi	r27, 0x3F	; 63
    1a0e:	8f a3       	std	Y+39, r24	; 0x27
    1a10:	98 a7       	std	Y+40, r25	; 0x28
    1a12:	a9 a7       	std	Y+41, r26	; 0x29
    1a14:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a16:	6f a1       	ldd	r22, Y+39	; 0x27
    1a18:	78 a5       	ldd	r23, Y+40	; 0x28
    1a1a:	89 a5       	ldd	r24, Y+41	; 0x29
    1a1c:	9a a5       	ldd	r25, Y+42	; 0x2a
    1a1e:	20 e0       	ldi	r18, 0x00	; 0
    1a20:	30 e0       	ldi	r19, 0x00	; 0
    1a22:	4a e7       	ldi	r20, 0x7A	; 122
    1a24:	55 e4       	ldi	r21, 0x45	; 69
    1a26:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1a2a:	dc 01       	movw	r26, r24
    1a2c:	cb 01       	movw	r24, r22
    1a2e:	8b a3       	std	Y+35, r24	; 0x23
    1a30:	9c a3       	std	Y+36, r25	; 0x24
    1a32:	ad a3       	std	Y+37, r26	; 0x25
    1a34:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1a36:	6b a1       	ldd	r22, Y+35	; 0x23
    1a38:	7c a1       	ldd	r23, Y+36	; 0x24
    1a3a:	8d a1       	ldd	r24, Y+37	; 0x25
    1a3c:	9e a1       	ldd	r25, Y+38	; 0x26
    1a3e:	20 e0       	ldi	r18, 0x00	; 0
    1a40:	30 e0       	ldi	r19, 0x00	; 0
    1a42:	40 e8       	ldi	r20, 0x80	; 128
    1a44:	5f e3       	ldi	r21, 0x3F	; 63
    1a46:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1a4a:	88 23       	and	r24, r24
    1a4c:	2c f4       	brge	.+10     	; 0x1a58 <shot+0x170>
		__ticks = 1;
    1a4e:	81 e0       	ldi	r24, 0x01	; 1
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	9a a3       	std	Y+34, r25	; 0x22
    1a54:	89 a3       	std	Y+33, r24	; 0x21
    1a56:	3f c0       	rjmp	.+126    	; 0x1ad6 <shot+0x1ee>
	else if (__tmp > 65535)
    1a58:	6b a1       	ldd	r22, Y+35	; 0x23
    1a5a:	7c a1       	ldd	r23, Y+36	; 0x24
    1a5c:	8d a1       	ldd	r24, Y+37	; 0x25
    1a5e:	9e a1       	ldd	r25, Y+38	; 0x26
    1a60:	20 e0       	ldi	r18, 0x00	; 0
    1a62:	3f ef       	ldi	r19, 0xFF	; 255
    1a64:	4f e7       	ldi	r20, 0x7F	; 127
    1a66:	57 e4       	ldi	r21, 0x47	; 71
    1a68:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1a6c:	18 16       	cp	r1, r24
    1a6e:	4c f5       	brge	.+82     	; 0x1ac2 <shot+0x1da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a70:	6f a1       	ldd	r22, Y+39	; 0x27
    1a72:	78 a5       	ldd	r23, Y+40	; 0x28
    1a74:	89 a5       	ldd	r24, Y+41	; 0x29
    1a76:	9a a5       	ldd	r25, Y+42	; 0x2a
    1a78:	20 e0       	ldi	r18, 0x00	; 0
    1a7a:	30 e0       	ldi	r19, 0x00	; 0
    1a7c:	40 e2       	ldi	r20, 0x20	; 32
    1a7e:	51 e4       	ldi	r21, 0x41	; 65
    1a80:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1a84:	dc 01       	movw	r26, r24
    1a86:	cb 01       	movw	r24, r22
    1a88:	bc 01       	movw	r22, r24
    1a8a:	cd 01       	movw	r24, r26
    1a8c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1a90:	dc 01       	movw	r26, r24
    1a92:	cb 01       	movw	r24, r22
    1a94:	9a a3       	std	Y+34, r25	; 0x22
    1a96:	89 a3       	std	Y+33, r24	; 0x21
    1a98:	0f c0       	rjmp	.+30     	; 0x1ab8 <shot+0x1d0>
    1a9a:	80 e9       	ldi	r24, 0x90	; 144
    1a9c:	91 e0       	ldi	r25, 0x01	; 1
    1a9e:	98 a3       	std	Y+32, r25	; 0x20
    1aa0:	8f 8f       	std	Y+31, r24	; 0x1f
    1aa2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1aa4:	98 a1       	ldd	r25, Y+32	; 0x20
    1aa6:	01 97       	sbiw	r24, 0x01	; 1
    1aa8:	f1 f7       	brne	.-4      	; 0x1aa6 <shot+0x1be>
    1aaa:	98 a3       	std	Y+32, r25	; 0x20
    1aac:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aae:	89 a1       	ldd	r24, Y+33	; 0x21
    1ab0:	9a a1       	ldd	r25, Y+34	; 0x22
    1ab2:	01 97       	sbiw	r24, 0x01	; 1
    1ab4:	9a a3       	std	Y+34, r25	; 0x22
    1ab6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab8:	89 a1       	ldd	r24, Y+33	; 0x21
    1aba:	9a a1       	ldd	r25, Y+34	; 0x22
    1abc:	00 97       	sbiw	r24, 0x00	; 0
    1abe:	69 f7       	brne	.-38     	; 0x1a9a <shot+0x1b2>
    1ac0:	14 c0       	rjmp	.+40     	; 0x1aea <shot+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ac2:	6b a1       	ldd	r22, Y+35	; 0x23
    1ac4:	7c a1       	ldd	r23, Y+36	; 0x24
    1ac6:	8d a1       	ldd	r24, Y+37	; 0x25
    1ac8:	9e a1       	ldd	r25, Y+38	; 0x26
    1aca:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1ace:	dc 01       	movw	r26, r24
    1ad0:	cb 01       	movw	r24, r22
    1ad2:	9a a3       	std	Y+34, r25	; 0x22
    1ad4:	89 a3       	std	Y+33, r24	; 0x21
    1ad6:	89 a1       	ldd	r24, Y+33	; 0x21
    1ad8:	9a a1       	ldd	r25, Y+34	; 0x22
    1ada:	9e 8f       	std	Y+30, r25	; 0x1e
    1adc:	8d 8f       	std	Y+29, r24	; 0x1d
    1ade:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ae0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1ae2:	01 97       	sbiw	r24, 0x01	; 1
    1ae4:	f1 f7       	brne	.-4      	; 0x1ae2 <shot+0x1fa>
    1ae6:	9e 8f       	std	Y+30, r25	; 0x1e
    1ae8:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x36; _delay_ms(1);
    1aea:	ec e2       	ldi	r30, 0x2C	; 44
    1aec:	f0 e0       	ldi	r31, 0x00	; 0
    1aee:	86 e3       	ldi	r24, 0x36	; 54
    1af0:	80 83       	st	Z, r24
    1af2:	80 e0       	ldi	r24, 0x00	; 0
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	a0 e8       	ldi	r26, 0x80	; 128
    1af8:	bf e3       	ldi	r27, 0x3F	; 63
    1afa:	89 8f       	std	Y+25, r24	; 0x19
    1afc:	9a 8f       	std	Y+26, r25	; 0x1a
    1afe:	ab 8f       	std	Y+27, r26	; 0x1b
    1b00:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b02:	69 8d       	ldd	r22, Y+25	; 0x19
    1b04:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b06:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b08:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b0a:	20 e0       	ldi	r18, 0x00	; 0
    1b0c:	30 e0       	ldi	r19, 0x00	; 0
    1b0e:	4a e7       	ldi	r20, 0x7A	; 122
    1b10:	55 e4       	ldi	r21, 0x45	; 69
    1b12:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1b16:	dc 01       	movw	r26, r24
    1b18:	cb 01       	movw	r24, r22
    1b1a:	8d 8b       	std	Y+21, r24	; 0x15
    1b1c:	9e 8b       	std	Y+22, r25	; 0x16
    1b1e:	af 8b       	std	Y+23, r26	; 0x17
    1b20:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1b22:	6d 89       	ldd	r22, Y+21	; 0x15
    1b24:	7e 89       	ldd	r23, Y+22	; 0x16
    1b26:	8f 89       	ldd	r24, Y+23	; 0x17
    1b28:	98 8d       	ldd	r25, Y+24	; 0x18
    1b2a:	20 e0       	ldi	r18, 0x00	; 0
    1b2c:	30 e0       	ldi	r19, 0x00	; 0
    1b2e:	40 e8       	ldi	r20, 0x80	; 128
    1b30:	5f e3       	ldi	r21, 0x3F	; 63
    1b32:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1b36:	88 23       	and	r24, r24
    1b38:	2c f4       	brge	.+10     	; 0x1b44 <shot+0x25c>
		__ticks = 1;
    1b3a:	81 e0       	ldi	r24, 0x01	; 1
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	9c 8b       	std	Y+20, r25	; 0x14
    1b40:	8b 8b       	std	Y+19, r24	; 0x13
    1b42:	3f c0       	rjmp	.+126    	; 0x1bc2 <shot+0x2da>
	else if (__tmp > 65535)
    1b44:	6d 89       	ldd	r22, Y+21	; 0x15
    1b46:	7e 89       	ldd	r23, Y+22	; 0x16
    1b48:	8f 89       	ldd	r24, Y+23	; 0x17
    1b4a:	98 8d       	ldd	r25, Y+24	; 0x18
    1b4c:	20 e0       	ldi	r18, 0x00	; 0
    1b4e:	3f ef       	ldi	r19, 0xFF	; 255
    1b50:	4f e7       	ldi	r20, 0x7F	; 127
    1b52:	57 e4       	ldi	r21, 0x47	; 71
    1b54:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1b58:	18 16       	cp	r1, r24
    1b5a:	4c f5       	brge	.+82     	; 0x1bae <shot+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b5c:	69 8d       	ldd	r22, Y+25	; 0x19
    1b5e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b60:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b62:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	40 e2       	ldi	r20, 0x20	; 32
    1b6a:	51 e4       	ldi	r21, 0x41	; 65
    1b6c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1b70:	dc 01       	movw	r26, r24
    1b72:	cb 01       	movw	r24, r22
    1b74:	bc 01       	movw	r22, r24
    1b76:	cd 01       	movw	r24, r26
    1b78:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1b7c:	dc 01       	movw	r26, r24
    1b7e:	cb 01       	movw	r24, r22
    1b80:	9c 8b       	std	Y+20, r25	; 0x14
    1b82:	8b 8b       	std	Y+19, r24	; 0x13
    1b84:	0f c0       	rjmp	.+30     	; 0x1ba4 <shot+0x2bc>
    1b86:	80 e9       	ldi	r24, 0x90	; 144
    1b88:	91 e0       	ldi	r25, 0x01	; 1
    1b8a:	9a 8b       	std	Y+18, r25	; 0x12
    1b8c:	89 8b       	std	Y+17, r24	; 0x11
    1b8e:	89 89       	ldd	r24, Y+17	; 0x11
    1b90:	9a 89       	ldd	r25, Y+18	; 0x12
    1b92:	01 97       	sbiw	r24, 0x01	; 1
    1b94:	f1 f7       	brne	.-4      	; 0x1b92 <shot+0x2aa>
    1b96:	9a 8b       	std	Y+18, r25	; 0x12
    1b98:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b9a:	8b 89       	ldd	r24, Y+19	; 0x13
    1b9c:	9c 89       	ldd	r25, Y+20	; 0x14
    1b9e:	01 97       	sbiw	r24, 0x01	; 1
    1ba0:	9c 8b       	std	Y+20, r25	; 0x14
    1ba2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ba4:	8b 89       	ldd	r24, Y+19	; 0x13
    1ba6:	9c 89       	ldd	r25, Y+20	; 0x14
    1ba8:	00 97       	sbiw	r24, 0x00	; 0
    1baa:	69 f7       	brne	.-38     	; 0x1b86 <shot+0x29e>
    1bac:	14 c0       	rjmp	.+40     	; 0x1bd6 <shot+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bae:	6d 89       	ldd	r22, Y+21	; 0x15
    1bb0:	7e 89       	ldd	r23, Y+22	; 0x16
    1bb2:	8f 89       	ldd	r24, Y+23	; 0x17
    1bb4:	98 8d       	ldd	r25, Y+24	; 0x18
    1bb6:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1bba:	dc 01       	movw	r26, r24
    1bbc:	cb 01       	movw	r24, r22
    1bbe:	9c 8b       	std	Y+20, r25	; 0x14
    1bc0:	8b 8b       	std	Y+19, r24	; 0x13
    1bc2:	8b 89       	ldd	r24, Y+19	; 0x13
    1bc4:	9c 89       	ldd	r25, Y+20	; 0x14
    1bc6:	98 8b       	std	Y+16, r25	; 0x10
    1bc8:	8f 87       	std	Y+15, r24	; 0x0f
    1bca:	8f 85       	ldd	r24, Y+15	; 0x0f
    1bcc:	98 89       	ldd	r25, Y+16	; 0x10
    1bce:	01 97       	sbiw	r24, 0x01	; 1
    1bd0:	f1 f7       	brne	.-4      	; 0x1bce <shot+0x2e6>
    1bd2:	98 8b       	std	Y+16, r25	; 0x10
    1bd4:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x01; _delay_ms(1);
    1bd6:	ec e2       	ldi	r30, 0x2C	; 44
    1bd8:	f0 e0       	ldi	r31, 0x00	; 0
    1bda:	81 e0       	ldi	r24, 0x01	; 1
    1bdc:	80 83       	st	Z, r24
    1bde:	80 e0       	ldi	r24, 0x00	; 0
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	a0 e8       	ldi	r26, 0x80	; 128
    1be4:	bf e3       	ldi	r27, 0x3F	; 63
    1be6:	8b 87       	std	Y+11, r24	; 0x0b
    1be8:	9c 87       	std	Y+12, r25	; 0x0c
    1bea:	ad 87       	std	Y+13, r26	; 0x0d
    1bec:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bee:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bf0:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bf2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bf4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bf6:	20 e0       	ldi	r18, 0x00	; 0
    1bf8:	30 e0       	ldi	r19, 0x00	; 0
    1bfa:	4a e7       	ldi	r20, 0x7A	; 122
    1bfc:	55 e4       	ldi	r21, 0x45	; 69
    1bfe:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1c02:	dc 01       	movw	r26, r24
    1c04:	cb 01       	movw	r24, r22
    1c06:	8f 83       	std	Y+7, r24	; 0x07
    1c08:	98 87       	std	Y+8, r25	; 0x08
    1c0a:	a9 87       	std	Y+9, r26	; 0x09
    1c0c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1c0e:	6f 81       	ldd	r22, Y+7	; 0x07
    1c10:	78 85       	ldd	r23, Y+8	; 0x08
    1c12:	89 85       	ldd	r24, Y+9	; 0x09
    1c14:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c16:	20 e0       	ldi	r18, 0x00	; 0
    1c18:	30 e0       	ldi	r19, 0x00	; 0
    1c1a:	40 e8       	ldi	r20, 0x80	; 128
    1c1c:	5f e3       	ldi	r21, 0x3F	; 63
    1c1e:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1c22:	88 23       	and	r24, r24
    1c24:	2c f4       	brge	.+10     	; 0x1c30 <shot+0x348>
		__ticks = 1;
    1c26:	81 e0       	ldi	r24, 0x01	; 1
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	9e 83       	std	Y+6, r25	; 0x06
    1c2c:	8d 83       	std	Y+5, r24	; 0x05
    1c2e:	3f c0       	rjmp	.+126    	; 0x1cae <shot+0x3c6>
	else if (__tmp > 65535)
    1c30:	6f 81       	ldd	r22, Y+7	; 0x07
    1c32:	78 85       	ldd	r23, Y+8	; 0x08
    1c34:	89 85       	ldd	r24, Y+9	; 0x09
    1c36:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c38:	20 e0       	ldi	r18, 0x00	; 0
    1c3a:	3f ef       	ldi	r19, 0xFF	; 255
    1c3c:	4f e7       	ldi	r20, 0x7F	; 127
    1c3e:	57 e4       	ldi	r21, 0x47	; 71
    1c40:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1c44:	18 16       	cp	r1, r24
    1c46:	4c f5       	brge	.+82     	; 0x1c9a <shot+0x3b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c48:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c4a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c50:	20 e0       	ldi	r18, 0x00	; 0
    1c52:	30 e0       	ldi	r19, 0x00	; 0
    1c54:	40 e2       	ldi	r20, 0x20	; 32
    1c56:	51 e4       	ldi	r21, 0x41	; 65
    1c58:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1c5c:	dc 01       	movw	r26, r24
    1c5e:	cb 01       	movw	r24, r22
    1c60:	bc 01       	movw	r22, r24
    1c62:	cd 01       	movw	r24, r26
    1c64:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1c68:	dc 01       	movw	r26, r24
    1c6a:	cb 01       	movw	r24, r22
    1c6c:	9e 83       	std	Y+6, r25	; 0x06
    1c6e:	8d 83       	std	Y+5, r24	; 0x05
    1c70:	0f c0       	rjmp	.+30     	; 0x1c90 <shot+0x3a8>
    1c72:	80 e9       	ldi	r24, 0x90	; 144
    1c74:	91 e0       	ldi	r25, 0x01	; 1
    1c76:	9c 83       	std	Y+4, r25	; 0x04
    1c78:	8b 83       	std	Y+3, r24	; 0x03
    1c7a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c7c:	9c 81       	ldd	r25, Y+4	; 0x04
    1c7e:	01 97       	sbiw	r24, 0x01	; 1
    1c80:	f1 f7       	brne	.-4      	; 0x1c7e <shot+0x396>
    1c82:	9c 83       	std	Y+4, r25	; 0x04
    1c84:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c86:	8d 81       	ldd	r24, Y+5	; 0x05
    1c88:	9e 81       	ldd	r25, Y+6	; 0x06
    1c8a:	01 97       	sbiw	r24, 0x01	; 1
    1c8c:	9e 83       	std	Y+6, r25	; 0x06
    1c8e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c90:	8d 81       	ldd	r24, Y+5	; 0x05
    1c92:	9e 81       	ldd	r25, Y+6	; 0x06
    1c94:	00 97       	sbiw	r24, 0x00	; 0
    1c96:	69 f7       	brne	.-38     	; 0x1c72 <shot+0x38a>
    1c98:	14 c0       	rjmp	.+40     	; 0x1cc2 <shot+0x3da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c9a:	6f 81       	ldd	r22, Y+7	; 0x07
    1c9c:	78 85       	ldd	r23, Y+8	; 0x08
    1c9e:	89 85       	ldd	r24, Y+9	; 0x09
    1ca0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ca2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1ca6:	dc 01       	movw	r26, r24
    1ca8:	cb 01       	movw	r24, r22
    1caa:	9e 83       	std	Y+6, r25	; 0x06
    1cac:	8d 83       	std	Y+5, r24	; 0x05
    1cae:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb0:	9e 81       	ldd	r25, Y+6	; 0x06
    1cb2:	9a 83       	std	Y+2, r25	; 0x02
    1cb4:	89 83       	std	Y+1, r24	; 0x01
    1cb6:	89 81       	ldd	r24, Y+1	; 0x01
    1cb8:	9a 81       	ldd	r25, Y+2	; 0x02
    1cba:	01 97       	sbiw	r24, 0x01	; 1
    1cbc:	f1 f7       	brne	.-4      	; 0x1cba <shot+0x3d2>
    1cbe:	9a 83       	std	Y+2, r25	; 0x02
    1cc0:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x00;
    1cc2:	ec e2       	ldi	r30, 0x2C	; 44
    1cc4:	f0 e0       	ldi	r31, 0x00	; 0
    1cc6:	10 82       	st	Z, r1
}
    1cc8:	e8 96       	adiw	r28, 0x38	; 56
    1cca:	0f b6       	in	r0, 0x3f	; 63
    1ccc:	f8 94       	cli
    1cce:	de bf       	out	0x3e, r29	; 62
    1cd0:	0f be       	out	0x3f, r0	; 63
    1cd2:	cd bf       	out	0x3d, r28	; 61
    1cd4:	cf 91       	pop	r28
    1cd6:	df 91       	pop	r29
    1cd8:	08 95       	ret

00001cda <call_size>:
 
void call_size(){
    1cda:	df 93       	push	r29
    1cdc:	cf 93       	push	r28
    1cde:	cd b7       	in	r28, 0x3d	; 61
    1ce0:	de b7       	in	r29, 0x3e	; 62
    1ce2:	e8 97       	sbiw	r28, 0x38	; 56
    1ce4:	0f b6       	in	r0, 0x3f	; 63
    1ce6:	f8 94       	cli
    1ce8:	de bf       	out	0x3e, r29	; 62
    1cea:	0f be       	out	0x3f, r0	; 63
    1cec:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nCALL_SIZE ");
    1cee:	00 d0       	rcall	.+0      	; 0x1cf0 <call_size+0x16>
    1cf0:	ed b7       	in	r30, 0x3d	; 61
    1cf2:	fe b7       	in	r31, 0x3e	; 62
    1cf4:	31 96       	adiw	r30, 0x01	; 1
    1cf6:	83 e3       	ldi	r24, 0x33	; 51
    1cf8:	91 e0       	ldi	r25, 0x01	; 1
    1cfa:	91 83       	std	Z+1, r25	; 0x01
    1cfc:	80 83       	st	Z, r24
    1cfe:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
    1d02:	0f 90       	pop	r0
    1d04:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    1d06:	ec e2       	ldi	r30, 0x2C	; 44
    1d08:	f0 e0       	ldi	r31, 0x00	; 0
    1d0a:	86 e5       	ldi	r24, 0x56	; 86
    1d0c:	80 83       	st	Z, r24
    1d0e:	80 e0       	ldi	r24, 0x00	; 0
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	a0 e8       	ldi	r26, 0x80	; 128
    1d14:	bf e3       	ldi	r27, 0x3F	; 63
    1d16:	8d ab       	std	Y+53, r24	; 0x35
    1d18:	9e ab       	std	Y+54, r25	; 0x36
    1d1a:	af ab       	std	Y+55, r26	; 0x37
    1d1c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d1e:	6d a9       	ldd	r22, Y+53	; 0x35
    1d20:	7e a9       	ldd	r23, Y+54	; 0x36
    1d22:	8f a9       	ldd	r24, Y+55	; 0x37
    1d24:	98 ad       	ldd	r25, Y+56	; 0x38
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	4a e7       	ldi	r20, 0x7A	; 122
    1d2c:	55 e4       	ldi	r21, 0x45	; 69
    1d2e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	89 ab       	std	Y+49, r24	; 0x31
    1d38:	9a ab       	std	Y+50, r25	; 0x32
    1d3a:	ab ab       	std	Y+51, r26	; 0x33
    1d3c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1d3e:	69 a9       	ldd	r22, Y+49	; 0x31
    1d40:	7a a9       	ldd	r23, Y+50	; 0x32
    1d42:	8b a9       	ldd	r24, Y+51	; 0x33
    1d44:	9c a9       	ldd	r25, Y+52	; 0x34
    1d46:	20 e0       	ldi	r18, 0x00	; 0
    1d48:	30 e0       	ldi	r19, 0x00	; 0
    1d4a:	40 e8       	ldi	r20, 0x80	; 128
    1d4c:	5f e3       	ldi	r21, 0x3F	; 63
    1d4e:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1d52:	88 23       	and	r24, r24
    1d54:	2c f4       	brge	.+10     	; 0x1d60 <call_size+0x86>
		__ticks = 1;
    1d56:	81 e0       	ldi	r24, 0x01	; 1
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	98 ab       	std	Y+48, r25	; 0x30
    1d5c:	8f a7       	std	Y+47, r24	; 0x2f
    1d5e:	3f c0       	rjmp	.+126    	; 0x1dde <call_size+0x104>
	else if (__tmp > 65535)
    1d60:	69 a9       	ldd	r22, Y+49	; 0x31
    1d62:	7a a9       	ldd	r23, Y+50	; 0x32
    1d64:	8b a9       	ldd	r24, Y+51	; 0x33
    1d66:	9c a9       	ldd	r25, Y+52	; 0x34
    1d68:	20 e0       	ldi	r18, 0x00	; 0
    1d6a:	3f ef       	ldi	r19, 0xFF	; 255
    1d6c:	4f e7       	ldi	r20, 0x7F	; 127
    1d6e:	57 e4       	ldi	r21, 0x47	; 71
    1d70:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1d74:	18 16       	cp	r1, r24
    1d76:	4c f5       	brge	.+82     	; 0x1dca <call_size+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d78:	6d a9       	ldd	r22, Y+53	; 0x35
    1d7a:	7e a9       	ldd	r23, Y+54	; 0x36
    1d7c:	8f a9       	ldd	r24, Y+55	; 0x37
    1d7e:	98 ad       	ldd	r25, Y+56	; 0x38
    1d80:	20 e0       	ldi	r18, 0x00	; 0
    1d82:	30 e0       	ldi	r19, 0x00	; 0
    1d84:	40 e2       	ldi	r20, 0x20	; 32
    1d86:	51 e4       	ldi	r21, 0x41	; 65
    1d88:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1d8c:	dc 01       	movw	r26, r24
    1d8e:	cb 01       	movw	r24, r22
    1d90:	bc 01       	movw	r22, r24
    1d92:	cd 01       	movw	r24, r26
    1d94:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1d98:	dc 01       	movw	r26, r24
    1d9a:	cb 01       	movw	r24, r22
    1d9c:	98 ab       	std	Y+48, r25	; 0x30
    1d9e:	8f a7       	std	Y+47, r24	; 0x2f
    1da0:	0f c0       	rjmp	.+30     	; 0x1dc0 <call_size+0xe6>
    1da2:	80 e9       	ldi	r24, 0x90	; 144
    1da4:	91 e0       	ldi	r25, 0x01	; 1
    1da6:	9e a7       	std	Y+46, r25	; 0x2e
    1da8:	8d a7       	std	Y+45, r24	; 0x2d
    1daa:	8d a5       	ldd	r24, Y+45	; 0x2d
    1dac:	9e a5       	ldd	r25, Y+46	; 0x2e
    1dae:	01 97       	sbiw	r24, 0x01	; 1
    1db0:	f1 f7       	brne	.-4      	; 0x1dae <call_size+0xd4>
    1db2:	9e a7       	std	Y+46, r25	; 0x2e
    1db4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1db6:	8f a5       	ldd	r24, Y+47	; 0x2f
    1db8:	98 a9       	ldd	r25, Y+48	; 0x30
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	98 ab       	std	Y+48, r25	; 0x30
    1dbe:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dc0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1dc2:	98 a9       	ldd	r25, Y+48	; 0x30
    1dc4:	00 97       	sbiw	r24, 0x00	; 0
    1dc6:	69 f7       	brne	.-38     	; 0x1da2 <call_size+0xc8>
    1dc8:	14 c0       	rjmp	.+40     	; 0x1df2 <call_size+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dca:	69 a9       	ldd	r22, Y+49	; 0x31
    1dcc:	7a a9       	ldd	r23, Y+50	; 0x32
    1dce:	8b a9       	ldd	r24, Y+51	; 0x33
    1dd0:	9c a9       	ldd	r25, Y+52	; 0x34
    1dd2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1dd6:	dc 01       	movw	r26, r24
    1dd8:	cb 01       	movw	r24, r22
    1dda:	98 ab       	std	Y+48, r25	; 0x30
    1ddc:	8f a7       	std	Y+47, r24	; 0x2f
    1dde:	8f a5       	ldd	r24, Y+47	; 0x2f
    1de0:	98 a9       	ldd	r25, Y+48	; 0x30
    1de2:	9c a7       	std	Y+44, r25	; 0x2c
    1de4:	8b a7       	std	Y+43, r24	; 0x2b
    1de6:	8b a5       	ldd	r24, Y+43	; 0x2b
    1de8:	9c a5       	ldd	r25, Y+44	; 0x2c
    1dea:	01 97       	sbiw	r24, 0x01	; 1
    1dec:	f1 f7       	brne	.-4      	; 0x1dea <call_size+0x110>
    1dee:	9c a7       	std	Y+44, r25	; 0x2c
    1df0:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x00; _delay_ms(1);
    1df2:	ec e2       	ldi	r30, 0x2C	; 44
    1df4:	f0 e0       	ldi	r31, 0x00	; 0
    1df6:	10 82       	st	Z, r1
    1df8:	80 e0       	ldi	r24, 0x00	; 0
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	a0 e8       	ldi	r26, 0x80	; 128
    1dfe:	bf e3       	ldi	r27, 0x3F	; 63
    1e00:	8f a3       	std	Y+39, r24	; 0x27
    1e02:	98 a7       	std	Y+40, r25	; 0x28
    1e04:	a9 a7       	std	Y+41, r26	; 0x29
    1e06:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e08:	6f a1       	ldd	r22, Y+39	; 0x27
    1e0a:	78 a5       	ldd	r23, Y+40	; 0x28
    1e0c:	89 a5       	ldd	r24, Y+41	; 0x29
    1e0e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e10:	20 e0       	ldi	r18, 0x00	; 0
    1e12:	30 e0       	ldi	r19, 0x00	; 0
    1e14:	4a e7       	ldi	r20, 0x7A	; 122
    1e16:	55 e4       	ldi	r21, 0x45	; 69
    1e18:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1e1c:	dc 01       	movw	r26, r24
    1e1e:	cb 01       	movw	r24, r22
    1e20:	8b a3       	std	Y+35, r24	; 0x23
    1e22:	9c a3       	std	Y+36, r25	; 0x24
    1e24:	ad a3       	std	Y+37, r26	; 0x25
    1e26:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1e28:	6b a1       	ldd	r22, Y+35	; 0x23
    1e2a:	7c a1       	ldd	r23, Y+36	; 0x24
    1e2c:	8d a1       	ldd	r24, Y+37	; 0x25
    1e2e:	9e a1       	ldd	r25, Y+38	; 0x26
    1e30:	20 e0       	ldi	r18, 0x00	; 0
    1e32:	30 e0       	ldi	r19, 0x00	; 0
    1e34:	40 e8       	ldi	r20, 0x80	; 128
    1e36:	5f e3       	ldi	r21, 0x3F	; 63
    1e38:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1e3c:	88 23       	and	r24, r24
    1e3e:	2c f4       	brge	.+10     	; 0x1e4a <call_size+0x170>
		__ticks = 1;
    1e40:	81 e0       	ldi	r24, 0x01	; 1
    1e42:	90 e0       	ldi	r25, 0x00	; 0
    1e44:	9a a3       	std	Y+34, r25	; 0x22
    1e46:	89 a3       	std	Y+33, r24	; 0x21
    1e48:	3f c0       	rjmp	.+126    	; 0x1ec8 <call_size+0x1ee>
	else if (__tmp > 65535)
    1e4a:	6b a1       	ldd	r22, Y+35	; 0x23
    1e4c:	7c a1       	ldd	r23, Y+36	; 0x24
    1e4e:	8d a1       	ldd	r24, Y+37	; 0x25
    1e50:	9e a1       	ldd	r25, Y+38	; 0x26
    1e52:	20 e0       	ldi	r18, 0x00	; 0
    1e54:	3f ef       	ldi	r19, 0xFF	; 255
    1e56:	4f e7       	ldi	r20, 0x7F	; 127
    1e58:	57 e4       	ldi	r21, 0x47	; 71
    1e5a:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1e5e:	18 16       	cp	r1, r24
    1e60:	4c f5       	brge	.+82     	; 0x1eb4 <call_size+0x1da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e62:	6f a1       	ldd	r22, Y+39	; 0x27
    1e64:	78 a5       	ldd	r23, Y+40	; 0x28
    1e66:	89 a5       	ldd	r24, Y+41	; 0x29
    1e68:	9a a5       	ldd	r25, Y+42	; 0x2a
    1e6a:	20 e0       	ldi	r18, 0x00	; 0
    1e6c:	30 e0       	ldi	r19, 0x00	; 0
    1e6e:	40 e2       	ldi	r20, 0x20	; 32
    1e70:	51 e4       	ldi	r21, 0x41	; 65
    1e72:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1e76:	dc 01       	movw	r26, r24
    1e78:	cb 01       	movw	r24, r22
    1e7a:	bc 01       	movw	r22, r24
    1e7c:	cd 01       	movw	r24, r26
    1e7e:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1e82:	dc 01       	movw	r26, r24
    1e84:	cb 01       	movw	r24, r22
    1e86:	9a a3       	std	Y+34, r25	; 0x22
    1e88:	89 a3       	std	Y+33, r24	; 0x21
    1e8a:	0f c0       	rjmp	.+30     	; 0x1eaa <call_size+0x1d0>
    1e8c:	80 e9       	ldi	r24, 0x90	; 144
    1e8e:	91 e0       	ldi	r25, 0x01	; 1
    1e90:	98 a3       	std	Y+32, r25	; 0x20
    1e92:	8f 8f       	std	Y+31, r24	; 0x1f
    1e94:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1e96:	98 a1       	ldd	r25, Y+32	; 0x20
    1e98:	01 97       	sbiw	r24, 0x01	; 1
    1e9a:	f1 f7       	brne	.-4      	; 0x1e98 <call_size+0x1be>
    1e9c:	98 a3       	std	Y+32, r25	; 0x20
    1e9e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ea0:	89 a1       	ldd	r24, Y+33	; 0x21
    1ea2:	9a a1       	ldd	r25, Y+34	; 0x22
    1ea4:	01 97       	sbiw	r24, 0x01	; 1
    1ea6:	9a a3       	std	Y+34, r25	; 0x22
    1ea8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eaa:	89 a1       	ldd	r24, Y+33	; 0x21
    1eac:	9a a1       	ldd	r25, Y+34	; 0x22
    1eae:	00 97       	sbiw	r24, 0x00	; 0
    1eb0:	69 f7       	brne	.-38     	; 0x1e8c <call_size+0x1b2>
    1eb2:	14 c0       	rjmp	.+40     	; 0x1edc <call_size+0x202>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1eb4:	6b a1       	ldd	r22, Y+35	; 0x23
    1eb6:	7c a1       	ldd	r23, Y+36	; 0x24
    1eb8:	8d a1       	ldd	r24, Y+37	; 0x25
    1eba:	9e a1       	ldd	r25, Y+38	; 0x26
    1ebc:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1ec0:	dc 01       	movw	r26, r24
    1ec2:	cb 01       	movw	r24, r22
    1ec4:	9a a3       	std	Y+34, r25	; 0x22
    1ec6:	89 a3       	std	Y+33, r24	; 0x21
    1ec8:	89 a1       	ldd	r24, Y+33	; 0x21
    1eca:	9a a1       	ldd	r25, Y+34	; 0x22
    1ecc:	9e 8f       	std	Y+30, r25	; 0x1e
    1ece:	8d 8f       	std	Y+29, r24	; 0x1d
    1ed0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ed2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1ed4:	01 97       	sbiw	r24, 0x01	; 1
    1ed6:	f1 f7       	brne	.-4      	; 0x1ed4 <call_size+0x1fa>
    1ed8:	9e 8f       	std	Y+30, r25	; 0x1e
    1eda:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x34; _delay_ms(1);
    1edc:	ec e2       	ldi	r30, 0x2C	; 44
    1ede:	f0 e0       	ldi	r31, 0x00	; 0
    1ee0:	84 e3       	ldi	r24, 0x34	; 52
    1ee2:	80 83       	st	Z, r24
    1ee4:	80 e0       	ldi	r24, 0x00	; 0
    1ee6:	90 e0       	ldi	r25, 0x00	; 0
    1ee8:	a0 e8       	ldi	r26, 0x80	; 128
    1eea:	bf e3       	ldi	r27, 0x3F	; 63
    1eec:	89 8f       	std	Y+25, r24	; 0x19
    1eee:	9a 8f       	std	Y+26, r25	; 0x1a
    1ef0:	ab 8f       	std	Y+27, r26	; 0x1b
    1ef2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ef4:	69 8d       	ldd	r22, Y+25	; 0x19
    1ef6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ef8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1efa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1efc:	20 e0       	ldi	r18, 0x00	; 0
    1efe:	30 e0       	ldi	r19, 0x00	; 0
    1f00:	4a e7       	ldi	r20, 0x7A	; 122
    1f02:	55 e4       	ldi	r21, 0x45	; 69
    1f04:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1f08:	dc 01       	movw	r26, r24
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	8d 8b       	std	Y+21, r24	; 0x15
    1f0e:	9e 8b       	std	Y+22, r25	; 0x16
    1f10:	af 8b       	std	Y+23, r26	; 0x17
    1f12:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1f14:	6d 89       	ldd	r22, Y+21	; 0x15
    1f16:	7e 89       	ldd	r23, Y+22	; 0x16
    1f18:	8f 89       	ldd	r24, Y+23	; 0x17
    1f1a:	98 8d       	ldd	r25, Y+24	; 0x18
    1f1c:	20 e0       	ldi	r18, 0x00	; 0
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	40 e8       	ldi	r20, 0x80	; 128
    1f22:	5f e3       	ldi	r21, 0x3F	; 63
    1f24:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    1f28:	88 23       	and	r24, r24
    1f2a:	2c f4       	brge	.+10     	; 0x1f36 <call_size+0x25c>
		__ticks = 1;
    1f2c:	81 e0       	ldi	r24, 0x01	; 1
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	9c 8b       	std	Y+20, r25	; 0x14
    1f32:	8b 8b       	std	Y+19, r24	; 0x13
    1f34:	3f c0       	rjmp	.+126    	; 0x1fb4 <call_size+0x2da>
	else if (__tmp > 65535)
    1f36:	6d 89       	ldd	r22, Y+21	; 0x15
    1f38:	7e 89       	ldd	r23, Y+22	; 0x16
    1f3a:	8f 89       	ldd	r24, Y+23	; 0x17
    1f3c:	98 8d       	ldd	r25, Y+24	; 0x18
    1f3e:	20 e0       	ldi	r18, 0x00	; 0
    1f40:	3f ef       	ldi	r19, 0xFF	; 255
    1f42:	4f e7       	ldi	r20, 0x7F	; 127
    1f44:	57 e4       	ldi	r21, 0x47	; 71
    1f46:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    1f4a:	18 16       	cp	r1, r24
    1f4c:	4c f5       	brge	.+82     	; 0x1fa0 <call_size+0x2c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f4e:	69 8d       	ldd	r22, Y+25	; 0x19
    1f50:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f52:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1f54:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1f56:	20 e0       	ldi	r18, 0x00	; 0
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	40 e2       	ldi	r20, 0x20	; 32
    1f5c:	51 e4       	ldi	r21, 0x41	; 65
    1f5e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1f62:	dc 01       	movw	r26, r24
    1f64:	cb 01       	movw	r24, r22
    1f66:	bc 01       	movw	r22, r24
    1f68:	cd 01       	movw	r24, r26
    1f6a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1f6e:	dc 01       	movw	r26, r24
    1f70:	cb 01       	movw	r24, r22
    1f72:	9c 8b       	std	Y+20, r25	; 0x14
    1f74:	8b 8b       	std	Y+19, r24	; 0x13
    1f76:	0f c0       	rjmp	.+30     	; 0x1f96 <call_size+0x2bc>
    1f78:	80 e9       	ldi	r24, 0x90	; 144
    1f7a:	91 e0       	ldi	r25, 0x01	; 1
    1f7c:	9a 8b       	std	Y+18, r25	; 0x12
    1f7e:	89 8b       	std	Y+17, r24	; 0x11
    1f80:	89 89       	ldd	r24, Y+17	; 0x11
    1f82:	9a 89       	ldd	r25, Y+18	; 0x12
    1f84:	01 97       	sbiw	r24, 0x01	; 1
    1f86:	f1 f7       	brne	.-4      	; 0x1f84 <call_size+0x2aa>
    1f88:	9a 8b       	std	Y+18, r25	; 0x12
    1f8a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f8c:	8b 89       	ldd	r24, Y+19	; 0x13
    1f8e:	9c 89       	ldd	r25, Y+20	; 0x14
    1f90:	01 97       	sbiw	r24, 0x01	; 1
    1f92:	9c 8b       	std	Y+20, r25	; 0x14
    1f94:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f96:	8b 89       	ldd	r24, Y+19	; 0x13
    1f98:	9c 89       	ldd	r25, Y+20	; 0x14
    1f9a:	00 97       	sbiw	r24, 0x00	; 0
    1f9c:	69 f7       	brne	.-38     	; 0x1f78 <call_size+0x29e>
    1f9e:	14 c0       	rjmp	.+40     	; 0x1fc8 <call_size+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fa0:	6d 89       	ldd	r22, Y+21	; 0x15
    1fa2:	7e 89       	ldd	r23, Y+22	; 0x16
    1fa4:	8f 89       	ldd	r24, Y+23	; 0x17
    1fa6:	98 8d       	ldd	r25, Y+24	; 0x18
    1fa8:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    1fac:	dc 01       	movw	r26, r24
    1fae:	cb 01       	movw	r24, r22
    1fb0:	9c 8b       	std	Y+20, r25	; 0x14
    1fb2:	8b 8b       	std	Y+19, r24	; 0x13
    1fb4:	8b 89       	ldd	r24, Y+19	; 0x13
    1fb6:	9c 89       	ldd	r25, Y+20	; 0x14
    1fb8:	98 8b       	std	Y+16, r25	; 0x10
    1fba:	8f 87       	std	Y+15, r24	; 0x0f
    1fbc:	8f 85       	ldd	r24, Y+15	; 0x0f
    1fbe:	98 89       	ldd	r25, Y+16	; 0x10
    1fc0:	01 97       	sbiw	r24, 0x01	; 1
    1fc2:	f1 f7       	brne	.-4      	; 0x1fc0 <call_size+0x2e6>
    1fc4:	98 8b       	std	Y+16, r25	; 0x10
    1fc6:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x01; _delay_ms(1);
    1fc8:	ec e2       	ldi	r30, 0x2C	; 44
    1fca:	f0 e0       	ldi	r31, 0x00	; 0
    1fcc:	81 e0       	ldi	r24, 0x01	; 1
    1fce:	80 83       	st	Z, r24
    1fd0:	80 e0       	ldi	r24, 0x00	; 0
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	a0 e8       	ldi	r26, 0x80	; 128
    1fd6:	bf e3       	ldi	r27, 0x3F	; 63
    1fd8:	8b 87       	std	Y+11, r24	; 0x0b
    1fda:	9c 87       	std	Y+12, r25	; 0x0c
    1fdc:	ad 87       	std	Y+13, r26	; 0x0d
    1fde:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1fe0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1fe2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1fe4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1fe6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1fe8:	20 e0       	ldi	r18, 0x00	; 0
    1fea:	30 e0       	ldi	r19, 0x00	; 0
    1fec:	4a e7       	ldi	r20, 0x7A	; 122
    1fee:	55 e4       	ldi	r21, 0x45	; 69
    1ff0:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    1ff4:	dc 01       	movw	r26, r24
    1ff6:	cb 01       	movw	r24, r22
    1ff8:	8f 83       	std	Y+7, r24	; 0x07
    1ffa:	98 87       	std	Y+8, r25	; 0x08
    1ffc:	a9 87       	std	Y+9, r26	; 0x09
    1ffe:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2000:	6f 81       	ldd	r22, Y+7	; 0x07
    2002:	78 85       	ldd	r23, Y+8	; 0x08
    2004:	89 85       	ldd	r24, Y+9	; 0x09
    2006:	9a 85       	ldd	r25, Y+10	; 0x0a
    2008:	20 e0       	ldi	r18, 0x00	; 0
    200a:	30 e0       	ldi	r19, 0x00	; 0
    200c:	40 e8       	ldi	r20, 0x80	; 128
    200e:	5f e3       	ldi	r21, 0x3F	; 63
    2010:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2014:	88 23       	and	r24, r24
    2016:	2c f4       	brge	.+10     	; 0x2022 <call_size+0x348>
		__ticks = 1;
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	90 e0       	ldi	r25, 0x00	; 0
    201c:	9e 83       	std	Y+6, r25	; 0x06
    201e:	8d 83       	std	Y+5, r24	; 0x05
    2020:	3f c0       	rjmp	.+126    	; 0x20a0 <call_size+0x3c6>
	else if (__tmp > 65535)
    2022:	6f 81       	ldd	r22, Y+7	; 0x07
    2024:	78 85       	ldd	r23, Y+8	; 0x08
    2026:	89 85       	ldd	r24, Y+9	; 0x09
    2028:	9a 85       	ldd	r25, Y+10	; 0x0a
    202a:	20 e0       	ldi	r18, 0x00	; 0
    202c:	3f ef       	ldi	r19, 0xFF	; 255
    202e:	4f e7       	ldi	r20, 0x7F	; 127
    2030:	57 e4       	ldi	r21, 0x47	; 71
    2032:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2036:	18 16       	cp	r1, r24
    2038:	4c f5       	brge	.+82     	; 0x208c <call_size+0x3b2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    203a:	6b 85       	ldd	r22, Y+11	; 0x0b
    203c:	7c 85       	ldd	r23, Y+12	; 0x0c
    203e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2040:	9e 85       	ldd	r25, Y+14	; 0x0e
    2042:	20 e0       	ldi	r18, 0x00	; 0
    2044:	30 e0       	ldi	r19, 0x00	; 0
    2046:	40 e2       	ldi	r20, 0x20	; 32
    2048:	51 e4       	ldi	r21, 0x41	; 65
    204a:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    204e:	dc 01       	movw	r26, r24
    2050:	cb 01       	movw	r24, r22
    2052:	bc 01       	movw	r22, r24
    2054:	cd 01       	movw	r24, r26
    2056:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    205a:	dc 01       	movw	r26, r24
    205c:	cb 01       	movw	r24, r22
    205e:	9e 83       	std	Y+6, r25	; 0x06
    2060:	8d 83       	std	Y+5, r24	; 0x05
    2062:	0f c0       	rjmp	.+30     	; 0x2082 <call_size+0x3a8>
    2064:	80 e9       	ldi	r24, 0x90	; 144
    2066:	91 e0       	ldi	r25, 0x01	; 1
    2068:	9c 83       	std	Y+4, r25	; 0x04
    206a:	8b 83       	std	Y+3, r24	; 0x03
    206c:	8b 81       	ldd	r24, Y+3	; 0x03
    206e:	9c 81       	ldd	r25, Y+4	; 0x04
    2070:	01 97       	sbiw	r24, 0x01	; 1
    2072:	f1 f7       	brne	.-4      	; 0x2070 <call_size+0x396>
    2074:	9c 83       	std	Y+4, r25	; 0x04
    2076:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2078:	8d 81       	ldd	r24, Y+5	; 0x05
    207a:	9e 81       	ldd	r25, Y+6	; 0x06
    207c:	01 97       	sbiw	r24, 0x01	; 1
    207e:	9e 83       	std	Y+6, r25	; 0x06
    2080:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2082:	8d 81       	ldd	r24, Y+5	; 0x05
    2084:	9e 81       	ldd	r25, Y+6	; 0x06
    2086:	00 97       	sbiw	r24, 0x00	; 0
    2088:	69 f7       	brne	.-38     	; 0x2064 <call_size+0x38a>
    208a:	14 c0       	rjmp	.+40     	; 0x20b4 <call_size+0x3da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    208c:	6f 81       	ldd	r22, Y+7	; 0x07
    208e:	78 85       	ldd	r23, Y+8	; 0x08
    2090:	89 85       	ldd	r24, Y+9	; 0x09
    2092:	9a 85       	ldd	r25, Y+10	; 0x0a
    2094:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2098:	dc 01       	movw	r26, r24
    209a:	cb 01       	movw	r24, r22
    209c:	9e 83       	std	Y+6, r25	; 0x06
    209e:	8d 83       	std	Y+5, r24	; 0x05
    20a0:	8d 81       	ldd	r24, Y+5	; 0x05
    20a2:	9e 81       	ldd	r25, Y+6	; 0x06
    20a4:	9a 83       	std	Y+2, r25	; 0x02
    20a6:	89 83       	std	Y+1, r24	; 0x01
    20a8:	89 81       	ldd	r24, Y+1	; 0x01
    20aa:	9a 81       	ldd	r25, Y+2	; 0x02
    20ac:	01 97       	sbiw	r24, 0x01	; 1
    20ae:	f1 f7       	brne	.-4      	; 0x20ac <call_size+0x3d2>
    20b0:	9a 83       	std	Y+2, r25	; 0x02
    20b2:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x00;
    20b4:	ec e2       	ldi	r30, 0x2C	; 44
    20b6:	f0 e0       	ldi	r31, 0x00	; 0
    20b8:	10 82       	st	Z, r1
}
    20ba:	e8 96       	adiw	r28, 0x38	; 56
    20bc:	0f b6       	in	r0, 0x3f	; 63
    20be:	f8 94       	cli
    20c0:	de bf       	out	0x3e, r29	; 62
    20c2:	0f be       	out	0x3f, r0	; 63
    20c4:	cd bf       	out	0x3d, r28	; 61
    20c6:	cf 91       	pop	r28
    20c8:	df 91       	pop	r29
    20ca:	08 95       	ret

000020cc <call_img>:
 
void call_img(){
    20cc:	0f 93       	push	r16
    20ce:	1f 93       	push	r17
    20d0:	df 93       	push	r29
    20d2:	cf 93       	push	r28
    20d4:	cd b7       	in	r28, 0x3d	; 61
    20d6:	de b7       	in	r29, 0x3e	; 62
    20d8:	c2 5d       	subi	r28, 0xD2	; 210
    20da:	d0 40       	sbci	r29, 0x00	; 0
    20dc:	0f b6       	in	r0, 0x3f	; 63
    20de:	f8 94       	cli
    20e0:	de bf       	out	0x3e, r29	; 62
    20e2:	0f be       	out	0x3f, r0	; 63
    20e4:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nCALL_IMG ");
    20e6:	00 d0       	rcall	.+0      	; 0x20e8 <call_img+0x1c>
    20e8:	ed b7       	in	r30, 0x3d	; 61
    20ea:	fe b7       	in	r31, 0x3e	; 62
    20ec:	31 96       	adiw	r30, 0x01	; 1
    20ee:	80 e4       	ldi	r24, 0x40	; 64
    20f0:	91 e0       	ldi	r25, 0x01	; 1
    20f2:	91 83       	std	Z+1, r25	; 0x01
    20f4:	80 83       	st	Z, r24
    20f6:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
    20fa:	0f 90       	pop	r0
    20fc:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    20fe:	ec e2       	ldi	r30, 0x2C	; 44
    2100:	f0 e0       	ldi	r31, 0x00	; 0
    2102:	86 e5       	ldi	r24, 0x56	; 86
    2104:	80 83       	st	Z, r24
    2106:	fe 01       	movw	r30, r28
    2108:	e1 53       	subi	r30, 0x31	; 49
    210a:	ff 4f       	sbci	r31, 0xFF	; 255
    210c:	80 e0       	ldi	r24, 0x00	; 0
    210e:	90 e0       	ldi	r25, 0x00	; 0
    2110:	a0 e8       	ldi	r26, 0x80	; 128
    2112:	bf e3       	ldi	r27, 0x3F	; 63
    2114:	80 83       	st	Z, r24
    2116:	91 83       	std	Z+1, r25	; 0x01
    2118:	a2 83       	std	Z+2, r26	; 0x02
    211a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    211c:	8e 01       	movw	r16, r28
    211e:	05 53       	subi	r16, 0x35	; 53
    2120:	1f 4f       	sbci	r17, 0xFF	; 255
    2122:	fe 01       	movw	r30, r28
    2124:	e1 53       	subi	r30, 0x31	; 49
    2126:	ff 4f       	sbci	r31, 0xFF	; 255
    2128:	60 81       	ld	r22, Z
    212a:	71 81       	ldd	r23, Z+1	; 0x01
    212c:	82 81       	ldd	r24, Z+2	; 0x02
    212e:	93 81       	ldd	r25, Z+3	; 0x03
    2130:	20 e0       	ldi	r18, 0x00	; 0
    2132:	30 e0       	ldi	r19, 0x00	; 0
    2134:	4a e7       	ldi	r20, 0x7A	; 122
    2136:	55 e4       	ldi	r21, 0x45	; 69
    2138:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    213c:	dc 01       	movw	r26, r24
    213e:	cb 01       	movw	r24, r22
    2140:	f8 01       	movw	r30, r16
    2142:	80 83       	st	Z, r24
    2144:	91 83       	std	Z+1, r25	; 0x01
    2146:	a2 83       	std	Z+2, r26	; 0x02
    2148:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    214a:	fe 01       	movw	r30, r28
    214c:	e5 53       	subi	r30, 0x35	; 53
    214e:	ff 4f       	sbci	r31, 0xFF	; 255
    2150:	60 81       	ld	r22, Z
    2152:	71 81       	ldd	r23, Z+1	; 0x01
    2154:	82 81       	ldd	r24, Z+2	; 0x02
    2156:	93 81       	ldd	r25, Z+3	; 0x03
    2158:	20 e0       	ldi	r18, 0x00	; 0
    215a:	30 e0       	ldi	r19, 0x00	; 0
    215c:	40 e8       	ldi	r20, 0x80	; 128
    215e:	5f e3       	ldi	r21, 0x3F	; 63
    2160:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2164:	88 23       	and	r24, r24
    2166:	44 f4       	brge	.+16     	; 0x2178 <call_img+0xac>
		__ticks = 1;
    2168:	fe 01       	movw	r30, r28
    216a:	e7 53       	subi	r30, 0x37	; 55
    216c:	ff 4f       	sbci	r31, 0xFF	; 255
    216e:	81 e0       	ldi	r24, 0x01	; 1
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	91 83       	std	Z+1, r25	; 0x01
    2174:	80 83       	st	Z, r24
    2176:	64 c0       	rjmp	.+200    	; 0x2240 <call_img+0x174>
	else if (__tmp > 65535)
    2178:	fe 01       	movw	r30, r28
    217a:	e5 53       	subi	r30, 0x35	; 53
    217c:	ff 4f       	sbci	r31, 0xFF	; 255
    217e:	60 81       	ld	r22, Z
    2180:	71 81       	ldd	r23, Z+1	; 0x01
    2182:	82 81       	ldd	r24, Z+2	; 0x02
    2184:	93 81       	ldd	r25, Z+3	; 0x03
    2186:	20 e0       	ldi	r18, 0x00	; 0
    2188:	3f ef       	ldi	r19, 0xFF	; 255
    218a:	4f e7       	ldi	r20, 0x7F	; 127
    218c:	57 e4       	ldi	r21, 0x47	; 71
    218e:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2192:	18 16       	cp	r1, r24
    2194:	0c f0       	brlt	.+2      	; 0x2198 <call_img+0xcc>
    2196:	43 c0       	rjmp	.+134    	; 0x221e <call_img+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2198:	fe 01       	movw	r30, r28
    219a:	e1 53       	subi	r30, 0x31	; 49
    219c:	ff 4f       	sbci	r31, 0xFF	; 255
    219e:	60 81       	ld	r22, Z
    21a0:	71 81       	ldd	r23, Z+1	; 0x01
    21a2:	82 81       	ldd	r24, Z+2	; 0x02
    21a4:	93 81       	ldd	r25, Z+3	; 0x03
    21a6:	20 e0       	ldi	r18, 0x00	; 0
    21a8:	30 e0       	ldi	r19, 0x00	; 0
    21aa:	40 e2       	ldi	r20, 0x20	; 32
    21ac:	51 e4       	ldi	r21, 0x41	; 65
    21ae:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    21b2:	dc 01       	movw	r26, r24
    21b4:	cb 01       	movw	r24, r22
    21b6:	8e 01       	movw	r16, r28
    21b8:	07 53       	subi	r16, 0x37	; 55
    21ba:	1f 4f       	sbci	r17, 0xFF	; 255
    21bc:	bc 01       	movw	r22, r24
    21be:	cd 01       	movw	r24, r26
    21c0:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    21c4:	dc 01       	movw	r26, r24
    21c6:	cb 01       	movw	r24, r22
    21c8:	f8 01       	movw	r30, r16
    21ca:	91 83       	std	Z+1, r25	; 0x01
    21cc:	80 83       	st	Z, r24
    21ce:	1f c0       	rjmp	.+62     	; 0x220e <call_img+0x142>
    21d0:	fe 01       	movw	r30, r28
    21d2:	e9 53       	subi	r30, 0x39	; 57
    21d4:	ff 4f       	sbci	r31, 0xFF	; 255
    21d6:	80 e9       	ldi	r24, 0x90	; 144
    21d8:	91 e0       	ldi	r25, 0x01	; 1
    21da:	91 83       	std	Z+1, r25	; 0x01
    21dc:	80 83       	st	Z, r24
    21de:	fe 01       	movw	r30, r28
    21e0:	e9 53       	subi	r30, 0x39	; 57
    21e2:	ff 4f       	sbci	r31, 0xFF	; 255
    21e4:	80 81       	ld	r24, Z
    21e6:	91 81       	ldd	r25, Z+1	; 0x01
    21e8:	01 97       	sbiw	r24, 0x01	; 1
    21ea:	f1 f7       	brne	.-4      	; 0x21e8 <call_img+0x11c>
    21ec:	fe 01       	movw	r30, r28
    21ee:	e9 53       	subi	r30, 0x39	; 57
    21f0:	ff 4f       	sbci	r31, 0xFF	; 255
    21f2:	91 83       	std	Z+1, r25	; 0x01
    21f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21f6:	de 01       	movw	r26, r28
    21f8:	a7 53       	subi	r26, 0x37	; 55
    21fa:	bf 4f       	sbci	r27, 0xFF	; 255
    21fc:	fe 01       	movw	r30, r28
    21fe:	e7 53       	subi	r30, 0x37	; 55
    2200:	ff 4f       	sbci	r31, 0xFF	; 255
    2202:	80 81       	ld	r24, Z
    2204:	91 81       	ldd	r25, Z+1	; 0x01
    2206:	01 97       	sbiw	r24, 0x01	; 1
    2208:	11 96       	adiw	r26, 0x01	; 1
    220a:	9c 93       	st	X, r25
    220c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    220e:	fe 01       	movw	r30, r28
    2210:	e7 53       	subi	r30, 0x37	; 55
    2212:	ff 4f       	sbci	r31, 0xFF	; 255
    2214:	80 81       	ld	r24, Z
    2216:	91 81       	ldd	r25, Z+1	; 0x01
    2218:	00 97       	sbiw	r24, 0x00	; 0
    221a:	d1 f6       	brne	.-76     	; 0x21d0 <call_img+0x104>
    221c:	27 c0       	rjmp	.+78     	; 0x226c <call_img+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    221e:	8e 01       	movw	r16, r28
    2220:	07 53       	subi	r16, 0x37	; 55
    2222:	1f 4f       	sbci	r17, 0xFF	; 255
    2224:	fe 01       	movw	r30, r28
    2226:	e5 53       	subi	r30, 0x35	; 53
    2228:	ff 4f       	sbci	r31, 0xFF	; 255
    222a:	60 81       	ld	r22, Z
    222c:	71 81       	ldd	r23, Z+1	; 0x01
    222e:	82 81       	ldd	r24, Z+2	; 0x02
    2230:	93 81       	ldd	r25, Z+3	; 0x03
    2232:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2236:	dc 01       	movw	r26, r24
    2238:	cb 01       	movw	r24, r22
    223a:	f8 01       	movw	r30, r16
    223c:	91 83       	std	Z+1, r25	; 0x01
    223e:	80 83       	st	Z, r24
    2240:	de 01       	movw	r26, r28
    2242:	ab 53       	subi	r26, 0x3B	; 59
    2244:	bf 4f       	sbci	r27, 0xFF	; 255
    2246:	fe 01       	movw	r30, r28
    2248:	e7 53       	subi	r30, 0x37	; 55
    224a:	ff 4f       	sbci	r31, 0xFF	; 255
    224c:	80 81       	ld	r24, Z
    224e:	91 81       	ldd	r25, Z+1	; 0x01
    2250:	8d 93       	st	X+, r24
    2252:	9c 93       	st	X, r25
    2254:	fe 01       	movw	r30, r28
    2256:	eb 53       	subi	r30, 0x3B	; 59
    2258:	ff 4f       	sbci	r31, 0xFF	; 255
    225a:	80 81       	ld	r24, Z
    225c:	91 81       	ldd	r25, Z+1	; 0x01
    225e:	01 97       	sbiw	r24, 0x01	; 1
    2260:	f1 f7       	brne	.-4      	; 0x225e <call_img+0x192>
    2262:	fe 01       	movw	r30, r28
    2264:	eb 53       	subi	r30, 0x3B	; 59
    2266:	ff 4f       	sbci	r31, 0xFF	; 255
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    226c:	ec e2       	ldi	r30, 0x2C	; 44
    226e:	f0 e0       	ldi	r31, 0x00	; 0
    2270:	10 82       	st	Z, r1
    2272:	fe 01       	movw	r30, r28
    2274:	ef 53       	subi	r30, 0x3F	; 63
    2276:	ff 4f       	sbci	r31, 0xFF	; 255
    2278:	80 e0       	ldi	r24, 0x00	; 0
    227a:	90 e0       	ldi	r25, 0x00	; 0
    227c:	a0 e8       	ldi	r26, 0x80	; 128
    227e:	bf e3       	ldi	r27, 0x3F	; 63
    2280:	80 83       	st	Z, r24
    2282:	91 83       	std	Z+1, r25	; 0x01
    2284:	a2 83       	std	Z+2, r26	; 0x02
    2286:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2288:	8e 01       	movw	r16, r28
    228a:	03 54       	subi	r16, 0x43	; 67
    228c:	1f 4f       	sbci	r17, 0xFF	; 255
    228e:	fe 01       	movw	r30, r28
    2290:	ef 53       	subi	r30, 0x3F	; 63
    2292:	ff 4f       	sbci	r31, 0xFF	; 255
    2294:	60 81       	ld	r22, Z
    2296:	71 81       	ldd	r23, Z+1	; 0x01
    2298:	82 81       	ldd	r24, Z+2	; 0x02
    229a:	93 81       	ldd	r25, Z+3	; 0x03
    229c:	20 e0       	ldi	r18, 0x00	; 0
    229e:	30 e0       	ldi	r19, 0x00	; 0
    22a0:	4a e7       	ldi	r20, 0x7A	; 122
    22a2:	55 e4       	ldi	r21, 0x45	; 69
    22a4:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    22a8:	dc 01       	movw	r26, r24
    22aa:	cb 01       	movw	r24, r22
    22ac:	f8 01       	movw	r30, r16
    22ae:	80 83       	st	Z, r24
    22b0:	91 83       	std	Z+1, r25	; 0x01
    22b2:	a2 83       	std	Z+2, r26	; 0x02
    22b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22b6:	fe 01       	movw	r30, r28
    22b8:	e3 54       	subi	r30, 0x43	; 67
    22ba:	ff 4f       	sbci	r31, 0xFF	; 255
    22bc:	60 81       	ld	r22, Z
    22be:	71 81       	ldd	r23, Z+1	; 0x01
    22c0:	82 81       	ldd	r24, Z+2	; 0x02
    22c2:	93 81       	ldd	r25, Z+3	; 0x03
    22c4:	20 e0       	ldi	r18, 0x00	; 0
    22c6:	30 e0       	ldi	r19, 0x00	; 0
    22c8:	40 e8       	ldi	r20, 0x80	; 128
    22ca:	5f e3       	ldi	r21, 0x3F	; 63
    22cc:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    22d0:	88 23       	and	r24, r24
    22d2:	44 f4       	brge	.+16     	; 0x22e4 <call_img+0x218>
		__ticks = 1;
    22d4:	fe 01       	movw	r30, r28
    22d6:	e5 54       	subi	r30, 0x45	; 69
    22d8:	ff 4f       	sbci	r31, 0xFF	; 255
    22da:	81 e0       	ldi	r24, 0x01	; 1
    22dc:	90 e0       	ldi	r25, 0x00	; 0
    22de:	91 83       	std	Z+1, r25	; 0x01
    22e0:	80 83       	st	Z, r24
    22e2:	64 c0       	rjmp	.+200    	; 0x23ac <call_img+0x2e0>
	else if (__tmp > 65535)
    22e4:	fe 01       	movw	r30, r28
    22e6:	e3 54       	subi	r30, 0x43	; 67
    22e8:	ff 4f       	sbci	r31, 0xFF	; 255
    22ea:	60 81       	ld	r22, Z
    22ec:	71 81       	ldd	r23, Z+1	; 0x01
    22ee:	82 81       	ldd	r24, Z+2	; 0x02
    22f0:	93 81       	ldd	r25, Z+3	; 0x03
    22f2:	20 e0       	ldi	r18, 0x00	; 0
    22f4:	3f ef       	ldi	r19, 0xFF	; 255
    22f6:	4f e7       	ldi	r20, 0x7F	; 127
    22f8:	57 e4       	ldi	r21, 0x47	; 71
    22fa:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    22fe:	18 16       	cp	r1, r24
    2300:	0c f0       	brlt	.+2      	; 0x2304 <call_img+0x238>
    2302:	43 c0       	rjmp	.+134    	; 0x238a <call_img+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2304:	fe 01       	movw	r30, r28
    2306:	ef 53       	subi	r30, 0x3F	; 63
    2308:	ff 4f       	sbci	r31, 0xFF	; 255
    230a:	60 81       	ld	r22, Z
    230c:	71 81       	ldd	r23, Z+1	; 0x01
    230e:	82 81       	ldd	r24, Z+2	; 0x02
    2310:	93 81       	ldd	r25, Z+3	; 0x03
    2312:	20 e0       	ldi	r18, 0x00	; 0
    2314:	30 e0       	ldi	r19, 0x00	; 0
    2316:	40 e2       	ldi	r20, 0x20	; 32
    2318:	51 e4       	ldi	r21, 0x41	; 65
    231a:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    231e:	dc 01       	movw	r26, r24
    2320:	cb 01       	movw	r24, r22
    2322:	8e 01       	movw	r16, r28
    2324:	05 54       	subi	r16, 0x45	; 69
    2326:	1f 4f       	sbci	r17, 0xFF	; 255
    2328:	bc 01       	movw	r22, r24
    232a:	cd 01       	movw	r24, r26
    232c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2330:	dc 01       	movw	r26, r24
    2332:	cb 01       	movw	r24, r22
    2334:	f8 01       	movw	r30, r16
    2336:	91 83       	std	Z+1, r25	; 0x01
    2338:	80 83       	st	Z, r24
    233a:	1f c0       	rjmp	.+62     	; 0x237a <call_img+0x2ae>
    233c:	fe 01       	movw	r30, r28
    233e:	e7 54       	subi	r30, 0x47	; 71
    2340:	ff 4f       	sbci	r31, 0xFF	; 255
    2342:	80 e9       	ldi	r24, 0x90	; 144
    2344:	91 e0       	ldi	r25, 0x01	; 1
    2346:	91 83       	std	Z+1, r25	; 0x01
    2348:	80 83       	st	Z, r24
    234a:	fe 01       	movw	r30, r28
    234c:	e7 54       	subi	r30, 0x47	; 71
    234e:	ff 4f       	sbci	r31, 0xFF	; 255
    2350:	80 81       	ld	r24, Z
    2352:	91 81       	ldd	r25, Z+1	; 0x01
    2354:	01 97       	sbiw	r24, 0x01	; 1
    2356:	f1 f7       	brne	.-4      	; 0x2354 <call_img+0x288>
    2358:	fe 01       	movw	r30, r28
    235a:	e7 54       	subi	r30, 0x47	; 71
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	91 83       	std	Z+1, r25	; 0x01
    2360:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2362:	de 01       	movw	r26, r28
    2364:	a5 54       	subi	r26, 0x45	; 69
    2366:	bf 4f       	sbci	r27, 0xFF	; 255
    2368:	fe 01       	movw	r30, r28
    236a:	e5 54       	subi	r30, 0x45	; 69
    236c:	ff 4f       	sbci	r31, 0xFF	; 255
    236e:	80 81       	ld	r24, Z
    2370:	91 81       	ldd	r25, Z+1	; 0x01
    2372:	01 97       	sbiw	r24, 0x01	; 1
    2374:	11 96       	adiw	r26, 0x01	; 1
    2376:	9c 93       	st	X, r25
    2378:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    237a:	fe 01       	movw	r30, r28
    237c:	e5 54       	subi	r30, 0x45	; 69
    237e:	ff 4f       	sbci	r31, 0xFF	; 255
    2380:	80 81       	ld	r24, Z
    2382:	91 81       	ldd	r25, Z+1	; 0x01
    2384:	00 97       	sbiw	r24, 0x00	; 0
    2386:	d1 f6       	brne	.-76     	; 0x233c <call_img+0x270>
    2388:	27 c0       	rjmp	.+78     	; 0x23d8 <call_img+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    238a:	8e 01       	movw	r16, r28
    238c:	05 54       	subi	r16, 0x45	; 69
    238e:	1f 4f       	sbci	r17, 0xFF	; 255
    2390:	fe 01       	movw	r30, r28
    2392:	e3 54       	subi	r30, 0x43	; 67
    2394:	ff 4f       	sbci	r31, 0xFF	; 255
    2396:	60 81       	ld	r22, Z
    2398:	71 81       	ldd	r23, Z+1	; 0x01
    239a:	82 81       	ldd	r24, Z+2	; 0x02
    239c:	93 81       	ldd	r25, Z+3	; 0x03
    239e:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    23a2:	dc 01       	movw	r26, r24
    23a4:	cb 01       	movw	r24, r22
    23a6:	f8 01       	movw	r30, r16
    23a8:	91 83       	std	Z+1, r25	; 0x01
    23aa:	80 83       	st	Z, r24
    23ac:	de 01       	movw	r26, r28
    23ae:	a9 54       	subi	r26, 0x49	; 73
    23b0:	bf 4f       	sbci	r27, 0xFF	; 255
    23b2:	fe 01       	movw	r30, r28
    23b4:	e5 54       	subi	r30, 0x45	; 69
    23b6:	ff 4f       	sbci	r31, 0xFF	; 255
    23b8:	80 81       	ld	r24, Z
    23ba:	91 81       	ldd	r25, Z+1	; 0x01
    23bc:	8d 93       	st	X+, r24
    23be:	9c 93       	st	X, r25
    23c0:	fe 01       	movw	r30, r28
    23c2:	e9 54       	subi	r30, 0x49	; 73
    23c4:	ff 4f       	sbci	r31, 0xFF	; 255
    23c6:	80 81       	ld	r24, Z
    23c8:	91 81       	ldd	r25, Z+1	; 0x01
    23ca:	01 97       	sbiw	r24, 0x01	; 1
    23cc:	f1 f7       	brne	.-4      	; 0x23ca <call_img+0x2fe>
    23ce:	fe 01       	movw	r30, r28
    23d0:	e9 54       	subi	r30, 0x49	; 73
    23d2:	ff 4f       	sbci	r31, 0xFF	; 255
    23d4:	91 83       	std	Z+1, r25	; 0x01
    23d6:	80 83       	st	Z, r24
 UDR0=0x32; _delay_ms(1);
    23d8:	ec e2       	ldi	r30, 0x2C	; 44
    23da:	f0 e0       	ldi	r31, 0x00	; 0
    23dc:	82 e3       	ldi	r24, 0x32	; 50
    23de:	80 83       	st	Z, r24
    23e0:	fe 01       	movw	r30, r28
    23e2:	ed 54       	subi	r30, 0x4D	; 77
    23e4:	ff 4f       	sbci	r31, 0xFF	; 255
    23e6:	80 e0       	ldi	r24, 0x00	; 0
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	a0 e8       	ldi	r26, 0x80	; 128
    23ec:	bf e3       	ldi	r27, 0x3F	; 63
    23ee:	80 83       	st	Z, r24
    23f0:	91 83       	std	Z+1, r25	; 0x01
    23f2:	a2 83       	std	Z+2, r26	; 0x02
    23f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    23f6:	8e 01       	movw	r16, r28
    23f8:	01 55       	subi	r16, 0x51	; 81
    23fa:	1f 4f       	sbci	r17, 0xFF	; 255
    23fc:	fe 01       	movw	r30, r28
    23fe:	ed 54       	subi	r30, 0x4D	; 77
    2400:	ff 4f       	sbci	r31, 0xFF	; 255
    2402:	60 81       	ld	r22, Z
    2404:	71 81       	ldd	r23, Z+1	; 0x01
    2406:	82 81       	ldd	r24, Z+2	; 0x02
    2408:	93 81       	ldd	r25, Z+3	; 0x03
    240a:	20 e0       	ldi	r18, 0x00	; 0
    240c:	30 e0       	ldi	r19, 0x00	; 0
    240e:	4a e7       	ldi	r20, 0x7A	; 122
    2410:	55 e4       	ldi	r21, 0x45	; 69
    2412:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2416:	dc 01       	movw	r26, r24
    2418:	cb 01       	movw	r24, r22
    241a:	f8 01       	movw	r30, r16
    241c:	80 83       	st	Z, r24
    241e:	91 83       	std	Z+1, r25	; 0x01
    2420:	a2 83       	std	Z+2, r26	; 0x02
    2422:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2424:	fe 01       	movw	r30, r28
    2426:	e1 55       	subi	r30, 0x51	; 81
    2428:	ff 4f       	sbci	r31, 0xFF	; 255
    242a:	60 81       	ld	r22, Z
    242c:	71 81       	ldd	r23, Z+1	; 0x01
    242e:	82 81       	ldd	r24, Z+2	; 0x02
    2430:	93 81       	ldd	r25, Z+3	; 0x03
    2432:	20 e0       	ldi	r18, 0x00	; 0
    2434:	30 e0       	ldi	r19, 0x00	; 0
    2436:	40 e8       	ldi	r20, 0x80	; 128
    2438:	5f e3       	ldi	r21, 0x3F	; 63
    243a:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    243e:	88 23       	and	r24, r24
    2440:	44 f4       	brge	.+16     	; 0x2452 <call_img+0x386>
		__ticks = 1;
    2442:	fe 01       	movw	r30, r28
    2444:	e3 55       	subi	r30, 0x53	; 83
    2446:	ff 4f       	sbci	r31, 0xFF	; 255
    2448:	81 e0       	ldi	r24, 0x01	; 1
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	91 83       	std	Z+1, r25	; 0x01
    244e:	80 83       	st	Z, r24
    2450:	64 c0       	rjmp	.+200    	; 0x251a <call_img+0x44e>
	else if (__tmp > 65535)
    2452:	fe 01       	movw	r30, r28
    2454:	e1 55       	subi	r30, 0x51	; 81
    2456:	ff 4f       	sbci	r31, 0xFF	; 255
    2458:	60 81       	ld	r22, Z
    245a:	71 81       	ldd	r23, Z+1	; 0x01
    245c:	82 81       	ldd	r24, Z+2	; 0x02
    245e:	93 81       	ldd	r25, Z+3	; 0x03
    2460:	20 e0       	ldi	r18, 0x00	; 0
    2462:	3f ef       	ldi	r19, 0xFF	; 255
    2464:	4f e7       	ldi	r20, 0x7F	; 127
    2466:	57 e4       	ldi	r21, 0x47	; 71
    2468:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    246c:	18 16       	cp	r1, r24
    246e:	0c f0       	brlt	.+2      	; 0x2472 <call_img+0x3a6>
    2470:	43 c0       	rjmp	.+134    	; 0x24f8 <call_img+0x42c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2472:	fe 01       	movw	r30, r28
    2474:	ed 54       	subi	r30, 0x4D	; 77
    2476:	ff 4f       	sbci	r31, 0xFF	; 255
    2478:	60 81       	ld	r22, Z
    247a:	71 81       	ldd	r23, Z+1	; 0x01
    247c:	82 81       	ldd	r24, Z+2	; 0x02
    247e:	93 81       	ldd	r25, Z+3	; 0x03
    2480:	20 e0       	ldi	r18, 0x00	; 0
    2482:	30 e0       	ldi	r19, 0x00	; 0
    2484:	40 e2       	ldi	r20, 0x20	; 32
    2486:	51 e4       	ldi	r21, 0x41	; 65
    2488:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    248c:	dc 01       	movw	r26, r24
    248e:	cb 01       	movw	r24, r22
    2490:	8e 01       	movw	r16, r28
    2492:	03 55       	subi	r16, 0x53	; 83
    2494:	1f 4f       	sbci	r17, 0xFF	; 255
    2496:	bc 01       	movw	r22, r24
    2498:	cd 01       	movw	r24, r26
    249a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    249e:	dc 01       	movw	r26, r24
    24a0:	cb 01       	movw	r24, r22
    24a2:	f8 01       	movw	r30, r16
    24a4:	91 83       	std	Z+1, r25	; 0x01
    24a6:	80 83       	st	Z, r24
    24a8:	1f c0       	rjmp	.+62     	; 0x24e8 <call_img+0x41c>
    24aa:	fe 01       	movw	r30, r28
    24ac:	e5 55       	subi	r30, 0x55	; 85
    24ae:	ff 4f       	sbci	r31, 0xFF	; 255
    24b0:	80 e9       	ldi	r24, 0x90	; 144
    24b2:	91 e0       	ldi	r25, 0x01	; 1
    24b4:	91 83       	std	Z+1, r25	; 0x01
    24b6:	80 83       	st	Z, r24
    24b8:	fe 01       	movw	r30, r28
    24ba:	e5 55       	subi	r30, 0x55	; 85
    24bc:	ff 4f       	sbci	r31, 0xFF	; 255
    24be:	80 81       	ld	r24, Z
    24c0:	91 81       	ldd	r25, Z+1	; 0x01
    24c2:	01 97       	sbiw	r24, 0x01	; 1
    24c4:	f1 f7       	brne	.-4      	; 0x24c2 <call_img+0x3f6>
    24c6:	fe 01       	movw	r30, r28
    24c8:	e5 55       	subi	r30, 0x55	; 85
    24ca:	ff 4f       	sbci	r31, 0xFF	; 255
    24cc:	91 83       	std	Z+1, r25	; 0x01
    24ce:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24d0:	de 01       	movw	r26, r28
    24d2:	a3 55       	subi	r26, 0x53	; 83
    24d4:	bf 4f       	sbci	r27, 0xFF	; 255
    24d6:	fe 01       	movw	r30, r28
    24d8:	e3 55       	subi	r30, 0x53	; 83
    24da:	ff 4f       	sbci	r31, 0xFF	; 255
    24dc:	80 81       	ld	r24, Z
    24de:	91 81       	ldd	r25, Z+1	; 0x01
    24e0:	01 97       	sbiw	r24, 0x01	; 1
    24e2:	11 96       	adiw	r26, 0x01	; 1
    24e4:	9c 93       	st	X, r25
    24e6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24e8:	fe 01       	movw	r30, r28
    24ea:	e3 55       	subi	r30, 0x53	; 83
    24ec:	ff 4f       	sbci	r31, 0xFF	; 255
    24ee:	80 81       	ld	r24, Z
    24f0:	91 81       	ldd	r25, Z+1	; 0x01
    24f2:	00 97       	sbiw	r24, 0x00	; 0
    24f4:	d1 f6       	brne	.-76     	; 0x24aa <call_img+0x3de>
    24f6:	27 c0       	rjmp	.+78     	; 0x2546 <call_img+0x47a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24f8:	8e 01       	movw	r16, r28
    24fa:	03 55       	subi	r16, 0x53	; 83
    24fc:	1f 4f       	sbci	r17, 0xFF	; 255
    24fe:	fe 01       	movw	r30, r28
    2500:	e1 55       	subi	r30, 0x51	; 81
    2502:	ff 4f       	sbci	r31, 0xFF	; 255
    2504:	60 81       	ld	r22, Z
    2506:	71 81       	ldd	r23, Z+1	; 0x01
    2508:	82 81       	ldd	r24, Z+2	; 0x02
    250a:	93 81       	ldd	r25, Z+3	; 0x03
    250c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2510:	dc 01       	movw	r26, r24
    2512:	cb 01       	movw	r24, r22
    2514:	f8 01       	movw	r30, r16
    2516:	91 83       	std	Z+1, r25	; 0x01
    2518:	80 83       	st	Z, r24
    251a:	de 01       	movw	r26, r28
    251c:	a7 55       	subi	r26, 0x57	; 87
    251e:	bf 4f       	sbci	r27, 0xFF	; 255
    2520:	fe 01       	movw	r30, r28
    2522:	e3 55       	subi	r30, 0x53	; 83
    2524:	ff 4f       	sbci	r31, 0xFF	; 255
    2526:	80 81       	ld	r24, Z
    2528:	91 81       	ldd	r25, Z+1	; 0x01
    252a:	8d 93       	st	X+, r24
    252c:	9c 93       	st	X, r25
    252e:	fe 01       	movw	r30, r28
    2530:	e7 55       	subi	r30, 0x57	; 87
    2532:	ff 4f       	sbci	r31, 0xFF	; 255
    2534:	80 81       	ld	r24, Z
    2536:	91 81       	ldd	r25, Z+1	; 0x01
    2538:	01 97       	sbiw	r24, 0x01	; 1
    253a:	f1 f7       	brne	.-4      	; 0x2538 <call_img+0x46c>
    253c:	fe 01       	movw	r30, r28
    253e:	e7 55       	subi	r30, 0x57	; 87
    2540:	ff 4f       	sbci	r31, 0xFF	; 255
    2542:	91 83       	std	Z+1, r25	; 0x01
    2544:	80 83       	st	Z, r24
 UDR0=0x0c; _delay_ms(1);
    2546:	ec e2       	ldi	r30, 0x2C	; 44
    2548:	f0 e0       	ldi	r31, 0x00	; 0
    254a:	8c e0       	ldi	r24, 0x0C	; 12
    254c:	80 83       	st	Z, r24
    254e:	fe 01       	movw	r30, r28
    2550:	eb 55       	subi	r30, 0x5B	; 91
    2552:	ff 4f       	sbci	r31, 0xFF	; 255
    2554:	80 e0       	ldi	r24, 0x00	; 0
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	a0 e8       	ldi	r26, 0x80	; 128
    255a:	bf e3       	ldi	r27, 0x3F	; 63
    255c:	80 83       	st	Z, r24
    255e:	91 83       	std	Z+1, r25	; 0x01
    2560:	a2 83       	std	Z+2, r26	; 0x02
    2562:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2564:	8e 01       	movw	r16, r28
    2566:	0f 55       	subi	r16, 0x5F	; 95
    2568:	1f 4f       	sbci	r17, 0xFF	; 255
    256a:	fe 01       	movw	r30, r28
    256c:	eb 55       	subi	r30, 0x5B	; 91
    256e:	ff 4f       	sbci	r31, 0xFF	; 255
    2570:	60 81       	ld	r22, Z
    2572:	71 81       	ldd	r23, Z+1	; 0x01
    2574:	82 81       	ldd	r24, Z+2	; 0x02
    2576:	93 81       	ldd	r25, Z+3	; 0x03
    2578:	20 e0       	ldi	r18, 0x00	; 0
    257a:	30 e0       	ldi	r19, 0x00	; 0
    257c:	4a e7       	ldi	r20, 0x7A	; 122
    257e:	55 e4       	ldi	r21, 0x45	; 69
    2580:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2584:	dc 01       	movw	r26, r24
    2586:	cb 01       	movw	r24, r22
    2588:	f8 01       	movw	r30, r16
    258a:	80 83       	st	Z, r24
    258c:	91 83       	std	Z+1, r25	; 0x01
    258e:	a2 83       	std	Z+2, r26	; 0x02
    2590:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2592:	fe 01       	movw	r30, r28
    2594:	ef 55       	subi	r30, 0x5F	; 95
    2596:	ff 4f       	sbci	r31, 0xFF	; 255
    2598:	60 81       	ld	r22, Z
    259a:	71 81       	ldd	r23, Z+1	; 0x01
    259c:	82 81       	ldd	r24, Z+2	; 0x02
    259e:	93 81       	ldd	r25, Z+3	; 0x03
    25a0:	20 e0       	ldi	r18, 0x00	; 0
    25a2:	30 e0       	ldi	r19, 0x00	; 0
    25a4:	40 e8       	ldi	r20, 0x80	; 128
    25a6:	5f e3       	ldi	r21, 0x3F	; 63
    25a8:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    25ac:	88 23       	and	r24, r24
    25ae:	44 f4       	brge	.+16     	; 0x25c0 <call_img+0x4f4>
		__ticks = 1;
    25b0:	fe 01       	movw	r30, r28
    25b2:	e1 56       	subi	r30, 0x61	; 97
    25b4:	ff 4f       	sbci	r31, 0xFF	; 255
    25b6:	81 e0       	ldi	r24, 0x01	; 1
    25b8:	90 e0       	ldi	r25, 0x00	; 0
    25ba:	91 83       	std	Z+1, r25	; 0x01
    25bc:	80 83       	st	Z, r24
    25be:	64 c0       	rjmp	.+200    	; 0x2688 <call_img+0x5bc>
	else if (__tmp > 65535)
    25c0:	fe 01       	movw	r30, r28
    25c2:	ef 55       	subi	r30, 0x5F	; 95
    25c4:	ff 4f       	sbci	r31, 0xFF	; 255
    25c6:	60 81       	ld	r22, Z
    25c8:	71 81       	ldd	r23, Z+1	; 0x01
    25ca:	82 81       	ldd	r24, Z+2	; 0x02
    25cc:	93 81       	ldd	r25, Z+3	; 0x03
    25ce:	20 e0       	ldi	r18, 0x00	; 0
    25d0:	3f ef       	ldi	r19, 0xFF	; 255
    25d2:	4f e7       	ldi	r20, 0x7F	; 127
    25d4:	57 e4       	ldi	r21, 0x47	; 71
    25d6:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    25da:	18 16       	cp	r1, r24
    25dc:	0c f0       	brlt	.+2      	; 0x25e0 <call_img+0x514>
    25de:	43 c0       	rjmp	.+134    	; 0x2666 <call_img+0x59a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25e0:	fe 01       	movw	r30, r28
    25e2:	eb 55       	subi	r30, 0x5B	; 91
    25e4:	ff 4f       	sbci	r31, 0xFF	; 255
    25e6:	60 81       	ld	r22, Z
    25e8:	71 81       	ldd	r23, Z+1	; 0x01
    25ea:	82 81       	ldd	r24, Z+2	; 0x02
    25ec:	93 81       	ldd	r25, Z+3	; 0x03
    25ee:	20 e0       	ldi	r18, 0x00	; 0
    25f0:	30 e0       	ldi	r19, 0x00	; 0
    25f2:	40 e2       	ldi	r20, 0x20	; 32
    25f4:	51 e4       	ldi	r21, 0x41	; 65
    25f6:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    25fa:	dc 01       	movw	r26, r24
    25fc:	cb 01       	movw	r24, r22
    25fe:	8e 01       	movw	r16, r28
    2600:	01 56       	subi	r16, 0x61	; 97
    2602:	1f 4f       	sbci	r17, 0xFF	; 255
    2604:	bc 01       	movw	r22, r24
    2606:	cd 01       	movw	r24, r26
    2608:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    260c:	dc 01       	movw	r26, r24
    260e:	cb 01       	movw	r24, r22
    2610:	f8 01       	movw	r30, r16
    2612:	91 83       	std	Z+1, r25	; 0x01
    2614:	80 83       	st	Z, r24
    2616:	1f c0       	rjmp	.+62     	; 0x2656 <call_img+0x58a>
    2618:	fe 01       	movw	r30, r28
    261a:	e3 56       	subi	r30, 0x63	; 99
    261c:	ff 4f       	sbci	r31, 0xFF	; 255
    261e:	80 e9       	ldi	r24, 0x90	; 144
    2620:	91 e0       	ldi	r25, 0x01	; 1
    2622:	91 83       	std	Z+1, r25	; 0x01
    2624:	80 83       	st	Z, r24
    2626:	fe 01       	movw	r30, r28
    2628:	e3 56       	subi	r30, 0x63	; 99
    262a:	ff 4f       	sbci	r31, 0xFF	; 255
    262c:	80 81       	ld	r24, Z
    262e:	91 81       	ldd	r25, Z+1	; 0x01
    2630:	01 97       	sbiw	r24, 0x01	; 1
    2632:	f1 f7       	brne	.-4      	; 0x2630 <call_img+0x564>
    2634:	fe 01       	movw	r30, r28
    2636:	e3 56       	subi	r30, 0x63	; 99
    2638:	ff 4f       	sbci	r31, 0xFF	; 255
    263a:	91 83       	std	Z+1, r25	; 0x01
    263c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    263e:	de 01       	movw	r26, r28
    2640:	a1 56       	subi	r26, 0x61	; 97
    2642:	bf 4f       	sbci	r27, 0xFF	; 255
    2644:	fe 01       	movw	r30, r28
    2646:	e1 56       	subi	r30, 0x61	; 97
    2648:	ff 4f       	sbci	r31, 0xFF	; 255
    264a:	80 81       	ld	r24, Z
    264c:	91 81       	ldd	r25, Z+1	; 0x01
    264e:	01 97       	sbiw	r24, 0x01	; 1
    2650:	11 96       	adiw	r26, 0x01	; 1
    2652:	9c 93       	st	X, r25
    2654:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2656:	fe 01       	movw	r30, r28
    2658:	e1 56       	subi	r30, 0x61	; 97
    265a:	ff 4f       	sbci	r31, 0xFF	; 255
    265c:	80 81       	ld	r24, Z
    265e:	91 81       	ldd	r25, Z+1	; 0x01
    2660:	00 97       	sbiw	r24, 0x00	; 0
    2662:	d1 f6       	brne	.-76     	; 0x2618 <call_img+0x54c>
    2664:	27 c0       	rjmp	.+78     	; 0x26b4 <call_img+0x5e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2666:	8e 01       	movw	r16, r28
    2668:	01 56       	subi	r16, 0x61	; 97
    266a:	1f 4f       	sbci	r17, 0xFF	; 255
    266c:	fe 01       	movw	r30, r28
    266e:	ef 55       	subi	r30, 0x5F	; 95
    2670:	ff 4f       	sbci	r31, 0xFF	; 255
    2672:	60 81       	ld	r22, Z
    2674:	71 81       	ldd	r23, Z+1	; 0x01
    2676:	82 81       	ldd	r24, Z+2	; 0x02
    2678:	93 81       	ldd	r25, Z+3	; 0x03
    267a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    267e:	dc 01       	movw	r26, r24
    2680:	cb 01       	movw	r24, r22
    2682:	f8 01       	movw	r30, r16
    2684:	91 83       	std	Z+1, r25	; 0x01
    2686:	80 83       	st	Z, r24
    2688:	de 01       	movw	r26, r28
    268a:	a5 56       	subi	r26, 0x65	; 101
    268c:	bf 4f       	sbci	r27, 0xFF	; 255
    268e:	fe 01       	movw	r30, r28
    2690:	e1 56       	subi	r30, 0x61	; 97
    2692:	ff 4f       	sbci	r31, 0xFF	; 255
    2694:	80 81       	ld	r24, Z
    2696:	91 81       	ldd	r25, Z+1	; 0x01
    2698:	8d 93       	st	X+, r24
    269a:	9c 93       	st	X, r25
    269c:	fe 01       	movw	r30, r28
    269e:	e5 56       	subi	r30, 0x65	; 101
    26a0:	ff 4f       	sbci	r31, 0xFF	; 255
    26a2:	80 81       	ld	r24, Z
    26a4:	91 81       	ldd	r25, Z+1	; 0x01
    26a6:	01 97       	sbiw	r24, 0x01	; 1
    26a8:	f1 f7       	brne	.-4      	; 0x26a6 <call_img+0x5da>
    26aa:	fe 01       	movw	r30, r28
    26ac:	e5 56       	subi	r30, 0x65	; 101
    26ae:	ff 4f       	sbci	r31, 0xFF	; 255
    26b0:	91 83       	std	Z+1, r25	; 0x01
    26b2:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    26b4:	ec e2       	ldi	r30, 0x2C	; 44
    26b6:	f0 e0       	ldi	r31, 0x00	; 0
    26b8:	10 82       	st	Z, r1
    26ba:	fe 01       	movw	r30, r28
    26bc:	e9 56       	subi	r30, 0x69	; 105
    26be:	ff 4f       	sbci	r31, 0xFF	; 255
    26c0:	80 e0       	ldi	r24, 0x00	; 0
    26c2:	90 e0       	ldi	r25, 0x00	; 0
    26c4:	a0 e8       	ldi	r26, 0x80	; 128
    26c6:	bf e3       	ldi	r27, 0x3F	; 63
    26c8:	80 83       	st	Z, r24
    26ca:	91 83       	std	Z+1, r25	; 0x01
    26cc:	a2 83       	std	Z+2, r26	; 0x02
    26ce:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26d0:	8e 01       	movw	r16, r28
    26d2:	0d 56       	subi	r16, 0x6D	; 109
    26d4:	1f 4f       	sbci	r17, 0xFF	; 255
    26d6:	fe 01       	movw	r30, r28
    26d8:	e9 56       	subi	r30, 0x69	; 105
    26da:	ff 4f       	sbci	r31, 0xFF	; 255
    26dc:	60 81       	ld	r22, Z
    26de:	71 81       	ldd	r23, Z+1	; 0x01
    26e0:	82 81       	ldd	r24, Z+2	; 0x02
    26e2:	93 81       	ldd	r25, Z+3	; 0x03
    26e4:	20 e0       	ldi	r18, 0x00	; 0
    26e6:	30 e0       	ldi	r19, 0x00	; 0
    26e8:	4a e7       	ldi	r20, 0x7A	; 122
    26ea:	55 e4       	ldi	r21, 0x45	; 69
    26ec:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    26f0:	dc 01       	movw	r26, r24
    26f2:	cb 01       	movw	r24, r22
    26f4:	f8 01       	movw	r30, r16
    26f6:	80 83       	st	Z, r24
    26f8:	91 83       	std	Z+1, r25	; 0x01
    26fa:	a2 83       	std	Z+2, r26	; 0x02
    26fc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26fe:	fe 01       	movw	r30, r28
    2700:	ed 56       	subi	r30, 0x6D	; 109
    2702:	ff 4f       	sbci	r31, 0xFF	; 255
    2704:	60 81       	ld	r22, Z
    2706:	71 81       	ldd	r23, Z+1	; 0x01
    2708:	82 81       	ldd	r24, Z+2	; 0x02
    270a:	93 81       	ldd	r25, Z+3	; 0x03
    270c:	20 e0       	ldi	r18, 0x00	; 0
    270e:	30 e0       	ldi	r19, 0x00	; 0
    2710:	40 e8       	ldi	r20, 0x80	; 128
    2712:	5f e3       	ldi	r21, 0x3F	; 63
    2714:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2718:	88 23       	and	r24, r24
    271a:	44 f4       	brge	.+16     	; 0x272c <call_img+0x660>
		__ticks = 1;
    271c:	fe 01       	movw	r30, r28
    271e:	ef 56       	subi	r30, 0x6F	; 111
    2720:	ff 4f       	sbci	r31, 0xFF	; 255
    2722:	81 e0       	ldi	r24, 0x01	; 1
    2724:	90 e0       	ldi	r25, 0x00	; 0
    2726:	91 83       	std	Z+1, r25	; 0x01
    2728:	80 83       	st	Z, r24
    272a:	64 c0       	rjmp	.+200    	; 0x27f4 <call_img+0x728>
	else if (__tmp > 65535)
    272c:	fe 01       	movw	r30, r28
    272e:	ed 56       	subi	r30, 0x6D	; 109
    2730:	ff 4f       	sbci	r31, 0xFF	; 255
    2732:	60 81       	ld	r22, Z
    2734:	71 81       	ldd	r23, Z+1	; 0x01
    2736:	82 81       	ldd	r24, Z+2	; 0x02
    2738:	93 81       	ldd	r25, Z+3	; 0x03
    273a:	20 e0       	ldi	r18, 0x00	; 0
    273c:	3f ef       	ldi	r19, 0xFF	; 255
    273e:	4f e7       	ldi	r20, 0x7F	; 127
    2740:	57 e4       	ldi	r21, 0x47	; 71
    2742:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2746:	18 16       	cp	r1, r24
    2748:	0c f0       	brlt	.+2      	; 0x274c <call_img+0x680>
    274a:	43 c0       	rjmp	.+134    	; 0x27d2 <call_img+0x706>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    274c:	fe 01       	movw	r30, r28
    274e:	e9 56       	subi	r30, 0x69	; 105
    2750:	ff 4f       	sbci	r31, 0xFF	; 255
    2752:	60 81       	ld	r22, Z
    2754:	71 81       	ldd	r23, Z+1	; 0x01
    2756:	82 81       	ldd	r24, Z+2	; 0x02
    2758:	93 81       	ldd	r25, Z+3	; 0x03
    275a:	20 e0       	ldi	r18, 0x00	; 0
    275c:	30 e0       	ldi	r19, 0x00	; 0
    275e:	40 e2       	ldi	r20, 0x20	; 32
    2760:	51 e4       	ldi	r21, 0x41	; 65
    2762:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2766:	dc 01       	movw	r26, r24
    2768:	cb 01       	movw	r24, r22
    276a:	8e 01       	movw	r16, r28
    276c:	0f 56       	subi	r16, 0x6F	; 111
    276e:	1f 4f       	sbci	r17, 0xFF	; 255
    2770:	bc 01       	movw	r22, r24
    2772:	cd 01       	movw	r24, r26
    2774:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2778:	dc 01       	movw	r26, r24
    277a:	cb 01       	movw	r24, r22
    277c:	f8 01       	movw	r30, r16
    277e:	91 83       	std	Z+1, r25	; 0x01
    2780:	80 83       	st	Z, r24
    2782:	1f c0       	rjmp	.+62     	; 0x27c2 <call_img+0x6f6>
    2784:	fe 01       	movw	r30, r28
    2786:	e1 57       	subi	r30, 0x71	; 113
    2788:	ff 4f       	sbci	r31, 0xFF	; 255
    278a:	80 e9       	ldi	r24, 0x90	; 144
    278c:	91 e0       	ldi	r25, 0x01	; 1
    278e:	91 83       	std	Z+1, r25	; 0x01
    2790:	80 83       	st	Z, r24
    2792:	fe 01       	movw	r30, r28
    2794:	e1 57       	subi	r30, 0x71	; 113
    2796:	ff 4f       	sbci	r31, 0xFF	; 255
    2798:	80 81       	ld	r24, Z
    279a:	91 81       	ldd	r25, Z+1	; 0x01
    279c:	01 97       	sbiw	r24, 0x01	; 1
    279e:	f1 f7       	brne	.-4      	; 0x279c <call_img+0x6d0>
    27a0:	fe 01       	movw	r30, r28
    27a2:	e1 57       	subi	r30, 0x71	; 113
    27a4:	ff 4f       	sbci	r31, 0xFF	; 255
    27a6:	91 83       	std	Z+1, r25	; 0x01
    27a8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27aa:	de 01       	movw	r26, r28
    27ac:	af 56       	subi	r26, 0x6F	; 111
    27ae:	bf 4f       	sbci	r27, 0xFF	; 255
    27b0:	fe 01       	movw	r30, r28
    27b2:	ef 56       	subi	r30, 0x6F	; 111
    27b4:	ff 4f       	sbci	r31, 0xFF	; 255
    27b6:	80 81       	ld	r24, Z
    27b8:	91 81       	ldd	r25, Z+1	; 0x01
    27ba:	01 97       	sbiw	r24, 0x01	; 1
    27bc:	11 96       	adiw	r26, 0x01	; 1
    27be:	9c 93       	st	X, r25
    27c0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27c2:	fe 01       	movw	r30, r28
    27c4:	ef 56       	subi	r30, 0x6F	; 111
    27c6:	ff 4f       	sbci	r31, 0xFF	; 255
    27c8:	80 81       	ld	r24, Z
    27ca:	91 81       	ldd	r25, Z+1	; 0x01
    27cc:	00 97       	sbiw	r24, 0x00	; 0
    27ce:	d1 f6       	brne	.-76     	; 0x2784 <call_img+0x6b8>
    27d0:	27 c0       	rjmp	.+78     	; 0x2820 <call_img+0x754>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27d2:	8e 01       	movw	r16, r28
    27d4:	0f 56       	subi	r16, 0x6F	; 111
    27d6:	1f 4f       	sbci	r17, 0xFF	; 255
    27d8:	fe 01       	movw	r30, r28
    27da:	ed 56       	subi	r30, 0x6D	; 109
    27dc:	ff 4f       	sbci	r31, 0xFF	; 255
    27de:	60 81       	ld	r22, Z
    27e0:	71 81       	ldd	r23, Z+1	; 0x01
    27e2:	82 81       	ldd	r24, Z+2	; 0x02
    27e4:	93 81       	ldd	r25, Z+3	; 0x03
    27e6:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    27ea:	dc 01       	movw	r26, r24
    27ec:	cb 01       	movw	r24, r22
    27ee:	f8 01       	movw	r30, r16
    27f0:	91 83       	std	Z+1, r25	; 0x01
    27f2:	80 83       	st	Z, r24
    27f4:	de 01       	movw	r26, r28
    27f6:	a3 57       	subi	r26, 0x73	; 115
    27f8:	bf 4f       	sbci	r27, 0xFF	; 255
    27fa:	fe 01       	movw	r30, r28
    27fc:	ef 56       	subi	r30, 0x6F	; 111
    27fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2800:	80 81       	ld	r24, Z
    2802:	91 81       	ldd	r25, Z+1	; 0x01
    2804:	8d 93       	st	X+, r24
    2806:	9c 93       	st	X, r25
    2808:	fe 01       	movw	r30, r28
    280a:	e3 57       	subi	r30, 0x73	; 115
    280c:	ff 4f       	sbci	r31, 0xFF	; 255
    280e:	80 81       	ld	r24, Z
    2810:	91 81       	ldd	r25, Z+1	; 0x01
    2812:	01 97       	sbiw	r24, 0x01	; 1
    2814:	f1 f7       	brne	.-4      	; 0x2812 <call_img+0x746>
    2816:	fe 01       	movw	r30, r28
    2818:	e3 57       	subi	r30, 0x73	; 115
    281a:	ff 4f       	sbci	r31, 0xFF	; 255
    281c:	91 83       	std	Z+1, r25	; 0x01
    281e:	80 83       	st	Z, r24
 UDR0=0x0A; _delay_ms(1);
    2820:	ec e2       	ldi	r30, 0x2C	; 44
    2822:	f0 e0       	ldi	r31, 0x00	; 0
    2824:	8a e0       	ldi	r24, 0x0A	; 10
    2826:	80 83       	st	Z, r24
    2828:	fe 01       	movw	r30, r28
    282a:	e7 57       	subi	r30, 0x77	; 119
    282c:	ff 4f       	sbci	r31, 0xFF	; 255
    282e:	80 e0       	ldi	r24, 0x00	; 0
    2830:	90 e0       	ldi	r25, 0x00	; 0
    2832:	a0 e8       	ldi	r26, 0x80	; 128
    2834:	bf e3       	ldi	r27, 0x3F	; 63
    2836:	80 83       	st	Z, r24
    2838:	91 83       	std	Z+1, r25	; 0x01
    283a:	a2 83       	std	Z+2, r26	; 0x02
    283c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    283e:	8e 01       	movw	r16, r28
    2840:	0b 57       	subi	r16, 0x7B	; 123
    2842:	1f 4f       	sbci	r17, 0xFF	; 255
    2844:	fe 01       	movw	r30, r28
    2846:	e7 57       	subi	r30, 0x77	; 119
    2848:	ff 4f       	sbci	r31, 0xFF	; 255
    284a:	60 81       	ld	r22, Z
    284c:	71 81       	ldd	r23, Z+1	; 0x01
    284e:	82 81       	ldd	r24, Z+2	; 0x02
    2850:	93 81       	ldd	r25, Z+3	; 0x03
    2852:	20 e0       	ldi	r18, 0x00	; 0
    2854:	30 e0       	ldi	r19, 0x00	; 0
    2856:	4a e7       	ldi	r20, 0x7A	; 122
    2858:	55 e4       	ldi	r21, 0x45	; 69
    285a:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    285e:	dc 01       	movw	r26, r24
    2860:	cb 01       	movw	r24, r22
    2862:	f8 01       	movw	r30, r16
    2864:	80 83       	st	Z, r24
    2866:	91 83       	std	Z+1, r25	; 0x01
    2868:	a2 83       	std	Z+2, r26	; 0x02
    286a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    286c:	fe 01       	movw	r30, r28
    286e:	eb 57       	subi	r30, 0x7B	; 123
    2870:	ff 4f       	sbci	r31, 0xFF	; 255
    2872:	60 81       	ld	r22, Z
    2874:	71 81       	ldd	r23, Z+1	; 0x01
    2876:	82 81       	ldd	r24, Z+2	; 0x02
    2878:	93 81       	ldd	r25, Z+3	; 0x03
    287a:	20 e0       	ldi	r18, 0x00	; 0
    287c:	30 e0       	ldi	r19, 0x00	; 0
    287e:	40 e8       	ldi	r20, 0x80	; 128
    2880:	5f e3       	ldi	r21, 0x3F	; 63
    2882:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2886:	88 23       	and	r24, r24
    2888:	44 f4       	brge	.+16     	; 0x289a <call_img+0x7ce>
		__ticks = 1;
    288a:	fe 01       	movw	r30, r28
    288c:	ed 57       	subi	r30, 0x7D	; 125
    288e:	ff 4f       	sbci	r31, 0xFF	; 255
    2890:	81 e0       	ldi	r24, 0x01	; 1
    2892:	90 e0       	ldi	r25, 0x00	; 0
    2894:	91 83       	std	Z+1, r25	; 0x01
    2896:	80 83       	st	Z, r24
    2898:	64 c0       	rjmp	.+200    	; 0x2962 <call_img+0x896>
	else if (__tmp > 65535)
    289a:	fe 01       	movw	r30, r28
    289c:	eb 57       	subi	r30, 0x7B	; 123
    289e:	ff 4f       	sbci	r31, 0xFF	; 255
    28a0:	60 81       	ld	r22, Z
    28a2:	71 81       	ldd	r23, Z+1	; 0x01
    28a4:	82 81       	ldd	r24, Z+2	; 0x02
    28a6:	93 81       	ldd	r25, Z+3	; 0x03
    28a8:	20 e0       	ldi	r18, 0x00	; 0
    28aa:	3f ef       	ldi	r19, 0xFF	; 255
    28ac:	4f e7       	ldi	r20, 0x7F	; 127
    28ae:	57 e4       	ldi	r21, 0x47	; 71
    28b0:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    28b4:	18 16       	cp	r1, r24
    28b6:	0c f0       	brlt	.+2      	; 0x28ba <call_img+0x7ee>
    28b8:	43 c0       	rjmp	.+134    	; 0x2940 <call_img+0x874>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28ba:	fe 01       	movw	r30, r28
    28bc:	e7 57       	subi	r30, 0x77	; 119
    28be:	ff 4f       	sbci	r31, 0xFF	; 255
    28c0:	60 81       	ld	r22, Z
    28c2:	71 81       	ldd	r23, Z+1	; 0x01
    28c4:	82 81       	ldd	r24, Z+2	; 0x02
    28c6:	93 81       	ldd	r25, Z+3	; 0x03
    28c8:	20 e0       	ldi	r18, 0x00	; 0
    28ca:	30 e0       	ldi	r19, 0x00	; 0
    28cc:	40 e2       	ldi	r20, 0x20	; 32
    28ce:	51 e4       	ldi	r21, 0x41	; 65
    28d0:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    28d4:	dc 01       	movw	r26, r24
    28d6:	cb 01       	movw	r24, r22
    28d8:	8e 01       	movw	r16, r28
    28da:	0d 57       	subi	r16, 0x7D	; 125
    28dc:	1f 4f       	sbci	r17, 0xFF	; 255
    28de:	bc 01       	movw	r22, r24
    28e0:	cd 01       	movw	r24, r26
    28e2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    28e6:	dc 01       	movw	r26, r24
    28e8:	cb 01       	movw	r24, r22
    28ea:	f8 01       	movw	r30, r16
    28ec:	91 83       	std	Z+1, r25	; 0x01
    28ee:	80 83       	st	Z, r24
    28f0:	1f c0       	rjmp	.+62     	; 0x2930 <call_img+0x864>
    28f2:	fe 01       	movw	r30, r28
    28f4:	ef 57       	subi	r30, 0x7F	; 127
    28f6:	ff 4f       	sbci	r31, 0xFF	; 255
    28f8:	80 e9       	ldi	r24, 0x90	; 144
    28fa:	91 e0       	ldi	r25, 0x01	; 1
    28fc:	91 83       	std	Z+1, r25	; 0x01
    28fe:	80 83       	st	Z, r24
    2900:	fe 01       	movw	r30, r28
    2902:	ef 57       	subi	r30, 0x7F	; 127
    2904:	ff 4f       	sbci	r31, 0xFF	; 255
    2906:	80 81       	ld	r24, Z
    2908:	91 81       	ldd	r25, Z+1	; 0x01
    290a:	01 97       	sbiw	r24, 0x01	; 1
    290c:	f1 f7       	brne	.-4      	; 0x290a <call_img+0x83e>
    290e:	fe 01       	movw	r30, r28
    2910:	ef 57       	subi	r30, 0x7F	; 127
    2912:	ff 4f       	sbci	r31, 0xFF	; 255
    2914:	91 83       	std	Z+1, r25	; 0x01
    2916:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2918:	de 01       	movw	r26, r28
    291a:	ad 57       	subi	r26, 0x7D	; 125
    291c:	bf 4f       	sbci	r27, 0xFF	; 255
    291e:	fe 01       	movw	r30, r28
    2920:	ed 57       	subi	r30, 0x7D	; 125
    2922:	ff 4f       	sbci	r31, 0xFF	; 255
    2924:	80 81       	ld	r24, Z
    2926:	91 81       	ldd	r25, Z+1	; 0x01
    2928:	01 97       	sbiw	r24, 0x01	; 1
    292a:	11 96       	adiw	r26, 0x01	; 1
    292c:	9c 93       	st	X, r25
    292e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2930:	fe 01       	movw	r30, r28
    2932:	ed 57       	subi	r30, 0x7D	; 125
    2934:	ff 4f       	sbci	r31, 0xFF	; 255
    2936:	80 81       	ld	r24, Z
    2938:	91 81       	ldd	r25, Z+1	; 0x01
    293a:	00 97       	sbiw	r24, 0x00	; 0
    293c:	d1 f6       	brne	.-76     	; 0x28f2 <call_img+0x826>
    293e:	27 c0       	rjmp	.+78     	; 0x298e <call_img+0x8c2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2940:	8e 01       	movw	r16, r28
    2942:	0d 57       	subi	r16, 0x7D	; 125
    2944:	1f 4f       	sbci	r17, 0xFF	; 255
    2946:	fe 01       	movw	r30, r28
    2948:	eb 57       	subi	r30, 0x7B	; 123
    294a:	ff 4f       	sbci	r31, 0xFF	; 255
    294c:	60 81       	ld	r22, Z
    294e:	71 81       	ldd	r23, Z+1	; 0x01
    2950:	82 81       	ldd	r24, Z+2	; 0x02
    2952:	93 81       	ldd	r25, Z+3	; 0x03
    2954:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2958:	dc 01       	movw	r26, r24
    295a:	cb 01       	movw	r24, r22
    295c:	f8 01       	movw	r30, r16
    295e:	91 83       	std	Z+1, r25	; 0x01
    2960:	80 83       	st	Z, r24
    2962:	de 01       	movw	r26, r28
    2964:	a1 58       	subi	r26, 0x81	; 129
    2966:	bf 4f       	sbci	r27, 0xFF	; 255
    2968:	fe 01       	movw	r30, r28
    296a:	ed 57       	subi	r30, 0x7D	; 125
    296c:	ff 4f       	sbci	r31, 0xFF	; 255
    296e:	80 81       	ld	r24, Z
    2970:	91 81       	ldd	r25, Z+1	; 0x01
    2972:	8d 93       	st	X+, r24
    2974:	9c 93       	st	X, r25
    2976:	fe 01       	movw	r30, r28
    2978:	e1 58       	subi	r30, 0x81	; 129
    297a:	ff 4f       	sbci	r31, 0xFF	; 255
    297c:	80 81       	ld	r24, Z
    297e:	91 81       	ldd	r25, Z+1	; 0x01
    2980:	01 97       	sbiw	r24, 0x01	; 1
    2982:	f1 f7       	brne	.-4      	; 0x2980 <call_img+0x8b4>
    2984:	fe 01       	movw	r30, r28
    2986:	e1 58       	subi	r30, 0x81	; 129
    2988:	ff 4f       	sbci	r31, 0xFF	; 255
    298a:	91 83       	std	Z+1, r25	; 0x01
    298c:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    298e:	ec e2       	ldi	r30, 0x2C	; 44
    2990:	f0 e0       	ldi	r31, 0x00	; 0
    2992:	10 82       	st	Z, r1
    2994:	fe 01       	movw	r30, r28
    2996:	e5 58       	subi	r30, 0x85	; 133
    2998:	ff 4f       	sbci	r31, 0xFF	; 255
    299a:	80 e0       	ldi	r24, 0x00	; 0
    299c:	90 e0       	ldi	r25, 0x00	; 0
    299e:	a0 e8       	ldi	r26, 0x80	; 128
    29a0:	bf e3       	ldi	r27, 0x3F	; 63
    29a2:	80 83       	st	Z, r24
    29a4:	91 83       	std	Z+1, r25	; 0x01
    29a6:	a2 83       	std	Z+2, r26	; 0x02
    29a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29aa:	8e 01       	movw	r16, r28
    29ac:	09 58       	subi	r16, 0x89	; 137
    29ae:	1f 4f       	sbci	r17, 0xFF	; 255
    29b0:	fe 01       	movw	r30, r28
    29b2:	e5 58       	subi	r30, 0x85	; 133
    29b4:	ff 4f       	sbci	r31, 0xFF	; 255
    29b6:	60 81       	ld	r22, Z
    29b8:	71 81       	ldd	r23, Z+1	; 0x01
    29ba:	82 81       	ldd	r24, Z+2	; 0x02
    29bc:	93 81       	ldd	r25, Z+3	; 0x03
    29be:	20 e0       	ldi	r18, 0x00	; 0
    29c0:	30 e0       	ldi	r19, 0x00	; 0
    29c2:	4a e7       	ldi	r20, 0x7A	; 122
    29c4:	55 e4       	ldi	r21, 0x45	; 69
    29c6:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    29ca:	dc 01       	movw	r26, r24
    29cc:	cb 01       	movw	r24, r22
    29ce:	f8 01       	movw	r30, r16
    29d0:	80 83       	st	Z, r24
    29d2:	91 83       	std	Z+1, r25	; 0x01
    29d4:	a2 83       	std	Z+2, r26	; 0x02
    29d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29d8:	fe 01       	movw	r30, r28
    29da:	e9 58       	subi	r30, 0x89	; 137
    29dc:	ff 4f       	sbci	r31, 0xFF	; 255
    29de:	60 81       	ld	r22, Z
    29e0:	71 81       	ldd	r23, Z+1	; 0x01
    29e2:	82 81       	ldd	r24, Z+2	; 0x02
    29e4:	93 81       	ldd	r25, Z+3	; 0x03
    29e6:	20 e0       	ldi	r18, 0x00	; 0
    29e8:	30 e0       	ldi	r19, 0x00	; 0
    29ea:	40 e8       	ldi	r20, 0x80	; 128
    29ec:	5f e3       	ldi	r21, 0x3F	; 63
    29ee:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    29f2:	88 23       	and	r24, r24
    29f4:	44 f4       	brge	.+16     	; 0x2a06 <call_img+0x93a>
		__ticks = 1;
    29f6:	fe 01       	movw	r30, r28
    29f8:	eb 58       	subi	r30, 0x8B	; 139
    29fa:	ff 4f       	sbci	r31, 0xFF	; 255
    29fc:	81 e0       	ldi	r24, 0x01	; 1
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	91 83       	std	Z+1, r25	; 0x01
    2a02:	80 83       	st	Z, r24
    2a04:	64 c0       	rjmp	.+200    	; 0x2ace <call_img+0xa02>
	else if (__tmp > 65535)
    2a06:	fe 01       	movw	r30, r28
    2a08:	e9 58       	subi	r30, 0x89	; 137
    2a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0c:	60 81       	ld	r22, Z
    2a0e:	71 81       	ldd	r23, Z+1	; 0x01
    2a10:	82 81       	ldd	r24, Z+2	; 0x02
    2a12:	93 81       	ldd	r25, Z+3	; 0x03
    2a14:	20 e0       	ldi	r18, 0x00	; 0
    2a16:	3f ef       	ldi	r19, 0xFF	; 255
    2a18:	4f e7       	ldi	r20, 0x7F	; 127
    2a1a:	57 e4       	ldi	r21, 0x47	; 71
    2a1c:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2a20:	18 16       	cp	r1, r24
    2a22:	0c f0       	brlt	.+2      	; 0x2a26 <call_img+0x95a>
    2a24:	43 c0       	rjmp	.+134    	; 0x2aac <call_img+0x9e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a26:	fe 01       	movw	r30, r28
    2a28:	e5 58       	subi	r30, 0x85	; 133
    2a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2c:	60 81       	ld	r22, Z
    2a2e:	71 81       	ldd	r23, Z+1	; 0x01
    2a30:	82 81       	ldd	r24, Z+2	; 0x02
    2a32:	93 81       	ldd	r25, Z+3	; 0x03
    2a34:	20 e0       	ldi	r18, 0x00	; 0
    2a36:	30 e0       	ldi	r19, 0x00	; 0
    2a38:	40 e2       	ldi	r20, 0x20	; 32
    2a3a:	51 e4       	ldi	r21, 0x41	; 65
    2a3c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2a40:	dc 01       	movw	r26, r24
    2a42:	cb 01       	movw	r24, r22
    2a44:	8e 01       	movw	r16, r28
    2a46:	0b 58       	subi	r16, 0x8B	; 139
    2a48:	1f 4f       	sbci	r17, 0xFF	; 255
    2a4a:	bc 01       	movw	r22, r24
    2a4c:	cd 01       	movw	r24, r26
    2a4e:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2a52:	dc 01       	movw	r26, r24
    2a54:	cb 01       	movw	r24, r22
    2a56:	f8 01       	movw	r30, r16
    2a58:	91 83       	std	Z+1, r25	; 0x01
    2a5a:	80 83       	st	Z, r24
    2a5c:	1f c0       	rjmp	.+62     	; 0x2a9c <call_img+0x9d0>
    2a5e:	fe 01       	movw	r30, r28
    2a60:	ed 58       	subi	r30, 0x8D	; 141
    2a62:	ff 4f       	sbci	r31, 0xFF	; 255
    2a64:	80 e9       	ldi	r24, 0x90	; 144
    2a66:	91 e0       	ldi	r25, 0x01	; 1
    2a68:	91 83       	std	Z+1, r25	; 0x01
    2a6a:	80 83       	st	Z, r24
    2a6c:	fe 01       	movw	r30, r28
    2a6e:	ed 58       	subi	r30, 0x8D	; 141
    2a70:	ff 4f       	sbci	r31, 0xFF	; 255
    2a72:	80 81       	ld	r24, Z
    2a74:	91 81       	ldd	r25, Z+1	; 0x01
    2a76:	01 97       	sbiw	r24, 0x01	; 1
    2a78:	f1 f7       	brne	.-4      	; 0x2a76 <call_img+0x9aa>
    2a7a:	fe 01       	movw	r30, r28
    2a7c:	ed 58       	subi	r30, 0x8D	; 141
    2a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a80:	91 83       	std	Z+1, r25	; 0x01
    2a82:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a84:	de 01       	movw	r26, r28
    2a86:	ab 58       	subi	r26, 0x8B	; 139
    2a88:	bf 4f       	sbci	r27, 0xFF	; 255
    2a8a:	fe 01       	movw	r30, r28
    2a8c:	eb 58       	subi	r30, 0x8B	; 139
    2a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a90:	80 81       	ld	r24, Z
    2a92:	91 81       	ldd	r25, Z+1	; 0x01
    2a94:	01 97       	sbiw	r24, 0x01	; 1
    2a96:	11 96       	adiw	r26, 0x01	; 1
    2a98:	9c 93       	st	X, r25
    2a9a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a9c:	fe 01       	movw	r30, r28
    2a9e:	eb 58       	subi	r30, 0x8B	; 139
    2aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa2:	80 81       	ld	r24, Z
    2aa4:	91 81       	ldd	r25, Z+1	; 0x01
    2aa6:	00 97       	sbiw	r24, 0x00	; 0
    2aa8:	d1 f6       	brne	.-76     	; 0x2a5e <call_img+0x992>
    2aaa:	27 c0       	rjmp	.+78     	; 0x2afa <call_img+0xa2e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2aac:	8e 01       	movw	r16, r28
    2aae:	0b 58       	subi	r16, 0x8B	; 139
    2ab0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab2:	fe 01       	movw	r30, r28
    2ab4:	e9 58       	subi	r30, 0x89	; 137
    2ab6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab8:	60 81       	ld	r22, Z
    2aba:	71 81       	ldd	r23, Z+1	; 0x01
    2abc:	82 81       	ldd	r24, Z+2	; 0x02
    2abe:	93 81       	ldd	r25, Z+3	; 0x03
    2ac0:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2ac4:	dc 01       	movw	r26, r24
    2ac6:	cb 01       	movw	r24, r22
    2ac8:	f8 01       	movw	r30, r16
    2aca:	91 83       	std	Z+1, r25	; 0x01
    2acc:	80 83       	st	Z, r24
    2ace:	de 01       	movw	r26, r28
    2ad0:	af 58       	subi	r26, 0x8F	; 143
    2ad2:	bf 4f       	sbci	r27, 0xFF	; 255
    2ad4:	fe 01       	movw	r30, r28
    2ad6:	eb 58       	subi	r30, 0x8B	; 139
    2ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    2ada:	80 81       	ld	r24, Z
    2adc:	91 81       	ldd	r25, Z+1	; 0x01
    2ade:	8d 93       	st	X+, r24
    2ae0:	9c 93       	st	X, r25
    2ae2:	fe 01       	movw	r30, r28
    2ae4:	ef 58       	subi	r30, 0x8F	; 143
    2ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae8:	80 81       	ld	r24, Z
    2aea:	91 81       	ldd	r25, Z+1	; 0x01
    2aec:	01 97       	sbiw	r24, 0x01	; 1
    2aee:	f1 f7       	brne	.-4      	; 0x2aec <call_img+0xa20>
    2af0:	fe 01       	movw	r30, r28
    2af2:	ef 58       	subi	r30, 0x8F	; 143
    2af4:	ff 4f       	sbci	r31, 0xFF	; 255
    2af6:	91 83       	std	Z+1, r25	; 0x01
    2af8:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2afa:	ec e2       	ldi	r30, 0x2C	; 44
    2afc:	f0 e0       	ldi	r31, 0x00	; 0
    2afe:	10 82       	st	Z, r1
    2b00:	fe 01       	movw	r30, r28
    2b02:	e3 59       	subi	r30, 0x93	; 147
    2b04:	ff 4f       	sbci	r31, 0xFF	; 255
    2b06:	80 e0       	ldi	r24, 0x00	; 0
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	a0 e8       	ldi	r26, 0x80	; 128
    2b0c:	bf e3       	ldi	r27, 0x3F	; 63
    2b0e:	80 83       	st	Z, r24
    2b10:	91 83       	std	Z+1, r25	; 0x01
    2b12:	a2 83       	std	Z+2, r26	; 0x02
    2b14:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b16:	8e 01       	movw	r16, r28
    2b18:	07 59       	subi	r16, 0x97	; 151
    2b1a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b1c:	fe 01       	movw	r30, r28
    2b1e:	e3 59       	subi	r30, 0x93	; 147
    2b20:	ff 4f       	sbci	r31, 0xFF	; 255
    2b22:	60 81       	ld	r22, Z
    2b24:	71 81       	ldd	r23, Z+1	; 0x01
    2b26:	82 81       	ldd	r24, Z+2	; 0x02
    2b28:	93 81       	ldd	r25, Z+3	; 0x03
    2b2a:	20 e0       	ldi	r18, 0x00	; 0
    2b2c:	30 e0       	ldi	r19, 0x00	; 0
    2b2e:	4a e7       	ldi	r20, 0x7A	; 122
    2b30:	55 e4       	ldi	r21, 0x45	; 69
    2b32:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2b36:	dc 01       	movw	r26, r24
    2b38:	cb 01       	movw	r24, r22
    2b3a:	f8 01       	movw	r30, r16
    2b3c:	80 83       	st	Z, r24
    2b3e:	91 83       	std	Z+1, r25	; 0x01
    2b40:	a2 83       	std	Z+2, r26	; 0x02
    2b42:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b44:	fe 01       	movw	r30, r28
    2b46:	e7 59       	subi	r30, 0x97	; 151
    2b48:	ff 4f       	sbci	r31, 0xFF	; 255
    2b4a:	60 81       	ld	r22, Z
    2b4c:	71 81       	ldd	r23, Z+1	; 0x01
    2b4e:	82 81       	ldd	r24, Z+2	; 0x02
    2b50:	93 81       	ldd	r25, Z+3	; 0x03
    2b52:	20 e0       	ldi	r18, 0x00	; 0
    2b54:	30 e0       	ldi	r19, 0x00	; 0
    2b56:	40 e8       	ldi	r20, 0x80	; 128
    2b58:	5f e3       	ldi	r21, 0x3F	; 63
    2b5a:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2b5e:	88 23       	and	r24, r24
    2b60:	44 f4       	brge	.+16     	; 0x2b72 <call_img+0xaa6>
		__ticks = 1;
    2b62:	fe 01       	movw	r30, r28
    2b64:	e9 59       	subi	r30, 0x99	; 153
    2b66:	ff 4f       	sbci	r31, 0xFF	; 255
    2b68:	81 e0       	ldi	r24, 0x01	; 1
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	91 83       	std	Z+1, r25	; 0x01
    2b6e:	80 83       	st	Z, r24
    2b70:	64 c0       	rjmp	.+200    	; 0x2c3a <call_img+0xb6e>
	else if (__tmp > 65535)
    2b72:	fe 01       	movw	r30, r28
    2b74:	e7 59       	subi	r30, 0x97	; 151
    2b76:	ff 4f       	sbci	r31, 0xFF	; 255
    2b78:	60 81       	ld	r22, Z
    2b7a:	71 81       	ldd	r23, Z+1	; 0x01
    2b7c:	82 81       	ldd	r24, Z+2	; 0x02
    2b7e:	93 81       	ldd	r25, Z+3	; 0x03
    2b80:	20 e0       	ldi	r18, 0x00	; 0
    2b82:	3f ef       	ldi	r19, 0xFF	; 255
    2b84:	4f e7       	ldi	r20, 0x7F	; 127
    2b86:	57 e4       	ldi	r21, 0x47	; 71
    2b88:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2b8c:	18 16       	cp	r1, r24
    2b8e:	0c f0       	brlt	.+2      	; 0x2b92 <call_img+0xac6>
    2b90:	43 c0       	rjmp	.+134    	; 0x2c18 <call_img+0xb4c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b92:	fe 01       	movw	r30, r28
    2b94:	e3 59       	subi	r30, 0x93	; 147
    2b96:	ff 4f       	sbci	r31, 0xFF	; 255
    2b98:	60 81       	ld	r22, Z
    2b9a:	71 81       	ldd	r23, Z+1	; 0x01
    2b9c:	82 81       	ldd	r24, Z+2	; 0x02
    2b9e:	93 81       	ldd	r25, Z+3	; 0x03
    2ba0:	20 e0       	ldi	r18, 0x00	; 0
    2ba2:	30 e0       	ldi	r19, 0x00	; 0
    2ba4:	40 e2       	ldi	r20, 0x20	; 32
    2ba6:	51 e4       	ldi	r21, 0x41	; 65
    2ba8:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2bac:	dc 01       	movw	r26, r24
    2bae:	cb 01       	movw	r24, r22
    2bb0:	8e 01       	movw	r16, r28
    2bb2:	09 59       	subi	r16, 0x99	; 153
    2bb4:	1f 4f       	sbci	r17, 0xFF	; 255
    2bb6:	bc 01       	movw	r22, r24
    2bb8:	cd 01       	movw	r24, r26
    2bba:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2bbe:	dc 01       	movw	r26, r24
    2bc0:	cb 01       	movw	r24, r22
    2bc2:	f8 01       	movw	r30, r16
    2bc4:	91 83       	std	Z+1, r25	; 0x01
    2bc6:	80 83       	st	Z, r24
    2bc8:	1f c0       	rjmp	.+62     	; 0x2c08 <call_img+0xb3c>
    2bca:	fe 01       	movw	r30, r28
    2bcc:	eb 59       	subi	r30, 0x9B	; 155
    2bce:	ff 4f       	sbci	r31, 0xFF	; 255
    2bd0:	80 e9       	ldi	r24, 0x90	; 144
    2bd2:	91 e0       	ldi	r25, 0x01	; 1
    2bd4:	91 83       	std	Z+1, r25	; 0x01
    2bd6:	80 83       	st	Z, r24
    2bd8:	fe 01       	movw	r30, r28
    2bda:	eb 59       	subi	r30, 0x9B	; 155
    2bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bde:	80 81       	ld	r24, Z
    2be0:	91 81       	ldd	r25, Z+1	; 0x01
    2be2:	01 97       	sbiw	r24, 0x01	; 1
    2be4:	f1 f7       	brne	.-4      	; 0x2be2 <call_img+0xb16>
    2be6:	fe 01       	movw	r30, r28
    2be8:	eb 59       	subi	r30, 0x9B	; 155
    2bea:	ff 4f       	sbci	r31, 0xFF	; 255
    2bec:	91 83       	std	Z+1, r25	; 0x01
    2bee:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bf0:	de 01       	movw	r26, r28
    2bf2:	a9 59       	subi	r26, 0x99	; 153
    2bf4:	bf 4f       	sbci	r27, 0xFF	; 255
    2bf6:	fe 01       	movw	r30, r28
    2bf8:	e9 59       	subi	r30, 0x99	; 153
    2bfa:	ff 4f       	sbci	r31, 0xFF	; 255
    2bfc:	80 81       	ld	r24, Z
    2bfe:	91 81       	ldd	r25, Z+1	; 0x01
    2c00:	01 97       	sbiw	r24, 0x01	; 1
    2c02:	11 96       	adiw	r26, 0x01	; 1
    2c04:	9c 93       	st	X, r25
    2c06:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c08:	fe 01       	movw	r30, r28
    2c0a:	e9 59       	subi	r30, 0x99	; 153
    2c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c0e:	80 81       	ld	r24, Z
    2c10:	91 81       	ldd	r25, Z+1	; 0x01
    2c12:	00 97       	sbiw	r24, 0x00	; 0
    2c14:	d1 f6       	brne	.-76     	; 0x2bca <call_img+0xafe>
    2c16:	27 c0       	rjmp	.+78     	; 0x2c66 <call_img+0xb9a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c18:	8e 01       	movw	r16, r28
    2c1a:	09 59       	subi	r16, 0x99	; 153
    2c1c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c1e:	fe 01       	movw	r30, r28
    2c20:	e7 59       	subi	r30, 0x97	; 151
    2c22:	ff 4f       	sbci	r31, 0xFF	; 255
    2c24:	60 81       	ld	r22, Z
    2c26:	71 81       	ldd	r23, Z+1	; 0x01
    2c28:	82 81       	ldd	r24, Z+2	; 0x02
    2c2a:	93 81       	ldd	r25, Z+3	; 0x03
    2c2c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2c30:	dc 01       	movw	r26, r24
    2c32:	cb 01       	movw	r24, r22
    2c34:	f8 01       	movw	r30, r16
    2c36:	91 83       	std	Z+1, r25	; 0x01
    2c38:	80 83       	st	Z, r24
    2c3a:	de 01       	movw	r26, r28
    2c3c:	ad 59       	subi	r26, 0x9D	; 157
    2c3e:	bf 4f       	sbci	r27, 0xFF	; 255
    2c40:	fe 01       	movw	r30, r28
    2c42:	e9 59       	subi	r30, 0x99	; 153
    2c44:	ff 4f       	sbci	r31, 0xFF	; 255
    2c46:	80 81       	ld	r24, Z
    2c48:	91 81       	ldd	r25, Z+1	; 0x01
    2c4a:	8d 93       	st	X+, r24
    2c4c:	9c 93       	st	X, r25
    2c4e:	fe 01       	movw	r30, r28
    2c50:	ed 59       	subi	r30, 0x9D	; 157
    2c52:	ff 4f       	sbci	r31, 0xFF	; 255
    2c54:	80 81       	ld	r24, Z
    2c56:	91 81       	ldd	r25, Z+1	; 0x01
    2c58:	01 97       	sbiw	r24, 0x01	; 1
    2c5a:	f1 f7       	brne	.-4      	; 0x2c58 <call_img+0xb8c>
    2c5c:	fe 01       	movw	r30, r28
    2c5e:	ed 59       	subi	r30, 0x9D	; 157
    2c60:	ff 4f       	sbci	r31, 0xFF	; 255
    2c62:	91 83       	std	Z+1, r25	; 0x01
    2c64:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2c66:	ec e2       	ldi	r30, 0x2C	; 44
    2c68:	f0 e0       	ldi	r31, 0x00	; 0
    2c6a:	10 82       	st	Z, r1
    2c6c:	fe 01       	movw	r30, r28
    2c6e:	e1 5a       	subi	r30, 0xA1	; 161
    2c70:	ff 4f       	sbci	r31, 0xFF	; 255
    2c72:	80 e0       	ldi	r24, 0x00	; 0
    2c74:	90 e0       	ldi	r25, 0x00	; 0
    2c76:	a0 e8       	ldi	r26, 0x80	; 128
    2c78:	bf e3       	ldi	r27, 0x3F	; 63
    2c7a:	80 83       	st	Z, r24
    2c7c:	91 83       	std	Z+1, r25	; 0x01
    2c7e:	a2 83       	std	Z+2, r26	; 0x02
    2c80:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c82:	8e 01       	movw	r16, r28
    2c84:	05 5a       	subi	r16, 0xA5	; 165
    2c86:	1f 4f       	sbci	r17, 0xFF	; 255
    2c88:	fe 01       	movw	r30, r28
    2c8a:	e1 5a       	subi	r30, 0xA1	; 161
    2c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c8e:	60 81       	ld	r22, Z
    2c90:	71 81       	ldd	r23, Z+1	; 0x01
    2c92:	82 81       	ldd	r24, Z+2	; 0x02
    2c94:	93 81       	ldd	r25, Z+3	; 0x03
    2c96:	20 e0       	ldi	r18, 0x00	; 0
    2c98:	30 e0       	ldi	r19, 0x00	; 0
    2c9a:	4a e7       	ldi	r20, 0x7A	; 122
    2c9c:	55 e4       	ldi	r21, 0x45	; 69
    2c9e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2ca2:	dc 01       	movw	r26, r24
    2ca4:	cb 01       	movw	r24, r22
    2ca6:	f8 01       	movw	r30, r16
    2ca8:	80 83       	st	Z, r24
    2caa:	91 83       	std	Z+1, r25	; 0x01
    2cac:	a2 83       	std	Z+2, r26	; 0x02
    2cae:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2cb0:	fe 01       	movw	r30, r28
    2cb2:	e5 5a       	subi	r30, 0xA5	; 165
    2cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2cb6:	60 81       	ld	r22, Z
    2cb8:	71 81       	ldd	r23, Z+1	; 0x01
    2cba:	82 81       	ldd	r24, Z+2	; 0x02
    2cbc:	93 81       	ldd	r25, Z+3	; 0x03
    2cbe:	20 e0       	ldi	r18, 0x00	; 0
    2cc0:	30 e0       	ldi	r19, 0x00	; 0
    2cc2:	40 e8       	ldi	r20, 0x80	; 128
    2cc4:	5f e3       	ldi	r21, 0x3F	; 63
    2cc6:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2cca:	88 23       	and	r24, r24
    2ccc:	44 f4       	brge	.+16     	; 0x2cde <call_img+0xc12>
		__ticks = 1;
    2cce:	fe 01       	movw	r30, r28
    2cd0:	e7 5a       	subi	r30, 0xA7	; 167
    2cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2cd4:	81 e0       	ldi	r24, 0x01	; 1
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	91 83       	std	Z+1, r25	; 0x01
    2cda:	80 83       	st	Z, r24
    2cdc:	64 c0       	rjmp	.+200    	; 0x2da6 <call_img+0xcda>
	else if (__tmp > 65535)
    2cde:	fe 01       	movw	r30, r28
    2ce0:	e5 5a       	subi	r30, 0xA5	; 165
    2ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce4:	60 81       	ld	r22, Z
    2ce6:	71 81       	ldd	r23, Z+1	; 0x01
    2ce8:	82 81       	ldd	r24, Z+2	; 0x02
    2cea:	93 81       	ldd	r25, Z+3	; 0x03
    2cec:	20 e0       	ldi	r18, 0x00	; 0
    2cee:	3f ef       	ldi	r19, 0xFF	; 255
    2cf0:	4f e7       	ldi	r20, 0x7F	; 127
    2cf2:	57 e4       	ldi	r21, 0x47	; 71
    2cf4:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2cf8:	18 16       	cp	r1, r24
    2cfa:	0c f0       	brlt	.+2      	; 0x2cfe <call_img+0xc32>
    2cfc:	43 c0       	rjmp	.+134    	; 0x2d84 <call_img+0xcb8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cfe:	fe 01       	movw	r30, r28
    2d00:	e1 5a       	subi	r30, 0xA1	; 161
    2d02:	ff 4f       	sbci	r31, 0xFF	; 255
    2d04:	60 81       	ld	r22, Z
    2d06:	71 81       	ldd	r23, Z+1	; 0x01
    2d08:	82 81       	ldd	r24, Z+2	; 0x02
    2d0a:	93 81       	ldd	r25, Z+3	; 0x03
    2d0c:	20 e0       	ldi	r18, 0x00	; 0
    2d0e:	30 e0       	ldi	r19, 0x00	; 0
    2d10:	40 e2       	ldi	r20, 0x20	; 32
    2d12:	51 e4       	ldi	r21, 0x41	; 65
    2d14:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2d18:	dc 01       	movw	r26, r24
    2d1a:	cb 01       	movw	r24, r22
    2d1c:	8e 01       	movw	r16, r28
    2d1e:	07 5a       	subi	r16, 0xA7	; 167
    2d20:	1f 4f       	sbci	r17, 0xFF	; 255
    2d22:	bc 01       	movw	r22, r24
    2d24:	cd 01       	movw	r24, r26
    2d26:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2d2a:	dc 01       	movw	r26, r24
    2d2c:	cb 01       	movw	r24, r22
    2d2e:	f8 01       	movw	r30, r16
    2d30:	91 83       	std	Z+1, r25	; 0x01
    2d32:	80 83       	st	Z, r24
    2d34:	1f c0       	rjmp	.+62     	; 0x2d74 <call_img+0xca8>
    2d36:	fe 01       	movw	r30, r28
    2d38:	e9 5a       	subi	r30, 0xA9	; 169
    2d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d3c:	80 e9       	ldi	r24, 0x90	; 144
    2d3e:	91 e0       	ldi	r25, 0x01	; 1
    2d40:	91 83       	std	Z+1, r25	; 0x01
    2d42:	80 83       	st	Z, r24
    2d44:	fe 01       	movw	r30, r28
    2d46:	e9 5a       	subi	r30, 0xA9	; 169
    2d48:	ff 4f       	sbci	r31, 0xFF	; 255
    2d4a:	80 81       	ld	r24, Z
    2d4c:	91 81       	ldd	r25, Z+1	; 0x01
    2d4e:	01 97       	sbiw	r24, 0x01	; 1
    2d50:	f1 f7       	brne	.-4      	; 0x2d4e <call_img+0xc82>
    2d52:	fe 01       	movw	r30, r28
    2d54:	e9 5a       	subi	r30, 0xA9	; 169
    2d56:	ff 4f       	sbci	r31, 0xFF	; 255
    2d58:	91 83       	std	Z+1, r25	; 0x01
    2d5a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d5c:	de 01       	movw	r26, r28
    2d5e:	a7 5a       	subi	r26, 0xA7	; 167
    2d60:	bf 4f       	sbci	r27, 0xFF	; 255
    2d62:	fe 01       	movw	r30, r28
    2d64:	e7 5a       	subi	r30, 0xA7	; 167
    2d66:	ff 4f       	sbci	r31, 0xFF	; 255
    2d68:	80 81       	ld	r24, Z
    2d6a:	91 81       	ldd	r25, Z+1	; 0x01
    2d6c:	01 97       	sbiw	r24, 0x01	; 1
    2d6e:	11 96       	adiw	r26, 0x01	; 1
    2d70:	9c 93       	st	X, r25
    2d72:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d74:	fe 01       	movw	r30, r28
    2d76:	e7 5a       	subi	r30, 0xA7	; 167
    2d78:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7a:	80 81       	ld	r24, Z
    2d7c:	91 81       	ldd	r25, Z+1	; 0x01
    2d7e:	00 97       	sbiw	r24, 0x00	; 0
    2d80:	d1 f6       	brne	.-76     	; 0x2d36 <call_img+0xc6a>
    2d82:	27 c0       	rjmp	.+78     	; 0x2dd2 <call_img+0xd06>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d84:	8e 01       	movw	r16, r28
    2d86:	07 5a       	subi	r16, 0xA7	; 167
    2d88:	1f 4f       	sbci	r17, 0xFF	; 255
    2d8a:	fe 01       	movw	r30, r28
    2d8c:	e5 5a       	subi	r30, 0xA5	; 165
    2d8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2d90:	60 81       	ld	r22, Z
    2d92:	71 81       	ldd	r23, Z+1	; 0x01
    2d94:	82 81       	ldd	r24, Z+2	; 0x02
    2d96:	93 81       	ldd	r25, Z+3	; 0x03
    2d98:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2d9c:	dc 01       	movw	r26, r24
    2d9e:	cb 01       	movw	r24, r22
    2da0:	f8 01       	movw	r30, r16
    2da2:	91 83       	std	Z+1, r25	; 0x01
    2da4:	80 83       	st	Z, r24
    2da6:	de 01       	movw	r26, r28
    2da8:	ab 5a       	subi	r26, 0xAB	; 171
    2daa:	bf 4f       	sbci	r27, 0xFF	; 255
    2dac:	fe 01       	movw	r30, r28
    2dae:	e7 5a       	subi	r30, 0xA7	; 167
    2db0:	ff 4f       	sbci	r31, 0xFF	; 255
    2db2:	80 81       	ld	r24, Z
    2db4:	91 81       	ldd	r25, Z+1	; 0x01
    2db6:	8d 93       	st	X+, r24
    2db8:	9c 93       	st	X, r25
    2dba:	fe 01       	movw	r30, r28
    2dbc:	eb 5a       	subi	r30, 0xAB	; 171
    2dbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc0:	80 81       	ld	r24, Z
    2dc2:	91 81       	ldd	r25, Z+1	; 0x01
    2dc4:	01 97       	sbiw	r24, 0x01	; 1
    2dc6:	f1 f7       	brne	.-4      	; 0x2dc4 <call_img+0xcf8>
    2dc8:	fe 01       	movw	r30, r28
    2dca:	eb 5a       	subi	r30, 0xAB	; 171
    2dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2dce:	91 83       	std	Z+1, r25	; 0x01
    2dd0:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2dd2:	ec e2       	ldi	r30, 0x2C	; 44
    2dd4:	f0 e0       	ldi	r31, 0x00	; 0
    2dd6:	10 82       	st	Z, r1
    2dd8:	fe 01       	movw	r30, r28
    2dda:	ef 5a       	subi	r30, 0xAF	; 175
    2ddc:	ff 4f       	sbci	r31, 0xFF	; 255
    2dde:	80 e0       	ldi	r24, 0x00	; 0
    2de0:	90 e0       	ldi	r25, 0x00	; 0
    2de2:	a0 e8       	ldi	r26, 0x80	; 128
    2de4:	bf e3       	ldi	r27, 0x3F	; 63
    2de6:	80 83       	st	Z, r24
    2de8:	91 83       	std	Z+1, r25	; 0x01
    2dea:	a2 83       	std	Z+2, r26	; 0x02
    2dec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dee:	8e 01       	movw	r16, r28
    2df0:	03 5b       	subi	r16, 0xB3	; 179
    2df2:	1f 4f       	sbci	r17, 0xFF	; 255
    2df4:	fe 01       	movw	r30, r28
    2df6:	ef 5a       	subi	r30, 0xAF	; 175
    2df8:	ff 4f       	sbci	r31, 0xFF	; 255
    2dfa:	60 81       	ld	r22, Z
    2dfc:	71 81       	ldd	r23, Z+1	; 0x01
    2dfe:	82 81       	ldd	r24, Z+2	; 0x02
    2e00:	93 81       	ldd	r25, Z+3	; 0x03
    2e02:	20 e0       	ldi	r18, 0x00	; 0
    2e04:	30 e0       	ldi	r19, 0x00	; 0
    2e06:	4a e7       	ldi	r20, 0x7A	; 122
    2e08:	55 e4       	ldi	r21, 0x45	; 69
    2e0a:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2e0e:	dc 01       	movw	r26, r24
    2e10:	cb 01       	movw	r24, r22
    2e12:	f8 01       	movw	r30, r16
    2e14:	80 83       	st	Z, r24
    2e16:	91 83       	std	Z+1, r25	; 0x01
    2e18:	a2 83       	std	Z+2, r26	; 0x02
    2e1a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e1c:	fe 01       	movw	r30, r28
    2e1e:	e3 5b       	subi	r30, 0xB3	; 179
    2e20:	ff 4f       	sbci	r31, 0xFF	; 255
    2e22:	60 81       	ld	r22, Z
    2e24:	71 81       	ldd	r23, Z+1	; 0x01
    2e26:	82 81       	ldd	r24, Z+2	; 0x02
    2e28:	93 81       	ldd	r25, Z+3	; 0x03
    2e2a:	20 e0       	ldi	r18, 0x00	; 0
    2e2c:	30 e0       	ldi	r19, 0x00	; 0
    2e2e:	40 e8       	ldi	r20, 0x80	; 128
    2e30:	5f e3       	ldi	r21, 0x3F	; 63
    2e32:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2e36:	88 23       	and	r24, r24
    2e38:	44 f4       	brge	.+16     	; 0x2e4a <call_img+0xd7e>
		__ticks = 1;
    2e3a:	fe 01       	movw	r30, r28
    2e3c:	e5 5b       	subi	r30, 0xB5	; 181
    2e3e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e40:	81 e0       	ldi	r24, 0x01	; 1
    2e42:	90 e0       	ldi	r25, 0x00	; 0
    2e44:	91 83       	std	Z+1, r25	; 0x01
    2e46:	80 83       	st	Z, r24
    2e48:	64 c0       	rjmp	.+200    	; 0x2f12 <call_img+0xe46>
	else if (__tmp > 65535)
    2e4a:	fe 01       	movw	r30, r28
    2e4c:	e3 5b       	subi	r30, 0xB3	; 179
    2e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e50:	60 81       	ld	r22, Z
    2e52:	71 81       	ldd	r23, Z+1	; 0x01
    2e54:	82 81       	ldd	r24, Z+2	; 0x02
    2e56:	93 81       	ldd	r25, Z+3	; 0x03
    2e58:	20 e0       	ldi	r18, 0x00	; 0
    2e5a:	3f ef       	ldi	r19, 0xFF	; 255
    2e5c:	4f e7       	ldi	r20, 0x7F	; 127
    2e5e:	57 e4       	ldi	r21, 0x47	; 71
    2e60:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2e64:	18 16       	cp	r1, r24
    2e66:	0c f0       	brlt	.+2      	; 0x2e6a <call_img+0xd9e>
    2e68:	43 c0       	rjmp	.+134    	; 0x2ef0 <call_img+0xe24>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e6a:	fe 01       	movw	r30, r28
    2e6c:	ef 5a       	subi	r30, 0xAF	; 175
    2e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e70:	60 81       	ld	r22, Z
    2e72:	71 81       	ldd	r23, Z+1	; 0x01
    2e74:	82 81       	ldd	r24, Z+2	; 0x02
    2e76:	93 81       	ldd	r25, Z+3	; 0x03
    2e78:	20 e0       	ldi	r18, 0x00	; 0
    2e7a:	30 e0       	ldi	r19, 0x00	; 0
    2e7c:	40 e2       	ldi	r20, 0x20	; 32
    2e7e:	51 e4       	ldi	r21, 0x41	; 65
    2e80:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2e84:	dc 01       	movw	r26, r24
    2e86:	cb 01       	movw	r24, r22
    2e88:	8e 01       	movw	r16, r28
    2e8a:	05 5b       	subi	r16, 0xB5	; 181
    2e8c:	1f 4f       	sbci	r17, 0xFF	; 255
    2e8e:	bc 01       	movw	r22, r24
    2e90:	cd 01       	movw	r24, r26
    2e92:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2e96:	dc 01       	movw	r26, r24
    2e98:	cb 01       	movw	r24, r22
    2e9a:	f8 01       	movw	r30, r16
    2e9c:	91 83       	std	Z+1, r25	; 0x01
    2e9e:	80 83       	st	Z, r24
    2ea0:	1f c0       	rjmp	.+62     	; 0x2ee0 <call_img+0xe14>
    2ea2:	fe 01       	movw	r30, r28
    2ea4:	e7 5b       	subi	r30, 0xB7	; 183
    2ea6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea8:	80 e9       	ldi	r24, 0x90	; 144
    2eaa:	91 e0       	ldi	r25, 0x01	; 1
    2eac:	91 83       	std	Z+1, r25	; 0x01
    2eae:	80 83       	st	Z, r24
    2eb0:	fe 01       	movw	r30, r28
    2eb2:	e7 5b       	subi	r30, 0xB7	; 183
    2eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb6:	80 81       	ld	r24, Z
    2eb8:	91 81       	ldd	r25, Z+1	; 0x01
    2eba:	01 97       	sbiw	r24, 0x01	; 1
    2ebc:	f1 f7       	brne	.-4      	; 0x2eba <call_img+0xdee>
    2ebe:	fe 01       	movw	r30, r28
    2ec0:	e7 5b       	subi	r30, 0xB7	; 183
    2ec2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec4:	91 83       	std	Z+1, r25	; 0x01
    2ec6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ec8:	de 01       	movw	r26, r28
    2eca:	a5 5b       	subi	r26, 0xB5	; 181
    2ecc:	bf 4f       	sbci	r27, 0xFF	; 255
    2ece:	fe 01       	movw	r30, r28
    2ed0:	e5 5b       	subi	r30, 0xB5	; 181
    2ed2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed4:	80 81       	ld	r24, Z
    2ed6:	91 81       	ldd	r25, Z+1	; 0x01
    2ed8:	01 97       	sbiw	r24, 0x01	; 1
    2eda:	11 96       	adiw	r26, 0x01	; 1
    2edc:	9c 93       	st	X, r25
    2ede:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ee0:	fe 01       	movw	r30, r28
    2ee2:	e5 5b       	subi	r30, 0xB5	; 181
    2ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee6:	80 81       	ld	r24, Z
    2ee8:	91 81       	ldd	r25, Z+1	; 0x01
    2eea:	00 97       	sbiw	r24, 0x00	; 0
    2eec:	d1 f6       	brne	.-76     	; 0x2ea2 <call_img+0xdd6>
    2eee:	27 c0       	rjmp	.+78     	; 0x2f3e <call_img+0xe72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ef0:	8e 01       	movw	r16, r28
    2ef2:	05 5b       	subi	r16, 0xB5	; 181
    2ef4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ef6:	fe 01       	movw	r30, r28
    2ef8:	e3 5b       	subi	r30, 0xB3	; 179
    2efa:	ff 4f       	sbci	r31, 0xFF	; 255
    2efc:	60 81       	ld	r22, Z
    2efe:	71 81       	ldd	r23, Z+1	; 0x01
    2f00:	82 81       	ldd	r24, Z+2	; 0x02
    2f02:	93 81       	ldd	r25, Z+3	; 0x03
    2f04:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2f08:	dc 01       	movw	r26, r24
    2f0a:	cb 01       	movw	r24, r22
    2f0c:	f8 01       	movw	r30, r16
    2f0e:	91 83       	std	Z+1, r25	; 0x01
    2f10:	80 83       	st	Z, r24
    2f12:	de 01       	movw	r26, r28
    2f14:	a9 5b       	subi	r26, 0xB9	; 185
    2f16:	bf 4f       	sbci	r27, 0xFF	; 255
    2f18:	fe 01       	movw	r30, r28
    2f1a:	e5 5b       	subi	r30, 0xB5	; 181
    2f1c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f1e:	80 81       	ld	r24, Z
    2f20:	91 81       	ldd	r25, Z+1	; 0x01
    2f22:	8d 93       	st	X+, r24
    2f24:	9c 93       	st	X, r25
    2f26:	fe 01       	movw	r30, r28
    2f28:	e9 5b       	subi	r30, 0xB9	; 185
    2f2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2c:	80 81       	ld	r24, Z
    2f2e:	91 81       	ldd	r25, Z+1	; 0x01
    2f30:	01 97       	sbiw	r24, 0x01	; 1
    2f32:	f1 f7       	brne	.-4      	; 0x2f30 <call_img+0xe64>
    2f34:	fe 01       	movw	r30, r28
    2f36:	e9 5b       	subi	r30, 0xB9	; 185
    2f38:	ff 4f       	sbci	r31, 0xFF	; 255
    2f3a:	91 83       	std	Z+1, r25	; 0x01
    2f3c:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    2f3e:	ec e2       	ldi	r30, 0x2C	; 44
    2f40:	f0 e0       	ldi	r31, 0x00	; 0
    2f42:	10 82       	st	Z, r1
    2f44:	fe 01       	movw	r30, r28
    2f46:	ed 5b       	subi	r30, 0xBD	; 189
    2f48:	ff 4f       	sbci	r31, 0xFF	; 255
    2f4a:	80 e0       	ldi	r24, 0x00	; 0
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	a0 e8       	ldi	r26, 0x80	; 128
    2f50:	bf e3       	ldi	r27, 0x3F	; 63
    2f52:	80 83       	st	Z, r24
    2f54:	91 83       	std	Z+1, r25	; 0x01
    2f56:	a2 83       	std	Z+2, r26	; 0x02
    2f58:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f5a:	8e 01       	movw	r16, r28
    2f5c:	01 5c       	subi	r16, 0xC1	; 193
    2f5e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f60:	fe 01       	movw	r30, r28
    2f62:	ed 5b       	subi	r30, 0xBD	; 189
    2f64:	ff 4f       	sbci	r31, 0xFF	; 255
    2f66:	60 81       	ld	r22, Z
    2f68:	71 81       	ldd	r23, Z+1	; 0x01
    2f6a:	82 81       	ldd	r24, Z+2	; 0x02
    2f6c:	93 81       	ldd	r25, Z+3	; 0x03
    2f6e:	20 e0       	ldi	r18, 0x00	; 0
    2f70:	30 e0       	ldi	r19, 0x00	; 0
    2f72:	4a e7       	ldi	r20, 0x7A	; 122
    2f74:	55 e4       	ldi	r21, 0x45	; 69
    2f76:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2f7a:	dc 01       	movw	r26, r24
    2f7c:	cb 01       	movw	r24, r22
    2f7e:	f8 01       	movw	r30, r16
    2f80:	80 83       	st	Z, r24
    2f82:	91 83       	std	Z+1, r25	; 0x01
    2f84:	a2 83       	std	Z+2, r26	; 0x02
    2f86:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f88:	fe 01       	movw	r30, r28
    2f8a:	ff 96       	adiw	r30, 0x3f	; 63
    2f8c:	60 81       	ld	r22, Z
    2f8e:	71 81       	ldd	r23, Z+1	; 0x01
    2f90:	82 81       	ldd	r24, Z+2	; 0x02
    2f92:	93 81       	ldd	r25, Z+3	; 0x03
    2f94:	20 e0       	ldi	r18, 0x00	; 0
    2f96:	30 e0       	ldi	r19, 0x00	; 0
    2f98:	40 e8       	ldi	r20, 0x80	; 128
    2f9a:	5f e3       	ldi	r21, 0x3F	; 63
    2f9c:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    2fa0:	88 23       	and	r24, r24
    2fa2:	2c f4       	brge	.+10     	; 0x2fae <call_img+0xee2>
		__ticks = 1;
    2fa4:	81 e0       	ldi	r24, 0x01	; 1
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	9e af       	std	Y+62, r25	; 0x3e
    2faa:	8d af       	std	Y+61, r24	; 0x3d
    2fac:	46 c0       	rjmp	.+140    	; 0x303a <call_img+0xf6e>
	else if (__tmp > 65535)
    2fae:	fe 01       	movw	r30, r28
    2fb0:	ff 96       	adiw	r30, 0x3f	; 63
    2fb2:	60 81       	ld	r22, Z
    2fb4:	71 81       	ldd	r23, Z+1	; 0x01
    2fb6:	82 81       	ldd	r24, Z+2	; 0x02
    2fb8:	93 81       	ldd	r25, Z+3	; 0x03
    2fba:	20 e0       	ldi	r18, 0x00	; 0
    2fbc:	3f ef       	ldi	r19, 0xFF	; 255
    2fbe:	4f e7       	ldi	r20, 0x7F	; 127
    2fc0:	57 e4       	ldi	r21, 0x47	; 71
    2fc2:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    2fc6:	18 16       	cp	r1, r24
    2fc8:	64 f5       	brge	.+88     	; 0x3022 <call_img+0xf56>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fca:	fe 01       	movw	r30, r28
    2fcc:	ed 5b       	subi	r30, 0xBD	; 189
    2fce:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd0:	60 81       	ld	r22, Z
    2fd2:	71 81       	ldd	r23, Z+1	; 0x01
    2fd4:	82 81       	ldd	r24, Z+2	; 0x02
    2fd6:	93 81       	ldd	r25, Z+3	; 0x03
    2fd8:	20 e0       	ldi	r18, 0x00	; 0
    2fda:	30 e0       	ldi	r19, 0x00	; 0
    2fdc:	40 e2       	ldi	r20, 0x20	; 32
    2fde:	51 e4       	ldi	r21, 0x41	; 65
    2fe0:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    2fe4:	dc 01       	movw	r26, r24
    2fe6:	cb 01       	movw	r24, r22
    2fe8:	bc 01       	movw	r22, r24
    2fea:	cd 01       	movw	r24, r26
    2fec:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    2ff0:	dc 01       	movw	r26, r24
    2ff2:	cb 01       	movw	r24, r22
    2ff4:	9e af       	std	Y+62, r25	; 0x3e
    2ff6:	8d af       	std	Y+61, r24	; 0x3d
    2ff8:	0f c0       	rjmp	.+30     	; 0x3018 <call_img+0xf4c>
    2ffa:	80 e9       	ldi	r24, 0x90	; 144
    2ffc:	91 e0       	ldi	r25, 0x01	; 1
    2ffe:	9c af       	std	Y+60, r25	; 0x3c
    3000:	8b af       	std	Y+59, r24	; 0x3b
    3002:	8b ad       	ldd	r24, Y+59	; 0x3b
    3004:	9c ad       	ldd	r25, Y+60	; 0x3c
    3006:	01 97       	sbiw	r24, 0x01	; 1
    3008:	f1 f7       	brne	.-4      	; 0x3006 <call_img+0xf3a>
    300a:	9c af       	std	Y+60, r25	; 0x3c
    300c:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    300e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3010:	9e ad       	ldd	r25, Y+62	; 0x3e
    3012:	01 97       	sbiw	r24, 0x01	; 1
    3014:	9e af       	std	Y+62, r25	; 0x3e
    3016:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3018:	8d ad       	ldd	r24, Y+61	; 0x3d
    301a:	9e ad       	ldd	r25, Y+62	; 0x3e
    301c:	00 97       	sbiw	r24, 0x00	; 0
    301e:	69 f7       	brne	.-38     	; 0x2ffa <call_img+0xf2e>
    3020:	16 c0       	rjmp	.+44     	; 0x304e <call_img+0xf82>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3022:	fe 01       	movw	r30, r28
    3024:	ff 96       	adiw	r30, 0x3f	; 63
    3026:	60 81       	ld	r22, Z
    3028:	71 81       	ldd	r23, Z+1	; 0x01
    302a:	82 81       	ldd	r24, Z+2	; 0x02
    302c:	93 81       	ldd	r25, Z+3	; 0x03
    302e:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3032:	dc 01       	movw	r26, r24
    3034:	cb 01       	movw	r24, r22
    3036:	9e af       	std	Y+62, r25	; 0x3e
    3038:	8d af       	std	Y+61, r24	; 0x3d
    303a:	8d ad       	ldd	r24, Y+61	; 0x3d
    303c:	9e ad       	ldd	r25, Y+62	; 0x3e
    303e:	9a af       	std	Y+58, r25	; 0x3a
    3040:	89 af       	std	Y+57, r24	; 0x39
    3042:	89 ad       	ldd	r24, Y+57	; 0x39
    3044:	9a ad       	ldd	r25, Y+58	; 0x3a
    3046:	01 97       	sbiw	r24, 0x01	; 1
    3048:	f1 f7       	brne	.-4      	; 0x3046 <call_img+0xf7a>
    304a:	9a af       	std	Y+58, r25	; 0x3a
    304c:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x00; _delay_ms(1);
    304e:	ec e2       	ldi	r30, 0x2C	; 44
    3050:	f0 e0       	ldi	r31, 0x00	; 0
    3052:	10 82       	st	Z, r1
    3054:	80 e0       	ldi	r24, 0x00	; 0
    3056:	90 e0       	ldi	r25, 0x00	; 0
    3058:	a0 e8       	ldi	r26, 0x80	; 128
    305a:	bf e3       	ldi	r27, 0x3F	; 63
    305c:	8d ab       	std	Y+53, r24	; 0x35
    305e:	9e ab       	std	Y+54, r25	; 0x36
    3060:	af ab       	std	Y+55, r26	; 0x37
    3062:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3064:	6d a9       	ldd	r22, Y+53	; 0x35
    3066:	7e a9       	ldd	r23, Y+54	; 0x36
    3068:	8f a9       	ldd	r24, Y+55	; 0x37
    306a:	98 ad       	ldd	r25, Y+56	; 0x38
    306c:	20 e0       	ldi	r18, 0x00	; 0
    306e:	30 e0       	ldi	r19, 0x00	; 0
    3070:	4a e7       	ldi	r20, 0x7A	; 122
    3072:	55 e4       	ldi	r21, 0x45	; 69
    3074:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3078:	dc 01       	movw	r26, r24
    307a:	cb 01       	movw	r24, r22
    307c:	89 ab       	std	Y+49, r24	; 0x31
    307e:	9a ab       	std	Y+50, r25	; 0x32
    3080:	ab ab       	std	Y+51, r26	; 0x33
    3082:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3084:	69 a9       	ldd	r22, Y+49	; 0x31
    3086:	7a a9       	ldd	r23, Y+50	; 0x32
    3088:	8b a9       	ldd	r24, Y+51	; 0x33
    308a:	9c a9       	ldd	r25, Y+52	; 0x34
    308c:	20 e0       	ldi	r18, 0x00	; 0
    308e:	30 e0       	ldi	r19, 0x00	; 0
    3090:	40 e8       	ldi	r20, 0x80	; 128
    3092:	5f e3       	ldi	r21, 0x3F	; 63
    3094:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3098:	88 23       	and	r24, r24
    309a:	2c f4       	brge	.+10     	; 0x30a6 <call_img+0xfda>
		__ticks = 1;
    309c:	81 e0       	ldi	r24, 0x01	; 1
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	98 ab       	std	Y+48, r25	; 0x30
    30a2:	8f a7       	std	Y+47, r24	; 0x2f
    30a4:	3f c0       	rjmp	.+126    	; 0x3124 <call_img+0x1058>
	else if (__tmp > 65535)
    30a6:	69 a9       	ldd	r22, Y+49	; 0x31
    30a8:	7a a9       	ldd	r23, Y+50	; 0x32
    30aa:	8b a9       	ldd	r24, Y+51	; 0x33
    30ac:	9c a9       	ldd	r25, Y+52	; 0x34
    30ae:	20 e0       	ldi	r18, 0x00	; 0
    30b0:	3f ef       	ldi	r19, 0xFF	; 255
    30b2:	4f e7       	ldi	r20, 0x7F	; 127
    30b4:	57 e4       	ldi	r21, 0x47	; 71
    30b6:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    30ba:	18 16       	cp	r1, r24
    30bc:	4c f5       	brge	.+82     	; 0x3110 <call_img+0x1044>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30be:	6d a9       	ldd	r22, Y+53	; 0x35
    30c0:	7e a9       	ldd	r23, Y+54	; 0x36
    30c2:	8f a9       	ldd	r24, Y+55	; 0x37
    30c4:	98 ad       	ldd	r25, Y+56	; 0x38
    30c6:	20 e0       	ldi	r18, 0x00	; 0
    30c8:	30 e0       	ldi	r19, 0x00	; 0
    30ca:	40 e2       	ldi	r20, 0x20	; 32
    30cc:	51 e4       	ldi	r21, 0x41	; 65
    30ce:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    30d2:	dc 01       	movw	r26, r24
    30d4:	cb 01       	movw	r24, r22
    30d6:	bc 01       	movw	r22, r24
    30d8:	cd 01       	movw	r24, r26
    30da:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    30de:	dc 01       	movw	r26, r24
    30e0:	cb 01       	movw	r24, r22
    30e2:	98 ab       	std	Y+48, r25	; 0x30
    30e4:	8f a7       	std	Y+47, r24	; 0x2f
    30e6:	0f c0       	rjmp	.+30     	; 0x3106 <call_img+0x103a>
    30e8:	80 e9       	ldi	r24, 0x90	; 144
    30ea:	91 e0       	ldi	r25, 0x01	; 1
    30ec:	9e a7       	std	Y+46, r25	; 0x2e
    30ee:	8d a7       	std	Y+45, r24	; 0x2d
    30f0:	8d a5       	ldd	r24, Y+45	; 0x2d
    30f2:	9e a5       	ldd	r25, Y+46	; 0x2e
    30f4:	01 97       	sbiw	r24, 0x01	; 1
    30f6:	f1 f7       	brne	.-4      	; 0x30f4 <call_img+0x1028>
    30f8:	9e a7       	std	Y+46, r25	; 0x2e
    30fa:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    30fe:	98 a9       	ldd	r25, Y+48	; 0x30
    3100:	01 97       	sbiw	r24, 0x01	; 1
    3102:	98 ab       	std	Y+48, r25	; 0x30
    3104:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3106:	8f a5       	ldd	r24, Y+47	; 0x2f
    3108:	98 a9       	ldd	r25, Y+48	; 0x30
    310a:	00 97       	sbiw	r24, 0x00	; 0
    310c:	69 f7       	brne	.-38     	; 0x30e8 <call_img+0x101c>
    310e:	14 c0       	rjmp	.+40     	; 0x3138 <call_img+0x106c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3110:	69 a9       	ldd	r22, Y+49	; 0x31
    3112:	7a a9       	ldd	r23, Y+50	; 0x32
    3114:	8b a9       	ldd	r24, Y+51	; 0x33
    3116:	9c a9       	ldd	r25, Y+52	; 0x34
    3118:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    311c:	dc 01       	movw	r26, r24
    311e:	cb 01       	movw	r24, r22
    3120:	98 ab       	std	Y+48, r25	; 0x30
    3122:	8f a7       	std	Y+47, r24	; 0x2f
    3124:	8f a5       	ldd	r24, Y+47	; 0x2f
    3126:	98 a9       	ldd	r25, Y+48	; 0x30
    3128:	9c a7       	std	Y+44, r25	; 0x2c
    312a:	8b a7       	std	Y+43, r24	; 0x2b
    312c:	8b a5       	ldd	r24, Y+43	; 0x2b
    312e:	9c a5       	ldd	r25, Y+44	; 0x2c
    3130:	01 97       	sbiw	r24, 0x01	; 1
    3132:	f1 f7       	brne	.-4      	; 0x3130 <call_img+0x1064>
    3134:	9c a7       	std	Y+44, r25	; 0x2c
    3136:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=buff[7]; _delay_ms(1);
    3138:	ec e2       	ldi	r30, 0x2C	; 44
    313a:	f0 e0       	ldi	r31, 0x00	; 0
    313c:	80 91 c0 01 	lds	r24, 0x01C0
    3140:	90 91 c1 01 	lds	r25, 0x01C1
    3144:	80 83       	st	Z, r24
    3146:	80 e0       	ldi	r24, 0x00	; 0
    3148:	90 e0       	ldi	r25, 0x00	; 0
    314a:	a0 e8       	ldi	r26, 0x80	; 128
    314c:	bf e3       	ldi	r27, 0x3F	; 63
    314e:	8f a3       	std	Y+39, r24	; 0x27
    3150:	98 a7       	std	Y+40, r25	; 0x28
    3152:	a9 a7       	std	Y+41, r26	; 0x29
    3154:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3156:	6f a1       	ldd	r22, Y+39	; 0x27
    3158:	78 a5       	ldd	r23, Y+40	; 0x28
    315a:	89 a5       	ldd	r24, Y+41	; 0x29
    315c:	9a a5       	ldd	r25, Y+42	; 0x2a
    315e:	20 e0       	ldi	r18, 0x00	; 0
    3160:	30 e0       	ldi	r19, 0x00	; 0
    3162:	4a e7       	ldi	r20, 0x7A	; 122
    3164:	55 e4       	ldi	r21, 0x45	; 69
    3166:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    316a:	dc 01       	movw	r26, r24
    316c:	cb 01       	movw	r24, r22
    316e:	8b a3       	std	Y+35, r24	; 0x23
    3170:	9c a3       	std	Y+36, r25	; 0x24
    3172:	ad a3       	std	Y+37, r26	; 0x25
    3174:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3176:	6b a1       	ldd	r22, Y+35	; 0x23
    3178:	7c a1       	ldd	r23, Y+36	; 0x24
    317a:	8d a1       	ldd	r24, Y+37	; 0x25
    317c:	9e a1       	ldd	r25, Y+38	; 0x26
    317e:	20 e0       	ldi	r18, 0x00	; 0
    3180:	30 e0       	ldi	r19, 0x00	; 0
    3182:	40 e8       	ldi	r20, 0x80	; 128
    3184:	5f e3       	ldi	r21, 0x3F	; 63
    3186:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    318a:	88 23       	and	r24, r24
    318c:	2c f4       	brge	.+10     	; 0x3198 <call_img+0x10cc>
		__ticks = 1;
    318e:	81 e0       	ldi	r24, 0x01	; 1
    3190:	90 e0       	ldi	r25, 0x00	; 0
    3192:	9a a3       	std	Y+34, r25	; 0x22
    3194:	89 a3       	std	Y+33, r24	; 0x21
    3196:	3f c0       	rjmp	.+126    	; 0x3216 <call_img+0x114a>
	else if (__tmp > 65535)
    3198:	6b a1       	ldd	r22, Y+35	; 0x23
    319a:	7c a1       	ldd	r23, Y+36	; 0x24
    319c:	8d a1       	ldd	r24, Y+37	; 0x25
    319e:	9e a1       	ldd	r25, Y+38	; 0x26
    31a0:	20 e0       	ldi	r18, 0x00	; 0
    31a2:	3f ef       	ldi	r19, 0xFF	; 255
    31a4:	4f e7       	ldi	r20, 0x7F	; 127
    31a6:	57 e4       	ldi	r21, 0x47	; 71
    31a8:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    31ac:	18 16       	cp	r1, r24
    31ae:	4c f5       	brge	.+82     	; 0x3202 <call_img+0x1136>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31b0:	6f a1       	ldd	r22, Y+39	; 0x27
    31b2:	78 a5       	ldd	r23, Y+40	; 0x28
    31b4:	89 a5       	ldd	r24, Y+41	; 0x29
    31b6:	9a a5       	ldd	r25, Y+42	; 0x2a
    31b8:	20 e0       	ldi	r18, 0x00	; 0
    31ba:	30 e0       	ldi	r19, 0x00	; 0
    31bc:	40 e2       	ldi	r20, 0x20	; 32
    31be:	51 e4       	ldi	r21, 0x41	; 65
    31c0:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    31c4:	dc 01       	movw	r26, r24
    31c6:	cb 01       	movw	r24, r22
    31c8:	bc 01       	movw	r22, r24
    31ca:	cd 01       	movw	r24, r26
    31cc:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    31d0:	dc 01       	movw	r26, r24
    31d2:	cb 01       	movw	r24, r22
    31d4:	9a a3       	std	Y+34, r25	; 0x22
    31d6:	89 a3       	std	Y+33, r24	; 0x21
    31d8:	0f c0       	rjmp	.+30     	; 0x31f8 <call_img+0x112c>
    31da:	80 e9       	ldi	r24, 0x90	; 144
    31dc:	91 e0       	ldi	r25, 0x01	; 1
    31de:	98 a3       	std	Y+32, r25	; 0x20
    31e0:	8f 8f       	std	Y+31, r24	; 0x1f
    31e2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    31e4:	98 a1       	ldd	r25, Y+32	; 0x20
    31e6:	01 97       	sbiw	r24, 0x01	; 1
    31e8:	f1 f7       	brne	.-4      	; 0x31e6 <call_img+0x111a>
    31ea:	98 a3       	std	Y+32, r25	; 0x20
    31ec:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31ee:	89 a1       	ldd	r24, Y+33	; 0x21
    31f0:	9a a1       	ldd	r25, Y+34	; 0x22
    31f2:	01 97       	sbiw	r24, 0x01	; 1
    31f4:	9a a3       	std	Y+34, r25	; 0x22
    31f6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31f8:	89 a1       	ldd	r24, Y+33	; 0x21
    31fa:	9a a1       	ldd	r25, Y+34	; 0x22
    31fc:	00 97       	sbiw	r24, 0x00	; 0
    31fe:	69 f7       	brne	.-38     	; 0x31da <call_img+0x110e>
    3200:	14 c0       	rjmp	.+40     	; 0x322a <call_img+0x115e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3202:	6b a1       	ldd	r22, Y+35	; 0x23
    3204:	7c a1       	ldd	r23, Y+36	; 0x24
    3206:	8d a1       	ldd	r24, Y+37	; 0x25
    3208:	9e a1       	ldd	r25, Y+38	; 0x26
    320a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    320e:	dc 01       	movw	r26, r24
    3210:	cb 01       	movw	r24, r22
    3212:	9a a3       	std	Y+34, r25	; 0x22
    3214:	89 a3       	std	Y+33, r24	; 0x21
    3216:	89 a1       	ldd	r24, Y+33	; 0x21
    3218:	9a a1       	ldd	r25, Y+34	; 0x22
    321a:	9e 8f       	std	Y+30, r25	; 0x1e
    321c:	8d 8f       	std	Y+29, r24	; 0x1d
    321e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3220:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3222:	01 97       	sbiw	r24, 0x01	; 1
    3224:	f1 f7       	brne	.-4      	; 0x3222 <call_img+0x1156>
    3226:	9e 8f       	std	Y+30, r25	; 0x1e
    3228:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=buff[8]; _delay_ms(1);
    322a:	ec e2       	ldi	r30, 0x2C	; 44
    322c:	f0 e0       	ldi	r31, 0x00	; 0
    322e:	80 91 c2 01 	lds	r24, 0x01C2
    3232:	90 91 c3 01 	lds	r25, 0x01C3
    3236:	80 83       	st	Z, r24
    3238:	80 e0       	ldi	r24, 0x00	; 0
    323a:	90 e0       	ldi	r25, 0x00	; 0
    323c:	a0 e8       	ldi	r26, 0x80	; 128
    323e:	bf e3       	ldi	r27, 0x3F	; 63
    3240:	89 8f       	std	Y+25, r24	; 0x19
    3242:	9a 8f       	std	Y+26, r25	; 0x1a
    3244:	ab 8f       	std	Y+27, r26	; 0x1b
    3246:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3248:	69 8d       	ldd	r22, Y+25	; 0x19
    324a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    324c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    324e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3250:	20 e0       	ldi	r18, 0x00	; 0
    3252:	30 e0       	ldi	r19, 0x00	; 0
    3254:	4a e7       	ldi	r20, 0x7A	; 122
    3256:	55 e4       	ldi	r21, 0x45	; 69
    3258:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    325c:	dc 01       	movw	r26, r24
    325e:	cb 01       	movw	r24, r22
    3260:	8d 8b       	std	Y+21, r24	; 0x15
    3262:	9e 8b       	std	Y+22, r25	; 0x16
    3264:	af 8b       	std	Y+23, r26	; 0x17
    3266:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3268:	6d 89       	ldd	r22, Y+21	; 0x15
    326a:	7e 89       	ldd	r23, Y+22	; 0x16
    326c:	8f 89       	ldd	r24, Y+23	; 0x17
    326e:	98 8d       	ldd	r25, Y+24	; 0x18
    3270:	20 e0       	ldi	r18, 0x00	; 0
    3272:	30 e0       	ldi	r19, 0x00	; 0
    3274:	40 e8       	ldi	r20, 0x80	; 128
    3276:	5f e3       	ldi	r21, 0x3F	; 63
    3278:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    327c:	88 23       	and	r24, r24
    327e:	2c f4       	brge	.+10     	; 0x328a <call_img+0x11be>
		__ticks = 1;
    3280:	81 e0       	ldi	r24, 0x01	; 1
    3282:	90 e0       	ldi	r25, 0x00	; 0
    3284:	9c 8b       	std	Y+20, r25	; 0x14
    3286:	8b 8b       	std	Y+19, r24	; 0x13
    3288:	3f c0       	rjmp	.+126    	; 0x3308 <call_img+0x123c>
	else if (__tmp > 65535)
    328a:	6d 89       	ldd	r22, Y+21	; 0x15
    328c:	7e 89       	ldd	r23, Y+22	; 0x16
    328e:	8f 89       	ldd	r24, Y+23	; 0x17
    3290:	98 8d       	ldd	r25, Y+24	; 0x18
    3292:	20 e0       	ldi	r18, 0x00	; 0
    3294:	3f ef       	ldi	r19, 0xFF	; 255
    3296:	4f e7       	ldi	r20, 0x7F	; 127
    3298:	57 e4       	ldi	r21, 0x47	; 71
    329a:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    329e:	18 16       	cp	r1, r24
    32a0:	4c f5       	brge	.+82     	; 0x32f4 <call_img+0x1228>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32a2:	69 8d       	ldd	r22, Y+25	; 0x19
    32a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    32a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    32a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    32aa:	20 e0       	ldi	r18, 0x00	; 0
    32ac:	30 e0       	ldi	r19, 0x00	; 0
    32ae:	40 e2       	ldi	r20, 0x20	; 32
    32b0:	51 e4       	ldi	r21, 0x41	; 65
    32b2:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    32b6:	dc 01       	movw	r26, r24
    32b8:	cb 01       	movw	r24, r22
    32ba:	bc 01       	movw	r22, r24
    32bc:	cd 01       	movw	r24, r26
    32be:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    32c2:	dc 01       	movw	r26, r24
    32c4:	cb 01       	movw	r24, r22
    32c6:	9c 8b       	std	Y+20, r25	; 0x14
    32c8:	8b 8b       	std	Y+19, r24	; 0x13
    32ca:	0f c0       	rjmp	.+30     	; 0x32ea <call_img+0x121e>
    32cc:	80 e9       	ldi	r24, 0x90	; 144
    32ce:	91 e0       	ldi	r25, 0x01	; 1
    32d0:	9a 8b       	std	Y+18, r25	; 0x12
    32d2:	89 8b       	std	Y+17, r24	; 0x11
    32d4:	89 89       	ldd	r24, Y+17	; 0x11
    32d6:	9a 89       	ldd	r25, Y+18	; 0x12
    32d8:	01 97       	sbiw	r24, 0x01	; 1
    32da:	f1 f7       	brne	.-4      	; 0x32d8 <call_img+0x120c>
    32dc:	9a 8b       	std	Y+18, r25	; 0x12
    32de:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    32e0:	8b 89       	ldd	r24, Y+19	; 0x13
    32e2:	9c 89       	ldd	r25, Y+20	; 0x14
    32e4:	01 97       	sbiw	r24, 0x01	; 1
    32e6:	9c 8b       	std	Y+20, r25	; 0x14
    32e8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    32ea:	8b 89       	ldd	r24, Y+19	; 0x13
    32ec:	9c 89       	ldd	r25, Y+20	; 0x14
    32ee:	00 97       	sbiw	r24, 0x00	; 0
    32f0:	69 f7       	brne	.-38     	; 0x32cc <call_img+0x1200>
    32f2:	14 c0       	rjmp	.+40     	; 0x331c <call_img+0x1250>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    32f4:	6d 89       	ldd	r22, Y+21	; 0x15
    32f6:	7e 89       	ldd	r23, Y+22	; 0x16
    32f8:	8f 89       	ldd	r24, Y+23	; 0x17
    32fa:	98 8d       	ldd	r25, Y+24	; 0x18
    32fc:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3300:	dc 01       	movw	r26, r24
    3302:	cb 01       	movw	r24, r22
    3304:	9c 8b       	std	Y+20, r25	; 0x14
    3306:	8b 8b       	std	Y+19, r24	; 0x13
    3308:	8b 89       	ldd	r24, Y+19	; 0x13
    330a:	9c 89       	ldd	r25, Y+20	; 0x14
    330c:	98 8b       	std	Y+16, r25	; 0x10
    330e:	8f 87       	std	Y+15, r24	; 0x0f
    3310:	8f 85       	ldd	r24, Y+15	; 0x0f
    3312:	98 89       	ldd	r25, Y+16	; 0x10
    3314:	01 97       	sbiw	r24, 0x01	; 1
    3316:	f1 f7       	brne	.-4      	; 0x3314 <call_img+0x1248>
    3318:	98 8b       	std	Y+16, r25	; 0x10
    331a:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x00; _delay_ms(1);
    331c:	ec e2       	ldi	r30, 0x2C	; 44
    331e:	f0 e0       	ldi	r31, 0x00	; 0
    3320:	10 82       	st	Z, r1
    3322:	80 e0       	ldi	r24, 0x00	; 0
    3324:	90 e0       	ldi	r25, 0x00	; 0
    3326:	a0 e8       	ldi	r26, 0x80	; 128
    3328:	bf e3       	ldi	r27, 0x3F	; 63
    332a:	8b 87       	std	Y+11, r24	; 0x0b
    332c:	9c 87       	std	Y+12, r25	; 0x0c
    332e:	ad 87       	std	Y+13, r26	; 0x0d
    3330:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3332:	6b 85       	ldd	r22, Y+11	; 0x0b
    3334:	7c 85       	ldd	r23, Y+12	; 0x0c
    3336:	8d 85       	ldd	r24, Y+13	; 0x0d
    3338:	9e 85       	ldd	r25, Y+14	; 0x0e
    333a:	20 e0       	ldi	r18, 0x00	; 0
    333c:	30 e0       	ldi	r19, 0x00	; 0
    333e:	4a e7       	ldi	r20, 0x7A	; 122
    3340:	55 e4       	ldi	r21, 0x45	; 69
    3342:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3346:	dc 01       	movw	r26, r24
    3348:	cb 01       	movw	r24, r22
    334a:	8f 83       	std	Y+7, r24	; 0x07
    334c:	98 87       	std	Y+8, r25	; 0x08
    334e:	a9 87       	std	Y+9, r26	; 0x09
    3350:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3352:	6f 81       	ldd	r22, Y+7	; 0x07
    3354:	78 85       	ldd	r23, Y+8	; 0x08
    3356:	89 85       	ldd	r24, Y+9	; 0x09
    3358:	9a 85       	ldd	r25, Y+10	; 0x0a
    335a:	20 e0       	ldi	r18, 0x00	; 0
    335c:	30 e0       	ldi	r19, 0x00	; 0
    335e:	40 e8       	ldi	r20, 0x80	; 128
    3360:	5f e3       	ldi	r21, 0x3F	; 63
    3362:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3366:	88 23       	and	r24, r24
    3368:	2c f4       	brge	.+10     	; 0x3374 <call_img+0x12a8>
		__ticks = 1;
    336a:	81 e0       	ldi	r24, 0x01	; 1
    336c:	90 e0       	ldi	r25, 0x00	; 0
    336e:	9e 83       	std	Y+6, r25	; 0x06
    3370:	8d 83       	std	Y+5, r24	; 0x05
    3372:	3f c0       	rjmp	.+126    	; 0x33f2 <call_img+0x1326>
	else if (__tmp > 65535)
    3374:	6f 81       	ldd	r22, Y+7	; 0x07
    3376:	78 85       	ldd	r23, Y+8	; 0x08
    3378:	89 85       	ldd	r24, Y+9	; 0x09
    337a:	9a 85       	ldd	r25, Y+10	; 0x0a
    337c:	20 e0       	ldi	r18, 0x00	; 0
    337e:	3f ef       	ldi	r19, 0xFF	; 255
    3380:	4f e7       	ldi	r20, 0x7F	; 127
    3382:	57 e4       	ldi	r21, 0x47	; 71
    3384:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3388:	18 16       	cp	r1, r24
    338a:	4c f5       	brge	.+82     	; 0x33de <call_img+0x1312>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    338c:	6b 85       	ldd	r22, Y+11	; 0x0b
    338e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3390:	8d 85       	ldd	r24, Y+13	; 0x0d
    3392:	9e 85       	ldd	r25, Y+14	; 0x0e
    3394:	20 e0       	ldi	r18, 0x00	; 0
    3396:	30 e0       	ldi	r19, 0x00	; 0
    3398:	40 e2       	ldi	r20, 0x20	; 32
    339a:	51 e4       	ldi	r21, 0x41	; 65
    339c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    33a0:	dc 01       	movw	r26, r24
    33a2:	cb 01       	movw	r24, r22
    33a4:	bc 01       	movw	r22, r24
    33a6:	cd 01       	movw	r24, r26
    33a8:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    33ac:	dc 01       	movw	r26, r24
    33ae:	cb 01       	movw	r24, r22
    33b0:	9e 83       	std	Y+6, r25	; 0x06
    33b2:	8d 83       	std	Y+5, r24	; 0x05
    33b4:	0f c0       	rjmp	.+30     	; 0x33d4 <call_img+0x1308>
    33b6:	80 e9       	ldi	r24, 0x90	; 144
    33b8:	91 e0       	ldi	r25, 0x01	; 1
    33ba:	9c 83       	std	Y+4, r25	; 0x04
    33bc:	8b 83       	std	Y+3, r24	; 0x03
    33be:	8b 81       	ldd	r24, Y+3	; 0x03
    33c0:	9c 81       	ldd	r25, Y+4	; 0x04
    33c2:	01 97       	sbiw	r24, 0x01	; 1
    33c4:	f1 f7       	brne	.-4      	; 0x33c2 <call_img+0x12f6>
    33c6:	9c 83       	std	Y+4, r25	; 0x04
    33c8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33ca:	8d 81       	ldd	r24, Y+5	; 0x05
    33cc:	9e 81       	ldd	r25, Y+6	; 0x06
    33ce:	01 97       	sbiw	r24, 0x01	; 1
    33d0:	9e 83       	std	Y+6, r25	; 0x06
    33d2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33d4:	8d 81       	ldd	r24, Y+5	; 0x05
    33d6:	9e 81       	ldd	r25, Y+6	; 0x06
    33d8:	00 97       	sbiw	r24, 0x00	; 0
    33da:	69 f7       	brne	.-38     	; 0x33b6 <call_img+0x12ea>
    33dc:	14 c0       	rjmp	.+40     	; 0x3406 <call_img+0x133a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33de:	6f 81       	ldd	r22, Y+7	; 0x07
    33e0:	78 85       	ldd	r23, Y+8	; 0x08
    33e2:	89 85       	ldd	r24, Y+9	; 0x09
    33e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    33e6:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    33ea:	dc 01       	movw	r26, r24
    33ec:	cb 01       	movw	r24, r22
    33ee:	9e 83       	std	Y+6, r25	; 0x06
    33f0:	8d 83       	std	Y+5, r24	; 0x05
    33f2:	8d 81       	ldd	r24, Y+5	; 0x05
    33f4:	9e 81       	ldd	r25, Y+6	; 0x06
    33f6:	9a 83       	std	Y+2, r25	; 0x02
    33f8:	89 83       	std	Y+1, r24	; 0x01
    33fa:	89 81       	ldd	r24, Y+1	; 0x01
    33fc:	9a 81       	ldd	r25, Y+2	; 0x02
    33fe:	01 97       	sbiw	r24, 0x01	; 1
    3400:	f1 f7       	brne	.-4      	; 0x33fe <call_img+0x1332>
    3402:	9a 83       	std	Y+2, r25	; 0x02
    3404:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x0A;
    3406:	ec e2       	ldi	r30, 0x2C	; 44
    3408:	f0 e0       	ldi	r31, 0x00	; 0
    340a:	8a e0       	ldi	r24, 0x0A	; 10
    340c:	80 83       	st	Z, r24
}
    340e:	ce 52       	subi	r28, 0x2E	; 46
    3410:	df 4f       	sbci	r29, 0xFF	; 255
    3412:	0f b6       	in	r0, 0x3f	; 63
    3414:	f8 94       	cli
    3416:	de bf       	out	0x3e, r29	; 62
    3418:	0f be       	out	0x3f, r0	; 63
    341a:	cd bf       	out	0x3d, r28	; 61
    341c:	cf 91       	pop	r28
    341e:	df 91       	pop	r29
    3420:	1f 91       	pop	r17
    3422:	0f 91       	pop	r16
    3424:	08 95       	ret

00003426 <zip>:
 
void zip(){
    3426:	0f 93       	push	r16
    3428:	1f 93       	push	r17
    342a:	df 93       	push	r29
    342c:	cf 93       	push	r28
    342e:	cd b7       	in	r28, 0x3d	; 61
    3430:	de b7       	in	r29, 0x3e	; 62
    3432:	c0 57       	subi	r28, 0x70	; 112
    3434:	d0 40       	sbci	r29, 0x00	; 0
    3436:	0f b6       	in	r0, 0x3f	; 63
    3438:	f8 94       	cli
    343a:	de bf       	out	0x3e, r29	; 62
    343c:	0f be       	out	0x3f, r0	; 63
    343e:	cd bf       	out	0x3d, r28	; 61
 printf("\r\nZIP  ");
    3440:	00 d0       	rcall	.+0      	; 0x3442 <zip+0x1c>
    3442:	ed b7       	in	r30, 0x3d	; 61
    3444:	fe b7       	in	r31, 0x3e	; 62
    3446:	31 96       	adiw	r30, 0x01	; 1
    3448:	8c e4       	ldi	r24, 0x4C	; 76
    344a:	91 e0       	ldi	r25, 0x01	; 1
    344c:	91 83       	std	Z+1, r25	; 0x01
    344e:	80 83       	st	Z, r24
    3450:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
    3454:	0f 90       	pop	r0
    3456:	0f 90       	pop	r0
 UDR0=0x56; _delay_ms(1);
    3458:	ec e2       	ldi	r30, 0x2C	; 44
    345a:	f0 e0       	ldi	r31, 0x00	; 0
    345c:	86 e5       	ldi	r24, 0x56	; 86
    345e:	80 83       	st	Z, r24
    3460:	fe 01       	movw	r30, r28
    3462:	e3 59       	subi	r30, 0x93	; 147
    3464:	ff 4f       	sbci	r31, 0xFF	; 255
    3466:	80 e0       	ldi	r24, 0x00	; 0
    3468:	90 e0       	ldi	r25, 0x00	; 0
    346a:	a0 e8       	ldi	r26, 0x80	; 128
    346c:	bf e3       	ldi	r27, 0x3F	; 63
    346e:	80 83       	st	Z, r24
    3470:	91 83       	std	Z+1, r25	; 0x01
    3472:	a2 83       	std	Z+2, r26	; 0x02
    3474:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3476:	8e 01       	movw	r16, r28
    3478:	07 59       	subi	r16, 0x97	; 151
    347a:	1f 4f       	sbci	r17, 0xFF	; 255
    347c:	fe 01       	movw	r30, r28
    347e:	e3 59       	subi	r30, 0x93	; 147
    3480:	ff 4f       	sbci	r31, 0xFF	; 255
    3482:	60 81       	ld	r22, Z
    3484:	71 81       	ldd	r23, Z+1	; 0x01
    3486:	82 81       	ldd	r24, Z+2	; 0x02
    3488:	93 81       	ldd	r25, Z+3	; 0x03
    348a:	20 e0       	ldi	r18, 0x00	; 0
    348c:	30 e0       	ldi	r19, 0x00	; 0
    348e:	4a e7       	ldi	r20, 0x7A	; 122
    3490:	55 e4       	ldi	r21, 0x45	; 69
    3492:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3496:	dc 01       	movw	r26, r24
    3498:	cb 01       	movw	r24, r22
    349a:	f8 01       	movw	r30, r16
    349c:	80 83       	st	Z, r24
    349e:	91 83       	std	Z+1, r25	; 0x01
    34a0:	a2 83       	std	Z+2, r26	; 0x02
    34a2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    34a4:	fe 01       	movw	r30, r28
    34a6:	e7 59       	subi	r30, 0x97	; 151
    34a8:	ff 4f       	sbci	r31, 0xFF	; 255
    34aa:	60 81       	ld	r22, Z
    34ac:	71 81       	ldd	r23, Z+1	; 0x01
    34ae:	82 81       	ldd	r24, Z+2	; 0x02
    34b0:	93 81       	ldd	r25, Z+3	; 0x03
    34b2:	20 e0       	ldi	r18, 0x00	; 0
    34b4:	30 e0       	ldi	r19, 0x00	; 0
    34b6:	40 e8       	ldi	r20, 0x80	; 128
    34b8:	5f e3       	ldi	r21, 0x3F	; 63
    34ba:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    34be:	88 23       	and	r24, r24
    34c0:	44 f4       	brge	.+16     	; 0x34d2 <zip+0xac>
		__ticks = 1;
    34c2:	fe 01       	movw	r30, r28
    34c4:	e9 59       	subi	r30, 0x99	; 153
    34c6:	ff 4f       	sbci	r31, 0xFF	; 255
    34c8:	81 e0       	ldi	r24, 0x01	; 1
    34ca:	90 e0       	ldi	r25, 0x00	; 0
    34cc:	91 83       	std	Z+1, r25	; 0x01
    34ce:	80 83       	st	Z, r24
    34d0:	64 c0       	rjmp	.+200    	; 0x359a <zip+0x174>
	else if (__tmp > 65535)
    34d2:	fe 01       	movw	r30, r28
    34d4:	e7 59       	subi	r30, 0x97	; 151
    34d6:	ff 4f       	sbci	r31, 0xFF	; 255
    34d8:	60 81       	ld	r22, Z
    34da:	71 81       	ldd	r23, Z+1	; 0x01
    34dc:	82 81       	ldd	r24, Z+2	; 0x02
    34de:	93 81       	ldd	r25, Z+3	; 0x03
    34e0:	20 e0       	ldi	r18, 0x00	; 0
    34e2:	3f ef       	ldi	r19, 0xFF	; 255
    34e4:	4f e7       	ldi	r20, 0x7F	; 127
    34e6:	57 e4       	ldi	r21, 0x47	; 71
    34e8:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    34ec:	18 16       	cp	r1, r24
    34ee:	0c f0       	brlt	.+2      	; 0x34f2 <zip+0xcc>
    34f0:	43 c0       	rjmp	.+134    	; 0x3578 <zip+0x152>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34f2:	fe 01       	movw	r30, r28
    34f4:	e3 59       	subi	r30, 0x93	; 147
    34f6:	ff 4f       	sbci	r31, 0xFF	; 255
    34f8:	60 81       	ld	r22, Z
    34fa:	71 81       	ldd	r23, Z+1	; 0x01
    34fc:	82 81       	ldd	r24, Z+2	; 0x02
    34fe:	93 81       	ldd	r25, Z+3	; 0x03
    3500:	20 e0       	ldi	r18, 0x00	; 0
    3502:	30 e0       	ldi	r19, 0x00	; 0
    3504:	40 e2       	ldi	r20, 0x20	; 32
    3506:	51 e4       	ldi	r21, 0x41	; 65
    3508:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    350c:	dc 01       	movw	r26, r24
    350e:	cb 01       	movw	r24, r22
    3510:	8e 01       	movw	r16, r28
    3512:	09 59       	subi	r16, 0x99	; 153
    3514:	1f 4f       	sbci	r17, 0xFF	; 255
    3516:	bc 01       	movw	r22, r24
    3518:	cd 01       	movw	r24, r26
    351a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    351e:	dc 01       	movw	r26, r24
    3520:	cb 01       	movw	r24, r22
    3522:	f8 01       	movw	r30, r16
    3524:	91 83       	std	Z+1, r25	; 0x01
    3526:	80 83       	st	Z, r24
    3528:	1f c0       	rjmp	.+62     	; 0x3568 <zip+0x142>
    352a:	fe 01       	movw	r30, r28
    352c:	eb 59       	subi	r30, 0x9B	; 155
    352e:	ff 4f       	sbci	r31, 0xFF	; 255
    3530:	80 e9       	ldi	r24, 0x90	; 144
    3532:	91 e0       	ldi	r25, 0x01	; 1
    3534:	91 83       	std	Z+1, r25	; 0x01
    3536:	80 83       	st	Z, r24
    3538:	fe 01       	movw	r30, r28
    353a:	eb 59       	subi	r30, 0x9B	; 155
    353c:	ff 4f       	sbci	r31, 0xFF	; 255
    353e:	80 81       	ld	r24, Z
    3540:	91 81       	ldd	r25, Z+1	; 0x01
    3542:	01 97       	sbiw	r24, 0x01	; 1
    3544:	f1 f7       	brne	.-4      	; 0x3542 <zip+0x11c>
    3546:	fe 01       	movw	r30, r28
    3548:	eb 59       	subi	r30, 0x9B	; 155
    354a:	ff 4f       	sbci	r31, 0xFF	; 255
    354c:	91 83       	std	Z+1, r25	; 0x01
    354e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3550:	de 01       	movw	r26, r28
    3552:	a9 59       	subi	r26, 0x99	; 153
    3554:	bf 4f       	sbci	r27, 0xFF	; 255
    3556:	fe 01       	movw	r30, r28
    3558:	e9 59       	subi	r30, 0x99	; 153
    355a:	ff 4f       	sbci	r31, 0xFF	; 255
    355c:	80 81       	ld	r24, Z
    355e:	91 81       	ldd	r25, Z+1	; 0x01
    3560:	01 97       	sbiw	r24, 0x01	; 1
    3562:	11 96       	adiw	r26, 0x01	; 1
    3564:	9c 93       	st	X, r25
    3566:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3568:	fe 01       	movw	r30, r28
    356a:	e9 59       	subi	r30, 0x99	; 153
    356c:	ff 4f       	sbci	r31, 0xFF	; 255
    356e:	80 81       	ld	r24, Z
    3570:	91 81       	ldd	r25, Z+1	; 0x01
    3572:	00 97       	sbiw	r24, 0x00	; 0
    3574:	d1 f6       	brne	.-76     	; 0x352a <zip+0x104>
    3576:	27 c0       	rjmp	.+78     	; 0x35c6 <zip+0x1a0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3578:	8e 01       	movw	r16, r28
    357a:	09 59       	subi	r16, 0x99	; 153
    357c:	1f 4f       	sbci	r17, 0xFF	; 255
    357e:	fe 01       	movw	r30, r28
    3580:	e7 59       	subi	r30, 0x97	; 151
    3582:	ff 4f       	sbci	r31, 0xFF	; 255
    3584:	60 81       	ld	r22, Z
    3586:	71 81       	ldd	r23, Z+1	; 0x01
    3588:	82 81       	ldd	r24, Z+2	; 0x02
    358a:	93 81       	ldd	r25, Z+3	; 0x03
    358c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3590:	dc 01       	movw	r26, r24
    3592:	cb 01       	movw	r24, r22
    3594:	f8 01       	movw	r30, r16
    3596:	91 83       	std	Z+1, r25	; 0x01
    3598:	80 83       	st	Z, r24
    359a:	de 01       	movw	r26, r28
    359c:	ad 59       	subi	r26, 0x9D	; 157
    359e:	bf 4f       	sbci	r27, 0xFF	; 255
    35a0:	fe 01       	movw	r30, r28
    35a2:	e9 59       	subi	r30, 0x99	; 153
    35a4:	ff 4f       	sbci	r31, 0xFF	; 255
    35a6:	80 81       	ld	r24, Z
    35a8:	91 81       	ldd	r25, Z+1	; 0x01
    35aa:	8d 93       	st	X+, r24
    35ac:	9c 93       	st	X, r25
    35ae:	fe 01       	movw	r30, r28
    35b0:	ed 59       	subi	r30, 0x9D	; 157
    35b2:	ff 4f       	sbci	r31, 0xFF	; 255
    35b4:	80 81       	ld	r24, Z
    35b6:	91 81       	ldd	r25, Z+1	; 0x01
    35b8:	01 97       	sbiw	r24, 0x01	; 1
    35ba:	f1 f7       	brne	.-4      	; 0x35b8 <zip+0x192>
    35bc:	fe 01       	movw	r30, r28
    35be:	ed 59       	subi	r30, 0x9D	; 157
    35c0:	ff 4f       	sbci	r31, 0xFF	; 255
    35c2:	91 83       	std	Z+1, r25	; 0x01
    35c4:	80 83       	st	Z, r24
 UDR0=0x00; _delay_ms(1);
    35c6:	ec e2       	ldi	r30, 0x2C	; 44
    35c8:	f0 e0       	ldi	r31, 0x00	; 0
    35ca:	10 82       	st	Z, r1
    35cc:	fe 01       	movw	r30, r28
    35ce:	e1 5a       	subi	r30, 0xA1	; 161
    35d0:	ff 4f       	sbci	r31, 0xFF	; 255
    35d2:	80 e0       	ldi	r24, 0x00	; 0
    35d4:	90 e0       	ldi	r25, 0x00	; 0
    35d6:	a0 e8       	ldi	r26, 0x80	; 128
    35d8:	bf e3       	ldi	r27, 0x3F	; 63
    35da:	80 83       	st	Z, r24
    35dc:	91 83       	std	Z+1, r25	; 0x01
    35de:	a2 83       	std	Z+2, r26	; 0x02
    35e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35e2:	8e 01       	movw	r16, r28
    35e4:	05 5a       	subi	r16, 0xA5	; 165
    35e6:	1f 4f       	sbci	r17, 0xFF	; 255
    35e8:	fe 01       	movw	r30, r28
    35ea:	e1 5a       	subi	r30, 0xA1	; 161
    35ec:	ff 4f       	sbci	r31, 0xFF	; 255
    35ee:	60 81       	ld	r22, Z
    35f0:	71 81       	ldd	r23, Z+1	; 0x01
    35f2:	82 81       	ldd	r24, Z+2	; 0x02
    35f4:	93 81       	ldd	r25, Z+3	; 0x03
    35f6:	20 e0       	ldi	r18, 0x00	; 0
    35f8:	30 e0       	ldi	r19, 0x00	; 0
    35fa:	4a e7       	ldi	r20, 0x7A	; 122
    35fc:	55 e4       	ldi	r21, 0x45	; 69
    35fe:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3602:	dc 01       	movw	r26, r24
    3604:	cb 01       	movw	r24, r22
    3606:	f8 01       	movw	r30, r16
    3608:	80 83       	st	Z, r24
    360a:	91 83       	std	Z+1, r25	; 0x01
    360c:	a2 83       	std	Z+2, r26	; 0x02
    360e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3610:	fe 01       	movw	r30, r28
    3612:	e5 5a       	subi	r30, 0xA5	; 165
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	60 81       	ld	r22, Z
    3618:	71 81       	ldd	r23, Z+1	; 0x01
    361a:	82 81       	ldd	r24, Z+2	; 0x02
    361c:	93 81       	ldd	r25, Z+3	; 0x03
    361e:	20 e0       	ldi	r18, 0x00	; 0
    3620:	30 e0       	ldi	r19, 0x00	; 0
    3622:	40 e8       	ldi	r20, 0x80	; 128
    3624:	5f e3       	ldi	r21, 0x3F	; 63
    3626:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    362a:	88 23       	and	r24, r24
    362c:	44 f4       	brge	.+16     	; 0x363e <zip+0x218>
		__ticks = 1;
    362e:	fe 01       	movw	r30, r28
    3630:	e7 5a       	subi	r30, 0xA7	; 167
    3632:	ff 4f       	sbci	r31, 0xFF	; 255
    3634:	81 e0       	ldi	r24, 0x01	; 1
    3636:	90 e0       	ldi	r25, 0x00	; 0
    3638:	91 83       	std	Z+1, r25	; 0x01
    363a:	80 83       	st	Z, r24
    363c:	64 c0       	rjmp	.+200    	; 0x3706 <zip+0x2e0>
	else if (__tmp > 65535)
    363e:	fe 01       	movw	r30, r28
    3640:	e5 5a       	subi	r30, 0xA5	; 165
    3642:	ff 4f       	sbci	r31, 0xFF	; 255
    3644:	60 81       	ld	r22, Z
    3646:	71 81       	ldd	r23, Z+1	; 0x01
    3648:	82 81       	ldd	r24, Z+2	; 0x02
    364a:	93 81       	ldd	r25, Z+3	; 0x03
    364c:	20 e0       	ldi	r18, 0x00	; 0
    364e:	3f ef       	ldi	r19, 0xFF	; 255
    3650:	4f e7       	ldi	r20, 0x7F	; 127
    3652:	57 e4       	ldi	r21, 0x47	; 71
    3654:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3658:	18 16       	cp	r1, r24
    365a:	0c f0       	brlt	.+2      	; 0x365e <zip+0x238>
    365c:	43 c0       	rjmp	.+134    	; 0x36e4 <zip+0x2be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    365e:	fe 01       	movw	r30, r28
    3660:	e1 5a       	subi	r30, 0xA1	; 161
    3662:	ff 4f       	sbci	r31, 0xFF	; 255
    3664:	60 81       	ld	r22, Z
    3666:	71 81       	ldd	r23, Z+1	; 0x01
    3668:	82 81       	ldd	r24, Z+2	; 0x02
    366a:	93 81       	ldd	r25, Z+3	; 0x03
    366c:	20 e0       	ldi	r18, 0x00	; 0
    366e:	30 e0       	ldi	r19, 0x00	; 0
    3670:	40 e2       	ldi	r20, 0x20	; 32
    3672:	51 e4       	ldi	r21, 0x41	; 65
    3674:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3678:	dc 01       	movw	r26, r24
    367a:	cb 01       	movw	r24, r22
    367c:	8e 01       	movw	r16, r28
    367e:	07 5a       	subi	r16, 0xA7	; 167
    3680:	1f 4f       	sbci	r17, 0xFF	; 255
    3682:	bc 01       	movw	r22, r24
    3684:	cd 01       	movw	r24, r26
    3686:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    368a:	dc 01       	movw	r26, r24
    368c:	cb 01       	movw	r24, r22
    368e:	f8 01       	movw	r30, r16
    3690:	91 83       	std	Z+1, r25	; 0x01
    3692:	80 83       	st	Z, r24
    3694:	1f c0       	rjmp	.+62     	; 0x36d4 <zip+0x2ae>
    3696:	fe 01       	movw	r30, r28
    3698:	e9 5a       	subi	r30, 0xA9	; 169
    369a:	ff 4f       	sbci	r31, 0xFF	; 255
    369c:	80 e9       	ldi	r24, 0x90	; 144
    369e:	91 e0       	ldi	r25, 0x01	; 1
    36a0:	91 83       	std	Z+1, r25	; 0x01
    36a2:	80 83       	st	Z, r24
    36a4:	fe 01       	movw	r30, r28
    36a6:	e9 5a       	subi	r30, 0xA9	; 169
    36a8:	ff 4f       	sbci	r31, 0xFF	; 255
    36aa:	80 81       	ld	r24, Z
    36ac:	91 81       	ldd	r25, Z+1	; 0x01
    36ae:	01 97       	sbiw	r24, 0x01	; 1
    36b0:	f1 f7       	brne	.-4      	; 0x36ae <zip+0x288>
    36b2:	fe 01       	movw	r30, r28
    36b4:	e9 5a       	subi	r30, 0xA9	; 169
    36b6:	ff 4f       	sbci	r31, 0xFF	; 255
    36b8:	91 83       	std	Z+1, r25	; 0x01
    36ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36bc:	de 01       	movw	r26, r28
    36be:	a7 5a       	subi	r26, 0xA7	; 167
    36c0:	bf 4f       	sbci	r27, 0xFF	; 255
    36c2:	fe 01       	movw	r30, r28
    36c4:	e7 5a       	subi	r30, 0xA7	; 167
    36c6:	ff 4f       	sbci	r31, 0xFF	; 255
    36c8:	80 81       	ld	r24, Z
    36ca:	91 81       	ldd	r25, Z+1	; 0x01
    36cc:	01 97       	sbiw	r24, 0x01	; 1
    36ce:	11 96       	adiw	r26, 0x01	; 1
    36d0:	9c 93       	st	X, r25
    36d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36d4:	fe 01       	movw	r30, r28
    36d6:	e7 5a       	subi	r30, 0xA7	; 167
    36d8:	ff 4f       	sbci	r31, 0xFF	; 255
    36da:	80 81       	ld	r24, Z
    36dc:	91 81       	ldd	r25, Z+1	; 0x01
    36de:	00 97       	sbiw	r24, 0x00	; 0
    36e0:	d1 f6       	brne	.-76     	; 0x3696 <zip+0x270>
    36e2:	27 c0       	rjmp	.+78     	; 0x3732 <zip+0x30c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36e4:	8e 01       	movw	r16, r28
    36e6:	07 5a       	subi	r16, 0xA7	; 167
    36e8:	1f 4f       	sbci	r17, 0xFF	; 255
    36ea:	fe 01       	movw	r30, r28
    36ec:	e5 5a       	subi	r30, 0xA5	; 165
    36ee:	ff 4f       	sbci	r31, 0xFF	; 255
    36f0:	60 81       	ld	r22, Z
    36f2:	71 81       	ldd	r23, Z+1	; 0x01
    36f4:	82 81       	ldd	r24, Z+2	; 0x02
    36f6:	93 81       	ldd	r25, Z+3	; 0x03
    36f8:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    36fc:	dc 01       	movw	r26, r24
    36fe:	cb 01       	movw	r24, r22
    3700:	f8 01       	movw	r30, r16
    3702:	91 83       	std	Z+1, r25	; 0x01
    3704:	80 83       	st	Z, r24
    3706:	de 01       	movw	r26, r28
    3708:	ab 5a       	subi	r26, 0xAB	; 171
    370a:	bf 4f       	sbci	r27, 0xFF	; 255
    370c:	fe 01       	movw	r30, r28
    370e:	e7 5a       	subi	r30, 0xA7	; 167
    3710:	ff 4f       	sbci	r31, 0xFF	; 255
    3712:	80 81       	ld	r24, Z
    3714:	91 81       	ldd	r25, Z+1	; 0x01
    3716:	8d 93       	st	X+, r24
    3718:	9c 93       	st	X, r25
    371a:	fe 01       	movw	r30, r28
    371c:	eb 5a       	subi	r30, 0xAB	; 171
    371e:	ff 4f       	sbci	r31, 0xFF	; 255
    3720:	80 81       	ld	r24, Z
    3722:	91 81       	ldd	r25, Z+1	; 0x01
    3724:	01 97       	sbiw	r24, 0x01	; 1
    3726:	f1 f7       	brne	.-4      	; 0x3724 <zip+0x2fe>
    3728:	fe 01       	movw	r30, r28
    372a:	eb 5a       	subi	r30, 0xAB	; 171
    372c:	ff 4f       	sbci	r31, 0xFF	; 255
    372e:	91 83       	std	Z+1, r25	; 0x01
    3730:	80 83       	st	Z, r24
 UDR0=0x31; _delay_ms(1);
    3732:	ec e2       	ldi	r30, 0x2C	; 44
    3734:	f0 e0       	ldi	r31, 0x00	; 0
    3736:	81 e3       	ldi	r24, 0x31	; 49
    3738:	80 83       	st	Z, r24
    373a:	fe 01       	movw	r30, r28
    373c:	ef 5a       	subi	r30, 0xAF	; 175
    373e:	ff 4f       	sbci	r31, 0xFF	; 255
    3740:	80 e0       	ldi	r24, 0x00	; 0
    3742:	90 e0       	ldi	r25, 0x00	; 0
    3744:	a0 e8       	ldi	r26, 0x80	; 128
    3746:	bf e3       	ldi	r27, 0x3F	; 63
    3748:	80 83       	st	Z, r24
    374a:	91 83       	std	Z+1, r25	; 0x01
    374c:	a2 83       	std	Z+2, r26	; 0x02
    374e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3750:	8e 01       	movw	r16, r28
    3752:	03 5b       	subi	r16, 0xB3	; 179
    3754:	1f 4f       	sbci	r17, 0xFF	; 255
    3756:	fe 01       	movw	r30, r28
    3758:	ef 5a       	subi	r30, 0xAF	; 175
    375a:	ff 4f       	sbci	r31, 0xFF	; 255
    375c:	60 81       	ld	r22, Z
    375e:	71 81       	ldd	r23, Z+1	; 0x01
    3760:	82 81       	ldd	r24, Z+2	; 0x02
    3762:	93 81       	ldd	r25, Z+3	; 0x03
    3764:	20 e0       	ldi	r18, 0x00	; 0
    3766:	30 e0       	ldi	r19, 0x00	; 0
    3768:	4a e7       	ldi	r20, 0x7A	; 122
    376a:	55 e4       	ldi	r21, 0x45	; 69
    376c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3770:	dc 01       	movw	r26, r24
    3772:	cb 01       	movw	r24, r22
    3774:	f8 01       	movw	r30, r16
    3776:	80 83       	st	Z, r24
    3778:	91 83       	std	Z+1, r25	; 0x01
    377a:	a2 83       	std	Z+2, r26	; 0x02
    377c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    377e:	fe 01       	movw	r30, r28
    3780:	e3 5b       	subi	r30, 0xB3	; 179
    3782:	ff 4f       	sbci	r31, 0xFF	; 255
    3784:	60 81       	ld	r22, Z
    3786:	71 81       	ldd	r23, Z+1	; 0x01
    3788:	82 81       	ldd	r24, Z+2	; 0x02
    378a:	93 81       	ldd	r25, Z+3	; 0x03
    378c:	20 e0       	ldi	r18, 0x00	; 0
    378e:	30 e0       	ldi	r19, 0x00	; 0
    3790:	40 e8       	ldi	r20, 0x80	; 128
    3792:	5f e3       	ldi	r21, 0x3F	; 63
    3794:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3798:	88 23       	and	r24, r24
    379a:	44 f4       	brge	.+16     	; 0x37ac <zip+0x386>
		__ticks = 1;
    379c:	fe 01       	movw	r30, r28
    379e:	e5 5b       	subi	r30, 0xB5	; 181
    37a0:	ff 4f       	sbci	r31, 0xFF	; 255
    37a2:	81 e0       	ldi	r24, 0x01	; 1
    37a4:	90 e0       	ldi	r25, 0x00	; 0
    37a6:	91 83       	std	Z+1, r25	; 0x01
    37a8:	80 83       	st	Z, r24
    37aa:	64 c0       	rjmp	.+200    	; 0x3874 <zip+0x44e>
	else if (__tmp > 65535)
    37ac:	fe 01       	movw	r30, r28
    37ae:	e3 5b       	subi	r30, 0xB3	; 179
    37b0:	ff 4f       	sbci	r31, 0xFF	; 255
    37b2:	60 81       	ld	r22, Z
    37b4:	71 81       	ldd	r23, Z+1	; 0x01
    37b6:	82 81       	ldd	r24, Z+2	; 0x02
    37b8:	93 81       	ldd	r25, Z+3	; 0x03
    37ba:	20 e0       	ldi	r18, 0x00	; 0
    37bc:	3f ef       	ldi	r19, 0xFF	; 255
    37be:	4f e7       	ldi	r20, 0x7F	; 127
    37c0:	57 e4       	ldi	r21, 0x47	; 71
    37c2:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    37c6:	18 16       	cp	r1, r24
    37c8:	0c f0       	brlt	.+2      	; 0x37cc <zip+0x3a6>
    37ca:	43 c0       	rjmp	.+134    	; 0x3852 <zip+0x42c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37cc:	fe 01       	movw	r30, r28
    37ce:	ef 5a       	subi	r30, 0xAF	; 175
    37d0:	ff 4f       	sbci	r31, 0xFF	; 255
    37d2:	60 81       	ld	r22, Z
    37d4:	71 81       	ldd	r23, Z+1	; 0x01
    37d6:	82 81       	ldd	r24, Z+2	; 0x02
    37d8:	93 81       	ldd	r25, Z+3	; 0x03
    37da:	20 e0       	ldi	r18, 0x00	; 0
    37dc:	30 e0       	ldi	r19, 0x00	; 0
    37de:	40 e2       	ldi	r20, 0x20	; 32
    37e0:	51 e4       	ldi	r21, 0x41	; 65
    37e2:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    37e6:	dc 01       	movw	r26, r24
    37e8:	cb 01       	movw	r24, r22
    37ea:	8e 01       	movw	r16, r28
    37ec:	05 5b       	subi	r16, 0xB5	; 181
    37ee:	1f 4f       	sbci	r17, 0xFF	; 255
    37f0:	bc 01       	movw	r22, r24
    37f2:	cd 01       	movw	r24, r26
    37f4:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    37f8:	dc 01       	movw	r26, r24
    37fa:	cb 01       	movw	r24, r22
    37fc:	f8 01       	movw	r30, r16
    37fe:	91 83       	std	Z+1, r25	; 0x01
    3800:	80 83       	st	Z, r24
    3802:	1f c0       	rjmp	.+62     	; 0x3842 <zip+0x41c>
    3804:	fe 01       	movw	r30, r28
    3806:	e7 5b       	subi	r30, 0xB7	; 183
    3808:	ff 4f       	sbci	r31, 0xFF	; 255
    380a:	80 e9       	ldi	r24, 0x90	; 144
    380c:	91 e0       	ldi	r25, 0x01	; 1
    380e:	91 83       	std	Z+1, r25	; 0x01
    3810:	80 83       	st	Z, r24
    3812:	fe 01       	movw	r30, r28
    3814:	e7 5b       	subi	r30, 0xB7	; 183
    3816:	ff 4f       	sbci	r31, 0xFF	; 255
    3818:	80 81       	ld	r24, Z
    381a:	91 81       	ldd	r25, Z+1	; 0x01
    381c:	01 97       	sbiw	r24, 0x01	; 1
    381e:	f1 f7       	brne	.-4      	; 0x381c <zip+0x3f6>
    3820:	fe 01       	movw	r30, r28
    3822:	e7 5b       	subi	r30, 0xB7	; 183
    3824:	ff 4f       	sbci	r31, 0xFF	; 255
    3826:	91 83       	std	Z+1, r25	; 0x01
    3828:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    382a:	de 01       	movw	r26, r28
    382c:	a5 5b       	subi	r26, 0xB5	; 181
    382e:	bf 4f       	sbci	r27, 0xFF	; 255
    3830:	fe 01       	movw	r30, r28
    3832:	e5 5b       	subi	r30, 0xB5	; 181
    3834:	ff 4f       	sbci	r31, 0xFF	; 255
    3836:	80 81       	ld	r24, Z
    3838:	91 81       	ldd	r25, Z+1	; 0x01
    383a:	01 97       	sbiw	r24, 0x01	; 1
    383c:	11 96       	adiw	r26, 0x01	; 1
    383e:	9c 93       	st	X, r25
    3840:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3842:	fe 01       	movw	r30, r28
    3844:	e5 5b       	subi	r30, 0xB5	; 181
    3846:	ff 4f       	sbci	r31, 0xFF	; 255
    3848:	80 81       	ld	r24, Z
    384a:	91 81       	ldd	r25, Z+1	; 0x01
    384c:	00 97       	sbiw	r24, 0x00	; 0
    384e:	d1 f6       	brne	.-76     	; 0x3804 <zip+0x3de>
    3850:	27 c0       	rjmp	.+78     	; 0x38a0 <zip+0x47a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3852:	8e 01       	movw	r16, r28
    3854:	05 5b       	subi	r16, 0xB5	; 181
    3856:	1f 4f       	sbci	r17, 0xFF	; 255
    3858:	fe 01       	movw	r30, r28
    385a:	e3 5b       	subi	r30, 0xB3	; 179
    385c:	ff 4f       	sbci	r31, 0xFF	; 255
    385e:	60 81       	ld	r22, Z
    3860:	71 81       	ldd	r23, Z+1	; 0x01
    3862:	82 81       	ldd	r24, Z+2	; 0x02
    3864:	93 81       	ldd	r25, Z+3	; 0x03
    3866:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    386a:	dc 01       	movw	r26, r24
    386c:	cb 01       	movw	r24, r22
    386e:	f8 01       	movw	r30, r16
    3870:	91 83       	std	Z+1, r25	; 0x01
    3872:	80 83       	st	Z, r24
    3874:	de 01       	movw	r26, r28
    3876:	a9 5b       	subi	r26, 0xB9	; 185
    3878:	bf 4f       	sbci	r27, 0xFF	; 255
    387a:	fe 01       	movw	r30, r28
    387c:	e5 5b       	subi	r30, 0xB5	; 181
    387e:	ff 4f       	sbci	r31, 0xFF	; 255
    3880:	80 81       	ld	r24, Z
    3882:	91 81       	ldd	r25, Z+1	; 0x01
    3884:	8d 93       	st	X+, r24
    3886:	9c 93       	st	X, r25
    3888:	fe 01       	movw	r30, r28
    388a:	e9 5b       	subi	r30, 0xB9	; 185
    388c:	ff 4f       	sbci	r31, 0xFF	; 255
    388e:	80 81       	ld	r24, Z
    3890:	91 81       	ldd	r25, Z+1	; 0x01
    3892:	01 97       	sbiw	r24, 0x01	; 1
    3894:	f1 f7       	brne	.-4      	; 0x3892 <zip+0x46c>
    3896:	fe 01       	movw	r30, r28
    3898:	e9 5b       	subi	r30, 0xB9	; 185
    389a:	ff 4f       	sbci	r31, 0xFF	; 255
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
 UDR0=0x05; _delay_ms(1);
    38a0:	ec e2       	ldi	r30, 0x2C	; 44
    38a2:	f0 e0       	ldi	r31, 0x00	; 0
    38a4:	85 e0       	ldi	r24, 0x05	; 5
    38a6:	80 83       	st	Z, r24
    38a8:	fe 01       	movw	r30, r28
    38aa:	ed 5b       	subi	r30, 0xBD	; 189
    38ac:	ff 4f       	sbci	r31, 0xFF	; 255
    38ae:	80 e0       	ldi	r24, 0x00	; 0
    38b0:	90 e0       	ldi	r25, 0x00	; 0
    38b2:	a0 e8       	ldi	r26, 0x80	; 128
    38b4:	bf e3       	ldi	r27, 0x3F	; 63
    38b6:	80 83       	st	Z, r24
    38b8:	91 83       	std	Z+1, r25	; 0x01
    38ba:	a2 83       	std	Z+2, r26	; 0x02
    38bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38be:	8e 01       	movw	r16, r28
    38c0:	01 5c       	subi	r16, 0xC1	; 193
    38c2:	1f 4f       	sbci	r17, 0xFF	; 255
    38c4:	fe 01       	movw	r30, r28
    38c6:	ed 5b       	subi	r30, 0xBD	; 189
    38c8:	ff 4f       	sbci	r31, 0xFF	; 255
    38ca:	60 81       	ld	r22, Z
    38cc:	71 81       	ldd	r23, Z+1	; 0x01
    38ce:	82 81       	ldd	r24, Z+2	; 0x02
    38d0:	93 81       	ldd	r25, Z+3	; 0x03
    38d2:	20 e0       	ldi	r18, 0x00	; 0
    38d4:	30 e0       	ldi	r19, 0x00	; 0
    38d6:	4a e7       	ldi	r20, 0x7A	; 122
    38d8:	55 e4       	ldi	r21, 0x45	; 69
    38da:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    38de:	dc 01       	movw	r26, r24
    38e0:	cb 01       	movw	r24, r22
    38e2:	f8 01       	movw	r30, r16
    38e4:	80 83       	st	Z, r24
    38e6:	91 83       	std	Z+1, r25	; 0x01
    38e8:	a2 83       	std	Z+2, r26	; 0x02
    38ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    38ec:	fe 01       	movw	r30, r28
    38ee:	ff 96       	adiw	r30, 0x3f	; 63
    38f0:	60 81       	ld	r22, Z
    38f2:	71 81       	ldd	r23, Z+1	; 0x01
    38f4:	82 81       	ldd	r24, Z+2	; 0x02
    38f6:	93 81       	ldd	r25, Z+3	; 0x03
    38f8:	20 e0       	ldi	r18, 0x00	; 0
    38fa:	30 e0       	ldi	r19, 0x00	; 0
    38fc:	40 e8       	ldi	r20, 0x80	; 128
    38fe:	5f e3       	ldi	r21, 0x3F	; 63
    3900:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3904:	88 23       	and	r24, r24
    3906:	2c f4       	brge	.+10     	; 0x3912 <zip+0x4ec>
		__ticks = 1;
    3908:	81 e0       	ldi	r24, 0x01	; 1
    390a:	90 e0       	ldi	r25, 0x00	; 0
    390c:	9e af       	std	Y+62, r25	; 0x3e
    390e:	8d af       	std	Y+61, r24	; 0x3d
    3910:	46 c0       	rjmp	.+140    	; 0x399e <zip+0x578>
	else if (__tmp > 65535)
    3912:	fe 01       	movw	r30, r28
    3914:	ff 96       	adiw	r30, 0x3f	; 63
    3916:	60 81       	ld	r22, Z
    3918:	71 81       	ldd	r23, Z+1	; 0x01
    391a:	82 81       	ldd	r24, Z+2	; 0x02
    391c:	93 81       	ldd	r25, Z+3	; 0x03
    391e:	20 e0       	ldi	r18, 0x00	; 0
    3920:	3f ef       	ldi	r19, 0xFF	; 255
    3922:	4f e7       	ldi	r20, 0x7F	; 127
    3924:	57 e4       	ldi	r21, 0x47	; 71
    3926:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    392a:	18 16       	cp	r1, r24
    392c:	64 f5       	brge	.+88     	; 0x3986 <zip+0x560>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    392e:	fe 01       	movw	r30, r28
    3930:	ed 5b       	subi	r30, 0xBD	; 189
    3932:	ff 4f       	sbci	r31, 0xFF	; 255
    3934:	60 81       	ld	r22, Z
    3936:	71 81       	ldd	r23, Z+1	; 0x01
    3938:	82 81       	ldd	r24, Z+2	; 0x02
    393a:	93 81       	ldd	r25, Z+3	; 0x03
    393c:	20 e0       	ldi	r18, 0x00	; 0
    393e:	30 e0       	ldi	r19, 0x00	; 0
    3940:	40 e2       	ldi	r20, 0x20	; 32
    3942:	51 e4       	ldi	r21, 0x41	; 65
    3944:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3948:	dc 01       	movw	r26, r24
    394a:	cb 01       	movw	r24, r22
    394c:	bc 01       	movw	r22, r24
    394e:	cd 01       	movw	r24, r26
    3950:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3954:	dc 01       	movw	r26, r24
    3956:	cb 01       	movw	r24, r22
    3958:	9e af       	std	Y+62, r25	; 0x3e
    395a:	8d af       	std	Y+61, r24	; 0x3d
    395c:	0f c0       	rjmp	.+30     	; 0x397c <zip+0x556>
    395e:	80 e9       	ldi	r24, 0x90	; 144
    3960:	91 e0       	ldi	r25, 0x01	; 1
    3962:	9c af       	std	Y+60, r25	; 0x3c
    3964:	8b af       	std	Y+59, r24	; 0x3b
    3966:	8b ad       	ldd	r24, Y+59	; 0x3b
    3968:	9c ad       	ldd	r25, Y+60	; 0x3c
    396a:	01 97       	sbiw	r24, 0x01	; 1
    396c:	f1 f7       	brne	.-4      	; 0x396a <zip+0x544>
    396e:	9c af       	std	Y+60, r25	; 0x3c
    3970:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3972:	8d ad       	ldd	r24, Y+61	; 0x3d
    3974:	9e ad       	ldd	r25, Y+62	; 0x3e
    3976:	01 97       	sbiw	r24, 0x01	; 1
    3978:	9e af       	std	Y+62, r25	; 0x3e
    397a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    397c:	8d ad       	ldd	r24, Y+61	; 0x3d
    397e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3980:	00 97       	sbiw	r24, 0x00	; 0
    3982:	69 f7       	brne	.-38     	; 0x395e <zip+0x538>
    3984:	16 c0       	rjmp	.+44     	; 0x39b2 <zip+0x58c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3986:	fe 01       	movw	r30, r28
    3988:	ff 96       	adiw	r30, 0x3f	; 63
    398a:	60 81       	ld	r22, Z
    398c:	71 81       	ldd	r23, Z+1	; 0x01
    398e:	82 81       	ldd	r24, Z+2	; 0x02
    3990:	93 81       	ldd	r25, Z+3	; 0x03
    3992:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3996:	dc 01       	movw	r26, r24
    3998:	cb 01       	movw	r24, r22
    399a:	9e af       	std	Y+62, r25	; 0x3e
    399c:	8d af       	std	Y+61, r24	; 0x3d
    399e:	8d ad       	ldd	r24, Y+61	; 0x3d
    39a0:	9e ad       	ldd	r25, Y+62	; 0x3e
    39a2:	9a af       	std	Y+58, r25	; 0x3a
    39a4:	89 af       	std	Y+57, r24	; 0x39
    39a6:	89 ad       	ldd	r24, Y+57	; 0x39
    39a8:	9a ad       	ldd	r25, Y+58	; 0x3a
    39aa:	01 97       	sbiw	r24, 0x01	; 1
    39ac:	f1 f7       	brne	.-4      	; 0x39aa <zip+0x584>
    39ae:	9a af       	std	Y+58, r25	; 0x3a
    39b0:	89 af       	std	Y+57, r24	; 0x39
 UDR0=0x01; _delay_ms(1);
    39b2:	ec e2       	ldi	r30, 0x2C	; 44
    39b4:	f0 e0       	ldi	r31, 0x00	; 0
    39b6:	81 e0       	ldi	r24, 0x01	; 1
    39b8:	80 83       	st	Z, r24
    39ba:	80 e0       	ldi	r24, 0x00	; 0
    39bc:	90 e0       	ldi	r25, 0x00	; 0
    39be:	a0 e8       	ldi	r26, 0x80	; 128
    39c0:	bf e3       	ldi	r27, 0x3F	; 63
    39c2:	8d ab       	std	Y+53, r24	; 0x35
    39c4:	9e ab       	std	Y+54, r25	; 0x36
    39c6:	af ab       	std	Y+55, r26	; 0x37
    39c8:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39ca:	6d a9       	ldd	r22, Y+53	; 0x35
    39cc:	7e a9       	ldd	r23, Y+54	; 0x36
    39ce:	8f a9       	ldd	r24, Y+55	; 0x37
    39d0:	98 ad       	ldd	r25, Y+56	; 0x38
    39d2:	20 e0       	ldi	r18, 0x00	; 0
    39d4:	30 e0       	ldi	r19, 0x00	; 0
    39d6:	4a e7       	ldi	r20, 0x7A	; 122
    39d8:	55 e4       	ldi	r21, 0x45	; 69
    39da:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    39de:	dc 01       	movw	r26, r24
    39e0:	cb 01       	movw	r24, r22
    39e2:	89 ab       	std	Y+49, r24	; 0x31
    39e4:	9a ab       	std	Y+50, r25	; 0x32
    39e6:	ab ab       	std	Y+51, r26	; 0x33
    39e8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    39ea:	69 a9       	ldd	r22, Y+49	; 0x31
    39ec:	7a a9       	ldd	r23, Y+50	; 0x32
    39ee:	8b a9       	ldd	r24, Y+51	; 0x33
    39f0:	9c a9       	ldd	r25, Y+52	; 0x34
    39f2:	20 e0       	ldi	r18, 0x00	; 0
    39f4:	30 e0       	ldi	r19, 0x00	; 0
    39f6:	40 e8       	ldi	r20, 0x80	; 128
    39f8:	5f e3       	ldi	r21, 0x3F	; 63
    39fa:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    39fe:	88 23       	and	r24, r24
    3a00:	2c f4       	brge	.+10     	; 0x3a0c <zip+0x5e6>
		__ticks = 1;
    3a02:	81 e0       	ldi	r24, 0x01	; 1
    3a04:	90 e0       	ldi	r25, 0x00	; 0
    3a06:	98 ab       	std	Y+48, r25	; 0x30
    3a08:	8f a7       	std	Y+47, r24	; 0x2f
    3a0a:	3f c0       	rjmp	.+126    	; 0x3a8a <zip+0x664>
	else if (__tmp > 65535)
    3a0c:	69 a9       	ldd	r22, Y+49	; 0x31
    3a0e:	7a a9       	ldd	r23, Y+50	; 0x32
    3a10:	8b a9       	ldd	r24, Y+51	; 0x33
    3a12:	9c a9       	ldd	r25, Y+52	; 0x34
    3a14:	20 e0       	ldi	r18, 0x00	; 0
    3a16:	3f ef       	ldi	r19, 0xFF	; 255
    3a18:	4f e7       	ldi	r20, 0x7F	; 127
    3a1a:	57 e4       	ldi	r21, 0x47	; 71
    3a1c:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3a20:	18 16       	cp	r1, r24
    3a22:	4c f5       	brge	.+82     	; 0x3a76 <zip+0x650>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a24:	6d a9       	ldd	r22, Y+53	; 0x35
    3a26:	7e a9       	ldd	r23, Y+54	; 0x36
    3a28:	8f a9       	ldd	r24, Y+55	; 0x37
    3a2a:	98 ad       	ldd	r25, Y+56	; 0x38
    3a2c:	20 e0       	ldi	r18, 0x00	; 0
    3a2e:	30 e0       	ldi	r19, 0x00	; 0
    3a30:	40 e2       	ldi	r20, 0x20	; 32
    3a32:	51 e4       	ldi	r21, 0x41	; 65
    3a34:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3a38:	dc 01       	movw	r26, r24
    3a3a:	cb 01       	movw	r24, r22
    3a3c:	bc 01       	movw	r22, r24
    3a3e:	cd 01       	movw	r24, r26
    3a40:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3a44:	dc 01       	movw	r26, r24
    3a46:	cb 01       	movw	r24, r22
    3a48:	98 ab       	std	Y+48, r25	; 0x30
    3a4a:	8f a7       	std	Y+47, r24	; 0x2f
    3a4c:	0f c0       	rjmp	.+30     	; 0x3a6c <zip+0x646>
    3a4e:	80 e9       	ldi	r24, 0x90	; 144
    3a50:	91 e0       	ldi	r25, 0x01	; 1
    3a52:	9e a7       	std	Y+46, r25	; 0x2e
    3a54:	8d a7       	std	Y+45, r24	; 0x2d
    3a56:	8d a5       	ldd	r24, Y+45	; 0x2d
    3a58:	9e a5       	ldd	r25, Y+46	; 0x2e
    3a5a:	01 97       	sbiw	r24, 0x01	; 1
    3a5c:	f1 f7       	brne	.-4      	; 0x3a5a <zip+0x634>
    3a5e:	9e a7       	std	Y+46, r25	; 0x2e
    3a60:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a62:	8f a5       	ldd	r24, Y+47	; 0x2f
    3a64:	98 a9       	ldd	r25, Y+48	; 0x30
    3a66:	01 97       	sbiw	r24, 0x01	; 1
    3a68:	98 ab       	std	Y+48, r25	; 0x30
    3a6a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a6c:	8f a5       	ldd	r24, Y+47	; 0x2f
    3a6e:	98 a9       	ldd	r25, Y+48	; 0x30
    3a70:	00 97       	sbiw	r24, 0x00	; 0
    3a72:	69 f7       	brne	.-38     	; 0x3a4e <zip+0x628>
    3a74:	14 c0       	rjmp	.+40     	; 0x3a9e <zip+0x678>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a76:	69 a9       	ldd	r22, Y+49	; 0x31
    3a78:	7a a9       	ldd	r23, Y+50	; 0x32
    3a7a:	8b a9       	ldd	r24, Y+51	; 0x33
    3a7c:	9c a9       	ldd	r25, Y+52	; 0x34
    3a7e:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3a82:	dc 01       	movw	r26, r24
    3a84:	cb 01       	movw	r24, r22
    3a86:	98 ab       	std	Y+48, r25	; 0x30
    3a88:	8f a7       	std	Y+47, r24	; 0x2f
    3a8a:	8f a5       	ldd	r24, Y+47	; 0x2f
    3a8c:	98 a9       	ldd	r25, Y+48	; 0x30
    3a8e:	9c a7       	std	Y+44, r25	; 0x2c
    3a90:	8b a7       	std	Y+43, r24	; 0x2b
    3a92:	8b a5       	ldd	r24, Y+43	; 0x2b
    3a94:	9c a5       	ldd	r25, Y+44	; 0x2c
    3a96:	01 97       	sbiw	r24, 0x01	; 1
    3a98:	f1 f7       	brne	.-4      	; 0x3a96 <zip+0x670>
    3a9a:	9c a7       	std	Y+44, r25	; 0x2c
    3a9c:	8b a7       	std	Y+43, r24	; 0x2b
 UDR0=0x01; _delay_ms(1);
    3a9e:	ec e2       	ldi	r30, 0x2C	; 44
    3aa0:	f0 e0       	ldi	r31, 0x00	; 0
    3aa2:	81 e0       	ldi	r24, 0x01	; 1
    3aa4:	80 83       	st	Z, r24
    3aa6:	80 e0       	ldi	r24, 0x00	; 0
    3aa8:	90 e0       	ldi	r25, 0x00	; 0
    3aaa:	a0 e8       	ldi	r26, 0x80	; 128
    3aac:	bf e3       	ldi	r27, 0x3F	; 63
    3aae:	8f a3       	std	Y+39, r24	; 0x27
    3ab0:	98 a7       	std	Y+40, r25	; 0x28
    3ab2:	a9 a7       	std	Y+41, r26	; 0x29
    3ab4:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ab6:	6f a1       	ldd	r22, Y+39	; 0x27
    3ab8:	78 a5       	ldd	r23, Y+40	; 0x28
    3aba:	89 a5       	ldd	r24, Y+41	; 0x29
    3abc:	9a a5       	ldd	r25, Y+42	; 0x2a
    3abe:	20 e0       	ldi	r18, 0x00	; 0
    3ac0:	30 e0       	ldi	r19, 0x00	; 0
    3ac2:	4a e7       	ldi	r20, 0x7A	; 122
    3ac4:	55 e4       	ldi	r21, 0x45	; 69
    3ac6:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3aca:	dc 01       	movw	r26, r24
    3acc:	cb 01       	movw	r24, r22
    3ace:	8b a3       	std	Y+35, r24	; 0x23
    3ad0:	9c a3       	std	Y+36, r25	; 0x24
    3ad2:	ad a3       	std	Y+37, r26	; 0x25
    3ad4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3ad6:	6b a1       	ldd	r22, Y+35	; 0x23
    3ad8:	7c a1       	ldd	r23, Y+36	; 0x24
    3ada:	8d a1       	ldd	r24, Y+37	; 0x25
    3adc:	9e a1       	ldd	r25, Y+38	; 0x26
    3ade:	20 e0       	ldi	r18, 0x00	; 0
    3ae0:	30 e0       	ldi	r19, 0x00	; 0
    3ae2:	40 e8       	ldi	r20, 0x80	; 128
    3ae4:	5f e3       	ldi	r21, 0x3F	; 63
    3ae6:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3aea:	88 23       	and	r24, r24
    3aec:	2c f4       	brge	.+10     	; 0x3af8 <zip+0x6d2>
		__ticks = 1;
    3aee:	81 e0       	ldi	r24, 0x01	; 1
    3af0:	90 e0       	ldi	r25, 0x00	; 0
    3af2:	9a a3       	std	Y+34, r25	; 0x22
    3af4:	89 a3       	std	Y+33, r24	; 0x21
    3af6:	3f c0       	rjmp	.+126    	; 0x3b76 <zip+0x750>
	else if (__tmp > 65535)
    3af8:	6b a1       	ldd	r22, Y+35	; 0x23
    3afa:	7c a1       	ldd	r23, Y+36	; 0x24
    3afc:	8d a1       	ldd	r24, Y+37	; 0x25
    3afe:	9e a1       	ldd	r25, Y+38	; 0x26
    3b00:	20 e0       	ldi	r18, 0x00	; 0
    3b02:	3f ef       	ldi	r19, 0xFF	; 255
    3b04:	4f e7       	ldi	r20, 0x7F	; 127
    3b06:	57 e4       	ldi	r21, 0x47	; 71
    3b08:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3b0c:	18 16       	cp	r1, r24
    3b0e:	4c f5       	brge	.+82     	; 0x3b62 <zip+0x73c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b10:	6f a1       	ldd	r22, Y+39	; 0x27
    3b12:	78 a5       	ldd	r23, Y+40	; 0x28
    3b14:	89 a5       	ldd	r24, Y+41	; 0x29
    3b16:	9a a5       	ldd	r25, Y+42	; 0x2a
    3b18:	20 e0       	ldi	r18, 0x00	; 0
    3b1a:	30 e0       	ldi	r19, 0x00	; 0
    3b1c:	40 e2       	ldi	r20, 0x20	; 32
    3b1e:	51 e4       	ldi	r21, 0x41	; 65
    3b20:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3b24:	dc 01       	movw	r26, r24
    3b26:	cb 01       	movw	r24, r22
    3b28:	bc 01       	movw	r22, r24
    3b2a:	cd 01       	movw	r24, r26
    3b2c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3b30:	dc 01       	movw	r26, r24
    3b32:	cb 01       	movw	r24, r22
    3b34:	9a a3       	std	Y+34, r25	; 0x22
    3b36:	89 a3       	std	Y+33, r24	; 0x21
    3b38:	0f c0       	rjmp	.+30     	; 0x3b58 <zip+0x732>
    3b3a:	80 e9       	ldi	r24, 0x90	; 144
    3b3c:	91 e0       	ldi	r25, 0x01	; 1
    3b3e:	98 a3       	std	Y+32, r25	; 0x20
    3b40:	8f 8f       	std	Y+31, r24	; 0x1f
    3b42:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3b44:	98 a1       	ldd	r25, Y+32	; 0x20
    3b46:	01 97       	sbiw	r24, 0x01	; 1
    3b48:	f1 f7       	brne	.-4      	; 0x3b46 <zip+0x720>
    3b4a:	98 a3       	std	Y+32, r25	; 0x20
    3b4c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b4e:	89 a1       	ldd	r24, Y+33	; 0x21
    3b50:	9a a1       	ldd	r25, Y+34	; 0x22
    3b52:	01 97       	sbiw	r24, 0x01	; 1
    3b54:	9a a3       	std	Y+34, r25	; 0x22
    3b56:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b58:	89 a1       	ldd	r24, Y+33	; 0x21
    3b5a:	9a a1       	ldd	r25, Y+34	; 0x22
    3b5c:	00 97       	sbiw	r24, 0x00	; 0
    3b5e:	69 f7       	brne	.-38     	; 0x3b3a <zip+0x714>
    3b60:	14 c0       	rjmp	.+40     	; 0x3b8a <zip+0x764>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b62:	6b a1       	ldd	r22, Y+35	; 0x23
    3b64:	7c a1       	ldd	r23, Y+36	; 0x24
    3b66:	8d a1       	ldd	r24, Y+37	; 0x25
    3b68:	9e a1       	ldd	r25, Y+38	; 0x26
    3b6a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3b6e:	dc 01       	movw	r26, r24
    3b70:	cb 01       	movw	r24, r22
    3b72:	9a a3       	std	Y+34, r25	; 0x22
    3b74:	89 a3       	std	Y+33, r24	; 0x21
    3b76:	89 a1       	ldd	r24, Y+33	; 0x21
    3b78:	9a a1       	ldd	r25, Y+34	; 0x22
    3b7a:	9e 8f       	std	Y+30, r25	; 0x1e
    3b7c:	8d 8f       	std	Y+29, r24	; 0x1d
    3b7e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3b80:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3b82:	01 97       	sbiw	r24, 0x01	; 1
    3b84:	f1 f7       	brne	.-4      	; 0x3b82 <zip+0x75c>
    3b86:	9e 8f       	std	Y+30, r25	; 0x1e
    3b88:	8d 8f       	std	Y+29, r24	; 0x1d
 UDR0=0x12; _delay_ms(1);
    3b8a:	ec e2       	ldi	r30, 0x2C	; 44
    3b8c:	f0 e0       	ldi	r31, 0x00	; 0
    3b8e:	82 e1       	ldi	r24, 0x12	; 18
    3b90:	80 83       	st	Z, r24
    3b92:	80 e0       	ldi	r24, 0x00	; 0
    3b94:	90 e0       	ldi	r25, 0x00	; 0
    3b96:	a0 e8       	ldi	r26, 0x80	; 128
    3b98:	bf e3       	ldi	r27, 0x3F	; 63
    3b9a:	89 8f       	std	Y+25, r24	; 0x19
    3b9c:	9a 8f       	std	Y+26, r25	; 0x1a
    3b9e:	ab 8f       	std	Y+27, r26	; 0x1b
    3ba0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ba2:	69 8d       	ldd	r22, Y+25	; 0x19
    3ba4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3ba6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3ba8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3baa:	20 e0       	ldi	r18, 0x00	; 0
    3bac:	30 e0       	ldi	r19, 0x00	; 0
    3bae:	4a e7       	ldi	r20, 0x7A	; 122
    3bb0:	55 e4       	ldi	r21, 0x45	; 69
    3bb2:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3bb6:	dc 01       	movw	r26, r24
    3bb8:	cb 01       	movw	r24, r22
    3bba:	8d 8b       	std	Y+21, r24	; 0x15
    3bbc:	9e 8b       	std	Y+22, r25	; 0x16
    3bbe:	af 8b       	std	Y+23, r26	; 0x17
    3bc0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3bc2:	6d 89       	ldd	r22, Y+21	; 0x15
    3bc4:	7e 89       	ldd	r23, Y+22	; 0x16
    3bc6:	8f 89       	ldd	r24, Y+23	; 0x17
    3bc8:	98 8d       	ldd	r25, Y+24	; 0x18
    3bca:	20 e0       	ldi	r18, 0x00	; 0
    3bcc:	30 e0       	ldi	r19, 0x00	; 0
    3bce:	40 e8       	ldi	r20, 0x80	; 128
    3bd0:	5f e3       	ldi	r21, 0x3F	; 63
    3bd2:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3bd6:	88 23       	and	r24, r24
    3bd8:	2c f4       	brge	.+10     	; 0x3be4 <zip+0x7be>
		__ticks = 1;
    3bda:	81 e0       	ldi	r24, 0x01	; 1
    3bdc:	90 e0       	ldi	r25, 0x00	; 0
    3bde:	9c 8b       	std	Y+20, r25	; 0x14
    3be0:	8b 8b       	std	Y+19, r24	; 0x13
    3be2:	3f c0       	rjmp	.+126    	; 0x3c62 <zip+0x83c>
	else if (__tmp > 65535)
    3be4:	6d 89       	ldd	r22, Y+21	; 0x15
    3be6:	7e 89       	ldd	r23, Y+22	; 0x16
    3be8:	8f 89       	ldd	r24, Y+23	; 0x17
    3bea:	98 8d       	ldd	r25, Y+24	; 0x18
    3bec:	20 e0       	ldi	r18, 0x00	; 0
    3bee:	3f ef       	ldi	r19, 0xFF	; 255
    3bf0:	4f e7       	ldi	r20, 0x7F	; 127
    3bf2:	57 e4       	ldi	r21, 0x47	; 71
    3bf4:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3bf8:	18 16       	cp	r1, r24
    3bfa:	4c f5       	brge	.+82     	; 0x3c4e <zip+0x828>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3bfc:	69 8d       	ldd	r22, Y+25	; 0x19
    3bfe:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3c00:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3c02:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3c04:	20 e0       	ldi	r18, 0x00	; 0
    3c06:	30 e0       	ldi	r19, 0x00	; 0
    3c08:	40 e2       	ldi	r20, 0x20	; 32
    3c0a:	51 e4       	ldi	r21, 0x41	; 65
    3c0c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3c10:	dc 01       	movw	r26, r24
    3c12:	cb 01       	movw	r24, r22
    3c14:	bc 01       	movw	r22, r24
    3c16:	cd 01       	movw	r24, r26
    3c18:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3c1c:	dc 01       	movw	r26, r24
    3c1e:	cb 01       	movw	r24, r22
    3c20:	9c 8b       	std	Y+20, r25	; 0x14
    3c22:	8b 8b       	std	Y+19, r24	; 0x13
    3c24:	0f c0       	rjmp	.+30     	; 0x3c44 <zip+0x81e>
    3c26:	80 e9       	ldi	r24, 0x90	; 144
    3c28:	91 e0       	ldi	r25, 0x01	; 1
    3c2a:	9a 8b       	std	Y+18, r25	; 0x12
    3c2c:	89 8b       	std	Y+17, r24	; 0x11
    3c2e:	89 89       	ldd	r24, Y+17	; 0x11
    3c30:	9a 89       	ldd	r25, Y+18	; 0x12
    3c32:	01 97       	sbiw	r24, 0x01	; 1
    3c34:	f1 f7       	brne	.-4      	; 0x3c32 <zip+0x80c>
    3c36:	9a 8b       	std	Y+18, r25	; 0x12
    3c38:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c3a:	8b 89       	ldd	r24, Y+19	; 0x13
    3c3c:	9c 89       	ldd	r25, Y+20	; 0x14
    3c3e:	01 97       	sbiw	r24, 0x01	; 1
    3c40:	9c 8b       	std	Y+20, r25	; 0x14
    3c42:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c44:	8b 89       	ldd	r24, Y+19	; 0x13
    3c46:	9c 89       	ldd	r25, Y+20	; 0x14
    3c48:	00 97       	sbiw	r24, 0x00	; 0
    3c4a:	69 f7       	brne	.-38     	; 0x3c26 <zip+0x800>
    3c4c:	14 c0       	rjmp	.+40     	; 0x3c76 <zip+0x850>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c4e:	6d 89       	ldd	r22, Y+21	; 0x15
    3c50:	7e 89       	ldd	r23, Y+22	; 0x16
    3c52:	8f 89       	ldd	r24, Y+23	; 0x17
    3c54:	98 8d       	ldd	r25, Y+24	; 0x18
    3c56:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3c5a:	dc 01       	movw	r26, r24
    3c5c:	cb 01       	movw	r24, r22
    3c5e:	9c 8b       	std	Y+20, r25	; 0x14
    3c60:	8b 8b       	std	Y+19, r24	; 0x13
    3c62:	8b 89       	ldd	r24, Y+19	; 0x13
    3c64:	9c 89       	ldd	r25, Y+20	; 0x14
    3c66:	98 8b       	std	Y+16, r25	; 0x10
    3c68:	8f 87       	std	Y+15, r24	; 0x0f
    3c6a:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c6c:	98 89       	ldd	r25, Y+16	; 0x10
    3c6e:	01 97       	sbiw	r24, 0x01	; 1
    3c70:	f1 f7       	brne	.-4      	; 0x3c6e <zip+0x848>
    3c72:	98 8b       	std	Y+16, r25	; 0x10
    3c74:	8f 87       	std	Y+15, r24	; 0x0f
 UDR0=0x04; _delay_ms(1);
    3c76:	ec e2       	ldi	r30, 0x2C	; 44
    3c78:	f0 e0       	ldi	r31, 0x00	; 0
    3c7a:	84 e0       	ldi	r24, 0x04	; 4
    3c7c:	80 83       	st	Z, r24
    3c7e:	80 e0       	ldi	r24, 0x00	; 0
    3c80:	90 e0       	ldi	r25, 0x00	; 0
    3c82:	a0 e8       	ldi	r26, 0x80	; 128
    3c84:	bf e3       	ldi	r27, 0x3F	; 63
    3c86:	8b 87       	std	Y+11, r24	; 0x0b
    3c88:	9c 87       	std	Y+12, r25	; 0x0c
    3c8a:	ad 87       	std	Y+13, r26	; 0x0d
    3c8c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c8e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3c90:	7c 85       	ldd	r23, Y+12	; 0x0c
    3c92:	8d 85       	ldd	r24, Y+13	; 0x0d
    3c94:	9e 85       	ldd	r25, Y+14	; 0x0e
    3c96:	20 e0       	ldi	r18, 0x00	; 0
    3c98:	30 e0       	ldi	r19, 0x00	; 0
    3c9a:	4a e7       	ldi	r20, 0x7A	; 122
    3c9c:	55 e4       	ldi	r21, 0x45	; 69
    3c9e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3ca2:	dc 01       	movw	r26, r24
    3ca4:	cb 01       	movw	r24, r22
    3ca6:	8f 83       	std	Y+7, r24	; 0x07
    3ca8:	98 87       	std	Y+8, r25	; 0x08
    3caa:	a9 87       	std	Y+9, r26	; 0x09
    3cac:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3cae:	6f 81       	ldd	r22, Y+7	; 0x07
    3cb0:	78 85       	ldd	r23, Y+8	; 0x08
    3cb2:	89 85       	ldd	r24, Y+9	; 0x09
    3cb4:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cb6:	20 e0       	ldi	r18, 0x00	; 0
    3cb8:	30 e0       	ldi	r19, 0x00	; 0
    3cba:	40 e8       	ldi	r20, 0x80	; 128
    3cbc:	5f e3       	ldi	r21, 0x3F	; 63
    3cbe:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3cc2:	88 23       	and	r24, r24
    3cc4:	2c f4       	brge	.+10     	; 0x3cd0 <zip+0x8aa>
		__ticks = 1;
    3cc6:	81 e0       	ldi	r24, 0x01	; 1
    3cc8:	90 e0       	ldi	r25, 0x00	; 0
    3cca:	9e 83       	std	Y+6, r25	; 0x06
    3ccc:	8d 83       	std	Y+5, r24	; 0x05
    3cce:	3f c0       	rjmp	.+126    	; 0x3d4e <zip+0x928>
	else if (__tmp > 65535)
    3cd0:	6f 81       	ldd	r22, Y+7	; 0x07
    3cd2:	78 85       	ldd	r23, Y+8	; 0x08
    3cd4:	89 85       	ldd	r24, Y+9	; 0x09
    3cd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    3cd8:	20 e0       	ldi	r18, 0x00	; 0
    3cda:	3f ef       	ldi	r19, 0xFF	; 255
    3cdc:	4f e7       	ldi	r20, 0x7F	; 127
    3cde:	57 e4       	ldi	r21, 0x47	; 71
    3ce0:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3ce4:	18 16       	cp	r1, r24
    3ce6:	4c f5       	brge	.+82     	; 0x3d3a <zip+0x914>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ce8:	6b 85       	ldd	r22, Y+11	; 0x0b
    3cea:	7c 85       	ldd	r23, Y+12	; 0x0c
    3cec:	8d 85       	ldd	r24, Y+13	; 0x0d
    3cee:	9e 85       	ldd	r25, Y+14	; 0x0e
    3cf0:	20 e0       	ldi	r18, 0x00	; 0
    3cf2:	30 e0       	ldi	r19, 0x00	; 0
    3cf4:	40 e2       	ldi	r20, 0x20	; 32
    3cf6:	51 e4       	ldi	r21, 0x41	; 65
    3cf8:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3cfc:	dc 01       	movw	r26, r24
    3cfe:	cb 01       	movw	r24, r22
    3d00:	bc 01       	movw	r22, r24
    3d02:	cd 01       	movw	r24, r26
    3d04:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3d08:	dc 01       	movw	r26, r24
    3d0a:	cb 01       	movw	r24, r22
    3d0c:	9e 83       	std	Y+6, r25	; 0x06
    3d0e:	8d 83       	std	Y+5, r24	; 0x05
    3d10:	0f c0       	rjmp	.+30     	; 0x3d30 <zip+0x90a>
    3d12:	80 e9       	ldi	r24, 0x90	; 144
    3d14:	91 e0       	ldi	r25, 0x01	; 1
    3d16:	9c 83       	std	Y+4, r25	; 0x04
    3d18:	8b 83       	std	Y+3, r24	; 0x03
    3d1a:	8b 81       	ldd	r24, Y+3	; 0x03
    3d1c:	9c 81       	ldd	r25, Y+4	; 0x04
    3d1e:	01 97       	sbiw	r24, 0x01	; 1
    3d20:	f1 f7       	brne	.-4      	; 0x3d1e <zip+0x8f8>
    3d22:	9c 83       	std	Y+4, r25	; 0x04
    3d24:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d26:	8d 81       	ldd	r24, Y+5	; 0x05
    3d28:	9e 81       	ldd	r25, Y+6	; 0x06
    3d2a:	01 97       	sbiw	r24, 0x01	; 1
    3d2c:	9e 83       	std	Y+6, r25	; 0x06
    3d2e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d30:	8d 81       	ldd	r24, Y+5	; 0x05
    3d32:	9e 81       	ldd	r25, Y+6	; 0x06
    3d34:	00 97       	sbiw	r24, 0x00	; 0
    3d36:	69 f7       	brne	.-38     	; 0x3d12 <zip+0x8ec>
    3d38:	14 c0       	rjmp	.+40     	; 0x3d62 <zip+0x93c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d3a:	6f 81       	ldd	r22, Y+7	; 0x07
    3d3c:	78 85       	ldd	r23, Y+8	; 0x08
    3d3e:	89 85       	ldd	r24, Y+9	; 0x09
    3d40:	9a 85       	ldd	r25, Y+10	; 0x0a
    3d42:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3d46:	dc 01       	movw	r26, r24
    3d48:	cb 01       	movw	r24, r22
    3d4a:	9e 83       	std	Y+6, r25	; 0x06
    3d4c:	8d 83       	std	Y+5, r24	; 0x05
    3d4e:	8d 81       	ldd	r24, Y+5	; 0x05
    3d50:	9e 81       	ldd	r25, Y+6	; 0x06
    3d52:	9a 83       	std	Y+2, r25	; 0x02
    3d54:	89 83       	std	Y+1, r24	; 0x01
    3d56:	89 81       	ldd	r24, Y+1	; 0x01
    3d58:	9a 81       	ldd	r25, Y+2	; 0x02
    3d5a:	01 97       	sbiw	r24, 0x01	; 1
    3d5c:	f1 f7       	brne	.-4      	; 0x3d5a <zip+0x934>
    3d5e:	9a 83       	std	Y+2, r25	; 0x02
    3d60:	89 83       	std	Y+1, r24	; 0x01
 UDR0=0x36;
    3d62:	ec e2       	ldi	r30, 0x2C	; 44
    3d64:	f0 e0       	ldi	r31, 0x00	; 0
    3d66:	86 e3       	ldi	r24, 0x36	; 54
    3d68:	80 83       	st	Z, r24
}
    3d6a:	c0 59       	subi	r28, 0x90	; 144
    3d6c:	df 4f       	sbci	r29, 0xFF	; 255
    3d6e:	0f b6       	in	r0, 0x3f	; 63
    3d70:	f8 94       	cli
    3d72:	de bf       	out	0x3e, r29	; 62
    3d74:	0f be       	out	0x3f, r0	; 63
    3d76:	cd bf       	out	0x3d, r28	; 61
    3d78:	cf 91       	pop	r28
    3d7a:	df 91       	pop	r29
    3d7c:	1f 91       	pop	r17
    3d7e:	0f 91       	pop	r16
    3d80:	08 95       	ret

00003d82 <uart0_init>:
 
void uart0_init(void) //camera 값 수신
{
    3d82:	df 93       	push	r29
    3d84:	cf 93       	push	r28
    3d86:	cd b7       	in	r28, 0x3d	; 61
    3d88:	de b7       	in	r29, 0x3e	; 62
 UCSR0B = 0x00; //disable while setting baud rate
    3d8a:	ea e2       	ldi	r30, 0x2A	; 42
    3d8c:	f0 e0       	ldi	r31, 0x00	; 0
    3d8e:	10 82       	st	Z, r1
 UCSR0A = 0x00;
    3d90:	eb e2       	ldi	r30, 0x2B	; 43
    3d92:	f0 e0       	ldi	r31, 0x00	; 0
    3d94:	10 82       	st	Z, r1
 UCSR0C = 0x06;
    3d96:	e5 e9       	ldi	r30, 0x95	; 149
    3d98:	f0 e0       	ldi	r31, 0x00	; 0
    3d9a:	86 e0       	ldi	r24, 0x06	; 6
    3d9c:	80 83       	st	Z, r24
 UBRR0L = 0x19; //set baud rate 38400
    3d9e:	e9 e2       	ldi	r30, 0x29	; 41
    3da0:	f0 e0       	ldi	r31, 0x00	; 0
    3da2:	89 e1       	ldi	r24, 0x19	; 25
    3da4:	80 83       	st	Z, r24
 UBRR0H = 0x00; 
    3da6:	e0 e9       	ldi	r30, 0x90	; 144
    3da8:	f0 e0       	ldi	r31, 0x00	; 0
    3daa:	10 82       	st	Z, r1
 UCSR0B = 0b10011000; //수신만
    3dac:	ea e2       	ldi	r30, 0x2A	; 42
    3dae:	f0 e0       	ldi	r31, 0x00	; 0
    3db0:	88 e9       	ldi	r24, 0x98	; 152
    3db2:	80 83       	st	Z, r24
}
    3db4:	cf 91       	pop	r28
    3db6:	df 91       	pop	r29
    3db8:	08 95       	ret

00003dba <uart1_init>:

void uart1_init(void) //PC와 통신
{
    3dba:	df 93       	push	r29
    3dbc:	cf 93       	push	r28
    3dbe:	cd b7       	in	r28, 0x3d	; 61
    3dc0:	de b7       	in	r29, 0x3e	; 62
 UCSR1B = 0x00; //disable while setting baud rate
    3dc2:	ea e9       	ldi	r30, 0x9A	; 154
    3dc4:	f0 e0       	ldi	r31, 0x00	; 0
    3dc6:	10 82       	st	Z, r1
 UCSR1A = 0x00;
    3dc8:	eb e9       	ldi	r30, 0x9B	; 155
    3dca:	f0 e0       	ldi	r31, 0x00	; 0
    3dcc:	10 82       	st	Z, r1
 UCSR1C = 0x06;
    3dce:	ed e9       	ldi	r30, 0x9D	; 157
    3dd0:	f0 e0       	ldi	r31, 0x00	; 0
    3dd2:	86 e0       	ldi	r24, 0x06	; 6
    3dd4:	80 83       	st	Z, r24
 UBRR1L = 0x08; //set baud rate 115200
    3dd6:	e9 e9       	ldi	r30, 0x99	; 153
    3dd8:	f0 e0       	ldi	r31, 0x00	; 0
    3dda:	88 e0       	ldi	r24, 0x08	; 8
    3ddc:	80 83       	st	Z, r24
 UBRR1H = 0x00; 
    3dde:	e8 e9       	ldi	r30, 0x98	; 152
    3de0:	f0 e0       	ldi	r31, 0x00	; 0
    3de2:	10 82       	st	Z, r1
 UCSR1B = 0b10011000; //송신 인터럽트 개방
    3de4:	ea e9       	ldi	r30, 0x9A	; 154
    3de6:	f0 e0       	ldi	r31, 0x00	; 0
    3de8:	88 e9       	ldi	r24, 0x98	; 152
    3dea:	80 83       	st	Z, r24
}
    3dec:	cf 91       	pop	r28
    3dee:	df 91       	pop	r29
    3df0:	08 95       	ret

00003df2 <init_camera>:
 
void init_camera()
{
    3df2:	0f 93       	push	r16
    3df4:	1f 93       	push	r17
    3df6:	df 93       	push	r29
    3df8:	cf 93       	push	r28
    3dfa:	cd b7       	in	r28, 0x3d	; 61
    3dfc:	de b7       	in	r29, 0x3e	; 62
    3dfe:	c6 54       	subi	r28, 0x46	; 70
    3e00:	d0 40       	sbci	r29, 0x00	; 0
    3e02:	0f b6       	in	r0, 0x3f	; 63
    3e04:	f8 94       	cli
    3e06:	de bf       	out	0x3e, r29	; 62
    3e08:	0f be       	out	0x3f, r0	; 63
    3e0a:	cd bf       	out	0x3d, r28	; 61
 reset(); _delay_ms(1000);
    3e0c:	0e 94 06 01 	call	0x20c	; 0x20c <reset>
    3e10:	fe 01       	movw	r30, r28
    3e12:	ed 5b       	subi	r30, 0xBD	; 189
    3e14:	ff 4f       	sbci	r31, 0xFF	; 255
    3e16:	80 e0       	ldi	r24, 0x00	; 0
    3e18:	90 e0       	ldi	r25, 0x00	; 0
    3e1a:	aa e7       	ldi	r26, 0x7A	; 122
    3e1c:	b4 e4       	ldi	r27, 0x44	; 68
    3e1e:	80 83       	st	Z, r24
    3e20:	91 83       	std	Z+1, r25	; 0x01
    3e22:	a2 83       	std	Z+2, r26	; 0x02
    3e24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e26:	8e 01       	movw	r16, r28
    3e28:	01 5c       	subi	r16, 0xC1	; 193
    3e2a:	1f 4f       	sbci	r17, 0xFF	; 255
    3e2c:	fe 01       	movw	r30, r28
    3e2e:	ed 5b       	subi	r30, 0xBD	; 189
    3e30:	ff 4f       	sbci	r31, 0xFF	; 255
    3e32:	60 81       	ld	r22, Z
    3e34:	71 81       	ldd	r23, Z+1	; 0x01
    3e36:	82 81       	ldd	r24, Z+2	; 0x02
    3e38:	93 81       	ldd	r25, Z+3	; 0x03
    3e3a:	20 e0       	ldi	r18, 0x00	; 0
    3e3c:	30 e0       	ldi	r19, 0x00	; 0
    3e3e:	4a e7       	ldi	r20, 0x7A	; 122
    3e40:	55 e4       	ldi	r21, 0x45	; 69
    3e42:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3e46:	dc 01       	movw	r26, r24
    3e48:	cb 01       	movw	r24, r22
    3e4a:	f8 01       	movw	r30, r16
    3e4c:	80 83       	st	Z, r24
    3e4e:	91 83       	std	Z+1, r25	; 0x01
    3e50:	a2 83       	std	Z+2, r26	; 0x02
    3e52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3e54:	fe 01       	movw	r30, r28
    3e56:	ff 96       	adiw	r30, 0x3f	; 63
    3e58:	60 81       	ld	r22, Z
    3e5a:	71 81       	ldd	r23, Z+1	; 0x01
    3e5c:	82 81       	ldd	r24, Z+2	; 0x02
    3e5e:	93 81       	ldd	r25, Z+3	; 0x03
    3e60:	20 e0       	ldi	r18, 0x00	; 0
    3e62:	30 e0       	ldi	r19, 0x00	; 0
    3e64:	40 e8       	ldi	r20, 0x80	; 128
    3e66:	5f e3       	ldi	r21, 0x3F	; 63
    3e68:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3e6c:	88 23       	and	r24, r24
    3e6e:	2c f4       	brge	.+10     	; 0x3e7a <init_camera+0x88>
		__ticks = 1;
    3e70:	81 e0       	ldi	r24, 0x01	; 1
    3e72:	90 e0       	ldi	r25, 0x00	; 0
    3e74:	9e af       	std	Y+62, r25	; 0x3e
    3e76:	8d af       	std	Y+61, r24	; 0x3d
    3e78:	46 c0       	rjmp	.+140    	; 0x3f06 <init_camera+0x114>
	else if (__tmp > 65535)
    3e7a:	fe 01       	movw	r30, r28
    3e7c:	ff 96       	adiw	r30, 0x3f	; 63
    3e7e:	60 81       	ld	r22, Z
    3e80:	71 81       	ldd	r23, Z+1	; 0x01
    3e82:	82 81       	ldd	r24, Z+2	; 0x02
    3e84:	93 81       	ldd	r25, Z+3	; 0x03
    3e86:	20 e0       	ldi	r18, 0x00	; 0
    3e88:	3f ef       	ldi	r19, 0xFF	; 255
    3e8a:	4f e7       	ldi	r20, 0x7F	; 127
    3e8c:	57 e4       	ldi	r21, 0x47	; 71
    3e8e:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3e92:	18 16       	cp	r1, r24
    3e94:	64 f5       	brge	.+88     	; 0x3eee <init_camera+0xfc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e96:	fe 01       	movw	r30, r28
    3e98:	ed 5b       	subi	r30, 0xBD	; 189
    3e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e9c:	60 81       	ld	r22, Z
    3e9e:	71 81       	ldd	r23, Z+1	; 0x01
    3ea0:	82 81       	ldd	r24, Z+2	; 0x02
    3ea2:	93 81       	ldd	r25, Z+3	; 0x03
    3ea4:	20 e0       	ldi	r18, 0x00	; 0
    3ea6:	30 e0       	ldi	r19, 0x00	; 0
    3ea8:	40 e2       	ldi	r20, 0x20	; 32
    3eaa:	51 e4       	ldi	r21, 0x41	; 65
    3eac:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3eb0:	dc 01       	movw	r26, r24
    3eb2:	cb 01       	movw	r24, r22
    3eb4:	bc 01       	movw	r22, r24
    3eb6:	cd 01       	movw	r24, r26
    3eb8:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3ebc:	dc 01       	movw	r26, r24
    3ebe:	cb 01       	movw	r24, r22
    3ec0:	9e af       	std	Y+62, r25	; 0x3e
    3ec2:	8d af       	std	Y+61, r24	; 0x3d
    3ec4:	0f c0       	rjmp	.+30     	; 0x3ee4 <init_camera+0xf2>
    3ec6:	80 e9       	ldi	r24, 0x90	; 144
    3ec8:	91 e0       	ldi	r25, 0x01	; 1
    3eca:	9c af       	std	Y+60, r25	; 0x3c
    3ecc:	8b af       	std	Y+59, r24	; 0x3b
    3ece:	8b ad       	ldd	r24, Y+59	; 0x3b
    3ed0:	9c ad       	ldd	r25, Y+60	; 0x3c
    3ed2:	01 97       	sbiw	r24, 0x01	; 1
    3ed4:	f1 f7       	brne	.-4      	; 0x3ed2 <init_camera+0xe0>
    3ed6:	9c af       	std	Y+60, r25	; 0x3c
    3ed8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3eda:	8d ad       	ldd	r24, Y+61	; 0x3d
    3edc:	9e ad       	ldd	r25, Y+62	; 0x3e
    3ede:	01 97       	sbiw	r24, 0x01	; 1
    3ee0:	9e af       	std	Y+62, r25	; 0x3e
    3ee2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ee4:	8d ad       	ldd	r24, Y+61	; 0x3d
    3ee6:	9e ad       	ldd	r25, Y+62	; 0x3e
    3ee8:	00 97       	sbiw	r24, 0x00	; 0
    3eea:	69 f7       	brne	.-38     	; 0x3ec6 <init_camera+0xd4>
    3eec:	16 c0       	rjmp	.+44     	; 0x3f1a <init_camera+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3eee:	fe 01       	movw	r30, r28
    3ef0:	ff 96       	adiw	r30, 0x3f	; 63
    3ef2:	60 81       	ld	r22, Z
    3ef4:	71 81       	ldd	r23, Z+1	; 0x01
    3ef6:	82 81       	ldd	r24, Z+2	; 0x02
    3ef8:	93 81       	ldd	r25, Z+3	; 0x03
    3efa:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3efe:	dc 01       	movw	r26, r24
    3f00:	cb 01       	movw	r24, r22
    3f02:	9e af       	std	Y+62, r25	; 0x3e
    3f04:	8d af       	std	Y+61, r24	; 0x3d
    3f06:	8d ad       	ldd	r24, Y+61	; 0x3d
    3f08:	9e ad       	ldd	r25, Y+62	; 0x3e
    3f0a:	9a af       	std	Y+58, r25	; 0x3a
    3f0c:	89 af       	std	Y+57, r24	; 0x39
    3f0e:	89 ad       	ldd	r24, Y+57	; 0x39
    3f10:	9a ad       	ldd	r25, Y+58	; 0x3a
    3f12:	01 97       	sbiw	r24, 0x01	; 1
    3f14:	f1 f7       	brne	.-4      	; 0x3f12 <init_camera+0x120>
    3f16:	9a af       	std	Y+58, r25	; 0x3a
    3f18:	89 af       	std	Y+57, r24	; 0x39
 resize(); _delay_ms(50);
    3f1a:	0e 94 89 02 	call	0x512	; 0x512 <resize>
    3f1e:	80 e0       	ldi	r24, 0x00	; 0
    3f20:	90 e0       	ldi	r25, 0x00	; 0
    3f22:	a8 e4       	ldi	r26, 0x48	; 72
    3f24:	b2 e4       	ldi	r27, 0x42	; 66
    3f26:	8d ab       	std	Y+53, r24	; 0x35
    3f28:	9e ab       	std	Y+54, r25	; 0x36
    3f2a:	af ab       	std	Y+55, r26	; 0x37
    3f2c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f2e:	6d a9       	ldd	r22, Y+53	; 0x35
    3f30:	7e a9       	ldd	r23, Y+54	; 0x36
    3f32:	8f a9       	ldd	r24, Y+55	; 0x37
    3f34:	98 ad       	ldd	r25, Y+56	; 0x38
    3f36:	20 e0       	ldi	r18, 0x00	; 0
    3f38:	30 e0       	ldi	r19, 0x00	; 0
    3f3a:	4a e7       	ldi	r20, 0x7A	; 122
    3f3c:	55 e4       	ldi	r21, 0x45	; 69
    3f3e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3f42:	dc 01       	movw	r26, r24
    3f44:	cb 01       	movw	r24, r22
    3f46:	89 ab       	std	Y+49, r24	; 0x31
    3f48:	9a ab       	std	Y+50, r25	; 0x32
    3f4a:	ab ab       	std	Y+51, r26	; 0x33
    3f4c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3f4e:	69 a9       	ldd	r22, Y+49	; 0x31
    3f50:	7a a9       	ldd	r23, Y+50	; 0x32
    3f52:	8b a9       	ldd	r24, Y+51	; 0x33
    3f54:	9c a9       	ldd	r25, Y+52	; 0x34
    3f56:	20 e0       	ldi	r18, 0x00	; 0
    3f58:	30 e0       	ldi	r19, 0x00	; 0
    3f5a:	40 e8       	ldi	r20, 0x80	; 128
    3f5c:	5f e3       	ldi	r21, 0x3F	; 63
    3f5e:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    3f62:	88 23       	and	r24, r24
    3f64:	2c f4       	brge	.+10     	; 0x3f70 <init_camera+0x17e>
		__ticks = 1;
    3f66:	81 e0       	ldi	r24, 0x01	; 1
    3f68:	90 e0       	ldi	r25, 0x00	; 0
    3f6a:	98 ab       	std	Y+48, r25	; 0x30
    3f6c:	8f a7       	std	Y+47, r24	; 0x2f
    3f6e:	3f c0       	rjmp	.+126    	; 0x3fee <init_camera+0x1fc>
	else if (__tmp > 65535)
    3f70:	69 a9       	ldd	r22, Y+49	; 0x31
    3f72:	7a a9       	ldd	r23, Y+50	; 0x32
    3f74:	8b a9       	ldd	r24, Y+51	; 0x33
    3f76:	9c a9       	ldd	r25, Y+52	; 0x34
    3f78:	20 e0       	ldi	r18, 0x00	; 0
    3f7a:	3f ef       	ldi	r19, 0xFF	; 255
    3f7c:	4f e7       	ldi	r20, 0x7F	; 127
    3f7e:	57 e4       	ldi	r21, 0x47	; 71
    3f80:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    3f84:	18 16       	cp	r1, r24
    3f86:	4c f5       	brge	.+82     	; 0x3fda <init_camera+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f88:	6d a9       	ldd	r22, Y+53	; 0x35
    3f8a:	7e a9       	ldd	r23, Y+54	; 0x36
    3f8c:	8f a9       	ldd	r24, Y+55	; 0x37
    3f8e:	98 ad       	ldd	r25, Y+56	; 0x38
    3f90:	20 e0       	ldi	r18, 0x00	; 0
    3f92:	30 e0       	ldi	r19, 0x00	; 0
    3f94:	40 e2       	ldi	r20, 0x20	; 32
    3f96:	51 e4       	ldi	r21, 0x41	; 65
    3f98:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    3f9c:	dc 01       	movw	r26, r24
    3f9e:	cb 01       	movw	r24, r22
    3fa0:	bc 01       	movw	r22, r24
    3fa2:	cd 01       	movw	r24, r26
    3fa4:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3fa8:	dc 01       	movw	r26, r24
    3faa:	cb 01       	movw	r24, r22
    3fac:	98 ab       	std	Y+48, r25	; 0x30
    3fae:	8f a7       	std	Y+47, r24	; 0x2f
    3fb0:	0f c0       	rjmp	.+30     	; 0x3fd0 <init_camera+0x1de>
    3fb2:	80 e9       	ldi	r24, 0x90	; 144
    3fb4:	91 e0       	ldi	r25, 0x01	; 1
    3fb6:	9e a7       	std	Y+46, r25	; 0x2e
    3fb8:	8d a7       	std	Y+45, r24	; 0x2d
    3fba:	8d a5       	ldd	r24, Y+45	; 0x2d
    3fbc:	9e a5       	ldd	r25, Y+46	; 0x2e
    3fbe:	01 97       	sbiw	r24, 0x01	; 1
    3fc0:	f1 f7       	brne	.-4      	; 0x3fbe <init_camera+0x1cc>
    3fc2:	9e a7       	std	Y+46, r25	; 0x2e
    3fc4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3fc6:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fc8:	98 a9       	ldd	r25, Y+48	; 0x30
    3fca:	01 97       	sbiw	r24, 0x01	; 1
    3fcc:	98 ab       	std	Y+48, r25	; 0x30
    3fce:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fd0:	8f a5       	ldd	r24, Y+47	; 0x2f
    3fd2:	98 a9       	ldd	r25, Y+48	; 0x30
    3fd4:	00 97       	sbiw	r24, 0x00	; 0
    3fd6:	69 f7       	brne	.-38     	; 0x3fb2 <init_camera+0x1c0>
    3fd8:	14 c0       	rjmp	.+40     	; 0x4002 <init_camera+0x210>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fda:	69 a9       	ldd	r22, Y+49	; 0x31
    3fdc:	7a a9       	ldd	r23, Y+50	; 0x32
    3fde:	8b a9       	ldd	r24, Y+51	; 0x33
    3fe0:	9c a9       	ldd	r25, Y+52	; 0x34
    3fe2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    3fe6:	dc 01       	movw	r26, r24
    3fe8:	cb 01       	movw	r24, r22
    3fea:	98 ab       	std	Y+48, r25	; 0x30
    3fec:	8f a7       	std	Y+47, r24	; 0x2f
    3fee:	8f a5       	ldd	r24, Y+47	; 0x2f
    3ff0:	98 a9       	ldd	r25, Y+48	; 0x30
    3ff2:	9c a7       	std	Y+44, r25	; 0x2c
    3ff4:	8b a7       	std	Y+43, r24	; 0x2b
    3ff6:	8b a5       	ldd	r24, Y+43	; 0x2b
    3ff8:	9c a5       	ldd	r25, Y+44	; 0x2c
    3ffa:	01 97       	sbiw	r24, 0x01	; 1
    3ffc:	f1 f7       	brne	.-4      	; 0x3ffa <init_camera+0x208>
    3ffe:	9c a7       	std	Y+44, r25	; 0x2c
    4000:	8b a7       	std	Y+43, r24	; 0x2b
 zip(); _delay_ms(50);
    4002:	0e 94 13 1a 	call	0x3426	; 0x3426 <zip>
    4006:	80 e0       	ldi	r24, 0x00	; 0
    4008:	90 e0       	ldi	r25, 0x00	; 0
    400a:	a8 e4       	ldi	r26, 0x48	; 72
    400c:	b2 e4       	ldi	r27, 0x42	; 66
    400e:	8f a3       	std	Y+39, r24	; 0x27
    4010:	98 a7       	std	Y+40, r25	; 0x28
    4012:	a9 a7       	std	Y+41, r26	; 0x29
    4014:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4016:	6f a1       	ldd	r22, Y+39	; 0x27
    4018:	78 a5       	ldd	r23, Y+40	; 0x28
    401a:	89 a5       	ldd	r24, Y+41	; 0x29
    401c:	9a a5       	ldd	r25, Y+42	; 0x2a
    401e:	20 e0       	ldi	r18, 0x00	; 0
    4020:	30 e0       	ldi	r19, 0x00	; 0
    4022:	4a e7       	ldi	r20, 0x7A	; 122
    4024:	55 e4       	ldi	r21, 0x45	; 69
    4026:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    402a:	dc 01       	movw	r26, r24
    402c:	cb 01       	movw	r24, r22
    402e:	8b a3       	std	Y+35, r24	; 0x23
    4030:	9c a3       	std	Y+36, r25	; 0x24
    4032:	ad a3       	std	Y+37, r26	; 0x25
    4034:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4036:	6b a1       	ldd	r22, Y+35	; 0x23
    4038:	7c a1       	ldd	r23, Y+36	; 0x24
    403a:	8d a1       	ldd	r24, Y+37	; 0x25
    403c:	9e a1       	ldd	r25, Y+38	; 0x26
    403e:	20 e0       	ldi	r18, 0x00	; 0
    4040:	30 e0       	ldi	r19, 0x00	; 0
    4042:	40 e8       	ldi	r20, 0x80	; 128
    4044:	5f e3       	ldi	r21, 0x3F	; 63
    4046:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    404a:	88 23       	and	r24, r24
    404c:	2c f4       	brge	.+10     	; 0x4058 <init_camera+0x266>
		__ticks = 1;
    404e:	81 e0       	ldi	r24, 0x01	; 1
    4050:	90 e0       	ldi	r25, 0x00	; 0
    4052:	9a a3       	std	Y+34, r25	; 0x22
    4054:	89 a3       	std	Y+33, r24	; 0x21
    4056:	3f c0       	rjmp	.+126    	; 0x40d6 <init_camera+0x2e4>
	else if (__tmp > 65535)
    4058:	6b a1       	ldd	r22, Y+35	; 0x23
    405a:	7c a1       	ldd	r23, Y+36	; 0x24
    405c:	8d a1       	ldd	r24, Y+37	; 0x25
    405e:	9e a1       	ldd	r25, Y+38	; 0x26
    4060:	20 e0       	ldi	r18, 0x00	; 0
    4062:	3f ef       	ldi	r19, 0xFF	; 255
    4064:	4f e7       	ldi	r20, 0x7F	; 127
    4066:	57 e4       	ldi	r21, 0x47	; 71
    4068:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    406c:	18 16       	cp	r1, r24
    406e:	4c f5       	brge	.+82     	; 0x40c2 <init_camera+0x2d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4070:	6f a1       	ldd	r22, Y+39	; 0x27
    4072:	78 a5       	ldd	r23, Y+40	; 0x28
    4074:	89 a5       	ldd	r24, Y+41	; 0x29
    4076:	9a a5       	ldd	r25, Y+42	; 0x2a
    4078:	20 e0       	ldi	r18, 0x00	; 0
    407a:	30 e0       	ldi	r19, 0x00	; 0
    407c:	40 e2       	ldi	r20, 0x20	; 32
    407e:	51 e4       	ldi	r21, 0x41	; 65
    4080:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    4084:	dc 01       	movw	r26, r24
    4086:	cb 01       	movw	r24, r22
    4088:	bc 01       	movw	r22, r24
    408a:	cd 01       	movw	r24, r26
    408c:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    4090:	dc 01       	movw	r26, r24
    4092:	cb 01       	movw	r24, r22
    4094:	9a a3       	std	Y+34, r25	; 0x22
    4096:	89 a3       	std	Y+33, r24	; 0x21
    4098:	0f c0       	rjmp	.+30     	; 0x40b8 <init_camera+0x2c6>
    409a:	80 e9       	ldi	r24, 0x90	; 144
    409c:	91 e0       	ldi	r25, 0x01	; 1
    409e:	98 a3       	std	Y+32, r25	; 0x20
    40a0:	8f 8f       	std	Y+31, r24	; 0x1f
    40a2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    40a4:	98 a1       	ldd	r25, Y+32	; 0x20
    40a6:	01 97       	sbiw	r24, 0x01	; 1
    40a8:	f1 f7       	brne	.-4      	; 0x40a6 <init_camera+0x2b4>
    40aa:	98 a3       	std	Y+32, r25	; 0x20
    40ac:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40ae:	89 a1       	ldd	r24, Y+33	; 0x21
    40b0:	9a a1       	ldd	r25, Y+34	; 0x22
    40b2:	01 97       	sbiw	r24, 0x01	; 1
    40b4:	9a a3       	std	Y+34, r25	; 0x22
    40b6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40b8:	89 a1       	ldd	r24, Y+33	; 0x21
    40ba:	9a a1       	ldd	r25, Y+34	; 0x22
    40bc:	00 97       	sbiw	r24, 0x00	; 0
    40be:	69 f7       	brne	.-38     	; 0x409a <init_camera+0x2a8>
    40c0:	14 c0       	rjmp	.+40     	; 0x40ea <init_camera+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40c2:	6b a1       	ldd	r22, Y+35	; 0x23
    40c4:	7c a1       	ldd	r23, Y+36	; 0x24
    40c6:	8d a1       	ldd	r24, Y+37	; 0x25
    40c8:	9e a1       	ldd	r25, Y+38	; 0x26
    40ca:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    40ce:	dc 01       	movw	r26, r24
    40d0:	cb 01       	movw	r24, r22
    40d2:	9a a3       	std	Y+34, r25	; 0x22
    40d4:	89 a3       	std	Y+33, r24	; 0x21
    40d6:	89 a1       	ldd	r24, Y+33	; 0x21
    40d8:	9a a1       	ldd	r25, Y+34	; 0x22
    40da:	9e 8f       	std	Y+30, r25	; 0x1e
    40dc:	8d 8f       	std	Y+29, r24	; 0x1d
    40de:	8d 8d       	ldd	r24, Y+29	; 0x1d
    40e0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    40e2:	01 97       	sbiw	r24, 0x01	; 1
    40e4:	f1 f7       	brne	.-4      	; 0x40e2 <init_camera+0x2f0>
    40e6:	9e 8f       	std	Y+30, r25	; 0x1e
    40e8:	8d 8f       	std	Y+29, r24	; 0x1d
 set_rate(); _delay_ms(50);		//
    40ea:	0e 94 36 07 	call	0xe6c	; 0xe6c <set_rate>
    40ee:	80 e0       	ldi	r24, 0x00	; 0
    40f0:	90 e0       	ldi	r25, 0x00	; 0
    40f2:	a8 e4       	ldi	r26, 0x48	; 72
    40f4:	b2 e4       	ldi	r27, 0x42	; 66
    40f6:	89 8f       	std	Y+25, r24	; 0x19
    40f8:	9a 8f       	std	Y+26, r25	; 0x1a
    40fa:	ab 8f       	std	Y+27, r26	; 0x1b
    40fc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40fe:	69 8d       	ldd	r22, Y+25	; 0x19
    4100:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4102:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4104:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4106:	20 e0       	ldi	r18, 0x00	; 0
    4108:	30 e0       	ldi	r19, 0x00	; 0
    410a:	4a e7       	ldi	r20, 0x7A	; 122
    410c:	55 e4       	ldi	r21, 0x45	; 69
    410e:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    4112:	dc 01       	movw	r26, r24
    4114:	cb 01       	movw	r24, r22
    4116:	8d 8b       	std	Y+21, r24	; 0x15
    4118:	9e 8b       	std	Y+22, r25	; 0x16
    411a:	af 8b       	std	Y+23, r26	; 0x17
    411c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    411e:	6d 89       	ldd	r22, Y+21	; 0x15
    4120:	7e 89       	ldd	r23, Y+22	; 0x16
    4122:	8f 89       	ldd	r24, Y+23	; 0x17
    4124:	98 8d       	ldd	r25, Y+24	; 0x18
    4126:	20 e0       	ldi	r18, 0x00	; 0
    4128:	30 e0       	ldi	r19, 0x00	; 0
    412a:	40 e8       	ldi	r20, 0x80	; 128
    412c:	5f e3       	ldi	r21, 0x3F	; 63
    412e:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    4132:	88 23       	and	r24, r24
    4134:	2c f4       	brge	.+10     	; 0x4140 <init_camera+0x34e>
		__ticks = 1;
    4136:	81 e0       	ldi	r24, 0x01	; 1
    4138:	90 e0       	ldi	r25, 0x00	; 0
    413a:	9c 8b       	std	Y+20, r25	; 0x14
    413c:	8b 8b       	std	Y+19, r24	; 0x13
    413e:	3f c0       	rjmp	.+126    	; 0x41be <init_camera+0x3cc>
	else if (__tmp > 65535)
    4140:	6d 89       	ldd	r22, Y+21	; 0x15
    4142:	7e 89       	ldd	r23, Y+22	; 0x16
    4144:	8f 89       	ldd	r24, Y+23	; 0x17
    4146:	98 8d       	ldd	r25, Y+24	; 0x18
    4148:	20 e0       	ldi	r18, 0x00	; 0
    414a:	3f ef       	ldi	r19, 0xFF	; 255
    414c:	4f e7       	ldi	r20, 0x7F	; 127
    414e:	57 e4       	ldi	r21, 0x47	; 71
    4150:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    4154:	18 16       	cp	r1, r24
    4156:	4c f5       	brge	.+82     	; 0x41aa <init_camera+0x3b8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4158:	69 8d       	ldd	r22, Y+25	; 0x19
    415a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    415c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    415e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4160:	20 e0       	ldi	r18, 0x00	; 0
    4162:	30 e0       	ldi	r19, 0x00	; 0
    4164:	40 e2       	ldi	r20, 0x20	; 32
    4166:	51 e4       	ldi	r21, 0x41	; 65
    4168:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    416c:	dc 01       	movw	r26, r24
    416e:	cb 01       	movw	r24, r22
    4170:	bc 01       	movw	r22, r24
    4172:	cd 01       	movw	r24, r26
    4174:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    4178:	dc 01       	movw	r26, r24
    417a:	cb 01       	movw	r24, r22
    417c:	9c 8b       	std	Y+20, r25	; 0x14
    417e:	8b 8b       	std	Y+19, r24	; 0x13
    4180:	0f c0       	rjmp	.+30     	; 0x41a0 <init_camera+0x3ae>
    4182:	80 e9       	ldi	r24, 0x90	; 144
    4184:	91 e0       	ldi	r25, 0x01	; 1
    4186:	9a 8b       	std	Y+18, r25	; 0x12
    4188:	89 8b       	std	Y+17, r24	; 0x11
    418a:	89 89       	ldd	r24, Y+17	; 0x11
    418c:	9a 89       	ldd	r25, Y+18	; 0x12
    418e:	01 97       	sbiw	r24, 0x01	; 1
    4190:	f1 f7       	brne	.-4      	; 0x418e <init_camera+0x39c>
    4192:	9a 8b       	std	Y+18, r25	; 0x12
    4194:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4196:	8b 89       	ldd	r24, Y+19	; 0x13
    4198:	9c 89       	ldd	r25, Y+20	; 0x14
    419a:	01 97       	sbiw	r24, 0x01	; 1
    419c:	9c 8b       	std	Y+20, r25	; 0x14
    419e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    41a0:	8b 89       	ldd	r24, Y+19	; 0x13
    41a2:	9c 89       	ldd	r25, Y+20	; 0x14
    41a4:	00 97       	sbiw	r24, 0x00	; 0
    41a6:	69 f7       	brne	.-38     	; 0x4182 <init_camera+0x390>
    41a8:	14 c0       	rjmp	.+40     	; 0x41d2 <init_camera+0x3e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41aa:	6d 89       	ldd	r22, Y+21	; 0x15
    41ac:	7e 89       	ldd	r23, Y+22	; 0x16
    41ae:	8f 89       	ldd	r24, Y+23	; 0x17
    41b0:	98 8d       	ldd	r25, Y+24	; 0x18
    41b2:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    41b6:	dc 01       	movw	r26, r24
    41b8:	cb 01       	movw	r24, r22
    41ba:	9c 8b       	std	Y+20, r25	; 0x14
    41bc:	8b 8b       	std	Y+19, r24	; 0x13
    41be:	8b 89       	ldd	r24, Y+19	; 0x13
    41c0:	9c 89       	ldd	r25, Y+20	; 0x14
    41c2:	98 8b       	std	Y+16, r25	; 0x10
    41c4:	8f 87       	std	Y+15, r24	; 0x0f
    41c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    41c8:	98 89       	ldd	r25, Y+16	; 0x10
    41ca:	01 97       	sbiw	r24, 0x01	; 1
    41cc:	f1 f7       	brne	.-4      	; 0x41ca <init_camera+0x3d8>
    41ce:	98 8b       	std	Y+16, r25	; 0x10
    41d0:	8f 87       	std	Y+15, r24	; 0x0f
 UBRR0L = 0x08; printf("\r\n chang boudrate"); _delay_ms(50);
    41d2:	e9 e2       	ldi	r30, 0x29	; 41
    41d4:	f0 e0       	ldi	r31, 0x00	; 0
    41d6:	88 e0       	ldi	r24, 0x08	; 8
    41d8:	80 83       	st	Z, r24
    41da:	00 d0       	rcall	.+0      	; 0x41dc <init_camera+0x3ea>
    41dc:	ed b7       	in	r30, 0x3d	; 61
    41de:	fe b7       	in	r31, 0x3e	; 62
    41e0:	31 96       	adiw	r30, 0x01	; 1
    41e2:	84 e5       	ldi	r24, 0x54	; 84
    41e4:	91 e0       	ldi	r25, 0x01	; 1
    41e6:	91 83       	std	Z+1, r25	; 0x01
    41e8:	80 83       	st	Z, r24
    41ea:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
    41ee:	0f 90       	pop	r0
    41f0:	0f 90       	pop	r0
    41f2:	80 e0       	ldi	r24, 0x00	; 0
    41f4:	90 e0       	ldi	r25, 0x00	; 0
    41f6:	a8 e4       	ldi	r26, 0x48	; 72
    41f8:	b2 e4       	ldi	r27, 0x42	; 66
    41fa:	8b 87       	std	Y+11, r24	; 0x0b
    41fc:	9c 87       	std	Y+12, r25	; 0x0c
    41fe:	ad 87       	std	Y+13, r26	; 0x0d
    4200:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4202:	6b 85       	ldd	r22, Y+11	; 0x0b
    4204:	7c 85       	ldd	r23, Y+12	; 0x0c
    4206:	8d 85       	ldd	r24, Y+13	; 0x0d
    4208:	9e 85       	ldd	r25, Y+14	; 0x0e
    420a:	20 e0       	ldi	r18, 0x00	; 0
    420c:	30 e0       	ldi	r19, 0x00	; 0
    420e:	4a e7       	ldi	r20, 0x7A	; 122
    4210:	55 e4       	ldi	r21, 0x45	; 69
    4212:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    4216:	dc 01       	movw	r26, r24
    4218:	cb 01       	movw	r24, r22
    421a:	8f 83       	std	Y+7, r24	; 0x07
    421c:	98 87       	std	Y+8, r25	; 0x08
    421e:	a9 87       	std	Y+9, r26	; 0x09
    4220:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4222:	6f 81       	ldd	r22, Y+7	; 0x07
    4224:	78 85       	ldd	r23, Y+8	; 0x08
    4226:	89 85       	ldd	r24, Y+9	; 0x09
    4228:	9a 85       	ldd	r25, Y+10	; 0x0a
    422a:	20 e0       	ldi	r18, 0x00	; 0
    422c:	30 e0       	ldi	r19, 0x00	; 0
    422e:	40 e8       	ldi	r20, 0x80	; 128
    4230:	5f e3       	ldi	r21, 0x3F	; 63
    4232:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    4236:	88 23       	and	r24, r24
    4238:	2c f4       	brge	.+10     	; 0x4244 <init_camera+0x452>
		__ticks = 1;
    423a:	81 e0       	ldi	r24, 0x01	; 1
    423c:	90 e0       	ldi	r25, 0x00	; 0
    423e:	9e 83       	std	Y+6, r25	; 0x06
    4240:	8d 83       	std	Y+5, r24	; 0x05
    4242:	3f c0       	rjmp	.+126    	; 0x42c2 <init_camera+0x4d0>
	else if (__tmp > 65535)
    4244:	6f 81       	ldd	r22, Y+7	; 0x07
    4246:	78 85       	ldd	r23, Y+8	; 0x08
    4248:	89 85       	ldd	r24, Y+9	; 0x09
    424a:	9a 85       	ldd	r25, Y+10	; 0x0a
    424c:	20 e0       	ldi	r18, 0x00	; 0
    424e:	3f ef       	ldi	r19, 0xFF	; 255
    4250:	4f e7       	ldi	r20, 0x7F	; 127
    4252:	57 e4       	ldi	r21, 0x47	; 71
    4254:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    4258:	18 16       	cp	r1, r24
    425a:	4c f5       	brge	.+82     	; 0x42ae <init_camera+0x4bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    425c:	6b 85       	ldd	r22, Y+11	; 0x0b
    425e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4260:	8d 85       	ldd	r24, Y+13	; 0x0d
    4262:	9e 85       	ldd	r25, Y+14	; 0x0e
    4264:	20 e0       	ldi	r18, 0x00	; 0
    4266:	30 e0       	ldi	r19, 0x00	; 0
    4268:	40 e2       	ldi	r20, 0x20	; 32
    426a:	51 e4       	ldi	r21, 0x41	; 65
    426c:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    4270:	dc 01       	movw	r26, r24
    4272:	cb 01       	movw	r24, r22
    4274:	bc 01       	movw	r22, r24
    4276:	cd 01       	movw	r24, r26
    4278:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    427c:	dc 01       	movw	r26, r24
    427e:	cb 01       	movw	r24, r22
    4280:	9e 83       	std	Y+6, r25	; 0x06
    4282:	8d 83       	std	Y+5, r24	; 0x05
    4284:	0f c0       	rjmp	.+30     	; 0x42a4 <init_camera+0x4b2>
    4286:	80 e9       	ldi	r24, 0x90	; 144
    4288:	91 e0       	ldi	r25, 0x01	; 1
    428a:	9c 83       	std	Y+4, r25	; 0x04
    428c:	8b 83       	std	Y+3, r24	; 0x03
    428e:	8b 81       	ldd	r24, Y+3	; 0x03
    4290:	9c 81       	ldd	r25, Y+4	; 0x04
    4292:	01 97       	sbiw	r24, 0x01	; 1
    4294:	f1 f7       	brne	.-4      	; 0x4292 <init_camera+0x4a0>
    4296:	9c 83       	std	Y+4, r25	; 0x04
    4298:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    429a:	8d 81       	ldd	r24, Y+5	; 0x05
    429c:	9e 81       	ldd	r25, Y+6	; 0x06
    429e:	01 97       	sbiw	r24, 0x01	; 1
    42a0:	9e 83       	std	Y+6, r25	; 0x06
    42a2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42a4:	8d 81       	ldd	r24, Y+5	; 0x05
    42a6:	9e 81       	ldd	r25, Y+6	; 0x06
    42a8:	00 97       	sbiw	r24, 0x00	; 0
    42aa:	69 f7       	brne	.-38     	; 0x4286 <init_camera+0x494>
    42ac:	14 c0       	rjmp	.+40     	; 0x42d6 <init_camera+0x4e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42ae:	6f 81       	ldd	r22, Y+7	; 0x07
    42b0:	78 85       	ldd	r23, Y+8	; 0x08
    42b2:	89 85       	ldd	r24, Y+9	; 0x09
    42b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    42b6:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    42ba:	dc 01       	movw	r26, r24
    42bc:	cb 01       	movw	r24, r22
    42be:	9e 83       	std	Y+6, r25	; 0x06
    42c0:	8d 83       	std	Y+5, r24	; 0x05
    42c2:	8d 81       	ldd	r24, Y+5	; 0x05
    42c4:	9e 81       	ldd	r25, Y+6	; 0x06
    42c6:	9a 83       	std	Y+2, r25	; 0x02
    42c8:	89 83       	std	Y+1, r24	; 0x01
    42ca:	89 81       	ldd	r24, Y+1	; 0x01
    42cc:	9a 81       	ldd	r25, Y+2	; 0x02
    42ce:	01 97       	sbiw	r24, 0x01	; 1
    42d0:	f1 f7       	brne	.-4      	; 0x42ce <init_camera+0x4dc>
    42d2:	9a 83       	std	Y+2, r25	; 0x02
    42d4:	89 83       	std	Y+1, r24	; 0x01
 idle();
    42d6:	0e 94 76 0a 	call	0x14ec	; 0x14ec <idle>
}
    42da:	ca 5b       	subi	r28, 0xBA	; 186
    42dc:	df 4f       	sbci	r29, 0xFF	; 255
    42de:	0f b6       	in	r0, 0x3f	; 63
    42e0:	f8 94       	cli
    42e2:	de bf       	out	0x3e, r29	; 62
    42e4:	0f be       	out	0x3f, r0	; 63
    42e6:	cd bf       	out	0x3d, r28	; 61
    42e8:	cf 91       	pop	r28
    42ea:	df 91       	pop	r29
    42ec:	1f 91       	pop	r17
    42ee:	0f 91       	pop	r16
    42f0:	08 95       	ret

000042f2 <init_devices>:
 
void init_devices(void)
{
    42f2:	df 93       	push	r29
    42f4:	cf 93       	push	r28
    42f6:	cd b7       	in	r28, 0x3d	; 61
    42f8:	de b7       	in	r29, 0x3e	; 62
  cli(); //disable all interrupts
    42fa:	f8 94       	cli
  port_init();
    42fc:	0e 94 c3 00 	call	0x186	; 0x186 <port_init>
  uart0_init();  
    4300:	0e 94 c1 1e 	call	0x3d82	; 0x3d82 <uart0_init>
  uart1_init();
    4304:	0e 94 dd 1e 	call	0x3dba	; 0x3dba <uart1_init>
  fdevopen(Putchar, Getchar);//file stream 0
    4308:	8a ec       	ldi	r24, 0xCA	; 202
    430a:	90 e0       	ldi	r25, 0x00	; 0
    430c:	20 ef       	ldi	r18, 0xF0	; 240
    430e:	30 e0       	ldi	r19, 0x00	; 0
    4310:	b9 01       	movw	r22, r18
    4312:	0e 94 5f 29 	call	0x52be	; 0x52be <fdevopen>
  sei(); 
    4316:	78 94       	sei
}
    4318:	cf 91       	pop	r28
    431a:	df 91       	pop	r29
    431c:	08 95       	ret

0000431e <shot_camera>:
 

void shot_camera()
{_delay_ms(50);
    431e:	df 93       	push	r29
    4320:	cf 93       	push	r28
    4322:	cd b7       	in	r28, 0x3d	; 61
    4324:	de b7       	in	r29, 0x3e	; 62
    4326:	2e 97       	sbiw	r28, 0x0e	; 14
    4328:	0f b6       	in	r0, 0x3f	; 63
    432a:	f8 94       	cli
    432c:	de bf       	out	0x3e, r29	; 62
    432e:	0f be       	out	0x3f, r0	; 63
    4330:	cd bf       	out	0x3d, r28	; 61
    4332:	80 e0       	ldi	r24, 0x00	; 0
    4334:	90 e0       	ldi	r25, 0x00	; 0
    4336:	a8 e4       	ldi	r26, 0x48	; 72
    4338:	b2 e4       	ldi	r27, 0x42	; 66
    433a:	8b 87       	std	Y+11, r24	; 0x0b
    433c:	9c 87       	std	Y+12, r25	; 0x0c
    433e:	ad 87       	std	Y+13, r26	; 0x0d
    4340:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4342:	6b 85       	ldd	r22, Y+11	; 0x0b
    4344:	7c 85       	ldd	r23, Y+12	; 0x0c
    4346:	8d 85       	ldd	r24, Y+13	; 0x0d
    4348:	9e 85       	ldd	r25, Y+14	; 0x0e
    434a:	20 e0       	ldi	r18, 0x00	; 0
    434c:	30 e0       	ldi	r19, 0x00	; 0
    434e:	4a e7       	ldi	r20, 0x7A	; 122
    4350:	55 e4       	ldi	r21, 0x45	; 69
    4352:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    4356:	dc 01       	movw	r26, r24
    4358:	cb 01       	movw	r24, r22
    435a:	8f 83       	std	Y+7, r24	; 0x07
    435c:	98 87       	std	Y+8, r25	; 0x08
    435e:	a9 87       	std	Y+9, r26	; 0x09
    4360:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4362:	6f 81       	ldd	r22, Y+7	; 0x07
    4364:	78 85       	ldd	r23, Y+8	; 0x08
    4366:	89 85       	ldd	r24, Y+9	; 0x09
    4368:	9a 85       	ldd	r25, Y+10	; 0x0a
    436a:	20 e0       	ldi	r18, 0x00	; 0
    436c:	30 e0       	ldi	r19, 0x00	; 0
    436e:	40 e8       	ldi	r20, 0x80	; 128
    4370:	5f e3       	ldi	r21, 0x3F	; 63
    4372:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    4376:	88 23       	and	r24, r24
    4378:	2c f4       	brge	.+10     	; 0x4384 <shot_camera+0x66>
		__ticks = 1;
    437a:	81 e0       	ldi	r24, 0x01	; 1
    437c:	90 e0       	ldi	r25, 0x00	; 0
    437e:	9e 83       	std	Y+6, r25	; 0x06
    4380:	8d 83       	std	Y+5, r24	; 0x05
    4382:	3f c0       	rjmp	.+126    	; 0x4402 <shot_camera+0xe4>
	else if (__tmp > 65535)
    4384:	6f 81       	ldd	r22, Y+7	; 0x07
    4386:	78 85       	ldd	r23, Y+8	; 0x08
    4388:	89 85       	ldd	r24, Y+9	; 0x09
    438a:	9a 85       	ldd	r25, Y+10	; 0x0a
    438c:	20 e0       	ldi	r18, 0x00	; 0
    438e:	3f ef       	ldi	r19, 0xFF	; 255
    4390:	4f e7       	ldi	r20, 0x7F	; 127
    4392:	57 e4       	ldi	r21, 0x47	; 71
    4394:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    4398:	18 16       	cp	r1, r24
    439a:	4c f5       	brge	.+82     	; 0x43ee <shot_camera+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    439c:	6b 85       	ldd	r22, Y+11	; 0x0b
    439e:	7c 85       	ldd	r23, Y+12	; 0x0c
    43a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    43a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    43a4:	20 e0       	ldi	r18, 0x00	; 0
    43a6:	30 e0       	ldi	r19, 0x00	; 0
    43a8:	40 e2       	ldi	r20, 0x20	; 32
    43aa:	51 e4       	ldi	r21, 0x41	; 65
    43ac:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    43b0:	dc 01       	movw	r26, r24
    43b2:	cb 01       	movw	r24, r22
    43b4:	bc 01       	movw	r22, r24
    43b6:	cd 01       	movw	r24, r26
    43b8:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    43bc:	dc 01       	movw	r26, r24
    43be:	cb 01       	movw	r24, r22
    43c0:	9e 83       	std	Y+6, r25	; 0x06
    43c2:	8d 83       	std	Y+5, r24	; 0x05
    43c4:	0f c0       	rjmp	.+30     	; 0x43e4 <shot_camera+0xc6>
    43c6:	80 e9       	ldi	r24, 0x90	; 144
    43c8:	91 e0       	ldi	r25, 0x01	; 1
    43ca:	9c 83       	std	Y+4, r25	; 0x04
    43cc:	8b 83       	std	Y+3, r24	; 0x03
    43ce:	8b 81       	ldd	r24, Y+3	; 0x03
    43d0:	9c 81       	ldd	r25, Y+4	; 0x04
    43d2:	01 97       	sbiw	r24, 0x01	; 1
    43d4:	f1 f7       	brne	.-4      	; 0x43d2 <shot_camera+0xb4>
    43d6:	9c 83       	std	Y+4, r25	; 0x04
    43d8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43da:	8d 81       	ldd	r24, Y+5	; 0x05
    43dc:	9e 81       	ldd	r25, Y+6	; 0x06
    43de:	01 97       	sbiw	r24, 0x01	; 1
    43e0:	9e 83       	std	Y+6, r25	; 0x06
    43e2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43e4:	8d 81       	ldd	r24, Y+5	; 0x05
    43e6:	9e 81       	ldd	r25, Y+6	; 0x06
    43e8:	00 97       	sbiw	r24, 0x00	; 0
    43ea:	69 f7       	brne	.-38     	; 0x43c6 <shot_camera+0xa8>
    43ec:	14 c0       	rjmp	.+40     	; 0x4416 <shot_camera+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43ee:	6f 81       	ldd	r22, Y+7	; 0x07
    43f0:	78 85       	ldd	r23, Y+8	; 0x08
    43f2:	89 85       	ldd	r24, Y+9	; 0x09
    43f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    43f6:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    43fa:	dc 01       	movw	r26, r24
    43fc:	cb 01       	movw	r24, r22
    43fe:	9e 83       	std	Y+6, r25	; 0x06
    4400:	8d 83       	std	Y+5, r24	; 0x05
    4402:	8d 81       	ldd	r24, Y+5	; 0x05
    4404:	9e 81       	ldd	r25, Y+6	; 0x06
    4406:	9a 83       	std	Y+2, r25	; 0x02
    4408:	89 83       	std	Y+1, r24	; 0x01
    440a:	89 81       	ldd	r24, Y+1	; 0x01
    440c:	9a 81       	ldd	r25, Y+2	; 0x02
    440e:	01 97       	sbiw	r24, 0x01	; 1
    4410:	f1 f7       	brne	.-4      	; 0x440e <shot_camera+0xf0>
    4412:	9a 83       	std	Y+2, r25	; 0x02
    4414:	89 83       	std	Y+1, r24	; 0x01
 shot();  
    4416:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <shot>

 idle(); 
    441a:	0e 94 76 0a 	call	0x14ec	; 0x14ec <idle>
} 
    441e:	2e 96       	adiw	r28, 0x0e	; 14
    4420:	0f b6       	in	r0, 0x3f	; 63
    4422:	f8 94       	cli
    4424:	de bf       	out	0x3e, r29	; 62
    4426:	0f be       	out	0x3f, r0	; 63
    4428:	cd bf       	out	0x3d, r28	; 61
    442a:	cf 91       	pop	r28
    442c:	df 91       	pop	r29
    442e:	08 95       	ret

00004430 <main>:
 
int main(void)
{
    4430:	df 93       	push	r29
    4432:	cf 93       	push	r28
    4434:	cd b7       	in	r28, 0x3d	; 61
    4436:	de b7       	in	r29, 0x3e	; 62
    4438:	2e 97       	sbiw	r28, 0x0e	; 14
    443a:	0f b6       	in	r0, 0x3f	; 63
    443c:	f8 94       	cli
    443e:	de bf       	out	0x3e, r29	; 62
    4440:	0f be       	out	0x3f, r0	; 63
    4442:	cd bf       	out	0x3d, r28	; 61
 init_devices();
    4444:	0e 94 79 21 	call	0x42f2	; 0x42f2 <init_devices>
 printf("\r\n\r\nConnect with 2560\r\n");
    4448:	86 e6       	ldi	r24, 0x66	; 102
    444a:	91 e0       	ldi	r25, 0x01	; 1
    444c:	0e 94 bd 29 	call	0x537a	; 0x537a <puts>
 init_camera();
    4450:	0e 94 f9 1e 	call	0x3df2	; 0x3df2 <init_camera>

 EIMSK = 0x03;
    4454:	e9 e5       	ldi	r30, 0x59	; 89
    4456:	f0 e0       	ldi	r31, 0x00	; 0
    4458:	83 e0       	ldi	r24, 0x03	; 3
    445a:	80 83       	st	Z, r24
 EICRA = 0x0A;
    445c:	ea e6       	ldi	r30, 0x6A	; 106
    445e:	f0 e0       	ldi	r31, 0x00	; 0
    4460:	8a e0       	ldi	r24, 0x0A	; 10
    4462:	80 83       	st	Z, r24
 while(1)
 {
 	if(idle_flag == 1)
    4464:	80 91 ae 01 	lds	r24, 0x01AE
    4468:	90 91 af 01 	lds	r25, 0x01AF
    446c:	81 30       	cpi	r24, 0x01	; 1
    446e:	91 05       	cpc	r25, r1
    4470:	11 f4       	brne	.+4      	; 0x4476 <main+0x46>
		idle();
    4472:	0e 94 76 0a 	call	0x14ec	; 0x14ec <idle>
    4476:	80 e0       	ldi	r24, 0x00	; 0
    4478:	90 e0       	ldi	r25, 0x00	; 0
    447a:	a0 e8       	ldi	r26, 0x80	; 128
    447c:	bf e3       	ldi	r27, 0x3F	; 63
    447e:	8b 87       	std	Y+11, r24	; 0x0b
    4480:	9c 87       	std	Y+12, r25	; 0x0c
    4482:	ad 87       	std	Y+13, r26	; 0x0d
    4484:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4486:	6b 85       	ldd	r22, Y+11	; 0x0b
    4488:	7c 85       	ldd	r23, Y+12	; 0x0c
    448a:	8d 85       	ldd	r24, Y+13	; 0x0d
    448c:	9e 85       	ldd	r25, Y+14	; 0x0e
    448e:	20 e0       	ldi	r18, 0x00	; 0
    4490:	30 e0       	ldi	r19, 0x00	; 0
    4492:	4a e7       	ldi	r20, 0x7A	; 122
    4494:	55 e4       	ldi	r21, 0x45	; 69
    4496:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    449a:	dc 01       	movw	r26, r24
    449c:	cb 01       	movw	r24, r22
    449e:	8f 83       	std	Y+7, r24	; 0x07
    44a0:	98 87       	std	Y+8, r25	; 0x08
    44a2:	a9 87       	std	Y+9, r26	; 0x09
    44a4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    44a6:	6f 81       	ldd	r22, Y+7	; 0x07
    44a8:	78 85       	ldd	r23, Y+8	; 0x08
    44aa:	89 85       	ldd	r24, Y+9	; 0x09
    44ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    44ae:	20 e0       	ldi	r18, 0x00	; 0
    44b0:	30 e0       	ldi	r19, 0x00	; 0
    44b2:	40 e8       	ldi	r20, 0x80	; 128
    44b4:	5f e3       	ldi	r21, 0x3F	; 63
    44b6:	0e 94 fe 26 	call	0x4dfc	; 0x4dfc <__ltsf2>
    44ba:	88 23       	and	r24, r24
    44bc:	2c f4       	brge	.+10     	; 0x44c8 <main+0x98>
		__ticks = 1;
    44be:	81 e0       	ldi	r24, 0x01	; 1
    44c0:	90 e0       	ldi	r25, 0x00	; 0
    44c2:	9e 83       	std	Y+6, r25	; 0x06
    44c4:	8d 83       	std	Y+5, r24	; 0x05
    44c6:	3f c0       	rjmp	.+126    	; 0x4546 <main+0x116>
	else if (__tmp > 65535)
    44c8:	6f 81       	ldd	r22, Y+7	; 0x07
    44ca:	78 85       	ldd	r23, Y+8	; 0x08
    44cc:	89 85       	ldd	r24, Y+9	; 0x09
    44ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    44d0:	20 e0       	ldi	r18, 0x00	; 0
    44d2:	3f ef       	ldi	r19, 0xFF	; 255
    44d4:	4f e7       	ldi	r20, 0x7F	; 127
    44d6:	57 e4       	ldi	r21, 0x47	; 71
    44d8:	0e 94 9e 26 	call	0x4d3c	; 0x4d3c <__gtsf2>
    44dc:	18 16       	cp	r1, r24
    44de:	4c f5       	brge	.+82     	; 0x4532 <main+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    44e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    44e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    44e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    44e8:	20 e0       	ldi	r18, 0x00	; 0
    44ea:	30 e0       	ldi	r19, 0x00	; 0
    44ec:	40 e2       	ldi	r20, 0x20	; 32
    44ee:	51 e4       	ldi	r21, 0x41	; 65
    44f0:	0e 94 a4 25 	call	0x4b48	; 0x4b48 <__mulsf3>
    44f4:	dc 01       	movw	r26, r24
    44f6:	cb 01       	movw	r24, r22
    44f8:	bc 01       	movw	r22, r24
    44fa:	cd 01       	movw	r24, r26
    44fc:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    4500:	dc 01       	movw	r26, r24
    4502:	cb 01       	movw	r24, r22
    4504:	9e 83       	std	Y+6, r25	; 0x06
    4506:	8d 83       	std	Y+5, r24	; 0x05
    4508:	0f c0       	rjmp	.+30     	; 0x4528 <main+0xf8>
    450a:	80 e9       	ldi	r24, 0x90	; 144
    450c:	91 e0       	ldi	r25, 0x01	; 1
    450e:	9c 83       	std	Y+4, r25	; 0x04
    4510:	8b 83       	std	Y+3, r24	; 0x03
    4512:	8b 81       	ldd	r24, Y+3	; 0x03
    4514:	9c 81       	ldd	r25, Y+4	; 0x04
    4516:	01 97       	sbiw	r24, 0x01	; 1
    4518:	f1 f7       	brne	.-4      	; 0x4516 <main+0xe6>
    451a:	9c 83       	std	Y+4, r25	; 0x04
    451c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    451e:	8d 81       	ldd	r24, Y+5	; 0x05
    4520:	9e 81       	ldd	r25, Y+6	; 0x06
    4522:	01 97       	sbiw	r24, 0x01	; 1
    4524:	9e 83       	std	Y+6, r25	; 0x06
    4526:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4528:	8d 81       	ldd	r24, Y+5	; 0x05
    452a:	9e 81       	ldd	r25, Y+6	; 0x06
    452c:	00 97       	sbiw	r24, 0x00	; 0
    452e:	69 f7       	brne	.-38     	; 0x450a <main+0xda>
    4530:	99 cf       	rjmp	.-206    	; 0x4464 <main+0x34>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4532:	6f 81       	ldd	r22, Y+7	; 0x07
    4534:	78 85       	ldd	r23, Y+8	; 0x08
    4536:	89 85       	ldd	r24, Y+9	; 0x09
    4538:	9a 85       	ldd	r25, Y+10	; 0x0a
    453a:	0e 94 ce 23 	call	0x479c	; 0x479c <__fixunssfsi>
    453e:	dc 01       	movw	r26, r24
    4540:	cb 01       	movw	r24, r22
    4542:	9e 83       	std	Y+6, r25	; 0x06
    4544:	8d 83       	std	Y+5, r24	; 0x05
    4546:	8d 81       	ldd	r24, Y+5	; 0x05
    4548:	9e 81       	ldd	r25, Y+6	; 0x06
    454a:	9a 83       	std	Y+2, r25	; 0x02
    454c:	89 83       	std	Y+1, r24	; 0x01
    454e:	89 81       	ldd	r24, Y+1	; 0x01
    4550:	9a 81       	ldd	r25, Y+2	; 0x02
    4552:	01 97       	sbiw	r24, 0x01	; 1
    4554:	f1 f7       	brne	.-4      	; 0x4552 <main+0x122>
    4556:	9a 83       	std	Y+2, r25	; 0x02
    4558:	89 83       	std	Y+1, r24	; 0x01
    455a:	84 cf       	rjmp	.-248    	; 0x4464 <main+0x34>

0000455c <__vector_18>:
 
 return 0;
}
 
ISR(USART0_RX_vect)
{  
    455c:	1f 92       	push	r1
    455e:	0f 92       	push	r0
    4560:	0f b6       	in	r0, 0x3f	; 63
    4562:	0f 92       	push	r0
    4564:	00 90 5b 00 	lds	r0, 0x005B
    4568:	0f 92       	push	r0
    456a:	11 24       	eor	r1, r1
    456c:	2f 93       	push	r18
    456e:	3f 93       	push	r19
    4570:	4f 93       	push	r20
    4572:	5f 93       	push	r21
    4574:	8f 93       	push	r24
    4576:	9f 93       	push	r25
    4578:	af 93       	push	r26
    457a:	bf 93       	push	r27
    457c:	ef 93       	push	r30
    457e:	ff 93       	push	r31
    4580:	df 93       	push	r29
    4582:	cf 93       	push	r28
    4584:	cd b7       	in	r28, 0x3d	; 61
    4586:	de b7       	in	r29, 0x3e	; 62
 if(callflag==1)
    4588:	80 91 c4 01 	lds	r24, 0x01C4
    458c:	90 91 c5 01 	lds	r25, 0x01C5
    4590:	81 30       	cpi	r24, 0x01	; 1
    4592:	91 05       	cpc	r25, r1
    4594:	d9 f4       	brne	.+54     	; 0x45cc <__vector_18+0x70>
 {
 	buff[cnt]=UDR0;
    4596:	40 91 b0 01 	lds	r20, 0x01B0
    459a:	50 91 b1 01 	lds	r21, 0x01B1
    459e:	ec e2       	ldi	r30, 0x2C	; 44
    45a0:	f0 e0       	ldi	r31, 0x00	; 0
    45a2:	80 81       	ld	r24, Z
    45a4:	28 2f       	mov	r18, r24
    45a6:	30 e0       	ldi	r19, 0x00	; 0
    45a8:	ca 01       	movw	r24, r20
    45aa:	88 0f       	add	r24, r24
    45ac:	99 1f       	adc	r25, r25
    45ae:	fc 01       	movw	r30, r24
    45b0:	ee 54       	subi	r30, 0x4E	; 78
    45b2:	fe 4f       	sbci	r31, 0xFE	; 254
    45b4:	31 83       	std	Z+1, r19	; 0x01
    45b6:	20 83       	st	Z, r18
	cnt++;
    45b8:	80 91 b0 01 	lds	r24, 0x01B0
    45bc:	90 91 b1 01 	lds	r25, 0x01B1
    45c0:	01 96       	adiw	r24, 0x01	; 1
    45c2:	90 93 b1 01 	sts	0x01B1, r25
    45c6:	80 93 b0 01 	sts	0x01B0, r24
    45ca:	06 c0       	rjmp	.+12     	; 0x45d8 <__vector_18+0x7c>
 }
 else
 	UDR1=UDR0;
    45cc:	ec e9       	ldi	r30, 0x9C	; 156
    45ce:	f0 e0       	ldi	r31, 0x00	; 0
    45d0:	ac e2       	ldi	r26, 0x2C	; 44
    45d2:	b0 e0       	ldi	r27, 0x00	; 0
    45d4:	8c 91       	ld	r24, X
    45d6:	80 83       	st	Z, r24
}
    45d8:	cf 91       	pop	r28
    45da:	df 91       	pop	r29
    45dc:	ff 91       	pop	r31
    45de:	ef 91       	pop	r30
    45e0:	bf 91       	pop	r27
    45e2:	af 91       	pop	r26
    45e4:	9f 91       	pop	r25
    45e6:	8f 91       	pop	r24
    45e8:	5f 91       	pop	r21
    45ea:	4f 91       	pop	r20
    45ec:	3f 91       	pop	r19
    45ee:	2f 91       	pop	r18
    45f0:	0f 90       	pop	r0
    45f2:	00 92 5b 00 	sts	0x005B, r0
    45f6:	0f 90       	pop	r0
    45f8:	0f be       	out	0x3f, r0	; 63
    45fa:	0f 90       	pop	r0
    45fc:	1f 90       	pop	r1
    45fe:	18 95       	reti

00004600 <__vector_30>:
 
ISR(USART1_RX_vect)
{
    4600:	1f 92       	push	r1
    4602:	0f 92       	push	r0
    4604:	0f b6       	in	r0, 0x3f	; 63
    4606:	0f 92       	push	r0
    4608:	00 90 5b 00 	lds	r0, 0x005B
    460c:	0f 92       	push	r0
    460e:	11 24       	eor	r1, r1
    4610:	8f 92       	push	r8
    4612:	9f 92       	push	r9
    4614:	af 92       	push	r10
    4616:	bf 92       	push	r11
    4618:	cf 92       	push	r12
    461a:	df 92       	push	r13
    461c:	ef 92       	push	r14
    461e:	ff 92       	push	r15
    4620:	0f 93       	push	r16
    4622:	1f 93       	push	r17
    4624:	2f 93       	push	r18
    4626:	3f 93       	push	r19
    4628:	4f 93       	push	r20
    462a:	5f 93       	push	r21
    462c:	6f 93       	push	r22
    462e:	7f 93       	push	r23
    4630:	8f 93       	push	r24
    4632:	9f 93       	push	r25
    4634:	af 93       	push	r26
    4636:	bf 93       	push	r27
    4638:	ef 93       	push	r30
    463a:	ff 93       	push	r31
    463c:	df 93       	push	r29
    463e:	cf 93       	push	r28
    4640:	0f 92       	push	r0
    4642:	cd b7       	in	r28, 0x3d	; 61
    4644:	de b7       	in	r29, 0x3e	; 62
 char ch=UDR1;
    4646:	ec e9       	ldi	r30, 0x9C	; 156
    4648:	f0 e0       	ldi	r31, 0x00	; 0
    464a:	80 81       	ld	r24, Z
    464c:	89 83       	std	Y+1, r24	; 0x01
 if(ch=='l')
    464e:	89 81       	ldd	r24, Y+1	; 0x01
    4650:	8c 36       	cpi	r24, 0x6C	; 108
    4652:	31 f4       	brne	.+12     	; 0x4660 <__vector_30+0x60>
 {
 	callflag=0;
    4654:	10 92 c5 01 	sts	0x01C5, r1
    4658:	10 92 c4 01 	sts	0x01C4, r1
   shot_camera();
    465c:	0e 94 8f 21 	call	0x431e	; 0x431e <shot_camera>
  }
 if(ch=='c')
    4660:	89 81       	ldd	r24, Y+1	; 0x01
    4662:	83 36       	cpi	r24, 0x63	; 99
    4664:	61 f4       	brne	.+24     	; 0x467e <__vector_30+0x7e>
  {
  cnt=0;
    4666:	10 92 b1 01 	sts	0x01B1, r1
    466a:	10 92 b0 01 	sts	0x01B0, r1
 	callflag=1;
    466e:	81 e0       	ldi	r24, 0x01	; 1
    4670:	90 e0       	ldi	r25, 0x00	; 0
    4672:	90 93 c5 01 	sts	0x01C5, r25
    4676:	80 93 c4 01 	sts	0x01C4, r24
  call_size();
    467a:	0e 94 6d 0e 	call	0x1cda	; 0x1cda <call_size>
  
  }
 if(ch=='s')
    467e:	89 81       	ldd	r24, Y+1	; 0x01
    4680:	83 37       	cpi	r24, 0x73	; 115
    4682:	31 f4       	brne	.+12     	; 0x4690 <__vector_30+0x90>
  {
 	callflag=0;
    4684:	10 92 c5 01 	sts	0x01C5, r1
    4688:	10 92 c4 01 	sts	0x01C4, r1
  shot(); 
    468c:	0e 94 74 0c 	call	0x18e8	; 0x18e8 <shot>
  }
 if(ch=='i')
    4690:	89 81       	ldd	r24, Y+1	; 0x01
    4692:	89 36       	cpi	r24, 0x69	; 105
    4694:	31 f4       	brne	.+12     	; 0x46a2 <__vector_30+0xa2>
  {
 	callflag=0;
    4696:	10 92 c5 01 	sts	0x01C5, r1
    469a:	10 92 c4 01 	sts	0x01C4, r1
  idle();
    469e:	0e 94 76 0a 	call	0x14ec	; 0x14ec <idle>
  }
 if(ch=='k')
    46a2:	89 81       	ldd	r24, Y+1	; 0x01
    46a4:	8b 36       	cpi	r24, 0x6B	; 107
    46a6:	31 f4       	brne	.+12     	; 0x46b4 <__vector_30+0xb4>
  {
 	callflag=0;
    46a8:	10 92 c5 01 	sts	0x01C5, r1
    46ac:	10 92 c4 01 	sts	0x01C4, r1
  call_img();
    46b0:	0e 94 66 10 	call	0x20cc	; 0x20cc <call_img>
  }
 if(ch=='p')
    46b4:	89 81       	ldd	r24, Y+1	; 0x01
    46b6:	80 37       	cpi	r24, 0x70	; 112
    46b8:	09 f0       	breq	.+2      	; 0x46bc <__vector_30+0xbc>
    46ba:	4f c0       	rjmp	.+158    	; 0x475a <__vector_30+0x15a>
  printf("size: %x %x %x %x %x %x %x %x %x ",buff[0],buff[1],buff[2],buff[3],buff[4],buff[5],buff[6],buff[7],buff[8]);
    46bc:	20 91 b2 01 	lds	r18, 0x01B2
    46c0:	30 91 b3 01 	lds	r19, 0x01B3
    46c4:	40 91 b4 01 	lds	r20, 0x01B4
    46c8:	50 91 b5 01 	lds	r21, 0x01B5
    46cc:	60 91 b6 01 	lds	r22, 0x01B6
    46d0:	70 91 b7 01 	lds	r23, 0x01B7
    46d4:	a0 91 b8 01 	lds	r26, 0x01B8
    46d8:	b0 91 b9 01 	lds	r27, 0x01B9
    46dc:	00 91 ba 01 	lds	r16, 0x01BA
    46e0:	10 91 bb 01 	lds	r17, 0x01BB
    46e4:	e0 90 bc 01 	lds	r14, 0x01BC
    46e8:	f0 90 bd 01 	lds	r15, 0x01BD
    46ec:	c0 90 be 01 	lds	r12, 0x01BE
    46f0:	d0 90 bf 01 	lds	r13, 0x01BF
    46f4:	a0 90 c0 01 	lds	r10, 0x01C0
    46f8:	b0 90 c1 01 	lds	r11, 0x01C1
    46fc:	80 90 c2 01 	lds	r8, 0x01C2
    4700:	90 90 c3 01 	lds	r9, 0x01C3
    4704:	8d b7       	in	r24, 0x3d	; 61
    4706:	9e b7       	in	r25, 0x3e	; 62
    4708:	44 97       	sbiw	r24, 0x14	; 20
    470a:	0f b6       	in	r0, 0x3f	; 63
    470c:	f8 94       	cli
    470e:	9e bf       	out	0x3e, r25	; 62
    4710:	0f be       	out	0x3f, r0	; 63
    4712:	8d bf       	out	0x3d, r24	; 61
    4714:	ed b7       	in	r30, 0x3d	; 61
    4716:	fe b7       	in	r31, 0x3e	; 62
    4718:	31 96       	adiw	r30, 0x01	; 1
    471a:	8d e7       	ldi	r24, 0x7D	; 125
    471c:	91 e0       	ldi	r25, 0x01	; 1
    471e:	91 83       	std	Z+1, r25	; 0x01
    4720:	80 83       	st	Z, r24
    4722:	33 83       	std	Z+3, r19	; 0x03
    4724:	22 83       	std	Z+2, r18	; 0x02
    4726:	55 83       	std	Z+5, r21	; 0x05
    4728:	44 83       	std	Z+4, r20	; 0x04
    472a:	77 83       	std	Z+7, r23	; 0x07
    472c:	66 83       	std	Z+6, r22	; 0x06
    472e:	b1 87       	std	Z+9, r27	; 0x09
    4730:	a0 87       	std	Z+8, r26	; 0x08
    4732:	13 87       	std	Z+11, r17	; 0x0b
    4734:	02 87       	std	Z+10, r16	; 0x0a
    4736:	f5 86       	std	Z+13, r15	; 0x0d
    4738:	e4 86       	std	Z+12, r14	; 0x0c
    473a:	d7 86       	std	Z+15, r13	; 0x0f
    473c:	c6 86       	std	Z+14, r12	; 0x0e
    473e:	b1 8a       	std	Z+17, r11	; 0x11
    4740:	a0 8a       	std	Z+16, r10	; 0x10
    4742:	93 8a       	std	Z+19, r9	; 0x13
    4744:	82 8a       	std	Z+18, r8	; 0x12
    4746:	0e 94 ab 29 	call	0x5356	; 0x5356 <printf>
    474a:	8d b7       	in	r24, 0x3d	; 61
    474c:	9e b7       	in	r25, 0x3e	; 62
    474e:	44 96       	adiw	r24, 0x14	; 20
    4750:	0f b6       	in	r0, 0x3f	; 63
    4752:	f8 94       	cli
    4754:	9e bf       	out	0x3e, r25	; 62
    4756:	0f be       	out	0x3f, r0	; 63
    4758:	8d bf       	out	0x3d, r24	; 61
}
    475a:	0f 90       	pop	r0
    475c:	cf 91       	pop	r28
    475e:	df 91       	pop	r29
    4760:	ff 91       	pop	r31
    4762:	ef 91       	pop	r30
    4764:	bf 91       	pop	r27
    4766:	af 91       	pop	r26
    4768:	9f 91       	pop	r25
    476a:	8f 91       	pop	r24
    476c:	7f 91       	pop	r23
    476e:	6f 91       	pop	r22
    4770:	5f 91       	pop	r21
    4772:	4f 91       	pop	r20
    4774:	3f 91       	pop	r19
    4776:	2f 91       	pop	r18
    4778:	1f 91       	pop	r17
    477a:	0f 91       	pop	r16
    477c:	ff 90       	pop	r15
    477e:	ef 90       	pop	r14
    4780:	df 90       	pop	r13
    4782:	cf 90       	pop	r12
    4784:	bf 90       	pop	r11
    4786:	af 90       	pop	r10
    4788:	9f 90       	pop	r9
    478a:	8f 90       	pop	r8
    478c:	0f 90       	pop	r0
    478e:	00 92 5b 00 	sts	0x005B, r0
    4792:	0f 90       	pop	r0
    4794:	0f be       	out	0x3f, r0	; 63
    4796:	0f 90       	pop	r0
    4798:	1f 90       	pop	r1
    479a:	18 95       	reti

0000479c <__fixunssfsi>:
    479c:	ef 92       	push	r14
    479e:	ff 92       	push	r15
    47a0:	0f 93       	push	r16
    47a2:	1f 93       	push	r17
    47a4:	7b 01       	movw	r14, r22
    47a6:	8c 01       	movw	r16, r24
    47a8:	20 e0       	ldi	r18, 0x00	; 0
    47aa:	30 e0       	ldi	r19, 0x00	; 0
    47ac:	40 e0       	ldi	r20, 0x00	; 0
    47ae:	5f e4       	ldi	r21, 0x4F	; 79
    47b0:	0e 94 ce 26 	call	0x4d9c	; 0x4d9c <__gesf2>
    47b4:	88 23       	and	r24, r24
    47b6:	8c f0       	brlt	.+34     	; 0x47da <__fixunssfsi+0x3e>
    47b8:	c8 01       	movw	r24, r16
    47ba:	b7 01       	movw	r22, r14
    47bc:	20 e0       	ldi	r18, 0x00	; 0
    47be:	30 e0       	ldi	r19, 0x00	; 0
    47c0:	40 e0       	ldi	r20, 0x00	; 0
    47c2:	5f e4       	ldi	r21, 0x4F	; 79
    47c4:	0e 94 46 25 	call	0x4a8c	; 0x4a8c <__subsf3>
    47c8:	0e 94 2e 27 	call	0x4e5c	; 0x4e5c <__fixsfsi>
    47cc:	9b 01       	movw	r18, r22
    47ce:	ac 01       	movw	r20, r24
    47d0:	20 50       	subi	r18, 0x00	; 0
    47d2:	30 40       	sbci	r19, 0x00	; 0
    47d4:	40 40       	sbci	r20, 0x00	; 0
    47d6:	50 48       	sbci	r21, 0x80	; 128
    47d8:	06 c0       	rjmp	.+12     	; 0x47e6 <__fixunssfsi+0x4a>
    47da:	c8 01       	movw	r24, r16
    47dc:	b7 01       	movw	r22, r14
    47de:	0e 94 2e 27 	call	0x4e5c	; 0x4e5c <__fixsfsi>
    47e2:	9b 01       	movw	r18, r22
    47e4:	ac 01       	movw	r20, r24
    47e6:	b9 01       	movw	r22, r18
    47e8:	ca 01       	movw	r24, r20
    47ea:	1f 91       	pop	r17
    47ec:	0f 91       	pop	r16
    47ee:	ff 90       	pop	r15
    47f0:	ef 90       	pop	r14
    47f2:	08 95       	ret

000047f4 <_fpadd_parts>:
    47f4:	a0 e0       	ldi	r26, 0x00	; 0
    47f6:	b0 e0       	ldi	r27, 0x00	; 0
    47f8:	e0 e0       	ldi	r30, 0x00	; 0
    47fa:	f4 e2       	ldi	r31, 0x24	; 36
    47fc:	0c 94 28 29 	jmp	0x5250	; 0x5250 <__prologue_saves__>
    4800:	dc 01       	movw	r26, r24
    4802:	2b 01       	movw	r4, r22
    4804:	fa 01       	movw	r30, r20
    4806:	9c 91       	ld	r25, X
    4808:	92 30       	cpi	r25, 0x02	; 2
    480a:	08 f4       	brcc	.+2      	; 0x480e <_fpadd_parts+0x1a>
    480c:	39 c1       	rjmp	.+626    	; 0x4a80 <_fpadd_parts+0x28c>
    480e:	eb 01       	movw	r28, r22
    4810:	88 81       	ld	r24, Y
    4812:	82 30       	cpi	r24, 0x02	; 2
    4814:	08 f4       	brcc	.+2      	; 0x4818 <_fpadd_parts+0x24>
    4816:	33 c1       	rjmp	.+614    	; 0x4a7e <_fpadd_parts+0x28a>
    4818:	94 30       	cpi	r25, 0x04	; 4
    481a:	69 f4       	brne	.+26     	; 0x4836 <_fpadd_parts+0x42>
    481c:	84 30       	cpi	r24, 0x04	; 4
    481e:	09 f0       	breq	.+2      	; 0x4822 <_fpadd_parts+0x2e>
    4820:	2f c1       	rjmp	.+606    	; 0x4a80 <_fpadd_parts+0x28c>
    4822:	11 96       	adiw	r26, 0x01	; 1
    4824:	9c 91       	ld	r25, X
    4826:	11 97       	sbiw	r26, 0x01	; 1
    4828:	89 81       	ldd	r24, Y+1	; 0x01
    482a:	98 17       	cp	r25, r24
    482c:	09 f4       	brne	.+2      	; 0x4830 <_fpadd_parts+0x3c>
    482e:	28 c1       	rjmp	.+592    	; 0x4a80 <_fpadd_parts+0x28c>
    4830:	af e9       	ldi	r26, 0x9F	; 159
    4832:	b1 e0       	ldi	r27, 0x01	; 1
    4834:	25 c1       	rjmp	.+586    	; 0x4a80 <_fpadd_parts+0x28c>
    4836:	84 30       	cpi	r24, 0x04	; 4
    4838:	09 f4       	brne	.+2      	; 0x483c <_fpadd_parts+0x48>
    483a:	21 c1       	rjmp	.+578    	; 0x4a7e <_fpadd_parts+0x28a>
    483c:	82 30       	cpi	r24, 0x02	; 2
    483e:	a9 f4       	brne	.+42     	; 0x486a <_fpadd_parts+0x76>
    4840:	92 30       	cpi	r25, 0x02	; 2
    4842:	09 f0       	breq	.+2      	; 0x4846 <_fpadd_parts+0x52>
    4844:	1d c1       	rjmp	.+570    	; 0x4a80 <_fpadd_parts+0x28c>
    4846:	9a 01       	movw	r18, r20
    4848:	ad 01       	movw	r20, r26
    484a:	88 e0       	ldi	r24, 0x08	; 8
    484c:	ea 01       	movw	r28, r20
    484e:	09 90       	ld	r0, Y+
    4850:	ae 01       	movw	r20, r28
    4852:	e9 01       	movw	r28, r18
    4854:	09 92       	st	Y+, r0
    4856:	9e 01       	movw	r18, r28
    4858:	81 50       	subi	r24, 0x01	; 1
    485a:	c1 f7       	brne	.-16     	; 0x484c <_fpadd_parts+0x58>
    485c:	e2 01       	movw	r28, r4
    485e:	89 81       	ldd	r24, Y+1	; 0x01
    4860:	11 96       	adiw	r26, 0x01	; 1
    4862:	9c 91       	ld	r25, X
    4864:	89 23       	and	r24, r25
    4866:	81 83       	std	Z+1, r24	; 0x01
    4868:	08 c1       	rjmp	.+528    	; 0x4a7a <_fpadd_parts+0x286>
    486a:	92 30       	cpi	r25, 0x02	; 2
    486c:	09 f4       	brne	.+2      	; 0x4870 <_fpadd_parts+0x7c>
    486e:	07 c1       	rjmp	.+526    	; 0x4a7e <_fpadd_parts+0x28a>
    4870:	12 96       	adiw	r26, 0x02	; 2
    4872:	2d 90       	ld	r2, X+
    4874:	3c 90       	ld	r3, X
    4876:	13 97       	sbiw	r26, 0x03	; 3
    4878:	eb 01       	movw	r28, r22
    487a:	8a 81       	ldd	r24, Y+2	; 0x02
    487c:	9b 81       	ldd	r25, Y+3	; 0x03
    487e:	14 96       	adiw	r26, 0x04	; 4
    4880:	ad 90       	ld	r10, X+
    4882:	bd 90       	ld	r11, X+
    4884:	cd 90       	ld	r12, X+
    4886:	dc 90       	ld	r13, X
    4888:	17 97       	sbiw	r26, 0x07	; 7
    488a:	ec 80       	ldd	r14, Y+4	; 0x04
    488c:	fd 80       	ldd	r15, Y+5	; 0x05
    488e:	0e 81       	ldd	r16, Y+6	; 0x06
    4890:	1f 81       	ldd	r17, Y+7	; 0x07
    4892:	91 01       	movw	r18, r2
    4894:	28 1b       	sub	r18, r24
    4896:	39 0b       	sbc	r19, r25
    4898:	b9 01       	movw	r22, r18
    489a:	37 ff       	sbrs	r19, 7
    489c:	04 c0       	rjmp	.+8      	; 0x48a6 <_fpadd_parts+0xb2>
    489e:	66 27       	eor	r22, r22
    48a0:	77 27       	eor	r23, r23
    48a2:	62 1b       	sub	r22, r18
    48a4:	73 0b       	sbc	r23, r19
    48a6:	60 32       	cpi	r22, 0x20	; 32
    48a8:	71 05       	cpc	r23, r1
    48aa:	0c f0       	brlt	.+2      	; 0x48ae <_fpadd_parts+0xba>
    48ac:	61 c0       	rjmp	.+194    	; 0x4970 <_fpadd_parts+0x17c>
    48ae:	12 16       	cp	r1, r18
    48b0:	13 06       	cpc	r1, r19
    48b2:	6c f5       	brge	.+90     	; 0x490e <_fpadd_parts+0x11a>
    48b4:	37 01       	movw	r6, r14
    48b6:	48 01       	movw	r8, r16
    48b8:	06 2e       	mov	r0, r22
    48ba:	04 c0       	rjmp	.+8      	; 0x48c4 <_fpadd_parts+0xd0>
    48bc:	96 94       	lsr	r9
    48be:	87 94       	ror	r8
    48c0:	77 94       	ror	r7
    48c2:	67 94       	ror	r6
    48c4:	0a 94       	dec	r0
    48c6:	d2 f7       	brpl	.-12     	; 0x48bc <_fpadd_parts+0xc8>
    48c8:	21 e0       	ldi	r18, 0x01	; 1
    48ca:	30 e0       	ldi	r19, 0x00	; 0
    48cc:	40 e0       	ldi	r20, 0x00	; 0
    48ce:	50 e0       	ldi	r21, 0x00	; 0
    48d0:	04 c0       	rjmp	.+8      	; 0x48da <_fpadd_parts+0xe6>
    48d2:	22 0f       	add	r18, r18
    48d4:	33 1f       	adc	r19, r19
    48d6:	44 1f       	adc	r20, r20
    48d8:	55 1f       	adc	r21, r21
    48da:	6a 95       	dec	r22
    48dc:	d2 f7       	brpl	.-12     	; 0x48d2 <_fpadd_parts+0xde>
    48de:	21 50       	subi	r18, 0x01	; 1
    48e0:	30 40       	sbci	r19, 0x00	; 0
    48e2:	40 40       	sbci	r20, 0x00	; 0
    48e4:	50 40       	sbci	r21, 0x00	; 0
    48e6:	2e 21       	and	r18, r14
    48e8:	3f 21       	and	r19, r15
    48ea:	40 23       	and	r20, r16
    48ec:	51 23       	and	r21, r17
    48ee:	21 15       	cp	r18, r1
    48f0:	31 05       	cpc	r19, r1
    48f2:	41 05       	cpc	r20, r1
    48f4:	51 05       	cpc	r21, r1
    48f6:	21 f0       	breq	.+8      	; 0x4900 <_fpadd_parts+0x10c>
    48f8:	21 e0       	ldi	r18, 0x01	; 1
    48fa:	30 e0       	ldi	r19, 0x00	; 0
    48fc:	40 e0       	ldi	r20, 0x00	; 0
    48fe:	50 e0       	ldi	r21, 0x00	; 0
    4900:	79 01       	movw	r14, r18
    4902:	8a 01       	movw	r16, r20
    4904:	e6 28       	or	r14, r6
    4906:	f7 28       	or	r15, r7
    4908:	08 29       	or	r16, r8
    490a:	19 29       	or	r17, r9
    490c:	3c c0       	rjmp	.+120    	; 0x4986 <_fpadd_parts+0x192>
    490e:	23 2b       	or	r18, r19
    4910:	d1 f1       	breq	.+116    	; 0x4986 <_fpadd_parts+0x192>
    4912:	26 0e       	add	r2, r22
    4914:	37 1e       	adc	r3, r23
    4916:	35 01       	movw	r6, r10
    4918:	46 01       	movw	r8, r12
    491a:	06 2e       	mov	r0, r22
    491c:	04 c0       	rjmp	.+8      	; 0x4926 <_fpadd_parts+0x132>
    491e:	96 94       	lsr	r9
    4920:	87 94       	ror	r8
    4922:	77 94       	ror	r7
    4924:	67 94       	ror	r6
    4926:	0a 94       	dec	r0
    4928:	d2 f7       	brpl	.-12     	; 0x491e <_fpadd_parts+0x12a>
    492a:	21 e0       	ldi	r18, 0x01	; 1
    492c:	30 e0       	ldi	r19, 0x00	; 0
    492e:	40 e0       	ldi	r20, 0x00	; 0
    4930:	50 e0       	ldi	r21, 0x00	; 0
    4932:	04 c0       	rjmp	.+8      	; 0x493c <_fpadd_parts+0x148>
    4934:	22 0f       	add	r18, r18
    4936:	33 1f       	adc	r19, r19
    4938:	44 1f       	adc	r20, r20
    493a:	55 1f       	adc	r21, r21
    493c:	6a 95       	dec	r22
    493e:	d2 f7       	brpl	.-12     	; 0x4934 <_fpadd_parts+0x140>
    4940:	21 50       	subi	r18, 0x01	; 1
    4942:	30 40       	sbci	r19, 0x00	; 0
    4944:	40 40       	sbci	r20, 0x00	; 0
    4946:	50 40       	sbci	r21, 0x00	; 0
    4948:	2a 21       	and	r18, r10
    494a:	3b 21       	and	r19, r11
    494c:	4c 21       	and	r20, r12
    494e:	5d 21       	and	r21, r13
    4950:	21 15       	cp	r18, r1
    4952:	31 05       	cpc	r19, r1
    4954:	41 05       	cpc	r20, r1
    4956:	51 05       	cpc	r21, r1
    4958:	21 f0       	breq	.+8      	; 0x4962 <_fpadd_parts+0x16e>
    495a:	21 e0       	ldi	r18, 0x01	; 1
    495c:	30 e0       	ldi	r19, 0x00	; 0
    495e:	40 e0       	ldi	r20, 0x00	; 0
    4960:	50 e0       	ldi	r21, 0x00	; 0
    4962:	59 01       	movw	r10, r18
    4964:	6a 01       	movw	r12, r20
    4966:	a6 28       	or	r10, r6
    4968:	b7 28       	or	r11, r7
    496a:	c8 28       	or	r12, r8
    496c:	d9 28       	or	r13, r9
    496e:	0b c0       	rjmp	.+22     	; 0x4986 <_fpadd_parts+0x192>
    4970:	82 15       	cp	r24, r2
    4972:	93 05       	cpc	r25, r3
    4974:	2c f0       	brlt	.+10     	; 0x4980 <_fpadd_parts+0x18c>
    4976:	1c 01       	movw	r2, r24
    4978:	aa 24       	eor	r10, r10
    497a:	bb 24       	eor	r11, r11
    497c:	65 01       	movw	r12, r10
    497e:	03 c0       	rjmp	.+6      	; 0x4986 <_fpadd_parts+0x192>
    4980:	ee 24       	eor	r14, r14
    4982:	ff 24       	eor	r15, r15
    4984:	87 01       	movw	r16, r14
    4986:	11 96       	adiw	r26, 0x01	; 1
    4988:	9c 91       	ld	r25, X
    498a:	d2 01       	movw	r26, r4
    498c:	11 96       	adiw	r26, 0x01	; 1
    498e:	8c 91       	ld	r24, X
    4990:	98 17       	cp	r25, r24
    4992:	09 f4       	brne	.+2      	; 0x4996 <_fpadd_parts+0x1a2>
    4994:	45 c0       	rjmp	.+138    	; 0x4a20 <_fpadd_parts+0x22c>
    4996:	99 23       	and	r25, r25
    4998:	39 f0       	breq	.+14     	; 0x49a8 <_fpadd_parts+0x1b4>
    499a:	a8 01       	movw	r20, r16
    499c:	97 01       	movw	r18, r14
    499e:	2a 19       	sub	r18, r10
    49a0:	3b 09       	sbc	r19, r11
    49a2:	4c 09       	sbc	r20, r12
    49a4:	5d 09       	sbc	r21, r13
    49a6:	06 c0       	rjmp	.+12     	; 0x49b4 <_fpadd_parts+0x1c0>
    49a8:	a6 01       	movw	r20, r12
    49aa:	95 01       	movw	r18, r10
    49ac:	2e 19       	sub	r18, r14
    49ae:	3f 09       	sbc	r19, r15
    49b0:	40 0b       	sbc	r20, r16
    49b2:	51 0b       	sbc	r21, r17
    49b4:	57 fd       	sbrc	r21, 7
    49b6:	08 c0       	rjmp	.+16     	; 0x49c8 <_fpadd_parts+0x1d4>
    49b8:	11 82       	std	Z+1, r1	; 0x01
    49ba:	33 82       	std	Z+3, r3	; 0x03
    49bc:	22 82       	std	Z+2, r2	; 0x02
    49be:	24 83       	std	Z+4, r18	; 0x04
    49c0:	35 83       	std	Z+5, r19	; 0x05
    49c2:	46 83       	std	Z+6, r20	; 0x06
    49c4:	57 83       	std	Z+7, r21	; 0x07
    49c6:	1d c0       	rjmp	.+58     	; 0x4a02 <_fpadd_parts+0x20e>
    49c8:	81 e0       	ldi	r24, 0x01	; 1
    49ca:	81 83       	std	Z+1, r24	; 0x01
    49cc:	33 82       	std	Z+3, r3	; 0x03
    49ce:	22 82       	std	Z+2, r2	; 0x02
    49d0:	88 27       	eor	r24, r24
    49d2:	99 27       	eor	r25, r25
    49d4:	dc 01       	movw	r26, r24
    49d6:	82 1b       	sub	r24, r18
    49d8:	93 0b       	sbc	r25, r19
    49da:	a4 0b       	sbc	r26, r20
    49dc:	b5 0b       	sbc	r27, r21
    49de:	84 83       	std	Z+4, r24	; 0x04
    49e0:	95 83       	std	Z+5, r25	; 0x05
    49e2:	a6 83       	std	Z+6, r26	; 0x06
    49e4:	b7 83       	std	Z+7, r27	; 0x07
    49e6:	0d c0       	rjmp	.+26     	; 0x4a02 <_fpadd_parts+0x20e>
    49e8:	22 0f       	add	r18, r18
    49ea:	33 1f       	adc	r19, r19
    49ec:	44 1f       	adc	r20, r20
    49ee:	55 1f       	adc	r21, r21
    49f0:	24 83       	std	Z+4, r18	; 0x04
    49f2:	35 83       	std	Z+5, r19	; 0x05
    49f4:	46 83       	std	Z+6, r20	; 0x06
    49f6:	57 83       	std	Z+7, r21	; 0x07
    49f8:	82 81       	ldd	r24, Z+2	; 0x02
    49fa:	93 81       	ldd	r25, Z+3	; 0x03
    49fc:	01 97       	sbiw	r24, 0x01	; 1
    49fe:	93 83       	std	Z+3, r25	; 0x03
    4a00:	82 83       	std	Z+2, r24	; 0x02
    4a02:	24 81       	ldd	r18, Z+4	; 0x04
    4a04:	35 81       	ldd	r19, Z+5	; 0x05
    4a06:	46 81       	ldd	r20, Z+6	; 0x06
    4a08:	57 81       	ldd	r21, Z+7	; 0x07
    4a0a:	da 01       	movw	r26, r20
    4a0c:	c9 01       	movw	r24, r18
    4a0e:	01 97       	sbiw	r24, 0x01	; 1
    4a10:	a1 09       	sbc	r26, r1
    4a12:	b1 09       	sbc	r27, r1
    4a14:	8f 5f       	subi	r24, 0xFF	; 255
    4a16:	9f 4f       	sbci	r25, 0xFF	; 255
    4a18:	af 4f       	sbci	r26, 0xFF	; 255
    4a1a:	bf 43       	sbci	r27, 0x3F	; 63
    4a1c:	28 f3       	brcs	.-54     	; 0x49e8 <_fpadd_parts+0x1f4>
    4a1e:	0b c0       	rjmp	.+22     	; 0x4a36 <_fpadd_parts+0x242>
    4a20:	91 83       	std	Z+1, r25	; 0x01
    4a22:	33 82       	std	Z+3, r3	; 0x03
    4a24:	22 82       	std	Z+2, r2	; 0x02
    4a26:	ea 0c       	add	r14, r10
    4a28:	fb 1c       	adc	r15, r11
    4a2a:	0c 1d       	adc	r16, r12
    4a2c:	1d 1d       	adc	r17, r13
    4a2e:	e4 82       	std	Z+4, r14	; 0x04
    4a30:	f5 82       	std	Z+5, r15	; 0x05
    4a32:	06 83       	std	Z+6, r16	; 0x06
    4a34:	17 83       	std	Z+7, r17	; 0x07
    4a36:	83 e0       	ldi	r24, 0x03	; 3
    4a38:	80 83       	st	Z, r24
    4a3a:	24 81       	ldd	r18, Z+4	; 0x04
    4a3c:	35 81       	ldd	r19, Z+5	; 0x05
    4a3e:	46 81       	ldd	r20, Z+6	; 0x06
    4a40:	57 81       	ldd	r21, Z+7	; 0x07
    4a42:	57 ff       	sbrs	r21, 7
    4a44:	1a c0       	rjmp	.+52     	; 0x4a7a <_fpadd_parts+0x286>
    4a46:	c9 01       	movw	r24, r18
    4a48:	aa 27       	eor	r26, r26
    4a4a:	97 fd       	sbrc	r25, 7
    4a4c:	a0 95       	com	r26
    4a4e:	ba 2f       	mov	r27, r26
    4a50:	81 70       	andi	r24, 0x01	; 1
    4a52:	90 70       	andi	r25, 0x00	; 0
    4a54:	a0 70       	andi	r26, 0x00	; 0
    4a56:	b0 70       	andi	r27, 0x00	; 0
    4a58:	56 95       	lsr	r21
    4a5a:	47 95       	ror	r20
    4a5c:	37 95       	ror	r19
    4a5e:	27 95       	ror	r18
    4a60:	82 2b       	or	r24, r18
    4a62:	93 2b       	or	r25, r19
    4a64:	a4 2b       	or	r26, r20
    4a66:	b5 2b       	or	r27, r21
    4a68:	84 83       	std	Z+4, r24	; 0x04
    4a6a:	95 83       	std	Z+5, r25	; 0x05
    4a6c:	a6 83       	std	Z+6, r26	; 0x06
    4a6e:	b7 83       	std	Z+7, r27	; 0x07
    4a70:	82 81       	ldd	r24, Z+2	; 0x02
    4a72:	93 81       	ldd	r25, Z+3	; 0x03
    4a74:	01 96       	adiw	r24, 0x01	; 1
    4a76:	93 83       	std	Z+3, r25	; 0x03
    4a78:	82 83       	std	Z+2, r24	; 0x02
    4a7a:	df 01       	movw	r26, r30
    4a7c:	01 c0       	rjmp	.+2      	; 0x4a80 <_fpadd_parts+0x28c>
    4a7e:	d2 01       	movw	r26, r4
    4a80:	cd 01       	movw	r24, r26
    4a82:	cd b7       	in	r28, 0x3d	; 61
    4a84:	de b7       	in	r29, 0x3e	; 62
    4a86:	e2 e1       	ldi	r30, 0x12	; 18
    4a88:	0c 94 44 29 	jmp	0x5288	; 0x5288 <__epilogue_restores__>

00004a8c <__subsf3>:
    4a8c:	a0 e2       	ldi	r26, 0x20	; 32
    4a8e:	b0 e0       	ldi	r27, 0x00	; 0
    4a90:	ec e4       	ldi	r30, 0x4C	; 76
    4a92:	f5 e2       	ldi	r31, 0x25	; 37
    4a94:	0c 94 34 29 	jmp	0x5268	; 0x5268 <__prologue_saves__+0x18>
    4a98:	69 83       	std	Y+1, r22	; 0x01
    4a9a:	7a 83       	std	Y+2, r23	; 0x02
    4a9c:	8b 83       	std	Y+3, r24	; 0x03
    4a9e:	9c 83       	std	Y+4, r25	; 0x04
    4aa0:	2d 83       	std	Y+5, r18	; 0x05
    4aa2:	3e 83       	std	Y+6, r19	; 0x06
    4aa4:	4f 83       	std	Y+7, r20	; 0x07
    4aa6:	58 87       	std	Y+8, r21	; 0x08
    4aa8:	e9 e0       	ldi	r30, 0x09	; 9
    4aaa:	ee 2e       	mov	r14, r30
    4aac:	f1 2c       	mov	r15, r1
    4aae:	ec 0e       	add	r14, r28
    4ab0:	fd 1e       	adc	r15, r29
    4ab2:	ce 01       	movw	r24, r28
    4ab4:	01 96       	adiw	r24, 0x01	; 1
    4ab6:	b7 01       	movw	r22, r14
    4ab8:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4abc:	8e 01       	movw	r16, r28
    4abe:	0f 5e       	subi	r16, 0xEF	; 239
    4ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    4ac2:	ce 01       	movw	r24, r28
    4ac4:	05 96       	adiw	r24, 0x05	; 5
    4ac6:	b8 01       	movw	r22, r16
    4ac8:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4acc:	8a 89       	ldd	r24, Y+18	; 0x12
    4ace:	91 e0       	ldi	r25, 0x01	; 1
    4ad0:	89 27       	eor	r24, r25
    4ad2:	8a 8b       	std	Y+18, r24	; 0x12
    4ad4:	c7 01       	movw	r24, r14
    4ad6:	b8 01       	movw	r22, r16
    4ad8:	ae 01       	movw	r20, r28
    4ada:	47 5e       	subi	r20, 0xE7	; 231
    4adc:	5f 4f       	sbci	r21, 0xFF	; 255
    4ade:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <_fpadd_parts>
    4ae2:	0e 94 82 27 	call	0x4f04	; 0x4f04 <__pack_f>
    4ae6:	a0 96       	adiw	r28, 0x20	; 32
    4ae8:	e6 e0       	ldi	r30, 0x06	; 6
    4aea:	0c 94 50 29 	jmp	0x52a0	; 0x52a0 <__epilogue_restores__+0x18>

00004aee <__addsf3>:
    4aee:	a0 e2       	ldi	r26, 0x20	; 32
    4af0:	b0 e0       	ldi	r27, 0x00	; 0
    4af2:	ed e7       	ldi	r30, 0x7D	; 125
    4af4:	f5 e2       	ldi	r31, 0x25	; 37
    4af6:	0c 94 34 29 	jmp	0x5268	; 0x5268 <__prologue_saves__+0x18>
    4afa:	69 83       	std	Y+1, r22	; 0x01
    4afc:	7a 83       	std	Y+2, r23	; 0x02
    4afe:	8b 83       	std	Y+3, r24	; 0x03
    4b00:	9c 83       	std	Y+4, r25	; 0x04
    4b02:	2d 83       	std	Y+5, r18	; 0x05
    4b04:	3e 83       	std	Y+6, r19	; 0x06
    4b06:	4f 83       	std	Y+7, r20	; 0x07
    4b08:	58 87       	std	Y+8, r21	; 0x08
    4b0a:	f9 e0       	ldi	r31, 0x09	; 9
    4b0c:	ef 2e       	mov	r14, r31
    4b0e:	f1 2c       	mov	r15, r1
    4b10:	ec 0e       	add	r14, r28
    4b12:	fd 1e       	adc	r15, r29
    4b14:	ce 01       	movw	r24, r28
    4b16:	01 96       	adiw	r24, 0x01	; 1
    4b18:	b7 01       	movw	r22, r14
    4b1a:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4b1e:	8e 01       	movw	r16, r28
    4b20:	0f 5e       	subi	r16, 0xEF	; 239
    4b22:	1f 4f       	sbci	r17, 0xFF	; 255
    4b24:	ce 01       	movw	r24, r28
    4b26:	05 96       	adiw	r24, 0x05	; 5
    4b28:	b8 01       	movw	r22, r16
    4b2a:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4b2e:	c7 01       	movw	r24, r14
    4b30:	b8 01       	movw	r22, r16
    4b32:	ae 01       	movw	r20, r28
    4b34:	47 5e       	subi	r20, 0xE7	; 231
    4b36:	5f 4f       	sbci	r21, 0xFF	; 255
    4b38:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <_fpadd_parts>
    4b3c:	0e 94 82 27 	call	0x4f04	; 0x4f04 <__pack_f>
    4b40:	a0 96       	adiw	r28, 0x20	; 32
    4b42:	e6 e0       	ldi	r30, 0x06	; 6
    4b44:	0c 94 50 29 	jmp	0x52a0	; 0x52a0 <__epilogue_restores__+0x18>

00004b48 <__mulsf3>:
    4b48:	a0 e2       	ldi	r26, 0x20	; 32
    4b4a:	b0 e0       	ldi	r27, 0x00	; 0
    4b4c:	ea ea       	ldi	r30, 0xAA	; 170
    4b4e:	f5 e2       	ldi	r31, 0x25	; 37
    4b50:	0c 94 28 29 	jmp	0x5250	; 0x5250 <__prologue_saves__>
    4b54:	69 83       	std	Y+1, r22	; 0x01
    4b56:	7a 83       	std	Y+2, r23	; 0x02
    4b58:	8b 83       	std	Y+3, r24	; 0x03
    4b5a:	9c 83       	std	Y+4, r25	; 0x04
    4b5c:	2d 83       	std	Y+5, r18	; 0x05
    4b5e:	3e 83       	std	Y+6, r19	; 0x06
    4b60:	4f 83       	std	Y+7, r20	; 0x07
    4b62:	58 87       	std	Y+8, r21	; 0x08
    4b64:	ce 01       	movw	r24, r28
    4b66:	01 96       	adiw	r24, 0x01	; 1
    4b68:	be 01       	movw	r22, r28
    4b6a:	67 5f       	subi	r22, 0xF7	; 247
    4b6c:	7f 4f       	sbci	r23, 0xFF	; 255
    4b6e:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4b72:	ce 01       	movw	r24, r28
    4b74:	05 96       	adiw	r24, 0x05	; 5
    4b76:	be 01       	movw	r22, r28
    4b78:	6f 5e       	subi	r22, 0xEF	; 239
    4b7a:	7f 4f       	sbci	r23, 0xFF	; 255
    4b7c:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4b80:	99 85       	ldd	r25, Y+9	; 0x09
    4b82:	92 30       	cpi	r25, 0x02	; 2
    4b84:	88 f0       	brcs	.+34     	; 0x4ba8 <__mulsf3+0x60>
    4b86:	89 89       	ldd	r24, Y+17	; 0x11
    4b88:	82 30       	cpi	r24, 0x02	; 2
    4b8a:	c8 f0       	brcs	.+50     	; 0x4bbe <__mulsf3+0x76>
    4b8c:	94 30       	cpi	r25, 0x04	; 4
    4b8e:	19 f4       	brne	.+6      	; 0x4b96 <__mulsf3+0x4e>
    4b90:	82 30       	cpi	r24, 0x02	; 2
    4b92:	51 f4       	brne	.+20     	; 0x4ba8 <__mulsf3+0x60>
    4b94:	04 c0       	rjmp	.+8      	; 0x4b9e <__mulsf3+0x56>
    4b96:	84 30       	cpi	r24, 0x04	; 4
    4b98:	29 f4       	brne	.+10     	; 0x4ba4 <__mulsf3+0x5c>
    4b9a:	92 30       	cpi	r25, 0x02	; 2
    4b9c:	81 f4       	brne	.+32     	; 0x4bbe <__mulsf3+0x76>
    4b9e:	8f e9       	ldi	r24, 0x9F	; 159
    4ba0:	91 e0       	ldi	r25, 0x01	; 1
    4ba2:	c6 c0       	rjmp	.+396    	; 0x4d30 <__mulsf3+0x1e8>
    4ba4:	92 30       	cpi	r25, 0x02	; 2
    4ba6:	49 f4       	brne	.+18     	; 0x4bba <__mulsf3+0x72>
    4ba8:	20 e0       	ldi	r18, 0x00	; 0
    4baa:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bac:	8a 89       	ldd	r24, Y+18	; 0x12
    4bae:	98 13       	cpse	r25, r24
    4bb0:	21 e0       	ldi	r18, 0x01	; 1
    4bb2:	2a 87       	std	Y+10, r18	; 0x0a
    4bb4:	ce 01       	movw	r24, r28
    4bb6:	09 96       	adiw	r24, 0x09	; 9
    4bb8:	bb c0       	rjmp	.+374    	; 0x4d30 <__mulsf3+0x1e8>
    4bba:	82 30       	cpi	r24, 0x02	; 2
    4bbc:	49 f4       	brne	.+18     	; 0x4bd0 <__mulsf3+0x88>
    4bbe:	20 e0       	ldi	r18, 0x00	; 0
    4bc0:	9a 85       	ldd	r25, Y+10	; 0x0a
    4bc2:	8a 89       	ldd	r24, Y+18	; 0x12
    4bc4:	98 13       	cpse	r25, r24
    4bc6:	21 e0       	ldi	r18, 0x01	; 1
    4bc8:	2a 8b       	std	Y+18, r18	; 0x12
    4bca:	ce 01       	movw	r24, r28
    4bcc:	41 96       	adiw	r24, 0x11	; 17
    4bce:	b0 c0       	rjmp	.+352    	; 0x4d30 <__mulsf3+0x1e8>
    4bd0:	2d 84       	ldd	r2, Y+13	; 0x0d
    4bd2:	3e 84       	ldd	r3, Y+14	; 0x0e
    4bd4:	4f 84       	ldd	r4, Y+15	; 0x0f
    4bd6:	58 88       	ldd	r5, Y+16	; 0x10
    4bd8:	6d 88       	ldd	r6, Y+21	; 0x15
    4bda:	7e 88       	ldd	r7, Y+22	; 0x16
    4bdc:	8f 88       	ldd	r8, Y+23	; 0x17
    4bde:	98 8c       	ldd	r9, Y+24	; 0x18
    4be0:	ee 24       	eor	r14, r14
    4be2:	ff 24       	eor	r15, r15
    4be4:	87 01       	movw	r16, r14
    4be6:	aa 24       	eor	r10, r10
    4be8:	bb 24       	eor	r11, r11
    4bea:	65 01       	movw	r12, r10
    4bec:	40 e0       	ldi	r20, 0x00	; 0
    4bee:	50 e0       	ldi	r21, 0x00	; 0
    4bf0:	60 e0       	ldi	r22, 0x00	; 0
    4bf2:	70 e0       	ldi	r23, 0x00	; 0
    4bf4:	e0 e0       	ldi	r30, 0x00	; 0
    4bf6:	f0 e0       	ldi	r31, 0x00	; 0
    4bf8:	c1 01       	movw	r24, r2
    4bfa:	81 70       	andi	r24, 0x01	; 1
    4bfc:	90 70       	andi	r25, 0x00	; 0
    4bfe:	89 2b       	or	r24, r25
    4c00:	e9 f0       	breq	.+58     	; 0x4c3c <__mulsf3+0xf4>
    4c02:	e6 0c       	add	r14, r6
    4c04:	f7 1c       	adc	r15, r7
    4c06:	08 1d       	adc	r16, r8
    4c08:	19 1d       	adc	r17, r9
    4c0a:	9a 01       	movw	r18, r20
    4c0c:	ab 01       	movw	r20, r22
    4c0e:	2a 0d       	add	r18, r10
    4c10:	3b 1d       	adc	r19, r11
    4c12:	4c 1d       	adc	r20, r12
    4c14:	5d 1d       	adc	r21, r13
    4c16:	80 e0       	ldi	r24, 0x00	; 0
    4c18:	90 e0       	ldi	r25, 0x00	; 0
    4c1a:	a0 e0       	ldi	r26, 0x00	; 0
    4c1c:	b0 e0       	ldi	r27, 0x00	; 0
    4c1e:	e6 14       	cp	r14, r6
    4c20:	f7 04       	cpc	r15, r7
    4c22:	08 05       	cpc	r16, r8
    4c24:	19 05       	cpc	r17, r9
    4c26:	20 f4       	brcc	.+8      	; 0x4c30 <__mulsf3+0xe8>
    4c28:	81 e0       	ldi	r24, 0x01	; 1
    4c2a:	90 e0       	ldi	r25, 0x00	; 0
    4c2c:	a0 e0       	ldi	r26, 0x00	; 0
    4c2e:	b0 e0       	ldi	r27, 0x00	; 0
    4c30:	ba 01       	movw	r22, r20
    4c32:	a9 01       	movw	r20, r18
    4c34:	48 0f       	add	r20, r24
    4c36:	59 1f       	adc	r21, r25
    4c38:	6a 1f       	adc	r22, r26
    4c3a:	7b 1f       	adc	r23, r27
    4c3c:	aa 0c       	add	r10, r10
    4c3e:	bb 1c       	adc	r11, r11
    4c40:	cc 1c       	adc	r12, r12
    4c42:	dd 1c       	adc	r13, r13
    4c44:	97 fe       	sbrs	r9, 7
    4c46:	08 c0       	rjmp	.+16     	; 0x4c58 <__mulsf3+0x110>
    4c48:	81 e0       	ldi	r24, 0x01	; 1
    4c4a:	90 e0       	ldi	r25, 0x00	; 0
    4c4c:	a0 e0       	ldi	r26, 0x00	; 0
    4c4e:	b0 e0       	ldi	r27, 0x00	; 0
    4c50:	a8 2a       	or	r10, r24
    4c52:	b9 2a       	or	r11, r25
    4c54:	ca 2a       	or	r12, r26
    4c56:	db 2a       	or	r13, r27
    4c58:	31 96       	adiw	r30, 0x01	; 1
    4c5a:	e0 32       	cpi	r30, 0x20	; 32
    4c5c:	f1 05       	cpc	r31, r1
    4c5e:	49 f0       	breq	.+18     	; 0x4c72 <__mulsf3+0x12a>
    4c60:	66 0c       	add	r6, r6
    4c62:	77 1c       	adc	r7, r7
    4c64:	88 1c       	adc	r8, r8
    4c66:	99 1c       	adc	r9, r9
    4c68:	56 94       	lsr	r5
    4c6a:	47 94       	ror	r4
    4c6c:	37 94       	ror	r3
    4c6e:	27 94       	ror	r2
    4c70:	c3 cf       	rjmp	.-122    	; 0x4bf8 <__mulsf3+0xb0>
    4c72:	fa 85       	ldd	r31, Y+10	; 0x0a
    4c74:	ea 89       	ldd	r30, Y+18	; 0x12
    4c76:	2b 89       	ldd	r18, Y+19	; 0x13
    4c78:	3c 89       	ldd	r19, Y+20	; 0x14
    4c7a:	8b 85       	ldd	r24, Y+11	; 0x0b
    4c7c:	9c 85       	ldd	r25, Y+12	; 0x0c
    4c7e:	28 0f       	add	r18, r24
    4c80:	39 1f       	adc	r19, r25
    4c82:	2e 5f       	subi	r18, 0xFE	; 254
    4c84:	3f 4f       	sbci	r19, 0xFF	; 255
    4c86:	17 c0       	rjmp	.+46     	; 0x4cb6 <__mulsf3+0x16e>
    4c88:	ca 01       	movw	r24, r20
    4c8a:	81 70       	andi	r24, 0x01	; 1
    4c8c:	90 70       	andi	r25, 0x00	; 0
    4c8e:	89 2b       	or	r24, r25
    4c90:	61 f0       	breq	.+24     	; 0x4caa <__mulsf3+0x162>
    4c92:	16 95       	lsr	r17
    4c94:	07 95       	ror	r16
    4c96:	f7 94       	ror	r15
    4c98:	e7 94       	ror	r14
    4c9a:	80 e0       	ldi	r24, 0x00	; 0
    4c9c:	90 e0       	ldi	r25, 0x00	; 0
    4c9e:	a0 e0       	ldi	r26, 0x00	; 0
    4ca0:	b0 e8       	ldi	r27, 0x80	; 128
    4ca2:	e8 2a       	or	r14, r24
    4ca4:	f9 2a       	or	r15, r25
    4ca6:	0a 2b       	or	r16, r26
    4ca8:	1b 2b       	or	r17, r27
    4caa:	76 95       	lsr	r23
    4cac:	67 95       	ror	r22
    4cae:	57 95       	ror	r21
    4cb0:	47 95       	ror	r20
    4cb2:	2f 5f       	subi	r18, 0xFF	; 255
    4cb4:	3f 4f       	sbci	r19, 0xFF	; 255
    4cb6:	77 fd       	sbrc	r23, 7
    4cb8:	e7 cf       	rjmp	.-50     	; 0x4c88 <__mulsf3+0x140>
    4cba:	0c c0       	rjmp	.+24     	; 0x4cd4 <__mulsf3+0x18c>
    4cbc:	44 0f       	add	r20, r20
    4cbe:	55 1f       	adc	r21, r21
    4cc0:	66 1f       	adc	r22, r22
    4cc2:	77 1f       	adc	r23, r23
    4cc4:	17 fd       	sbrc	r17, 7
    4cc6:	41 60       	ori	r20, 0x01	; 1
    4cc8:	ee 0c       	add	r14, r14
    4cca:	ff 1c       	adc	r15, r15
    4ccc:	00 1f       	adc	r16, r16
    4cce:	11 1f       	adc	r17, r17
    4cd0:	21 50       	subi	r18, 0x01	; 1
    4cd2:	30 40       	sbci	r19, 0x00	; 0
    4cd4:	40 30       	cpi	r20, 0x00	; 0
    4cd6:	90 e0       	ldi	r25, 0x00	; 0
    4cd8:	59 07       	cpc	r21, r25
    4cda:	90 e0       	ldi	r25, 0x00	; 0
    4cdc:	69 07       	cpc	r22, r25
    4cde:	90 e4       	ldi	r25, 0x40	; 64
    4ce0:	79 07       	cpc	r23, r25
    4ce2:	60 f3       	brcs	.-40     	; 0x4cbc <__mulsf3+0x174>
    4ce4:	2b 8f       	std	Y+27, r18	; 0x1b
    4ce6:	3c 8f       	std	Y+28, r19	; 0x1c
    4ce8:	db 01       	movw	r26, r22
    4cea:	ca 01       	movw	r24, r20
    4cec:	8f 77       	andi	r24, 0x7F	; 127
    4cee:	90 70       	andi	r25, 0x00	; 0
    4cf0:	a0 70       	andi	r26, 0x00	; 0
    4cf2:	b0 70       	andi	r27, 0x00	; 0
    4cf4:	80 34       	cpi	r24, 0x40	; 64
    4cf6:	91 05       	cpc	r25, r1
    4cf8:	a1 05       	cpc	r26, r1
    4cfa:	b1 05       	cpc	r27, r1
    4cfc:	61 f4       	brne	.+24     	; 0x4d16 <__mulsf3+0x1ce>
    4cfe:	47 fd       	sbrc	r20, 7
    4d00:	0a c0       	rjmp	.+20     	; 0x4d16 <__mulsf3+0x1ce>
    4d02:	e1 14       	cp	r14, r1
    4d04:	f1 04       	cpc	r15, r1
    4d06:	01 05       	cpc	r16, r1
    4d08:	11 05       	cpc	r17, r1
    4d0a:	29 f0       	breq	.+10     	; 0x4d16 <__mulsf3+0x1ce>
    4d0c:	40 5c       	subi	r20, 0xC0	; 192
    4d0e:	5f 4f       	sbci	r21, 0xFF	; 255
    4d10:	6f 4f       	sbci	r22, 0xFF	; 255
    4d12:	7f 4f       	sbci	r23, 0xFF	; 255
    4d14:	40 78       	andi	r20, 0x80	; 128
    4d16:	1a 8e       	std	Y+26, r1	; 0x1a
    4d18:	fe 17       	cp	r31, r30
    4d1a:	11 f0       	breq	.+4      	; 0x4d20 <__mulsf3+0x1d8>
    4d1c:	81 e0       	ldi	r24, 0x01	; 1
    4d1e:	8a 8f       	std	Y+26, r24	; 0x1a
    4d20:	4d 8f       	std	Y+29, r20	; 0x1d
    4d22:	5e 8f       	std	Y+30, r21	; 0x1e
    4d24:	6f 8f       	std	Y+31, r22	; 0x1f
    4d26:	78 a3       	std	Y+32, r23	; 0x20
    4d28:	83 e0       	ldi	r24, 0x03	; 3
    4d2a:	89 8f       	std	Y+25, r24	; 0x19
    4d2c:	ce 01       	movw	r24, r28
    4d2e:	49 96       	adiw	r24, 0x19	; 25
    4d30:	0e 94 82 27 	call	0x4f04	; 0x4f04 <__pack_f>
    4d34:	a0 96       	adiw	r28, 0x20	; 32
    4d36:	e2 e1       	ldi	r30, 0x12	; 18
    4d38:	0c 94 44 29 	jmp	0x5288	; 0x5288 <__epilogue_restores__>

00004d3c <__gtsf2>:
    4d3c:	a8 e1       	ldi	r26, 0x18	; 24
    4d3e:	b0 e0       	ldi	r27, 0x00	; 0
    4d40:	e4 ea       	ldi	r30, 0xA4	; 164
    4d42:	f6 e2       	ldi	r31, 0x26	; 38
    4d44:	0c 94 34 29 	jmp	0x5268	; 0x5268 <__prologue_saves__+0x18>
    4d48:	69 83       	std	Y+1, r22	; 0x01
    4d4a:	7a 83       	std	Y+2, r23	; 0x02
    4d4c:	8b 83       	std	Y+3, r24	; 0x03
    4d4e:	9c 83       	std	Y+4, r25	; 0x04
    4d50:	2d 83       	std	Y+5, r18	; 0x05
    4d52:	3e 83       	std	Y+6, r19	; 0x06
    4d54:	4f 83       	std	Y+7, r20	; 0x07
    4d56:	58 87       	std	Y+8, r21	; 0x08
    4d58:	89 e0       	ldi	r24, 0x09	; 9
    4d5a:	e8 2e       	mov	r14, r24
    4d5c:	f1 2c       	mov	r15, r1
    4d5e:	ec 0e       	add	r14, r28
    4d60:	fd 1e       	adc	r15, r29
    4d62:	ce 01       	movw	r24, r28
    4d64:	01 96       	adiw	r24, 0x01	; 1
    4d66:	b7 01       	movw	r22, r14
    4d68:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4d6c:	8e 01       	movw	r16, r28
    4d6e:	0f 5e       	subi	r16, 0xEF	; 239
    4d70:	1f 4f       	sbci	r17, 0xFF	; 255
    4d72:	ce 01       	movw	r24, r28
    4d74:	05 96       	adiw	r24, 0x05	; 5
    4d76:	b8 01       	movw	r22, r16
    4d78:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4d7c:	89 85       	ldd	r24, Y+9	; 0x09
    4d7e:	82 30       	cpi	r24, 0x02	; 2
    4d80:	40 f0       	brcs	.+16     	; 0x4d92 <__gtsf2+0x56>
    4d82:	89 89       	ldd	r24, Y+17	; 0x11
    4d84:	82 30       	cpi	r24, 0x02	; 2
    4d86:	28 f0       	brcs	.+10     	; 0x4d92 <__gtsf2+0x56>
    4d88:	c7 01       	movw	r24, r14
    4d8a:	b8 01       	movw	r22, r16
    4d8c:	0e 94 cf 28 	call	0x519e	; 0x519e <__fpcmp_parts_f>
    4d90:	01 c0       	rjmp	.+2      	; 0x4d94 <__gtsf2+0x58>
    4d92:	8f ef       	ldi	r24, 0xFF	; 255
    4d94:	68 96       	adiw	r28, 0x18	; 24
    4d96:	e6 e0       	ldi	r30, 0x06	; 6
    4d98:	0c 94 50 29 	jmp	0x52a0	; 0x52a0 <__epilogue_restores__+0x18>

00004d9c <__gesf2>:
    4d9c:	a8 e1       	ldi	r26, 0x18	; 24
    4d9e:	b0 e0       	ldi	r27, 0x00	; 0
    4da0:	e4 ed       	ldi	r30, 0xD4	; 212
    4da2:	f6 e2       	ldi	r31, 0x26	; 38
    4da4:	0c 94 34 29 	jmp	0x5268	; 0x5268 <__prologue_saves__+0x18>
    4da8:	69 83       	std	Y+1, r22	; 0x01
    4daa:	7a 83       	std	Y+2, r23	; 0x02
    4dac:	8b 83       	std	Y+3, r24	; 0x03
    4dae:	9c 83       	std	Y+4, r25	; 0x04
    4db0:	2d 83       	std	Y+5, r18	; 0x05
    4db2:	3e 83       	std	Y+6, r19	; 0x06
    4db4:	4f 83       	std	Y+7, r20	; 0x07
    4db6:	58 87       	std	Y+8, r21	; 0x08
    4db8:	89 e0       	ldi	r24, 0x09	; 9
    4dba:	e8 2e       	mov	r14, r24
    4dbc:	f1 2c       	mov	r15, r1
    4dbe:	ec 0e       	add	r14, r28
    4dc0:	fd 1e       	adc	r15, r29
    4dc2:	ce 01       	movw	r24, r28
    4dc4:	01 96       	adiw	r24, 0x01	; 1
    4dc6:	b7 01       	movw	r22, r14
    4dc8:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4dcc:	8e 01       	movw	r16, r28
    4dce:	0f 5e       	subi	r16, 0xEF	; 239
    4dd0:	1f 4f       	sbci	r17, 0xFF	; 255
    4dd2:	ce 01       	movw	r24, r28
    4dd4:	05 96       	adiw	r24, 0x05	; 5
    4dd6:	b8 01       	movw	r22, r16
    4dd8:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4ddc:	89 85       	ldd	r24, Y+9	; 0x09
    4dde:	82 30       	cpi	r24, 0x02	; 2
    4de0:	40 f0       	brcs	.+16     	; 0x4df2 <__gesf2+0x56>
    4de2:	89 89       	ldd	r24, Y+17	; 0x11
    4de4:	82 30       	cpi	r24, 0x02	; 2
    4de6:	28 f0       	brcs	.+10     	; 0x4df2 <__gesf2+0x56>
    4de8:	c7 01       	movw	r24, r14
    4dea:	b8 01       	movw	r22, r16
    4dec:	0e 94 cf 28 	call	0x519e	; 0x519e <__fpcmp_parts_f>
    4df0:	01 c0       	rjmp	.+2      	; 0x4df4 <__gesf2+0x58>
    4df2:	8f ef       	ldi	r24, 0xFF	; 255
    4df4:	68 96       	adiw	r28, 0x18	; 24
    4df6:	e6 e0       	ldi	r30, 0x06	; 6
    4df8:	0c 94 50 29 	jmp	0x52a0	; 0x52a0 <__epilogue_restores__+0x18>

00004dfc <__ltsf2>:
    4dfc:	a8 e1       	ldi	r26, 0x18	; 24
    4dfe:	b0 e0       	ldi	r27, 0x00	; 0
    4e00:	e4 e0       	ldi	r30, 0x04	; 4
    4e02:	f7 e2       	ldi	r31, 0x27	; 39
    4e04:	0c 94 34 29 	jmp	0x5268	; 0x5268 <__prologue_saves__+0x18>
    4e08:	69 83       	std	Y+1, r22	; 0x01
    4e0a:	7a 83       	std	Y+2, r23	; 0x02
    4e0c:	8b 83       	std	Y+3, r24	; 0x03
    4e0e:	9c 83       	std	Y+4, r25	; 0x04
    4e10:	2d 83       	std	Y+5, r18	; 0x05
    4e12:	3e 83       	std	Y+6, r19	; 0x06
    4e14:	4f 83       	std	Y+7, r20	; 0x07
    4e16:	58 87       	std	Y+8, r21	; 0x08
    4e18:	89 e0       	ldi	r24, 0x09	; 9
    4e1a:	e8 2e       	mov	r14, r24
    4e1c:	f1 2c       	mov	r15, r1
    4e1e:	ec 0e       	add	r14, r28
    4e20:	fd 1e       	adc	r15, r29
    4e22:	ce 01       	movw	r24, r28
    4e24:	01 96       	adiw	r24, 0x01	; 1
    4e26:	b7 01       	movw	r22, r14
    4e28:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4e2c:	8e 01       	movw	r16, r28
    4e2e:	0f 5e       	subi	r16, 0xEF	; 239
    4e30:	1f 4f       	sbci	r17, 0xFF	; 255
    4e32:	ce 01       	movw	r24, r28
    4e34:	05 96       	adiw	r24, 0x05	; 5
    4e36:	b8 01       	movw	r22, r16
    4e38:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4e3c:	89 85       	ldd	r24, Y+9	; 0x09
    4e3e:	82 30       	cpi	r24, 0x02	; 2
    4e40:	40 f0       	brcs	.+16     	; 0x4e52 <__ltsf2+0x56>
    4e42:	89 89       	ldd	r24, Y+17	; 0x11
    4e44:	82 30       	cpi	r24, 0x02	; 2
    4e46:	28 f0       	brcs	.+10     	; 0x4e52 <__ltsf2+0x56>
    4e48:	c7 01       	movw	r24, r14
    4e4a:	b8 01       	movw	r22, r16
    4e4c:	0e 94 cf 28 	call	0x519e	; 0x519e <__fpcmp_parts_f>
    4e50:	01 c0       	rjmp	.+2      	; 0x4e54 <__ltsf2+0x58>
    4e52:	81 e0       	ldi	r24, 0x01	; 1
    4e54:	68 96       	adiw	r28, 0x18	; 24
    4e56:	e6 e0       	ldi	r30, 0x06	; 6
    4e58:	0c 94 50 29 	jmp	0x52a0	; 0x52a0 <__epilogue_restores__+0x18>

00004e5c <__fixsfsi>:
    4e5c:	ac e0       	ldi	r26, 0x0C	; 12
    4e5e:	b0 e0       	ldi	r27, 0x00	; 0
    4e60:	e4 e3       	ldi	r30, 0x34	; 52
    4e62:	f7 e2       	ldi	r31, 0x27	; 39
    4e64:	0c 94 38 29 	jmp	0x5270	; 0x5270 <__prologue_saves__+0x20>
    4e68:	69 83       	std	Y+1, r22	; 0x01
    4e6a:	7a 83       	std	Y+2, r23	; 0x02
    4e6c:	8b 83       	std	Y+3, r24	; 0x03
    4e6e:	9c 83       	std	Y+4, r25	; 0x04
    4e70:	ce 01       	movw	r24, r28
    4e72:	01 96       	adiw	r24, 0x01	; 1
    4e74:	be 01       	movw	r22, r28
    4e76:	6b 5f       	subi	r22, 0xFB	; 251
    4e78:	7f 4f       	sbci	r23, 0xFF	; 255
    4e7a:	0e 94 57 28 	call	0x50ae	; 0x50ae <__unpack_f>
    4e7e:	8d 81       	ldd	r24, Y+5	; 0x05
    4e80:	82 30       	cpi	r24, 0x02	; 2
    4e82:	61 f1       	breq	.+88     	; 0x4edc <__fixsfsi+0x80>
    4e84:	82 30       	cpi	r24, 0x02	; 2
    4e86:	50 f1       	brcs	.+84     	; 0x4edc <__fixsfsi+0x80>
    4e88:	84 30       	cpi	r24, 0x04	; 4
    4e8a:	21 f4       	brne	.+8      	; 0x4e94 <__fixsfsi+0x38>
    4e8c:	8e 81       	ldd	r24, Y+6	; 0x06
    4e8e:	88 23       	and	r24, r24
    4e90:	51 f1       	breq	.+84     	; 0x4ee6 <__fixsfsi+0x8a>
    4e92:	2e c0       	rjmp	.+92     	; 0x4ef0 <__fixsfsi+0x94>
    4e94:	2f 81       	ldd	r18, Y+7	; 0x07
    4e96:	38 85       	ldd	r19, Y+8	; 0x08
    4e98:	37 fd       	sbrc	r19, 7
    4e9a:	20 c0       	rjmp	.+64     	; 0x4edc <__fixsfsi+0x80>
    4e9c:	6e 81       	ldd	r22, Y+6	; 0x06
    4e9e:	2f 31       	cpi	r18, 0x1F	; 31
    4ea0:	31 05       	cpc	r19, r1
    4ea2:	1c f0       	brlt	.+6      	; 0x4eaa <__fixsfsi+0x4e>
    4ea4:	66 23       	and	r22, r22
    4ea6:	f9 f0       	breq	.+62     	; 0x4ee6 <__fixsfsi+0x8a>
    4ea8:	23 c0       	rjmp	.+70     	; 0x4ef0 <__fixsfsi+0x94>
    4eaa:	8e e1       	ldi	r24, 0x1E	; 30
    4eac:	90 e0       	ldi	r25, 0x00	; 0
    4eae:	82 1b       	sub	r24, r18
    4eb0:	93 0b       	sbc	r25, r19
    4eb2:	29 85       	ldd	r18, Y+9	; 0x09
    4eb4:	3a 85       	ldd	r19, Y+10	; 0x0a
    4eb6:	4b 85       	ldd	r20, Y+11	; 0x0b
    4eb8:	5c 85       	ldd	r21, Y+12	; 0x0c
    4eba:	04 c0       	rjmp	.+8      	; 0x4ec4 <__fixsfsi+0x68>
    4ebc:	56 95       	lsr	r21
    4ebe:	47 95       	ror	r20
    4ec0:	37 95       	ror	r19
    4ec2:	27 95       	ror	r18
    4ec4:	8a 95       	dec	r24
    4ec6:	d2 f7       	brpl	.-12     	; 0x4ebc <__fixsfsi+0x60>
    4ec8:	66 23       	and	r22, r22
    4eca:	b1 f0       	breq	.+44     	; 0x4ef8 <__fixsfsi+0x9c>
    4ecc:	50 95       	com	r21
    4ece:	40 95       	com	r20
    4ed0:	30 95       	com	r19
    4ed2:	21 95       	neg	r18
    4ed4:	3f 4f       	sbci	r19, 0xFF	; 255
    4ed6:	4f 4f       	sbci	r20, 0xFF	; 255
    4ed8:	5f 4f       	sbci	r21, 0xFF	; 255
    4eda:	0e c0       	rjmp	.+28     	; 0x4ef8 <__fixsfsi+0x9c>
    4edc:	20 e0       	ldi	r18, 0x00	; 0
    4ede:	30 e0       	ldi	r19, 0x00	; 0
    4ee0:	40 e0       	ldi	r20, 0x00	; 0
    4ee2:	50 e0       	ldi	r21, 0x00	; 0
    4ee4:	09 c0       	rjmp	.+18     	; 0x4ef8 <__fixsfsi+0x9c>
    4ee6:	2f ef       	ldi	r18, 0xFF	; 255
    4ee8:	3f ef       	ldi	r19, 0xFF	; 255
    4eea:	4f ef       	ldi	r20, 0xFF	; 255
    4eec:	5f e7       	ldi	r21, 0x7F	; 127
    4eee:	04 c0       	rjmp	.+8      	; 0x4ef8 <__fixsfsi+0x9c>
    4ef0:	20 e0       	ldi	r18, 0x00	; 0
    4ef2:	30 e0       	ldi	r19, 0x00	; 0
    4ef4:	40 e0       	ldi	r20, 0x00	; 0
    4ef6:	50 e8       	ldi	r21, 0x80	; 128
    4ef8:	b9 01       	movw	r22, r18
    4efa:	ca 01       	movw	r24, r20
    4efc:	2c 96       	adiw	r28, 0x0c	; 12
    4efe:	e2 e0       	ldi	r30, 0x02	; 2
    4f00:	0c 94 54 29 	jmp	0x52a8	; 0x52a8 <__epilogue_restores__+0x20>

00004f04 <__pack_f>:
    4f04:	df 92       	push	r13
    4f06:	ef 92       	push	r14
    4f08:	ff 92       	push	r15
    4f0a:	0f 93       	push	r16
    4f0c:	1f 93       	push	r17
    4f0e:	fc 01       	movw	r30, r24
    4f10:	e4 80       	ldd	r14, Z+4	; 0x04
    4f12:	f5 80       	ldd	r15, Z+5	; 0x05
    4f14:	06 81       	ldd	r16, Z+6	; 0x06
    4f16:	17 81       	ldd	r17, Z+7	; 0x07
    4f18:	d1 80       	ldd	r13, Z+1	; 0x01
    4f1a:	80 81       	ld	r24, Z
    4f1c:	82 30       	cpi	r24, 0x02	; 2
    4f1e:	48 f4       	brcc	.+18     	; 0x4f32 <__pack_f+0x2e>
    4f20:	80 e0       	ldi	r24, 0x00	; 0
    4f22:	90 e0       	ldi	r25, 0x00	; 0
    4f24:	a0 e1       	ldi	r26, 0x10	; 16
    4f26:	b0 e0       	ldi	r27, 0x00	; 0
    4f28:	e8 2a       	or	r14, r24
    4f2a:	f9 2a       	or	r15, r25
    4f2c:	0a 2b       	or	r16, r26
    4f2e:	1b 2b       	or	r17, r27
    4f30:	a5 c0       	rjmp	.+330    	; 0x507c <__pack_f+0x178>
    4f32:	84 30       	cpi	r24, 0x04	; 4
    4f34:	09 f4       	brne	.+2      	; 0x4f38 <__pack_f+0x34>
    4f36:	9f c0       	rjmp	.+318    	; 0x5076 <__pack_f+0x172>
    4f38:	82 30       	cpi	r24, 0x02	; 2
    4f3a:	21 f4       	brne	.+8      	; 0x4f44 <__pack_f+0x40>
    4f3c:	ee 24       	eor	r14, r14
    4f3e:	ff 24       	eor	r15, r15
    4f40:	87 01       	movw	r16, r14
    4f42:	05 c0       	rjmp	.+10     	; 0x4f4e <__pack_f+0x4a>
    4f44:	e1 14       	cp	r14, r1
    4f46:	f1 04       	cpc	r15, r1
    4f48:	01 05       	cpc	r16, r1
    4f4a:	11 05       	cpc	r17, r1
    4f4c:	19 f4       	brne	.+6      	; 0x4f54 <__pack_f+0x50>
    4f4e:	e0 e0       	ldi	r30, 0x00	; 0
    4f50:	f0 e0       	ldi	r31, 0x00	; 0
    4f52:	96 c0       	rjmp	.+300    	; 0x5080 <__pack_f+0x17c>
    4f54:	62 81       	ldd	r22, Z+2	; 0x02
    4f56:	73 81       	ldd	r23, Z+3	; 0x03
    4f58:	9f ef       	ldi	r25, 0xFF	; 255
    4f5a:	62 38       	cpi	r22, 0x82	; 130
    4f5c:	79 07       	cpc	r23, r25
    4f5e:	0c f0       	brlt	.+2      	; 0x4f62 <__pack_f+0x5e>
    4f60:	5b c0       	rjmp	.+182    	; 0x5018 <__pack_f+0x114>
    4f62:	22 e8       	ldi	r18, 0x82	; 130
    4f64:	3f ef       	ldi	r19, 0xFF	; 255
    4f66:	26 1b       	sub	r18, r22
    4f68:	37 0b       	sbc	r19, r23
    4f6a:	2a 31       	cpi	r18, 0x1A	; 26
    4f6c:	31 05       	cpc	r19, r1
    4f6e:	2c f0       	brlt	.+10     	; 0x4f7a <__pack_f+0x76>
    4f70:	20 e0       	ldi	r18, 0x00	; 0
    4f72:	30 e0       	ldi	r19, 0x00	; 0
    4f74:	40 e0       	ldi	r20, 0x00	; 0
    4f76:	50 e0       	ldi	r21, 0x00	; 0
    4f78:	2a c0       	rjmp	.+84     	; 0x4fce <__pack_f+0xca>
    4f7a:	b8 01       	movw	r22, r16
    4f7c:	a7 01       	movw	r20, r14
    4f7e:	02 2e       	mov	r0, r18
    4f80:	04 c0       	rjmp	.+8      	; 0x4f8a <__pack_f+0x86>
    4f82:	76 95       	lsr	r23
    4f84:	67 95       	ror	r22
    4f86:	57 95       	ror	r21
    4f88:	47 95       	ror	r20
    4f8a:	0a 94       	dec	r0
    4f8c:	d2 f7       	brpl	.-12     	; 0x4f82 <__pack_f+0x7e>
    4f8e:	81 e0       	ldi	r24, 0x01	; 1
    4f90:	90 e0       	ldi	r25, 0x00	; 0
    4f92:	a0 e0       	ldi	r26, 0x00	; 0
    4f94:	b0 e0       	ldi	r27, 0x00	; 0
    4f96:	04 c0       	rjmp	.+8      	; 0x4fa0 <__pack_f+0x9c>
    4f98:	88 0f       	add	r24, r24
    4f9a:	99 1f       	adc	r25, r25
    4f9c:	aa 1f       	adc	r26, r26
    4f9e:	bb 1f       	adc	r27, r27
    4fa0:	2a 95       	dec	r18
    4fa2:	d2 f7       	brpl	.-12     	; 0x4f98 <__pack_f+0x94>
    4fa4:	01 97       	sbiw	r24, 0x01	; 1
    4fa6:	a1 09       	sbc	r26, r1
    4fa8:	b1 09       	sbc	r27, r1
    4faa:	8e 21       	and	r24, r14
    4fac:	9f 21       	and	r25, r15
    4fae:	a0 23       	and	r26, r16
    4fb0:	b1 23       	and	r27, r17
    4fb2:	00 97       	sbiw	r24, 0x00	; 0
    4fb4:	a1 05       	cpc	r26, r1
    4fb6:	b1 05       	cpc	r27, r1
    4fb8:	21 f0       	breq	.+8      	; 0x4fc2 <__pack_f+0xbe>
    4fba:	81 e0       	ldi	r24, 0x01	; 1
    4fbc:	90 e0       	ldi	r25, 0x00	; 0
    4fbe:	a0 e0       	ldi	r26, 0x00	; 0
    4fc0:	b0 e0       	ldi	r27, 0x00	; 0
    4fc2:	9a 01       	movw	r18, r20
    4fc4:	ab 01       	movw	r20, r22
    4fc6:	28 2b       	or	r18, r24
    4fc8:	39 2b       	or	r19, r25
    4fca:	4a 2b       	or	r20, r26
    4fcc:	5b 2b       	or	r21, r27
    4fce:	da 01       	movw	r26, r20
    4fd0:	c9 01       	movw	r24, r18
    4fd2:	8f 77       	andi	r24, 0x7F	; 127
    4fd4:	90 70       	andi	r25, 0x00	; 0
    4fd6:	a0 70       	andi	r26, 0x00	; 0
    4fd8:	b0 70       	andi	r27, 0x00	; 0
    4fda:	80 34       	cpi	r24, 0x40	; 64
    4fdc:	91 05       	cpc	r25, r1
    4fde:	a1 05       	cpc	r26, r1
    4fe0:	b1 05       	cpc	r27, r1
    4fe2:	39 f4       	brne	.+14     	; 0x4ff2 <__pack_f+0xee>
    4fe4:	27 ff       	sbrs	r18, 7
    4fe6:	09 c0       	rjmp	.+18     	; 0x4ffa <__pack_f+0xf6>
    4fe8:	20 5c       	subi	r18, 0xC0	; 192
    4fea:	3f 4f       	sbci	r19, 0xFF	; 255
    4fec:	4f 4f       	sbci	r20, 0xFF	; 255
    4fee:	5f 4f       	sbci	r21, 0xFF	; 255
    4ff0:	04 c0       	rjmp	.+8      	; 0x4ffa <__pack_f+0xf6>
    4ff2:	21 5c       	subi	r18, 0xC1	; 193
    4ff4:	3f 4f       	sbci	r19, 0xFF	; 255
    4ff6:	4f 4f       	sbci	r20, 0xFF	; 255
    4ff8:	5f 4f       	sbci	r21, 0xFF	; 255
    4ffa:	e0 e0       	ldi	r30, 0x00	; 0
    4ffc:	f0 e0       	ldi	r31, 0x00	; 0
    4ffe:	20 30       	cpi	r18, 0x00	; 0
    5000:	a0 e0       	ldi	r26, 0x00	; 0
    5002:	3a 07       	cpc	r19, r26
    5004:	a0 e0       	ldi	r26, 0x00	; 0
    5006:	4a 07       	cpc	r20, r26
    5008:	a0 e4       	ldi	r26, 0x40	; 64
    500a:	5a 07       	cpc	r21, r26
    500c:	10 f0       	brcs	.+4      	; 0x5012 <__pack_f+0x10e>
    500e:	e1 e0       	ldi	r30, 0x01	; 1
    5010:	f0 e0       	ldi	r31, 0x00	; 0
    5012:	79 01       	movw	r14, r18
    5014:	8a 01       	movw	r16, r20
    5016:	27 c0       	rjmp	.+78     	; 0x5066 <__pack_f+0x162>
    5018:	60 38       	cpi	r22, 0x80	; 128
    501a:	71 05       	cpc	r23, r1
    501c:	64 f5       	brge	.+88     	; 0x5076 <__pack_f+0x172>
    501e:	fb 01       	movw	r30, r22
    5020:	e1 58       	subi	r30, 0x81	; 129
    5022:	ff 4f       	sbci	r31, 0xFF	; 255
    5024:	d8 01       	movw	r26, r16
    5026:	c7 01       	movw	r24, r14
    5028:	8f 77       	andi	r24, 0x7F	; 127
    502a:	90 70       	andi	r25, 0x00	; 0
    502c:	a0 70       	andi	r26, 0x00	; 0
    502e:	b0 70       	andi	r27, 0x00	; 0
    5030:	80 34       	cpi	r24, 0x40	; 64
    5032:	91 05       	cpc	r25, r1
    5034:	a1 05       	cpc	r26, r1
    5036:	b1 05       	cpc	r27, r1
    5038:	39 f4       	brne	.+14     	; 0x5048 <__pack_f+0x144>
    503a:	e7 fe       	sbrs	r14, 7
    503c:	0d c0       	rjmp	.+26     	; 0x5058 <__pack_f+0x154>
    503e:	80 e4       	ldi	r24, 0x40	; 64
    5040:	90 e0       	ldi	r25, 0x00	; 0
    5042:	a0 e0       	ldi	r26, 0x00	; 0
    5044:	b0 e0       	ldi	r27, 0x00	; 0
    5046:	04 c0       	rjmp	.+8      	; 0x5050 <__pack_f+0x14c>
    5048:	8f e3       	ldi	r24, 0x3F	; 63
    504a:	90 e0       	ldi	r25, 0x00	; 0
    504c:	a0 e0       	ldi	r26, 0x00	; 0
    504e:	b0 e0       	ldi	r27, 0x00	; 0
    5050:	e8 0e       	add	r14, r24
    5052:	f9 1e       	adc	r15, r25
    5054:	0a 1f       	adc	r16, r26
    5056:	1b 1f       	adc	r17, r27
    5058:	17 ff       	sbrs	r17, 7
    505a:	05 c0       	rjmp	.+10     	; 0x5066 <__pack_f+0x162>
    505c:	16 95       	lsr	r17
    505e:	07 95       	ror	r16
    5060:	f7 94       	ror	r15
    5062:	e7 94       	ror	r14
    5064:	31 96       	adiw	r30, 0x01	; 1
    5066:	87 e0       	ldi	r24, 0x07	; 7
    5068:	16 95       	lsr	r17
    506a:	07 95       	ror	r16
    506c:	f7 94       	ror	r15
    506e:	e7 94       	ror	r14
    5070:	8a 95       	dec	r24
    5072:	d1 f7       	brne	.-12     	; 0x5068 <__pack_f+0x164>
    5074:	05 c0       	rjmp	.+10     	; 0x5080 <__pack_f+0x17c>
    5076:	ee 24       	eor	r14, r14
    5078:	ff 24       	eor	r15, r15
    507a:	87 01       	movw	r16, r14
    507c:	ef ef       	ldi	r30, 0xFF	; 255
    507e:	f0 e0       	ldi	r31, 0x00	; 0
    5080:	6e 2f       	mov	r22, r30
    5082:	67 95       	ror	r22
    5084:	66 27       	eor	r22, r22
    5086:	67 95       	ror	r22
    5088:	90 2f       	mov	r25, r16
    508a:	9f 77       	andi	r25, 0x7F	; 127
    508c:	d7 94       	ror	r13
    508e:	dd 24       	eor	r13, r13
    5090:	d7 94       	ror	r13
    5092:	8e 2f       	mov	r24, r30
    5094:	86 95       	lsr	r24
    5096:	49 2f       	mov	r20, r25
    5098:	46 2b       	or	r20, r22
    509a:	58 2f       	mov	r21, r24
    509c:	5d 29       	or	r21, r13
    509e:	b7 01       	movw	r22, r14
    50a0:	ca 01       	movw	r24, r20
    50a2:	1f 91       	pop	r17
    50a4:	0f 91       	pop	r16
    50a6:	ff 90       	pop	r15
    50a8:	ef 90       	pop	r14
    50aa:	df 90       	pop	r13
    50ac:	08 95       	ret

000050ae <__unpack_f>:
    50ae:	fc 01       	movw	r30, r24
    50b0:	db 01       	movw	r26, r22
    50b2:	40 81       	ld	r20, Z
    50b4:	51 81       	ldd	r21, Z+1	; 0x01
    50b6:	22 81       	ldd	r18, Z+2	; 0x02
    50b8:	62 2f       	mov	r22, r18
    50ba:	6f 77       	andi	r22, 0x7F	; 127
    50bc:	70 e0       	ldi	r23, 0x00	; 0
    50be:	22 1f       	adc	r18, r18
    50c0:	22 27       	eor	r18, r18
    50c2:	22 1f       	adc	r18, r18
    50c4:	93 81       	ldd	r25, Z+3	; 0x03
    50c6:	89 2f       	mov	r24, r25
    50c8:	88 0f       	add	r24, r24
    50ca:	82 2b       	or	r24, r18
    50cc:	28 2f       	mov	r18, r24
    50ce:	30 e0       	ldi	r19, 0x00	; 0
    50d0:	99 1f       	adc	r25, r25
    50d2:	99 27       	eor	r25, r25
    50d4:	99 1f       	adc	r25, r25
    50d6:	11 96       	adiw	r26, 0x01	; 1
    50d8:	9c 93       	st	X, r25
    50da:	11 97       	sbiw	r26, 0x01	; 1
    50dc:	21 15       	cp	r18, r1
    50de:	31 05       	cpc	r19, r1
    50e0:	a9 f5       	brne	.+106    	; 0x514c <__unpack_f+0x9e>
    50e2:	41 15       	cp	r20, r1
    50e4:	51 05       	cpc	r21, r1
    50e6:	61 05       	cpc	r22, r1
    50e8:	71 05       	cpc	r23, r1
    50ea:	11 f4       	brne	.+4      	; 0x50f0 <__unpack_f+0x42>
    50ec:	82 e0       	ldi	r24, 0x02	; 2
    50ee:	37 c0       	rjmp	.+110    	; 0x515e <__unpack_f+0xb0>
    50f0:	82 e8       	ldi	r24, 0x82	; 130
    50f2:	9f ef       	ldi	r25, 0xFF	; 255
    50f4:	13 96       	adiw	r26, 0x03	; 3
    50f6:	9c 93       	st	X, r25
    50f8:	8e 93       	st	-X, r24
    50fa:	12 97       	sbiw	r26, 0x02	; 2
    50fc:	9a 01       	movw	r18, r20
    50fe:	ab 01       	movw	r20, r22
    5100:	67 e0       	ldi	r22, 0x07	; 7
    5102:	22 0f       	add	r18, r18
    5104:	33 1f       	adc	r19, r19
    5106:	44 1f       	adc	r20, r20
    5108:	55 1f       	adc	r21, r21
    510a:	6a 95       	dec	r22
    510c:	d1 f7       	brne	.-12     	; 0x5102 <__unpack_f+0x54>
    510e:	83 e0       	ldi	r24, 0x03	; 3
    5110:	8c 93       	st	X, r24
    5112:	0d c0       	rjmp	.+26     	; 0x512e <__unpack_f+0x80>
    5114:	22 0f       	add	r18, r18
    5116:	33 1f       	adc	r19, r19
    5118:	44 1f       	adc	r20, r20
    511a:	55 1f       	adc	r21, r21
    511c:	12 96       	adiw	r26, 0x02	; 2
    511e:	8d 91       	ld	r24, X+
    5120:	9c 91       	ld	r25, X
    5122:	13 97       	sbiw	r26, 0x03	; 3
    5124:	01 97       	sbiw	r24, 0x01	; 1
    5126:	13 96       	adiw	r26, 0x03	; 3
    5128:	9c 93       	st	X, r25
    512a:	8e 93       	st	-X, r24
    512c:	12 97       	sbiw	r26, 0x02	; 2
    512e:	20 30       	cpi	r18, 0x00	; 0
    5130:	80 e0       	ldi	r24, 0x00	; 0
    5132:	38 07       	cpc	r19, r24
    5134:	80 e0       	ldi	r24, 0x00	; 0
    5136:	48 07       	cpc	r20, r24
    5138:	80 e4       	ldi	r24, 0x40	; 64
    513a:	58 07       	cpc	r21, r24
    513c:	58 f3       	brcs	.-42     	; 0x5114 <__unpack_f+0x66>
    513e:	14 96       	adiw	r26, 0x04	; 4
    5140:	2d 93       	st	X+, r18
    5142:	3d 93       	st	X+, r19
    5144:	4d 93       	st	X+, r20
    5146:	5c 93       	st	X, r21
    5148:	17 97       	sbiw	r26, 0x07	; 7
    514a:	08 95       	ret
    514c:	2f 3f       	cpi	r18, 0xFF	; 255
    514e:	31 05       	cpc	r19, r1
    5150:	79 f4       	brne	.+30     	; 0x5170 <__unpack_f+0xc2>
    5152:	41 15       	cp	r20, r1
    5154:	51 05       	cpc	r21, r1
    5156:	61 05       	cpc	r22, r1
    5158:	71 05       	cpc	r23, r1
    515a:	19 f4       	brne	.+6      	; 0x5162 <__unpack_f+0xb4>
    515c:	84 e0       	ldi	r24, 0x04	; 4
    515e:	8c 93       	st	X, r24
    5160:	08 95       	ret
    5162:	64 ff       	sbrs	r22, 4
    5164:	03 c0       	rjmp	.+6      	; 0x516c <__unpack_f+0xbe>
    5166:	81 e0       	ldi	r24, 0x01	; 1
    5168:	8c 93       	st	X, r24
    516a:	12 c0       	rjmp	.+36     	; 0x5190 <__unpack_f+0xe2>
    516c:	1c 92       	st	X, r1
    516e:	10 c0       	rjmp	.+32     	; 0x5190 <__unpack_f+0xe2>
    5170:	2f 57       	subi	r18, 0x7F	; 127
    5172:	30 40       	sbci	r19, 0x00	; 0
    5174:	13 96       	adiw	r26, 0x03	; 3
    5176:	3c 93       	st	X, r19
    5178:	2e 93       	st	-X, r18
    517a:	12 97       	sbiw	r26, 0x02	; 2
    517c:	83 e0       	ldi	r24, 0x03	; 3
    517e:	8c 93       	st	X, r24
    5180:	87 e0       	ldi	r24, 0x07	; 7
    5182:	44 0f       	add	r20, r20
    5184:	55 1f       	adc	r21, r21
    5186:	66 1f       	adc	r22, r22
    5188:	77 1f       	adc	r23, r23
    518a:	8a 95       	dec	r24
    518c:	d1 f7       	brne	.-12     	; 0x5182 <__unpack_f+0xd4>
    518e:	70 64       	ori	r23, 0x40	; 64
    5190:	14 96       	adiw	r26, 0x04	; 4
    5192:	4d 93       	st	X+, r20
    5194:	5d 93       	st	X+, r21
    5196:	6d 93       	st	X+, r22
    5198:	7c 93       	st	X, r23
    519a:	17 97       	sbiw	r26, 0x07	; 7
    519c:	08 95       	ret

0000519e <__fpcmp_parts_f>:
    519e:	1f 93       	push	r17
    51a0:	dc 01       	movw	r26, r24
    51a2:	fb 01       	movw	r30, r22
    51a4:	9c 91       	ld	r25, X
    51a6:	92 30       	cpi	r25, 0x02	; 2
    51a8:	08 f4       	brcc	.+2      	; 0x51ac <__fpcmp_parts_f+0xe>
    51aa:	47 c0       	rjmp	.+142    	; 0x523a <__fpcmp_parts_f+0x9c>
    51ac:	80 81       	ld	r24, Z
    51ae:	82 30       	cpi	r24, 0x02	; 2
    51b0:	08 f4       	brcc	.+2      	; 0x51b4 <__fpcmp_parts_f+0x16>
    51b2:	43 c0       	rjmp	.+134    	; 0x523a <__fpcmp_parts_f+0x9c>
    51b4:	94 30       	cpi	r25, 0x04	; 4
    51b6:	51 f4       	brne	.+20     	; 0x51cc <__fpcmp_parts_f+0x2e>
    51b8:	11 96       	adiw	r26, 0x01	; 1
    51ba:	1c 91       	ld	r17, X
    51bc:	84 30       	cpi	r24, 0x04	; 4
    51be:	99 f5       	brne	.+102    	; 0x5226 <__fpcmp_parts_f+0x88>
    51c0:	81 81       	ldd	r24, Z+1	; 0x01
    51c2:	68 2f       	mov	r22, r24
    51c4:	70 e0       	ldi	r23, 0x00	; 0
    51c6:	61 1b       	sub	r22, r17
    51c8:	71 09       	sbc	r23, r1
    51ca:	3f c0       	rjmp	.+126    	; 0x524a <__fpcmp_parts_f+0xac>
    51cc:	84 30       	cpi	r24, 0x04	; 4
    51ce:	21 f0       	breq	.+8      	; 0x51d8 <__fpcmp_parts_f+0x3a>
    51d0:	92 30       	cpi	r25, 0x02	; 2
    51d2:	31 f4       	brne	.+12     	; 0x51e0 <__fpcmp_parts_f+0x42>
    51d4:	82 30       	cpi	r24, 0x02	; 2
    51d6:	b9 f1       	breq	.+110    	; 0x5246 <__fpcmp_parts_f+0xa8>
    51d8:	81 81       	ldd	r24, Z+1	; 0x01
    51da:	88 23       	and	r24, r24
    51dc:	89 f1       	breq	.+98     	; 0x5240 <__fpcmp_parts_f+0xa2>
    51de:	2d c0       	rjmp	.+90     	; 0x523a <__fpcmp_parts_f+0x9c>
    51e0:	11 96       	adiw	r26, 0x01	; 1
    51e2:	1c 91       	ld	r17, X
    51e4:	11 97       	sbiw	r26, 0x01	; 1
    51e6:	82 30       	cpi	r24, 0x02	; 2
    51e8:	f1 f0       	breq	.+60     	; 0x5226 <__fpcmp_parts_f+0x88>
    51ea:	81 81       	ldd	r24, Z+1	; 0x01
    51ec:	18 17       	cp	r17, r24
    51ee:	d9 f4       	brne	.+54     	; 0x5226 <__fpcmp_parts_f+0x88>
    51f0:	12 96       	adiw	r26, 0x02	; 2
    51f2:	2d 91       	ld	r18, X+
    51f4:	3c 91       	ld	r19, X
    51f6:	13 97       	sbiw	r26, 0x03	; 3
    51f8:	82 81       	ldd	r24, Z+2	; 0x02
    51fa:	93 81       	ldd	r25, Z+3	; 0x03
    51fc:	82 17       	cp	r24, r18
    51fe:	93 07       	cpc	r25, r19
    5200:	94 f0       	brlt	.+36     	; 0x5226 <__fpcmp_parts_f+0x88>
    5202:	28 17       	cp	r18, r24
    5204:	39 07       	cpc	r19, r25
    5206:	bc f0       	brlt	.+46     	; 0x5236 <__fpcmp_parts_f+0x98>
    5208:	14 96       	adiw	r26, 0x04	; 4
    520a:	8d 91       	ld	r24, X+
    520c:	9d 91       	ld	r25, X+
    520e:	0d 90       	ld	r0, X+
    5210:	bc 91       	ld	r27, X
    5212:	a0 2d       	mov	r26, r0
    5214:	24 81       	ldd	r18, Z+4	; 0x04
    5216:	35 81       	ldd	r19, Z+5	; 0x05
    5218:	46 81       	ldd	r20, Z+6	; 0x06
    521a:	57 81       	ldd	r21, Z+7	; 0x07
    521c:	28 17       	cp	r18, r24
    521e:	39 07       	cpc	r19, r25
    5220:	4a 07       	cpc	r20, r26
    5222:	5b 07       	cpc	r21, r27
    5224:	18 f4       	brcc	.+6      	; 0x522c <__fpcmp_parts_f+0x8e>
    5226:	11 23       	and	r17, r17
    5228:	41 f0       	breq	.+16     	; 0x523a <__fpcmp_parts_f+0x9c>
    522a:	0a c0       	rjmp	.+20     	; 0x5240 <__fpcmp_parts_f+0xa2>
    522c:	82 17       	cp	r24, r18
    522e:	93 07       	cpc	r25, r19
    5230:	a4 07       	cpc	r26, r20
    5232:	b5 07       	cpc	r27, r21
    5234:	40 f4       	brcc	.+16     	; 0x5246 <__fpcmp_parts_f+0xa8>
    5236:	11 23       	and	r17, r17
    5238:	19 f0       	breq	.+6      	; 0x5240 <__fpcmp_parts_f+0xa2>
    523a:	61 e0       	ldi	r22, 0x01	; 1
    523c:	70 e0       	ldi	r23, 0x00	; 0
    523e:	05 c0       	rjmp	.+10     	; 0x524a <__fpcmp_parts_f+0xac>
    5240:	6f ef       	ldi	r22, 0xFF	; 255
    5242:	7f ef       	ldi	r23, 0xFF	; 255
    5244:	02 c0       	rjmp	.+4      	; 0x524a <__fpcmp_parts_f+0xac>
    5246:	60 e0       	ldi	r22, 0x00	; 0
    5248:	70 e0       	ldi	r23, 0x00	; 0
    524a:	cb 01       	movw	r24, r22
    524c:	1f 91       	pop	r17
    524e:	08 95       	ret

00005250 <__prologue_saves__>:
    5250:	2f 92       	push	r2
    5252:	3f 92       	push	r3
    5254:	4f 92       	push	r4
    5256:	5f 92       	push	r5
    5258:	6f 92       	push	r6
    525a:	7f 92       	push	r7
    525c:	8f 92       	push	r8
    525e:	9f 92       	push	r9
    5260:	af 92       	push	r10
    5262:	bf 92       	push	r11
    5264:	cf 92       	push	r12
    5266:	df 92       	push	r13
    5268:	ef 92       	push	r14
    526a:	ff 92       	push	r15
    526c:	0f 93       	push	r16
    526e:	1f 93       	push	r17
    5270:	cf 93       	push	r28
    5272:	df 93       	push	r29
    5274:	cd b7       	in	r28, 0x3d	; 61
    5276:	de b7       	in	r29, 0x3e	; 62
    5278:	ca 1b       	sub	r28, r26
    527a:	db 0b       	sbc	r29, r27
    527c:	0f b6       	in	r0, 0x3f	; 63
    527e:	f8 94       	cli
    5280:	de bf       	out	0x3e, r29	; 62
    5282:	0f be       	out	0x3f, r0	; 63
    5284:	cd bf       	out	0x3d, r28	; 61
    5286:	09 94       	ijmp

00005288 <__epilogue_restores__>:
    5288:	2a 88       	ldd	r2, Y+18	; 0x12
    528a:	39 88       	ldd	r3, Y+17	; 0x11
    528c:	48 88       	ldd	r4, Y+16	; 0x10
    528e:	5f 84       	ldd	r5, Y+15	; 0x0f
    5290:	6e 84       	ldd	r6, Y+14	; 0x0e
    5292:	7d 84       	ldd	r7, Y+13	; 0x0d
    5294:	8c 84       	ldd	r8, Y+12	; 0x0c
    5296:	9b 84       	ldd	r9, Y+11	; 0x0b
    5298:	aa 84       	ldd	r10, Y+10	; 0x0a
    529a:	b9 84       	ldd	r11, Y+9	; 0x09
    529c:	c8 84       	ldd	r12, Y+8	; 0x08
    529e:	df 80       	ldd	r13, Y+7	; 0x07
    52a0:	ee 80       	ldd	r14, Y+6	; 0x06
    52a2:	fd 80       	ldd	r15, Y+5	; 0x05
    52a4:	0c 81       	ldd	r16, Y+4	; 0x04
    52a6:	1b 81       	ldd	r17, Y+3	; 0x03
    52a8:	aa 81       	ldd	r26, Y+2	; 0x02
    52aa:	b9 81       	ldd	r27, Y+1	; 0x01
    52ac:	ce 0f       	add	r28, r30
    52ae:	d1 1d       	adc	r29, r1
    52b0:	0f b6       	in	r0, 0x3f	; 63
    52b2:	f8 94       	cli
    52b4:	de bf       	out	0x3e, r29	; 62
    52b6:	0f be       	out	0x3f, r0	; 63
    52b8:	cd bf       	out	0x3d, r28	; 61
    52ba:	ed 01       	movw	r28, r26
    52bc:	08 95       	ret

000052be <fdevopen>:
    52be:	0f 93       	push	r16
    52c0:	1f 93       	push	r17
    52c2:	cf 93       	push	r28
    52c4:	df 93       	push	r29
    52c6:	8c 01       	movw	r16, r24
    52c8:	eb 01       	movw	r28, r22
    52ca:	00 97       	sbiw	r24, 0x00	; 0
    52cc:	31 f4       	brne	.+12     	; 0x52da <fdevopen+0x1c>
    52ce:	61 15       	cp	r22, r1
    52d0:	71 05       	cpc	r23, r1
    52d2:	19 f4       	brne	.+6      	; 0x52da <fdevopen+0x1c>
    52d4:	20 e0       	ldi	r18, 0x00	; 0
    52d6:	30 e0       	ldi	r19, 0x00	; 0
    52d8:	38 c0       	rjmp	.+112    	; 0x534a <fdevopen+0x8c>
    52da:	81 e0       	ldi	r24, 0x01	; 1
    52dc:	90 e0       	ldi	r25, 0x00	; 0
    52de:	6e e0       	ldi	r22, 0x0E	; 14
    52e0:	70 e0       	ldi	r23, 0x00	; 0
    52e2:	0e 94 f8 2b 	call	0x57f0	; 0x57f0 <calloc>
    52e6:	fc 01       	movw	r30, r24
    52e8:	9c 01       	movw	r18, r24
    52ea:	00 97       	sbiw	r24, 0x00	; 0
    52ec:	71 f1       	breq	.+92     	; 0x534a <fdevopen+0x8c>
    52ee:	80 e8       	ldi	r24, 0x80	; 128
    52f0:	83 83       	std	Z+3, r24	; 0x03
    52f2:	20 97       	sbiw	r28, 0x00	; 0
    52f4:	71 f0       	breq	.+28     	; 0x5312 <fdevopen+0x54>
    52f6:	d3 87       	std	Z+11, r29	; 0x0b
    52f8:	c2 87       	std	Z+10, r28	; 0x0a
    52fa:	81 e8       	ldi	r24, 0x81	; 129
    52fc:	83 83       	std	Z+3, r24	; 0x03
    52fe:	80 91 c6 01 	lds	r24, 0x01C6
    5302:	90 91 c7 01 	lds	r25, 0x01C7
    5306:	89 2b       	or	r24, r25
    5308:	21 f4       	brne	.+8      	; 0x5312 <fdevopen+0x54>
    530a:	f0 93 c7 01 	sts	0x01C7, r31
    530e:	e0 93 c6 01 	sts	0x01C6, r30
    5312:	01 15       	cp	r16, r1
    5314:	11 05       	cpc	r17, r1
    5316:	c9 f0       	breq	.+50     	; 0x534a <fdevopen+0x8c>
    5318:	11 87       	std	Z+9, r17	; 0x09
    531a:	00 87       	std	Z+8, r16	; 0x08
    531c:	83 81       	ldd	r24, Z+3	; 0x03
    531e:	82 60       	ori	r24, 0x02	; 2
    5320:	83 83       	std	Z+3, r24	; 0x03
    5322:	80 91 c8 01 	lds	r24, 0x01C8
    5326:	90 91 c9 01 	lds	r25, 0x01C9
    532a:	89 2b       	or	r24, r25
    532c:	71 f4       	brne	.+28     	; 0x534a <fdevopen+0x8c>
    532e:	f0 93 c9 01 	sts	0x01C9, r31
    5332:	e0 93 c8 01 	sts	0x01C8, r30
    5336:	80 91 ca 01 	lds	r24, 0x01CA
    533a:	90 91 cb 01 	lds	r25, 0x01CB
    533e:	89 2b       	or	r24, r25
    5340:	21 f4       	brne	.+8      	; 0x534a <fdevopen+0x8c>
    5342:	f0 93 cb 01 	sts	0x01CB, r31
    5346:	e0 93 ca 01 	sts	0x01CA, r30
    534a:	c9 01       	movw	r24, r18
    534c:	df 91       	pop	r29
    534e:	cf 91       	pop	r28
    5350:	1f 91       	pop	r17
    5352:	0f 91       	pop	r16
    5354:	08 95       	ret

00005356 <printf>:
    5356:	df 93       	push	r29
    5358:	cf 93       	push	r28
    535a:	cd b7       	in	r28, 0x3d	; 61
    535c:	de b7       	in	r29, 0x3e	; 62
    535e:	fe 01       	movw	r30, r28
    5360:	35 96       	adiw	r30, 0x05	; 5
    5362:	61 91       	ld	r22, Z+
    5364:	71 91       	ld	r23, Z+
    5366:	80 91 c8 01 	lds	r24, 0x01C8
    536a:	90 91 c9 01 	lds	r25, 0x01C9
    536e:	af 01       	movw	r20, r30
    5370:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <vfprintf>
    5374:	cf 91       	pop	r28
    5376:	df 91       	pop	r29
    5378:	08 95       	ret

0000537a <puts>:
    537a:	0f 93       	push	r16
    537c:	1f 93       	push	r17
    537e:	cf 93       	push	r28
    5380:	df 93       	push	r29
    5382:	8c 01       	movw	r16, r24
    5384:	e0 91 c8 01 	lds	r30, 0x01C8
    5388:	f0 91 c9 01 	lds	r31, 0x01C9
    538c:	83 81       	ldd	r24, Z+3	; 0x03
    538e:	81 ff       	sbrs	r24, 1
    5390:	21 c0       	rjmp	.+66     	; 0x53d4 <puts+0x5a>
    5392:	c0 e0       	ldi	r28, 0x00	; 0
    5394:	d0 e0       	ldi	r29, 0x00	; 0
    5396:	0d c0       	rjmp	.+26     	; 0x53b2 <puts+0x38>
    5398:	e0 91 c8 01 	lds	r30, 0x01C8
    539c:	f0 91 c9 01 	lds	r31, 0x01C9
    53a0:	20 85       	ldd	r18, Z+8	; 0x08
    53a2:	31 85       	ldd	r19, Z+9	; 0x09
    53a4:	bf 01       	movw	r22, r30
    53a6:	f9 01       	movw	r30, r18
    53a8:	09 95       	icall
    53aa:	89 2b       	or	r24, r25
    53ac:	11 f0       	breq	.+4      	; 0x53b2 <puts+0x38>
    53ae:	cf ef       	ldi	r28, 0xFF	; 255
    53b0:	df ef       	ldi	r29, 0xFF	; 255
    53b2:	f8 01       	movw	r30, r16
    53b4:	81 91       	ld	r24, Z+
    53b6:	8f 01       	movw	r16, r30
    53b8:	88 23       	and	r24, r24
    53ba:	71 f7       	brne	.-36     	; 0x5398 <puts+0x1e>
    53bc:	e0 91 c8 01 	lds	r30, 0x01C8
    53c0:	f0 91 c9 01 	lds	r31, 0x01C9
    53c4:	20 85       	ldd	r18, Z+8	; 0x08
    53c6:	31 85       	ldd	r19, Z+9	; 0x09
    53c8:	8a e0       	ldi	r24, 0x0A	; 10
    53ca:	bf 01       	movw	r22, r30
    53cc:	f9 01       	movw	r30, r18
    53ce:	09 95       	icall
    53d0:	89 2b       	or	r24, r25
    53d2:	11 f0       	breq	.+4      	; 0x53d8 <puts+0x5e>
    53d4:	cf ef       	ldi	r28, 0xFF	; 255
    53d6:	df ef       	ldi	r29, 0xFF	; 255
    53d8:	ce 01       	movw	r24, r28
    53da:	df 91       	pop	r29
    53dc:	cf 91       	pop	r28
    53de:	1f 91       	pop	r17
    53e0:	0f 91       	pop	r16
    53e2:	08 95       	ret

000053e4 <vfprintf>:
    53e4:	2f 92       	push	r2
    53e6:	3f 92       	push	r3
    53e8:	4f 92       	push	r4
    53ea:	5f 92       	push	r5
    53ec:	6f 92       	push	r6
    53ee:	7f 92       	push	r7
    53f0:	8f 92       	push	r8
    53f2:	9f 92       	push	r9
    53f4:	af 92       	push	r10
    53f6:	bf 92       	push	r11
    53f8:	cf 92       	push	r12
    53fa:	df 92       	push	r13
    53fc:	ef 92       	push	r14
    53fe:	ff 92       	push	r15
    5400:	0f 93       	push	r16
    5402:	1f 93       	push	r17
    5404:	df 93       	push	r29
    5406:	cf 93       	push	r28
    5408:	cd b7       	in	r28, 0x3d	; 61
    540a:	de b7       	in	r29, 0x3e	; 62
    540c:	2b 97       	sbiw	r28, 0x0b	; 11
    540e:	0f b6       	in	r0, 0x3f	; 63
    5410:	f8 94       	cli
    5412:	de bf       	out	0x3e, r29	; 62
    5414:	0f be       	out	0x3f, r0	; 63
    5416:	cd bf       	out	0x3d, r28	; 61
    5418:	3c 01       	movw	r6, r24
    541a:	2b 01       	movw	r4, r22
    541c:	5a 01       	movw	r10, r20
    541e:	fc 01       	movw	r30, r24
    5420:	17 82       	std	Z+7, r1	; 0x07
    5422:	16 82       	std	Z+6, r1	; 0x06
    5424:	83 81       	ldd	r24, Z+3	; 0x03
    5426:	81 fd       	sbrc	r24, 1
    5428:	03 c0       	rjmp	.+6      	; 0x5430 <vfprintf+0x4c>
    542a:	6f ef       	ldi	r22, 0xFF	; 255
    542c:	7f ef       	ldi	r23, 0xFF	; 255
    542e:	c6 c1       	rjmp	.+908    	; 0x57bc <vfprintf+0x3d8>
    5430:	9a e0       	ldi	r25, 0x0A	; 10
    5432:	89 2e       	mov	r8, r25
    5434:	1e 01       	movw	r2, r28
    5436:	08 94       	sec
    5438:	21 1c       	adc	r2, r1
    543a:	31 1c       	adc	r3, r1
    543c:	f3 01       	movw	r30, r6
    543e:	23 81       	ldd	r18, Z+3	; 0x03
    5440:	f2 01       	movw	r30, r4
    5442:	23 fd       	sbrc	r18, 3
    5444:	85 91       	lpm	r24, Z+
    5446:	23 ff       	sbrs	r18, 3
    5448:	81 91       	ld	r24, Z+
    544a:	2f 01       	movw	r4, r30
    544c:	88 23       	and	r24, r24
    544e:	09 f4       	brne	.+2      	; 0x5452 <vfprintf+0x6e>
    5450:	b2 c1       	rjmp	.+868    	; 0x57b6 <vfprintf+0x3d2>
    5452:	85 32       	cpi	r24, 0x25	; 37
    5454:	39 f4       	brne	.+14     	; 0x5464 <vfprintf+0x80>
    5456:	23 fd       	sbrc	r18, 3
    5458:	85 91       	lpm	r24, Z+
    545a:	23 ff       	sbrs	r18, 3
    545c:	81 91       	ld	r24, Z+
    545e:	2f 01       	movw	r4, r30
    5460:	85 32       	cpi	r24, 0x25	; 37
    5462:	29 f4       	brne	.+10     	; 0x546e <vfprintf+0x8a>
    5464:	90 e0       	ldi	r25, 0x00	; 0
    5466:	b3 01       	movw	r22, r6
    5468:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    546c:	e7 cf       	rjmp	.-50     	; 0x543c <vfprintf+0x58>
    546e:	98 2f       	mov	r25, r24
    5470:	ff 24       	eor	r15, r15
    5472:	ee 24       	eor	r14, r14
    5474:	99 24       	eor	r9, r9
    5476:	ff e1       	ldi	r31, 0x1F	; 31
    5478:	ff 15       	cp	r31, r15
    547a:	d0 f0       	brcs	.+52     	; 0x54b0 <vfprintf+0xcc>
    547c:	9b 32       	cpi	r25, 0x2B	; 43
    547e:	69 f0       	breq	.+26     	; 0x549a <vfprintf+0xb6>
    5480:	9c 32       	cpi	r25, 0x2C	; 44
    5482:	28 f4       	brcc	.+10     	; 0x548e <vfprintf+0xaa>
    5484:	90 32       	cpi	r25, 0x20	; 32
    5486:	59 f0       	breq	.+22     	; 0x549e <vfprintf+0xba>
    5488:	93 32       	cpi	r25, 0x23	; 35
    548a:	91 f4       	brne	.+36     	; 0x54b0 <vfprintf+0xcc>
    548c:	0e c0       	rjmp	.+28     	; 0x54aa <vfprintf+0xc6>
    548e:	9d 32       	cpi	r25, 0x2D	; 45
    5490:	49 f0       	breq	.+18     	; 0x54a4 <vfprintf+0xc0>
    5492:	90 33       	cpi	r25, 0x30	; 48
    5494:	69 f4       	brne	.+26     	; 0x54b0 <vfprintf+0xcc>
    5496:	41 e0       	ldi	r20, 0x01	; 1
    5498:	24 c0       	rjmp	.+72     	; 0x54e2 <vfprintf+0xfe>
    549a:	52 e0       	ldi	r21, 0x02	; 2
    549c:	f5 2a       	or	r15, r21
    549e:	84 e0       	ldi	r24, 0x04	; 4
    54a0:	f8 2a       	or	r15, r24
    54a2:	28 c0       	rjmp	.+80     	; 0x54f4 <vfprintf+0x110>
    54a4:	98 e0       	ldi	r25, 0x08	; 8
    54a6:	f9 2a       	or	r15, r25
    54a8:	25 c0       	rjmp	.+74     	; 0x54f4 <vfprintf+0x110>
    54aa:	e0 e1       	ldi	r30, 0x10	; 16
    54ac:	fe 2a       	or	r15, r30
    54ae:	22 c0       	rjmp	.+68     	; 0x54f4 <vfprintf+0x110>
    54b0:	f7 fc       	sbrc	r15, 7
    54b2:	29 c0       	rjmp	.+82     	; 0x5506 <vfprintf+0x122>
    54b4:	89 2f       	mov	r24, r25
    54b6:	80 53       	subi	r24, 0x30	; 48
    54b8:	8a 30       	cpi	r24, 0x0A	; 10
    54ba:	70 f4       	brcc	.+28     	; 0x54d8 <vfprintf+0xf4>
    54bc:	f6 fe       	sbrs	r15, 6
    54be:	05 c0       	rjmp	.+10     	; 0x54ca <vfprintf+0xe6>
    54c0:	98 9c       	mul	r9, r8
    54c2:	90 2c       	mov	r9, r0
    54c4:	11 24       	eor	r1, r1
    54c6:	98 0e       	add	r9, r24
    54c8:	15 c0       	rjmp	.+42     	; 0x54f4 <vfprintf+0x110>
    54ca:	e8 9c       	mul	r14, r8
    54cc:	e0 2c       	mov	r14, r0
    54ce:	11 24       	eor	r1, r1
    54d0:	e8 0e       	add	r14, r24
    54d2:	f0 e2       	ldi	r31, 0x20	; 32
    54d4:	ff 2a       	or	r15, r31
    54d6:	0e c0       	rjmp	.+28     	; 0x54f4 <vfprintf+0x110>
    54d8:	9e 32       	cpi	r25, 0x2E	; 46
    54da:	29 f4       	brne	.+10     	; 0x54e6 <vfprintf+0x102>
    54dc:	f6 fc       	sbrc	r15, 6
    54de:	6b c1       	rjmp	.+726    	; 0x57b6 <vfprintf+0x3d2>
    54e0:	40 e4       	ldi	r20, 0x40	; 64
    54e2:	f4 2a       	or	r15, r20
    54e4:	07 c0       	rjmp	.+14     	; 0x54f4 <vfprintf+0x110>
    54e6:	9c 36       	cpi	r25, 0x6C	; 108
    54e8:	19 f4       	brne	.+6      	; 0x54f0 <vfprintf+0x10c>
    54ea:	50 e8       	ldi	r21, 0x80	; 128
    54ec:	f5 2a       	or	r15, r21
    54ee:	02 c0       	rjmp	.+4      	; 0x54f4 <vfprintf+0x110>
    54f0:	98 36       	cpi	r25, 0x68	; 104
    54f2:	49 f4       	brne	.+18     	; 0x5506 <vfprintf+0x122>
    54f4:	f2 01       	movw	r30, r4
    54f6:	23 fd       	sbrc	r18, 3
    54f8:	95 91       	lpm	r25, Z+
    54fa:	23 ff       	sbrs	r18, 3
    54fc:	91 91       	ld	r25, Z+
    54fe:	2f 01       	movw	r4, r30
    5500:	99 23       	and	r25, r25
    5502:	09 f0       	breq	.+2      	; 0x5506 <vfprintf+0x122>
    5504:	b8 cf       	rjmp	.-144    	; 0x5476 <vfprintf+0x92>
    5506:	89 2f       	mov	r24, r25
    5508:	85 54       	subi	r24, 0x45	; 69
    550a:	83 30       	cpi	r24, 0x03	; 3
    550c:	18 f0       	brcs	.+6      	; 0x5514 <vfprintf+0x130>
    550e:	80 52       	subi	r24, 0x20	; 32
    5510:	83 30       	cpi	r24, 0x03	; 3
    5512:	38 f4       	brcc	.+14     	; 0x5522 <vfprintf+0x13e>
    5514:	44 e0       	ldi	r20, 0x04	; 4
    5516:	50 e0       	ldi	r21, 0x00	; 0
    5518:	a4 0e       	add	r10, r20
    551a:	b5 1e       	adc	r11, r21
    551c:	5f e3       	ldi	r21, 0x3F	; 63
    551e:	59 83       	std	Y+1, r21	; 0x01
    5520:	0f c0       	rjmp	.+30     	; 0x5540 <vfprintf+0x15c>
    5522:	93 36       	cpi	r25, 0x63	; 99
    5524:	31 f0       	breq	.+12     	; 0x5532 <vfprintf+0x14e>
    5526:	93 37       	cpi	r25, 0x73	; 115
    5528:	79 f0       	breq	.+30     	; 0x5548 <vfprintf+0x164>
    552a:	93 35       	cpi	r25, 0x53	; 83
    552c:	09 f0       	breq	.+2      	; 0x5530 <vfprintf+0x14c>
    552e:	56 c0       	rjmp	.+172    	; 0x55dc <vfprintf+0x1f8>
    5530:	20 c0       	rjmp	.+64     	; 0x5572 <vfprintf+0x18e>
    5532:	f5 01       	movw	r30, r10
    5534:	80 81       	ld	r24, Z
    5536:	89 83       	std	Y+1, r24	; 0x01
    5538:	42 e0       	ldi	r20, 0x02	; 2
    553a:	50 e0       	ldi	r21, 0x00	; 0
    553c:	a4 0e       	add	r10, r20
    553e:	b5 1e       	adc	r11, r21
    5540:	61 01       	movw	r12, r2
    5542:	01 e0       	ldi	r16, 0x01	; 1
    5544:	10 e0       	ldi	r17, 0x00	; 0
    5546:	12 c0       	rjmp	.+36     	; 0x556c <vfprintf+0x188>
    5548:	f5 01       	movw	r30, r10
    554a:	c0 80       	ld	r12, Z
    554c:	d1 80       	ldd	r13, Z+1	; 0x01
    554e:	f6 fc       	sbrc	r15, 6
    5550:	03 c0       	rjmp	.+6      	; 0x5558 <vfprintf+0x174>
    5552:	6f ef       	ldi	r22, 0xFF	; 255
    5554:	7f ef       	ldi	r23, 0xFF	; 255
    5556:	02 c0       	rjmp	.+4      	; 0x555c <vfprintf+0x178>
    5558:	69 2d       	mov	r22, r9
    555a:	70 e0       	ldi	r23, 0x00	; 0
    555c:	42 e0       	ldi	r20, 0x02	; 2
    555e:	50 e0       	ldi	r21, 0x00	; 0
    5560:	a4 0e       	add	r10, r20
    5562:	b5 1e       	adc	r11, r21
    5564:	c6 01       	movw	r24, r12
    5566:	0e 94 2b 2d 	call	0x5a56	; 0x5a56 <strnlen>
    556a:	8c 01       	movw	r16, r24
    556c:	5f e7       	ldi	r21, 0x7F	; 127
    556e:	f5 22       	and	r15, r21
    5570:	14 c0       	rjmp	.+40     	; 0x559a <vfprintf+0x1b6>
    5572:	f5 01       	movw	r30, r10
    5574:	c0 80       	ld	r12, Z
    5576:	d1 80       	ldd	r13, Z+1	; 0x01
    5578:	f6 fc       	sbrc	r15, 6
    557a:	03 c0       	rjmp	.+6      	; 0x5582 <vfprintf+0x19e>
    557c:	6f ef       	ldi	r22, 0xFF	; 255
    557e:	7f ef       	ldi	r23, 0xFF	; 255
    5580:	02 c0       	rjmp	.+4      	; 0x5586 <vfprintf+0x1a2>
    5582:	69 2d       	mov	r22, r9
    5584:	70 e0       	ldi	r23, 0x00	; 0
    5586:	42 e0       	ldi	r20, 0x02	; 2
    5588:	50 e0       	ldi	r21, 0x00	; 0
    558a:	a4 0e       	add	r10, r20
    558c:	b5 1e       	adc	r11, r21
    558e:	c6 01       	movw	r24, r12
    5590:	0e 94 19 2d 	call	0x5a32	; 0x5a32 <strnlen_P>
    5594:	8c 01       	movw	r16, r24
    5596:	50 e8       	ldi	r21, 0x80	; 128
    5598:	f5 2a       	or	r15, r21
    559a:	f3 fe       	sbrs	r15, 3
    559c:	07 c0       	rjmp	.+14     	; 0x55ac <vfprintf+0x1c8>
    559e:	1a c0       	rjmp	.+52     	; 0x55d4 <vfprintf+0x1f0>
    55a0:	80 e2       	ldi	r24, 0x20	; 32
    55a2:	90 e0       	ldi	r25, 0x00	; 0
    55a4:	b3 01       	movw	r22, r6
    55a6:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    55aa:	ea 94       	dec	r14
    55ac:	8e 2d       	mov	r24, r14
    55ae:	90 e0       	ldi	r25, 0x00	; 0
    55b0:	08 17       	cp	r16, r24
    55b2:	19 07       	cpc	r17, r25
    55b4:	a8 f3       	brcs	.-22     	; 0x55a0 <vfprintf+0x1bc>
    55b6:	0e c0       	rjmp	.+28     	; 0x55d4 <vfprintf+0x1f0>
    55b8:	f6 01       	movw	r30, r12
    55ba:	f7 fc       	sbrc	r15, 7
    55bc:	85 91       	lpm	r24, Z+
    55be:	f7 fe       	sbrs	r15, 7
    55c0:	81 91       	ld	r24, Z+
    55c2:	6f 01       	movw	r12, r30
    55c4:	90 e0       	ldi	r25, 0x00	; 0
    55c6:	b3 01       	movw	r22, r6
    55c8:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    55cc:	e1 10       	cpse	r14, r1
    55ce:	ea 94       	dec	r14
    55d0:	01 50       	subi	r16, 0x01	; 1
    55d2:	10 40       	sbci	r17, 0x00	; 0
    55d4:	01 15       	cp	r16, r1
    55d6:	11 05       	cpc	r17, r1
    55d8:	79 f7       	brne	.-34     	; 0x55b8 <vfprintf+0x1d4>
    55da:	ea c0       	rjmp	.+468    	; 0x57b0 <vfprintf+0x3cc>
    55dc:	94 36       	cpi	r25, 0x64	; 100
    55de:	11 f0       	breq	.+4      	; 0x55e4 <vfprintf+0x200>
    55e0:	99 36       	cpi	r25, 0x69	; 105
    55e2:	69 f5       	brne	.+90     	; 0x563e <vfprintf+0x25a>
    55e4:	f7 fe       	sbrs	r15, 7
    55e6:	08 c0       	rjmp	.+16     	; 0x55f8 <vfprintf+0x214>
    55e8:	f5 01       	movw	r30, r10
    55ea:	20 81       	ld	r18, Z
    55ec:	31 81       	ldd	r19, Z+1	; 0x01
    55ee:	42 81       	ldd	r20, Z+2	; 0x02
    55f0:	53 81       	ldd	r21, Z+3	; 0x03
    55f2:	84 e0       	ldi	r24, 0x04	; 4
    55f4:	90 e0       	ldi	r25, 0x00	; 0
    55f6:	0a c0       	rjmp	.+20     	; 0x560c <vfprintf+0x228>
    55f8:	f5 01       	movw	r30, r10
    55fa:	80 81       	ld	r24, Z
    55fc:	91 81       	ldd	r25, Z+1	; 0x01
    55fe:	9c 01       	movw	r18, r24
    5600:	44 27       	eor	r20, r20
    5602:	37 fd       	sbrc	r19, 7
    5604:	40 95       	com	r20
    5606:	54 2f       	mov	r21, r20
    5608:	82 e0       	ldi	r24, 0x02	; 2
    560a:	90 e0       	ldi	r25, 0x00	; 0
    560c:	a8 0e       	add	r10, r24
    560e:	b9 1e       	adc	r11, r25
    5610:	9f e6       	ldi	r25, 0x6F	; 111
    5612:	f9 22       	and	r15, r25
    5614:	57 ff       	sbrs	r21, 7
    5616:	09 c0       	rjmp	.+18     	; 0x562a <vfprintf+0x246>
    5618:	50 95       	com	r21
    561a:	40 95       	com	r20
    561c:	30 95       	com	r19
    561e:	21 95       	neg	r18
    5620:	3f 4f       	sbci	r19, 0xFF	; 255
    5622:	4f 4f       	sbci	r20, 0xFF	; 255
    5624:	5f 4f       	sbci	r21, 0xFF	; 255
    5626:	e0 e8       	ldi	r30, 0x80	; 128
    5628:	fe 2a       	or	r15, r30
    562a:	ca 01       	movw	r24, r20
    562c:	b9 01       	movw	r22, r18
    562e:	a1 01       	movw	r20, r2
    5630:	2a e0       	ldi	r18, 0x0A	; 10
    5632:	30 e0       	ldi	r19, 0x00	; 0
    5634:	0e 94 62 2d 	call	0x5ac4	; 0x5ac4 <__ultoa_invert>
    5638:	d8 2e       	mov	r13, r24
    563a:	d2 18       	sub	r13, r2
    563c:	40 c0       	rjmp	.+128    	; 0x56be <vfprintf+0x2da>
    563e:	95 37       	cpi	r25, 0x75	; 117
    5640:	29 f4       	brne	.+10     	; 0x564c <vfprintf+0x268>
    5642:	1f 2d       	mov	r17, r15
    5644:	1f 7e       	andi	r17, 0xEF	; 239
    5646:	2a e0       	ldi	r18, 0x0A	; 10
    5648:	30 e0       	ldi	r19, 0x00	; 0
    564a:	1d c0       	rjmp	.+58     	; 0x5686 <vfprintf+0x2a2>
    564c:	1f 2d       	mov	r17, r15
    564e:	19 7f       	andi	r17, 0xF9	; 249
    5650:	9f 36       	cpi	r25, 0x6F	; 111
    5652:	61 f0       	breq	.+24     	; 0x566c <vfprintf+0x288>
    5654:	90 37       	cpi	r25, 0x70	; 112
    5656:	20 f4       	brcc	.+8      	; 0x5660 <vfprintf+0x27c>
    5658:	98 35       	cpi	r25, 0x58	; 88
    565a:	09 f0       	breq	.+2      	; 0x565e <vfprintf+0x27a>
    565c:	ac c0       	rjmp	.+344    	; 0x57b6 <vfprintf+0x3d2>
    565e:	0f c0       	rjmp	.+30     	; 0x567e <vfprintf+0x29a>
    5660:	90 37       	cpi	r25, 0x70	; 112
    5662:	39 f0       	breq	.+14     	; 0x5672 <vfprintf+0x28e>
    5664:	98 37       	cpi	r25, 0x78	; 120
    5666:	09 f0       	breq	.+2      	; 0x566a <vfprintf+0x286>
    5668:	a6 c0       	rjmp	.+332    	; 0x57b6 <vfprintf+0x3d2>
    566a:	04 c0       	rjmp	.+8      	; 0x5674 <vfprintf+0x290>
    566c:	28 e0       	ldi	r18, 0x08	; 8
    566e:	30 e0       	ldi	r19, 0x00	; 0
    5670:	0a c0       	rjmp	.+20     	; 0x5686 <vfprintf+0x2a2>
    5672:	10 61       	ori	r17, 0x10	; 16
    5674:	14 fd       	sbrc	r17, 4
    5676:	14 60       	ori	r17, 0x04	; 4
    5678:	20 e1       	ldi	r18, 0x10	; 16
    567a:	30 e0       	ldi	r19, 0x00	; 0
    567c:	04 c0       	rjmp	.+8      	; 0x5686 <vfprintf+0x2a2>
    567e:	14 fd       	sbrc	r17, 4
    5680:	16 60       	ori	r17, 0x06	; 6
    5682:	20 e1       	ldi	r18, 0x10	; 16
    5684:	32 e0       	ldi	r19, 0x02	; 2
    5686:	17 ff       	sbrs	r17, 7
    5688:	08 c0       	rjmp	.+16     	; 0x569a <vfprintf+0x2b6>
    568a:	f5 01       	movw	r30, r10
    568c:	60 81       	ld	r22, Z
    568e:	71 81       	ldd	r23, Z+1	; 0x01
    5690:	82 81       	ldd	r24, Z+2	; 0x02
    5692:	93 81       	ldd	r25, Z+3	; 0x03
    5694:	44 e0       	ldi	r20, 0x04	; 4
    5696:	50 e0       	ldi	r21, 0x00	; 0
    5698:	08 c0       	rjmp	.+16     	; 0x56aa <vfprintf+0x2c6>
    569a:	f5 01       	movw	r30, r10
    569c:	80 81       	ld	r24, Z
    569e:	91 81       	ldd	r25, Z+1	; 0x01
    56a0:	bc 01       	movw	r22, r24
    56a2:	80 e0       	ldi	r24, 0x00	; 0
    56a4:	90 e0       	ldi	r25, 0x00	; 0
    56a6:	42 e0       	ldi	r20, 0x02	; 2
    56a8:	50 e0       	ldi	r21, 0x00	; 0
    56aa:	a4 0e       	add	r10, r20
    56ac:	b5 1e       	adc	r11, r21
    56ae:	a1 01       	movw	r20, r2
    56b0:	0e 94 62 2d 	call	0x5ac4	; 0x5ac4 <__ultoa_invert>
    56b4:	d8 2e       	mov	r13, r24
    56b6:	d2 18       	sub	r13, r2
    56b8:	8f e7       	ldi	r24, 0x7F	; 127
    56ba:	f8 2e       	mov	r15, r24
    56bc:	f1 22       	and	r15, r17
    56be:	f6 fe       	sbrs	r15, 6
    56c0:	0b c0       	rjmp	.+22     	; 0x56d8 <vfprintf+0x2f4>
    56c2:	5e ef       	ldi	r21, 0xFE	; 254
    56c4:	f5 22       	and	r15, r21
    56c6:	d9 14       	cp	r13, r9
    56c8:	38 f4       	brcc	.+14     	; 0x56d8 <vfprintf+0x2f4>
    56ca:	f4 fe       	sbrs	r15, 4
    56cc:	07 c0       	rjmp	.+14     	; 0x56dc <vfprintf+0x2f8>
    56ce:	f2 fc       	sbrc	r15, 2
    56d0:	05 c0       	rjmp	.+10     	; 0x56dc <vfprintf+0x2f8>
    56d2:	8f ee       	ldi	r24, 0xEF	; 239
    56d4:	f8 22       	and	r15, r24
    56d6:	02 c0       	rjmp	.+4      	; 0x56dc <vfprintf+0x2f8>
    56d8:	1d 2d       	mov	r17, r13
    56da:	01 c0       	rjmp	.+2      	; 0x56de <vfprintf+0x2fa>
    56dc:	19 2d       	mov	r17, r9
    56de:	f4 fe       	sbrs	r15, 4
    56e0:	0d c0       	rjmp	.+26     	; 0x56fc <vfprintf+0x318>
    56e2:	fe 01       	movw	r30, r28
    56e4:	ed 0d       	add	r30, r13
    56e6:	f1 1d       	adc	r31, r1
    56e8:	80 81       	ld	r24, Z
    56ea:	80 33       	cpi	r24, 0x30	; 48
    56ec:	19 f4       	brne	.+6      	; 0x56f4 <vfprintf+0x310>
    56ee:	99 ee       	ldi	r25, 0xE9	; 233
    56f0:	f9 22       	and	r15, r25
    56f2:	08 c0       	rjmp	.+16     	; 0x5704 <vfprintf+0x320>
    56f4:	1f 5f       	subi	r17, 0xFF	; 255
    56f6:	f2 fe       	sbrs	r15, 2
    56f8:	05 c0       	rjmp	.+10     	; 0x5704 <vfprintf+0x320>
    56fa:	03 c0       	rjmp	.+6      	; 0x5702 <vfprintf+0x31e>
    56fc:	8f 2d       	mov	r24, r15
    56fe:	86 78       	andi	r24, 0x86	; 134
    5700:	09 f0       	breq	.+2      	; 0x5704 <vfprintf+0x320>
    5702:	1f 5f       	subi	r17, 0xFF	; 255
    5704:	0f 2d       	mov	r16, r15
    5706:	f3 fc       	sbrc	r15, 3
    5708:	14 c0       	rjmp	.+40     	; 0x5732 <vfprintf+0x34e>
    570a:	f0 fe       	sbrs	r15, 0
    570c:	0f c0       	rjmp	.+30     	; 0x572c <vfprintf+0x348>
    570e:	1e 15       	cp	r17, r14
    5710:	10 f0       	brcs	.+4      	; 0x5716 <vfprintf+0x332>
    5712:	9d 2c       	mov	r9, r13
    5714:	0b c0       	rjmp	.+22     	; 0x572c <vfprintf+0x348>
    5716:	9d 2c       	mov	r9, r13
    5718:	9e 0c       	add	r9, r14
    571a:	91 1a       	sub	r9, r17
    571c:	1e 2d       	mov	r17, r14
    571e:	06 c0       	rjmp	.+12     	; 0x572c <vfprintf+0x348>
    5720:	80 e2       	ldi	r24, 0x20	; 32
    5722:	90 e0       	ldi	r25, 0x00	; 0
    5724:	b3 01       	movw	r22, r6
    5726:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    572a:	1f 5f       	subi	r17, 0xFF	; 255
    572c:	1e 15       	cp	r17, r14
    572e:	c0 f3       	brcs	.-16     	; 0x5720 <vfprintf+0x33c>
    5730:	04 c0       	rjmp	.+8      	; 0x573a <vfprintf+0x356>
    5732:	1e 15       	cp	r17, r14
    5734:	10 f4       	brcc	.+4      	; 0x573a <vfprintf+0x356>
    5736:	e1 1a       	sub	r14, r17
    5738:	01 c0       	rjmp	.+2      	; 0x573c <vfprintf+0x358>
    573a:	ee 24       	eor	r14, r14
    573c:	04 ff       	sbrs	r16, 4
    573e:	0f c0       	rjmp	.+30     	; 0x575e <vfprintf+0x37a>
    5740:	80 e3       	ldi	r24, 0x30	; 48
    5742:	90 e0       	ldi	r25, 0x00	; 0
    5744:	b3 01       	movw	r22, r6
    5746:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    574a:	02 ff       	sbrs	r16, 2
    574c:	1d c0       	rjmp	.+58     	; 0x5788 <vfprintf+0x3a4>
    574e:	01 fd       	sbrc	r16, 1
    5750:	03 c0       	rjmp	.+6      	; 0x5758 <vfprintf+0x374>
    5752:	88 e7       	ldi	r24, 0x78	; 120
    5754:	90 e0       	ldi	r25, 0x00	; 0
    5756:	0e c0       	rjmp	.+28     	; 0x5774 <vfprintf+0x390>
    5758:	88 e5       	ldi	r24, 0x58	; 88
    575a:	90 e0       	ldi	r25, 0x00	; 0
    575c:	0b c0       	rjmp	.+22     	; 0x5774 <vfprintf+0x390>
    575e:	80 2f       	mov	r24, r16
    5760:	86 78       	andi	r24, 0x86	; 134
    5762:	91 f0       	breq	.+36     	; 0x5788 <vfprintf+0x3a4>
    5764:	01 ff       	sbrs	r16, 1
    5766:	02 c0       	rjmp	.+4      	; 0x576c <vfprintf+0x388>
    5768:	8b e2       	ldi	r24, 0x2B	; 43
    576a:	01 c0       	rjmp	.+2      	; 0x576e <vfprintf+0x38a>
    576c:	80 e2       	ldi	r24, 0x20	; 32
    576e:	f7 fc       	sbrc	r15, 7
    5770:	8d e2       	ldi	r24, 0x2D	; 45
    5772:	90 e0       	ldi	r25, 0x00	; 0
    5774:	b3 01       	movw	r22, r6
    5776:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    577a:	06 c0       	rjmp	.+12     	; 0x5788 <vfprintf+0x3a4>
    577c:	80 e3       	ldi	r24, 0x30	; 48
    577e:	90 e0       	ldi	r25, 0x00	; 0
    5780:	b3 01       	movw	r22, r6
    5782:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    5786:	9a 94       	dec	r9
    5788:	d9 14       	cp	r13, r9
    578a:	c0 f3       	brcs	.-16     	; 0x577c <vfprintf+0x398>
    578c:	da 94       	dec	r13
    578e:	f1 01       	movw	r30, r2
    5790:	ed 0d       	add	r30, r13
    5792:	f1 1d       	adc	r31, r1
    5794:	80 81       	ld	r24, Z
    5796:	90 e0       	ldi	r25, 0x00	; 0
    5798:	b3 01       	movw	r22, r6
    579a:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    579e:	dd 20       	and	r13, r13
    57a0:	a9 f7       	brne	.-22     	; 0x578c <vfprintf+0x3a8>
    57a2:	06 c0       	rjmp	.+12     	; 0x57b0 <vfprintf+0x3cc>
    57a4:	80 e2       	ldi	r24, 0x20	; 32
    57a6:	90 e0       	ldi	r25, 0x00	; 0
    57a8:	b3 01       	movw	r22, r6
    57aa:	0e 94 36 2d 	call	0x5a6c	; 0x5a6c <fputc>
    57ae:	ea 94       	dec	r14
    57b0:	ee 20       	and	r14, r14
    57b2:	c1 f7       	brne	.-16     	; 0x57a4 <vfprintf+0x3c0>
    57b4:	43 ce       	rjmp	.-890    	; 0x543c <vfprintf+0x58>
    57b6:	f3 01       	movw	r30, r6
    57b8:	66 81       	ldd	r22, Z+6	; 0x06
    57ba:	77 81       	ldd	r23, Z+7	; 0x07
    57bc:	cb 01       	movw	r24, r22
    57be:	2b 96       	adiw	r28, 0x0b	; 11
    57c0:	0f b6       	in	r0, 0x3f	; 63
    57c2:	f8 94       	cli
    57c4:	de bf       	out	0x3e, r29	; 62
    57c6:	0f be       	out	0x3f, r0	; 63
    57c8:	cd bf       	out	0x3d, r28	; 61
    57ca:	cf 91       	pop	r28
    57cc:	df 91       	pop	r29
    57ce:	1f 91       	pop	r17
    57d0:	0f 91       	pop	r16
    57d2:	ff 90       	pop	r15
    57d4:	ef 90       	pop	r14
    57d6:	df 90       	pop	r13
    57d8:	cf 90       	pop	r12
    57da:	bf 90       	pop	r11
    57dc:	af 90       	pop	r10
    57de:	9f 90       	pop	r9
    57e0:	8f 90       	pop	r8
    57e2:	7f 90       	pop	r7
    57e4:	6f 90       	pop	r6
    57e6:	5f 90       	pop	r5
    57e8:	4f 90       	pop	r4
    57ea:	3f 90       	pop	r3
    57ec:	2f 90       	pop	r2
    57ee:	08 95       	ret

000057f0 <calloc>:
    57f0:	0f 93       	push	r16
    57f2:	1f 93       	push	r17
    57f4:	cf 93       	push	r28
    57f6:	df 93       	push	r29
    57f8:	68 9f       	mul	r22, r24
    57fa:	80 01       	movw	r16, r0
    57fc:	69 9f       	mul	r22, r25
    57fe:	10 0d       	add	r17, r0
    5800:	78 9f       	mul	r23, r24
    5802:	10 0d       	add	r17, r0
    5804:	11 24       	eor	r1, r1
    5806:	c8 01       	movw	r24, r16
    5808:	0e 94 14 2c 	call	0x5828	; 0x5828 <malloc>
    580c:	ec 01       	movw	r28, r24
    580e:	00 97       	sbiw	r24, 0x00	; 0
    5810:	29 f0       	breq	.+10     	; 0x581c <calloc+0x2c>
    5812:	60 e0       	ldi	r22, 0x00	; 0
    5814:	70 e0       	ldi	r23, 0x00	; 0
    5816:	a8 01       	movw	r20, r16
    5818:	0e 94 24 2d 	call	0x5a48	; 0x5a48 <memset>
    581c:	ce 01       	movw	r24, r28
    581e:	df 91       	pop	r29
    5820:	cf 91       	pop	r28
    5822:	1f 91       	pop	r17
    5824:	0f 91       	pop	r16
    5826:	08 95       	ret

00005828 <malloc>:
    5828:	cf 93       	push	r28
    582a:	df 93       	push	r29
    582c:	bc 01       	movw	r22, r24
    582e:	82 30       	cpi	r24, 0x02	; 2
    5830:	91 05       	cpc	r25, r1
    5832:	10 f4       	brcc	.+4      	; 0x5838 <malloc+0x10>
    5834:	62 e0       	ldi	r22, 0x02	; 2
    5836:	70 e0       	ldi	r23, 0x00	; 0
    5838:	a0 91 ce 01 	lds	r26, 0x01CE
    583c:	b0 91 cf 01 	lds	r27, 0x01CF
    5840:	ed 01       	movw	r28, r26
    5842:	e0 e0       	ldi	r30, 0x00	; 0
    5844:	f0 e0       	ldi	r31, 0x00	; 0
    5846:	40 e0       	ldi	r20, 0x00	; 0
    5848:	50 e0       	ldi	r21, 0x00	; 0
    584a:	21 c0       	rjmp	.+66     	; 0x588e <malloc+0x66>
    584c:	88 81       	ld	r24, Y
    584e:	99 81       	ldd	r25, Y+1	; 0x01
    5850:	86 17       	cp	r24, r22
    5852:	97 07       	cpc	r25, r23
    5854:	69 f4       	brne	.+26     	; 0x5870 <malloc+0x48>
    5856:	8a 81       	ldd	r24, Y+2	; 0x02
    5858:	9b 81       	ldd	r25, Y+3	; 0x03
    585a:	30 97       	sbiw	r30, 0x00	; 0
    585c:	19 f0       	breq	.+6      	; 0x5864 <malloc+0x3c>
    585e:	93 83       	std	Z+3, r25	; 0x03
    5860:	82 83       	std	Z+2, r24	; 0x02
    5862:	04 c0       	rjmp	.+8      	; 0x586c <malloc+0x44>
    5864:	90 93 cf 01 	sts	0x01CF, r25
    5868:	80 93 ce 01 	sts	0x01CE, r24
    586c:	fe 01       	movw	r30, r28
    586e:	34 c0       	rjmp	.+104    	; 0x58d8 <malloc+0xb0>
    5870:	68 17       	cp	r22, r24
    5872:	79 07       	cpc	r23, r25
    5874:	38 f4       	brcc	.+14     	; 0x5884 <malloc+0x5c>
    5876:	41 15       	cp	r20, r1
    5878:	51 05       	cpc	r21, r1
    587a:	19 f0       	breq	.+6      	; 0x5882 <malloc+0x5a>
    587c:	84 17       	cp	r24, r20
    587e:	95 07       	cpc	r25, r21
    5880:	08 f4       	brcc	.+2      	; 0x5884 <malloc+0x5c>
    5882:	ac 01       	movw	r20, r24
    5884:	fe 01       	movw	r30, r28
    5886:	8a 81       	ldd	r24, Y+2	; 0x02
    5888:	9b 81       	ldd	r25, Y+3	; 0x03
    588a:	9c 01       	movw	r18, r24
    588c:	e9 01       	movw	r28, r18
    588e:	20 97       	sbiw	r28, 0x00	; 0
    5890:	e9 f6       	brne	.-70     	; 0x584c <malloc+0x24>
    5892:	41 15       	cp	r20, r1
    5894:	51 05       	cpc	r21, r1
    5896:	a9 f1       	breq	.+106    	; 0x5902 <malloc+0xda>
    5898:	ca 01       	movw	r24, r20
    589a:	86 1b       	sub	r24, r22
    589c:	97 0b       	sbc	r25, r23
    589e:	04 97       	sbiw	r24, 0x04	; 4
    58a0:	08 f4       	brcc	.+2      	; 0x58a4 <malloc+0x7c>
    58a2:	ba 01       	movw	r22, r20
    58a4:	e0 e0       	ldi	r30, 0x00	; 0
    58a6:	f0 e0       	ldi	r31, 0x00	; 0
    58a8:	2a c0       	rjmp	.+84     	; 0x58fe <malloc+0xd6>
    58aa:	8d 91       	ld	r24, X+
    58ac:	9c 91       	ld	r25, X
    58ae:	11 97       	sbiw	r26, 0x01	; 1
    58b0:	84 17       	cp	r24, r20
    58b2:	95 07       	cpc	r25, r21
    58b4:	f9 f4       	brne	.+62     	; 0x58f4 <malloc+0xcc>
    58b6:	64 17       	cp	r22, r20
    58b8:	75 07       	cpc	r23, r21
    58ba:	81 f4       	brne	.+32     	; 0x58dc <malloc+0xb4>
    58bc:	12 96       	adiw	r26, 0x02	; 2
    58be:	8d 91       	ld	r24, X+
    58c0:	9c 91       	ld	r25, X
    58c2:	13 97       	sbiw	r26, 0x03	; 3
    58c4:	30 97       	sbiw	r30, 0x00	; 0
    58c6:	19 f0       	breq	.+6      	; 0x58ce <malloc+0xa6>
    58c8:	93 83       	std	Z+3, r25	; 0x03
    58ca:	82 83       	std	Z+2, r24	; 0x02
    58cc:	04 c0       	rjmp	.+8      	; 0x58d6 <malloc+0xae>
    58ce:	90 93 cf 01 	sts	0x01CF, r25
    58d2:	80 93 ce 01 	sts	0x01CE, r24
    58d6:	fd 01       	movw	r30, r26
    58d8:	32 96       	adiw	r30, 0x02	; 2
    58da:	4f c0       	rjmp	.+158    	; 0x597a <malloc+0x152>
    58dc:	ca 01       	movw	r24, r20
    58de:	86 1b       	sub	r24, r22
    58e0:	97 0b       	sbc	r25, r23
    58e2:	fd 01       	movw	r30, r26
    58e4:	e8 0f       	add	r30, r24
    58e6:	f9 1f       	adc	r31, r25
    58e8:	61 93       	st	Z+, r22
    58ea:	71 93       	st	Z+, r23
    58ec:	02 97       	sbiw	r24, 0x02	; 2
    58ee:	8d 93       	st	X+, r24
    58f0:	9c 93       	st	X, r25
    58f2:	43 c0       	rjmp	.+134    	; 0x597a <malloc+0x152>
    58f4:	fd 01       	movw	r30, r26
    58f6:	82 81       	ldd	r24, Z+2	; 0x02
    58f8:	93 81       	ldd	r25, Z+3	; 0x03
    58fa:	9c 01       	movw	r18, r24
    58fc:	d9 01       	movw	r26, r18
    58fe:	10 97       	sbiw	r26, 0x00	; 0
    5900:	a1 f6       	brne	.-88     	; 0x58aa <malloc+0x82>
    5902:	80 91 cc 01 	lds	r24, 0x01CC
    5906:	90 91 cd 01 	lds	r25, 0x01CD
    590a:	89 2b       	or	r24, r25
    590c:	41 f4       	brne	.+16     	; 0x591e <malloc+0xf6>
    590e:	80 91 a9 01 	lds	r24, 0x01A9
    5912:	90 91 aa 01 	lds	r25, 0x01AA
    5916:	90 93 cd 01 	sts	0x01CD, r25
    591a:	80 93 cc 01 	sts	0x01CC, r24
    591e:	40 91 ab 01 	lds	r20, 0x01AB
    5922:	50 91 ac 01 	lds	r21, 0x01AC
    5926:	41 15       	cp	r20, r1
    5928:	51 05       	cpc	r21, r1
    592a:	41 f4       	brne	.+16     	; 0x593c <malloc+0x114>
    592c:	4d b7       	in	r20, 0x3d	; 61
    592e:	5e b7       	in	r21, 0x3e	; 62
    5930:	80 91 a7 01 	lds	r24, 0x01A7
    5934:	90 91 a8 01 	lds	r25, 0x01A8
    5938:	48 1b       	sub	r20, r24
    593a:	59 0b       	sbc	r21, r25
    593c:	20 91 cc 01 	lds	r18, 0x01CC
    5940:	30 91 cd 01 	lds	r19, 0x01CD
    5944:	24 17       	cp	r18, r20
    5946:	35 07       	cpc	r19, r21
    5948:	b0 f4       	brcc	.+44     	; 0x5976 <malloc+0x14e>
    594a:	ca 01       	movw	r24, r20
    594c:	82 1b       	sub	r24, r18
    594e:	93 0b       	sbc	r25, r19
    5950:	86 17       	cp	r24, r22
    5952:	97 07       	cpc	r25, r23
    5954:	80 f0       	brcs	.+32     	; 0x5976 <malloc+0x14e>
    5956:	ab 01       	movw	r20, r22
    5958:	4e 5f       	subi	r20, 0xFE	; 254
    595a:	5f 4f       	sbci	r21, 0xFF	; 255
    595c:	84 17       	cp	r24, r20
    595e:	95 07       	cpc	r25, r21
    5960:	50 f0       	brcs	.+20     	; 0x5976 <malloc+0x14e>
    5962:	42 0f       	add	r20, r18
    5964:	53 1f       	adc	r21, r19
    5966:	50 93 cd 01 	sts	0x01CD, r21
    596a:	40 93 cc 01 	sts	0x01CC, r20
    596e:	f9 01       	movw	r30, r18
    5970:	61 93       	st	Z+, r22
    5972:	71 93       	st	Z+, r23
    5974:	02 c0       	rjmp	.+4      	; 0x597a <malloc+0x152>
    5976:	e0 e0       	ldi	r30, 0x00	; 0
    5978:	f0 e0       	ldi	r31, 0x00	; 0
    597a:	cf 01       	movw	r24, r30
    597c:	df 91       	pop	r29
    597e:	cf 91       	pop	r28
    5980:	08 95       	ret

00005982 <free>:
    5982:	cf 93       	push	r28
    5984:	df 93       	push	r29
    5986:	00 97       	sbiw	r24, 0x00	; 0
    5988:	09 f4       	brne	.+2      	; 0x598c <free+0xa>
    598a:	50 c0       	rjmp	.+160    	; 0x5a2c <free+0xaa>
    598c:	ec 01       	movw	r28, r24
    598e:	22 97       	sbiw	r28, 0x02	; 2
    5990:	1b 82       	std	Y+3, r1	; 0x03
    5992:	1a 82       	std	Y+2, r1	; 0x02
    5994:	a0 91 ce 01 	lds	r26, 0x01CE
    5998:	b0 91 cf 01 	lds	r27, 0x01CF
    599c:	10 97       	sbiw	r26, 0x00	; 0
    599e:	09 f1       	breq	.+66     	; 0x59e2 <free+0x60>
    59a0:	40 e0       	ldi	r20, 0x00	; 0
    59a2:	50 e0       	ldi	r21, 0x00	; 0
    59a4:	ac 17       	cp	r26, r28
    59a6:	bd 07       	cpc	r27, r29
    59a8:	08 f1       	brcs	.+66     	; 0x59ec <free+0x6a>
    59aa:	bb 83       	std	Y+3, r27	; 0x03
    59ac:	aa 83       	std	Y+2, r26	; 0x02
    59ae:	fe 01       	movw	r30, r28
    59b0:	21 91       	ld	r18, Z+
    59b2:	31 91       	ld	r19, Z+
    59b4:	e2 0f       	add	r30, r18
    59b6:	f3 1f       	adc	r31, r19
    59b8:	ae 17       	cp	r26, r30
    59ba:	bf 07       	cpc	r27, r31
    59bc:	79 f4       	brne	.+30     	; 0x59dc <free+0x5a>
    59be:	8d 91       	ld	r24, X+
    59c0:	9c 91       	ld	r25, X
    59c2:	11 97       	sbiw	r26, 0x01	; 1
    59c4:	28 0f       	add	r18, r24
    59c6:	39 1f       	adc	r19, r25
    59c8:	2e 5f       	subi	r18, 0xFE	; 254
    59ca:	3f 4f       	sbci	r19, 0xFF	; 255
    59cc:	39 83       	std	Y+1, r19	; 0x01
    59ce:	28 83       	st	Y, r18
    59d0:	12 96       	adiw	r26, 0x02	; 2
    59d2:	8d 91       	ld	r24, X+
    59d4:	9c 91       	ld	r25, X
    59d6:	13 97       	sbiw	r26, 0x03	; 3
    59d8:	9b 83       	std	Y+3, r25	; 0x03
    59da:	8a 83       	std	Y+2, r24	; 0x02
    59dc:	41 15       	cp	r20, r1
    59de:	51 05       	cpc	r21, r1
    59e0:	71 f4       	brne	.+28     	; 0x59fe <free+0x7c>
    59e2:	d0 93 cf 01 	sts	0x01CF, r29
    59e6:	c0 93 ce 01 	sts	0x01CE, r28
    59ea:	20 c0       	rjmp	.+64     	; 0x5a2c <free+0xaa>
    59ec:	12 96       	adiw	r26, 0x02	; 2
    59ee:	8d 91       	ld	r24, X+
    59f0:	9c 91       	ld	r25, X
    59f2:	13 97       	sbiw	r26, 0x03	; 3
    59f4:	ad 01       	movw	r20, r26
    59f6:	00 97       	sbiw	r24, 0x00	; 0
    59f8:	11 f0       	breq	.+4      	; 0x59fe <free+0x7c>
    59fa:	dc 01       	movw	r26, r24
    59fc:	d3 cf       	rjmp	.-90     	; 0x59a4 <free+0x22>
    59fe:	fa 01       	movw	r30, r20
    5a00:	d3 83       	std	Z+3, r29	; 0x03
    5a02:	c2 83       	std	Z+2, r28	; 0x02
    5a04:	21 91       	ld	r18, Z+
    5a06:	31 91       	ld	r19, Z+
    5a08:	e2 0f       	add	r30, r18
    5a0a:	f3 1f       	adc	r31, r19
    5a0c:	ce 17       	cp	r28, r30
    5a0e:	df 07       	cpc	r29, r31
    5a10:	69 f4       	brne	.+26     	; 0x5a2c <free+0xaa>
    5a12:	88 81       	ld	r24, Y
    5a14:	99 81       	ldd	r25, Y+1	; 0x01
    5a16:	28 0f       	add	r18, r24
    5a18:	39 1f       	adc	r19, r25
    5a1a:	2e 5f       	subi	r18, 0xFE	; 254
    5a1c:	3f 4f       	sbci	r19, 0xFF	; 255
    5a1e:	fa 01       	movw	r30, r20
    5a20:	31 83       	std	Z+1, r19	; 0x01
    5a22:	20 83       	st	Z, r18
    5a24:	8a 81       	ldd	r24, Y+2	; 0x02
    5a26:	9b 81       	ldd	r25, Y+3	; 0x03
    5a28:	93 83       	std	Z+3, r25	; 0x03
    5a2a:	82 83       	std	Z+2, r24	; 0x02
    5a2c:	df 91       	pop	r29
    5a2e:	cf 91       	pop	r28
    5a30:	08 95       	ret

00005a32 <strnlen_P>:
    5a32:	fc 01       	movw	r30, r24
    5a34:	05 90       	lpm	r0, Z+
    5a36:	61 50       	subi	r22, 0x01	; 1
    5a38:	70 40       	sbci	r23, 0x00	; 0
    5a3a:	01 10       	cpse	r0, r1
    5a3c:	d8 f7       	brcc	.-10     	; 0x5a34 <strnlen_P+0x2>
    5a3e:	80 95       	com	r24
    5a40:	90 95       	com	r25
    5a42:	8e 0f       	add	r24, r30
    5a44:	9f 1f       	adc	r25, r31
    5a46:	08 95       	ret

00005a48 <memset>:
    5a48:	dc 01       	movw	r26, r24
    5a4a:	01 c0       	rjmp	.+2      	; 0x5a4e <memset+0x6>
    5a4c:	6d 93       	st	X+, r22
    5a4e:	41 50       	subi	r20, 0x01	; 1
    5a50:	50 40       	sbci	r21, 0x00	; 0
    5a52:	e0 f7       	brcc	.-8      	; 0x5a4c <memset+0x4>
    5a54:	08 95       	ret

00005a56 <strnlen>:
    5a56:	fc 01       	movw	r30, r24
    5a58:	61 50       	subi	r22, 0x01	; 1
    5a5a:	70 40       	sbci	r23, 0x00	; 0
    5a5c:	01 90       	ld	r0, Z+
    5a5e:	01 10       	cpse	r0, r1
    5a60:	d8 f7       	brcc	.-10     	; 0x5a58 <strnlen+0x2>
    5a62:	80 95       	com	r24
    5a64:	90 95       	com	r25
    5a66:	8e 0f       	add	r24, r30
    5a68:	9f 1f       	adc	r25, r31
    5a6a:	08 95       	ret

00005a6c <fputc>:
    5a6c:	0f 93       	push	r16
    5a6e:	1f 93       	push	r17
    5a70:	cf 93       	push	r28
    5a72:	df 93       	push	r29
    5a74:	8c 01       	movw	r16, r24
    5a76:	eb 01       	movw	r28, r22
    5a78:	8b 81       	ldd	r24, Y+3	; 0x03
    5a7a:	81 ff       	sbrs	r24, 1
    5a7c:	1b c0       	rjmp	.+54     	; 0x5ab4 <fputc+0x48>
    5a7e:	82 ff       	sbrs	r24, 2
    5a80:	0d c0       	rjmp	.+26     	; 0x5a9c <fputc+0x30>
    5a82:	2e 81       	ldd	r18, Y+6	; 0x06
    5a84:	3f 81       	ldd	r19, Y+7	; 0x07
    5a86:	8c 81       	ldd	r24, Y+4	; 0x04
    5a88:	9d 81       	ldd	r25, Y+5	; 0x05
    5a8a:	28 17       	cp	r18, r24
    5a8c:	39 07       	cpc	r19, r25
    5a8e:	64 f4       	brge	.+24     	; 0x5aa8 <fputc+0x3c>
    5a90:	e8 81       	ld	r30, Y
    5a92:	f9 81       	ldd	r31, Y+1	; 0x01
    5a94:	01 93       	st	Z+, r16
    5a96:	f9 83       	std	Y+1, r31	; 0x01
    5a98:	e8 83       	st	Y, r30
    5a9a:	06 c0       	rjmp	.+12     	; 0x5aa8 <fputc+0x3c>
    5a9c:	e8 85       	ldd	r30, Y+8	; 0x08
    5a9e:	f9 85       	ldd	r31, Y+9	; 0x09
    5aa0:	80 2f       	mov	r24, r16
    5aa2:	09 95       	icall
    5aa4:	89 2b       	or	r24, r25
    5aa6:	31 f4       	brne	.+12     	; 0x5ab4 <fputc+0x48>
    5aa8:	8e 81       	ldd	r24, Y+6	; 0x06
    5aaa:	9f 81       	ldd	r25, Y+7	; 0x07
    5aac:	01 96       	adiw	r24, 0x01	; 1
    5aae:	9f 83       	std	Y+7, r25	; 0x07
    5ab0:	8e 83       	std	Y+6, r24	; 0x06
    5ab2:	02 c0       	rjmp	.+4      	; 0x5ab8 <fputc+0x4c>
    5ab4:	0f ef       	ldi	r16, 0xFF	; 255
    5ab6:	1f ef       	ldi	r17, 0xFF	; 255
    5ab8:	c8 01       	movw	r24, r16
    5aba:	df 91       	pop	r29
    5abc:	cf 91       	pop	r28
    5abe:	1f 91       	pop	r17
    5ac0:	0f 91       	pop	r16
    5ac2:	08 95       	ret

00005ac4 <__ultoa_invert>:
    5ac4:	fa 01       	movw	r30, r20
    5ac6:	aa 27       	eor	r26, r26
    5ac8:	28 30       	cpi	r18, 0x08	; 8
    5aca:	51 f1       	breq	.+84     	; 0x5b20 <__ultoa_invert+0x5c>
    5acc:	20 31       	cpi	r18, 0x10	; 16
    5ace:	81 f1       	breq	.+96     	; 0x5b30 <__ultoa_invert+0x6c>
    5ad0:	e8 94       	clt
    5ad2:	6f 93       	push	r22
    5ad4:	6e 7f       	andi	r22, 0xFE	; 254
    5ad6:	6e 5f       	subi	r22, 0xFE	; 254
    5ad8:	7f 4f       	sbci	r23, 0xFF	; 255
    5ada:	8f 4f       	sbci	r24, 0xFF	; 255
    5adc:	9f 4f       	sbci	r25, 0xFF	; 255
    5ade:	af 4f       	sbci	r26, 0xFF	; 255
    5ae0:	b1 e0       	ldi	r27, 0x01	; 1
    5ae2:	3e d0       	rcall	.+124    	; 0x5b60 <__ultoa_invert+0x9c>
    5ae4:	b4 e0       	ldi	r27, 0x04	; 4
    5ae6:	3c d0       	rcall	.+120    	; 0x5b60 <__ultoa_invert+0x9c>
    5ae8:	67 0f       	add	r22, r23
    5aea:	78 1f       	adc	r23, r24
    5aec:	89 1f       	adc	r24, r25
    5aee:	9a 1f       	adc	r25, r26
    5af0:	a1 1d       	adc	r26, r1
    5af2:	68 0f       	add	r22, r24
    5af4:	79 1f       	adc	r23, r25
    5af6:	8a 1f       	adc	r24, r26
    5af8:	91 1d       	adc	r25, r1
    5afa:	a1 1d       	adc	r26, r1
    5afc:	6a 0f       	add	r22, r26
    5afe:	71 1d       	adc	r23, r1
    5b00:	81 1d       	adc	r24, r1
    5b02:	91 1d       	adc	r25, r1
    5b04:	a1 1d       	adc	r26, r1
    5b06:	20 d0       	rcall	.+64     	; 0x5b48 <__ultoa_invert+0x84>
    5b08:	09 f4       	brne	.+2      	; 0x5b0c <__ultoa_invert+0x48>
    5b0a:	68 94       	set
    5b0c:	3f 91       	pop	r19
    5b0e:	2a e0       	ldi	r18, 0x0A	; 10
    5b10:	26 9f       	mul	r18, r22
    5b12:	11 24       	eor	r1, r1
    5b14:	30 19       	sub	r19, r0
    5b16:	30 5d       	subi	r19, 0xD0	; 208
    5b18:	31 93       	st	Z+, r19
    5b1a:	de f6       	brtc	.-74     	; 0x5ad2 <__ultoa_invert+0xe>
    5b1c:	cf 01       	movw	r24, r30
    5b1e:	08 95       	ret
    5b20:	46 2f       	mov	r20, r22
    5b22:	47 70       	andi	r20, 0x07	; 7
    5b24:	40 5d       	subi	r20, 0xD0	; 208
    5b26:	41 93       	st	Z+, r20
    5b28:	b3 e0       	ldi	r27, 0x03	; 3
    5b2a:	0f d0       	rcall	.+30     	; 0x5b4a <__ultoa_invert+0x86>
    5b2c:	c9 f7       	brne	.-14     	; 0x5b20 <__ultoa_invert+0x5c>
    5b2e:	f6 cf       	rjmp	.-20     	; 0x5b1c <__ultoa_invert+0x58>
    5b30:	46 2f       	mov	r20, r22
    5b32:	4f 70       	andi	r20, 0x0F	; 15
    5b34:	40 5d       	subi	r20, 0xD0	; 208
    5b36:	4a 33       	cpi	r20, 0x3A	; 58
    5b38:	18 f0       	brcs	.+6      	; 0x5b40 <__ultoa_invert+0x7c>
    5b3a:	49 5d       	subi	r20, 0xD9	; 217
    5b3c:	31 fd       	sbrc	r19, 1
    5b3e:	40 52       	subi	r20, 0x20	; 32
    5b40:	41 93       	st	Z+, r20
    5b42:	02 d0       	rcall	.+4      	; 0x5b48 <__ultoa_invert+0x84>
    5b44:	a9 f7       	brne	.-22     	; 0x5b30 <__ultoa_invert+0x6c>
    5b46:	ea cf       	rjmp	.-44     	; 0x5b1c <__ultoa_invert+0x58>
    5b48:	b4 e0       	ldi	r27, 0x04	; 4
    5b4a:	a6 95       	lsr	r26
    5b4c:	97 95       	ror	r25
    5b4e:	87 95       	ror	r24
    5b50:	77 95       	ror	r23
    5b52:	67 95       	ror	r22
    5b54:	ba 95       	dec	r27
    5b56:	c9 f7       	brne	.-14     	; 0x5b4a <__ultoa_invert+0x86>
    5b58:	00 97       	sbiw	r24, 0x00	; 0
    5b5a:	61 05       	cpc	r22, r1
    5b5c:	71 05       	cpc	r23, r1
    5b5e:	08 95       	ret
    5b60:	9b 01       	movw	r18, r22
    5b62:	ac 01       	movw	r20, r24
    5b64:	0a 2e       	mov	r0, r26
    5b66:	06 94       	lsr	r0
    5b68:	57 95       	ror	r21
    5b6a:	47 95       	ror	r20
    5b6c:	37 95       	ror	r19
    5b6e:	27 95       	ror	r18
    5b70:	ba 95       	dec	r27
    5b72:	c9 f7       	brne	.-14     	; 0x5b66 <__ultoa_invert+0xa2>
    5b74:	62 0f       	add	r22, r18
    5b76:	73 1f       	adc	r23, r19
    5b78:	84 1f       	adc	r24, r20
    5b7a:	95 1f       	adc	r25, r21
    5b7c:	a0 1d       	adc	r26, r0
    5b7e:	08 95       	ret

00005b80 <_exit>:
    5b80:	f8 94       	cli

00005b82 <__stop_program>:
    5b82:	ff cf       	rjmp	.-2      	; 0x5b82 <__stop_program>
